{
  "version": "v1",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "servicePath": "",
  "mtlsRootUrl": "https://identitytoolkit.mtls.googleapis.com/",
  "title": "Identity Toolkit API",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        },
        "https://www.googleapis.com/auth/firebase": {
          "description": "View and administer all your Firebase data and settings"
        }
      }
    }
  },
  "discoveryVersion": "v1",
  "batchPath": "batch",
  "protocol": "rest",
  "rootUrl": "https://identitytoolkit.googleapis.com/",
  "documentationLink": "https://cloud.google.com/identity-platform",
  "schemas": {
    "GoogleCloudIdentitytoolkitV1SignInWithPhoneNumberRequest": {
      "properties": {
        "tenantId": {
          "description": "The ID of the Identity Platform tenant the user is signing in to. If not set, the user will sign in to the default Identity Platform project.",
          "type": "string"
        },
        "operation": {
          "type": "string",
          "enum": [
            "VERIFY_OP_UNSPECIFIED",
            "SIGN_UP_OR_IN",
            "REAUTH",
            "UPDATE",
            "LINK"
          ],
          "enumDescriptions": [
            "Operation is not specified.",
            "Verify operation is to sign up/sign in.",
            "Verify operation is to reauth.",
            "Verify operation is to update.",
            "Verify operation is to link."
          ]
        },
        "verificationProof": {
          "type": "string",
          "description": "Do not use."
        },
        "sessionInfo": {
          "description": "Encrypted session information from the response of sendVerificationCode. In the case of authenticating with an SMS code this must be specified, but in the case of using a temporary proof it can be unspecified.",
          "type": "string"
        },
        "code": {
          "type": "string",
          "description": "User-entered verification code from an SMS sent to the user's phone."
        },
        "idToken": {
          "description": "A valid ID token for an Identity Platform account. If passed, this request will link the phone number to the user represented by this ID token if the phone number is not in use, or will reauthenticate the user if the phone number is already linked to the user.",
          "type": "string"
        },
        "phoneNumber": {
          "description": "The user's phone number to sign in with. This is necessary in the case of uing a temporary proof, in which case it must match the phone number that was authenticated in the request that generated the temporary proof. This field is ignored if a session info is passed.",
          "type": "string"
        },
        "temporaryProof": {
          "description": "A proof of the phone number verification, provided from a previous signInWithPhoneNumber request. If this is passed, the caller must also pass in the phone_number field the phone number that was verified in the previous request.",
          "type": "string"
        }
      },
      "description": "Request message for SignInWithPhoneNumber.",
      "type": "object",
      "id": "GoogleCloudIdentitytoolkitV1SignInWithPhoneNumberRequest"
    },
    "GoogleCloudIdentitytoolkitV1GetOobCodeRequest": {
      "properties": {
        "tenantId": {
          "type": "string",
          "description": "The tenant ID of the Identity Platform tenant the account belongs to."
        },
        "targetProjectId": {
          "description": "The Project ID of the Identity Platform project which the account belongs to. To specify this field, it requires a Google OAuth 2.0 credential with proper [permissions](https://cloud.google.com/identity-platform/docs/access-control).",
          "type": "string"
        },
        "returnOobLink": {
          "description": "Whether the confirmation link containing the OOB code should be returned in the response (no email is sent). Used when a developer wants to construct the email template and send it on their own. By default this is false; to specify this field, and to set it to true, it requires a Google OAuth 2.0 credential with proper [permissions](https://cloud.google.com/identity-platform/docs/access-control)",
          "type": "boolean"
        },
        "userIp": {
          "type": "string",
          "description": "The IP address of the caller. Required only for PASSWORD_RESET requests."
        },
        "canHandleCodeInApp": {
          "description": "When set to true, the OOB code link will be be sent as a Universal Link or an Android App Link and will be opened by the corresponding app if installed. If not set, or set to false, the OOB code will be sent to the web widget first and then on continue will redirect to the app if installed.",
          "type": "boolean"
        },
        "email": {
          "type": "string",
          "description": "The account's email address to send the OOB code to, and generally the email address of the account that needs to be updated. Required for PASSWORD_RESET, EMAIL_SIGNIN, and VERIFY_EMAIL. Only required for VERIFY_AND_CHANGE_EMAIL requests when return_oob_link is set to true. In this case, it is the original email of the user."
        },
        "newEmail": {
          "description": "The email address the account is being updated to. Required only for VERIFY_AND_CHANGE_EMAIL requests.",
          "type": "string"
        },
        "androidMinimumVersion": {
          "description": "If an associated android app can handle the OOB code, the minimum version of the app. If the version on the device is lower than this version then the user is taken to Google Play Store to upgrade the app.",
          "type": "string"
        },
        "androidInstallApp": {
          "type": "boolean",
          "description": "If an associated android app can handle the OOB code, whether or not to install the android app on the device where the link is opened if the app is not already installed."
        },
        "iOSAppStoreId": {
          "type": "string",
          "description": "If an associated iOS app can handle the OOB code, the App Store id of this app. This will allow App Store to open to the correct app if the app is not yet installed."
        },
        "iOSBundleId": {
          "type": "string",
          "description": "If an associated iOS app can handle the OOB code, the iOS bundle id of this app. This will allow the correct app to open if it is already installed."
        },
        "androidPackageName": {
          "description": "If an associated android app can handle the OOB code, the Android package name of the android app that will handle the callback when this OOB code is used. This will allow the correct app to open if it is already installed, or allow Google Play Store to open to the correct app if it is not yet installed.",
          "type": "string"
        },
        "challenge": {
          "type": "string"
        },
        "idToken": {
          "type": "string",
          "description": "An ID token for the account. It is required for VERIFY_AND_CHANGE_EMAIL and VERIFY_EMAIL requests unless return_oob_link is set to true."
        },
        "continueUrl": {
          "type": "string",
          "description": "The Url to continue after user clicks the link sent in email. This is the url that will allow the web widget to handle the OOB code."
        },
        "requestType": {
          "type": "string",
          "enumDescriptions": [
            "Oob code type is not specified.",
            "reset password",
            "",
            "",
            "verify the account's email address by sending an email",
            "",
            "sign in with email only",
            "This flow sends an email to the specified new email, and when applied by clicking the link in the email changes the account's email to the new email. Used when the account must have verified email at all times, such as MFA accounts.",
            ""
          ],
          "enum": [
            "OOB_REQ_TYPE_UNSPECIFIED",
            "PASSWORD_RESET",
            "OLD_EMAIL_AGREE",
            "NEW_EMAIL_ACCEPT",
            "VERIFY_EMAIL",
            "RECOVER_EMAIL",
            "EMAIL_SIGNIN",
            "VERIFY_AND_CHANGE_EMAIL",
            "REVERT_SECOND_FACTOR_ADDITION"
          ],
          "description": "Required. The type of out-of-band (OOB) code to send. Depending on this value, other fields in this request will be required and/or have different meanings. There are 4 different OOB codes that can be sent: * PASSWORD_RESET * EMAIL_SIGNIN * VERIFY_EMAIL * VERIFY_AND_CHANGE_EMAIL"
        },
        "captchaResp": {
          "description": "For a PASSWORD_RESET request, a reCaptcha response is required when the system detects possible abuse activity. In those cases, this is the response from the reCaptcha challenge used to verify the caller.",
          "type": "string"
        },
        "dynamicLinkDomain": {
          "description": "In order to ensure that the url used can be easily opened up in iOS or android, we create a [Firebase Dynamic Link](https://firebase.google.com/docs/dynamic-links). Most Identity Platform projects will only have one Dynamic Link domain enabled, and can leave this field blank. This field contains a specified Dynamic Link domain for projects that have multiple enabled.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudIdentitytoolkitV1GetOobCodeRequest",
      "description": "Request message for GetOobCode."
    },
    "GoogleCloudIdentitytoolkitV1SignInWithEmailLinkResponse": {
      "type": "object",
      "id": "GoogleCloudIdentitytoolkitV1SignInWithEmailLinkResponse",
      "properties": {
        "localId": {
          "description": "The ID of the authenticated user. Always present in the response.",
          "type": "string"
        },
        "idToken": {
          "description": "An Identity Platform ID token for the authenticated user.",
          "type": "string"
        },
        "expiresIn": {
          "type": "string",
          "format": "int64",
          "description": "The number of seconds until the ID token expires."
        },
        "mfaPendingCredential": {
          "type": "string",
          "description": "An opaque string that functions as proof that the user has successfully passed the first factor check."
        },
        "refreshToken": {
          "description": "Refresh token for the authenticated user.",
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "isNewUser": {
          "type": "boolean",
          "description": "Whether the authenticated user was created by this request."
        },
        "mfaInfo": {
          "items": {
            "$ref": "GoogleCloudIdentitytoolkitV1MfaEnrollment"
          },
          "description": "Info on which multi-factor authentication providers are enabled. Present if the user needs to complete the sign-in using multi-factor authentication.",
          "type": "array"
        },
        "email": {
          "type": "string",
          "description": "The email the user signed in with. Always present in the response."
        }
      },
      "description": "Response message for SignInWithEmailLink."
    },
    "GoogleCloudIdentitytoolkitV1DownloadAccountResponse": {
      "properties": {
        "kind": {
          "type": "string"
        },
        "nextPageToken": {
          "type": "string",
          "description": "If there are more accounts to be downloaded, a token that can be passed back to DownloadAccount to get more accounts. Otherwise, this is blank."
        },
        "users": {
          "description": "All accounts belonging to the project/tenant limited by max_results in the request.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudIdentitytoolkitV1UserInfo"
          }
        }
      },
      "type": "object",
      "description": "Response message for DownloadAccount.",
      "id": "GoogleCloudIdentitytoolkitV1DownloadAccountResponse"
    },
    "GoogleCloudIdentitytoolkitV1MfaFactor": {
      "properties": {
        "displayName": {
          "description": "Display name for this mfa option e.g. \"corp cell phone\".",
          "type": "string"
        },
        "phoneInfo": {
          "type": "string",
          "description": "Phone number to receive OTP for MFA."
        }
      },
      "id": "GoogleCloudIdentitytoolkitV1MfaFactor",
      "type": "object"
    },
    "GoogleCloudIdentitytoolkitV1BatchDeleteAccountsResponse": {
      "id": "GoogleCloudIdentitytoolkitV1BatchDeleteAccountsResponse",
      "properties": {
        "errors": {
          "type": "array",
          "description": "Detailed error info for accounts that cannot be deleted.",
          "items": {
            "$ref": "GoogleCloudIdentitytoolkitV1BatchDeleteErrorInfo"
          }
        }
      },
      "type": "object",
      "description": "Response message to BatchDeleteAccounts."
    },
    "GoogleCloudIdentitytoolkitV1SignInWithCustomTokenResponse": {
      "properties": {
        "idToken": {
          "description": "An Identity Platform ID token for the authenticated user.",
          "type": "string"
        },
        "isNewUser": {
          "type": "boolean",
          "description": "Whether the authenticated user was created by this request."
        },
        "kind": {
          "type": "string"
        },
        "refreshToken": {
          "type": "string",
          "description": "An Identity Platform refresh token for the authenticated user."
        },
        "expiresIn": {
          "description": "The number of seconds until the ID token expires.",
          "type": "string",
          "format": "int64"
        }
      },
      "type": "object",
      "description": "Response message for SignInWithCustomToken.",
      "id": "GoogleCloudIdentitytoolkitV1SignInWithCustomTokenResponse"
    },
    "GoogleCloudIdentitytoolkitV1IdpConfig": {
      "id": "GoogleCloudIdentitytoolkitV1IdpConfig",
      "properties": {
        "clientId": {
          "type": "string",
          "description": "OAuth2 client ID."
        },
        "whitelistedAudiences": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Whitelisted client IDs for audience check."
        },
        "experimentPercent": {
          "description": "Percent of users who will be prompted/redirected federated login for this IdP",
          "type": "integer",
          "format": "int32"
        },
        "provider": {
          "enum": [
            "PROVIDER_UNSPECIFIED",
            "MSLIVE",
            "GOOGLE",
            "FACEBOOK",
            "PAYPAL",
            "TWITTER",
            "YAHOO",
            "AOL",
            "GITHUB",
            "GOOGLE_PLAY_GAMES",
            "LINKEDIN",
            "IOS_GAME_CENTER"
          ],
          "enumDescriptions": [
            "",
            "Microsoft Live as identity provider.",
            "Google as identity provider.",
            "Facebook as identity provider.",
            "PayPal as identity provider.",
            "Twitter as identity provider.",
            "Yahoo as identity provider.",
            "AOL as identity provider.",
            "GitHub as identity provider.",
            "Google Play Games as identity provider.",
            "LinkedIn as identity provider.",
            "iOS Game Center as identity provider."
          ],
          "description": "Name of the identity provider.",
          "type": "string"
        },
        "enabled": {
          "description": "True if allows the user to sign in with the provider.",
          "type": "boolean"
        },
        "secret": {
          "description": "OAuth2 client secret.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Config of an identity provider."
    },
    "GoogleCloudIdentitytoolkitV1UserInfo": {
      "type": "object",
      "id": "GoogleCloudIdentitytoolkitV1UserInfo",
      "description": "An Identity Platform account's information.",
      "properties": {
        "lastLoginAt": {
          "description": "The last time, in milliseconds from epoch, this account was logged into.",
          "format": "int64",
          "type": "string"
        },
        "createdAt": {
          "description": "The time, in milliseconds from epoch, when the account was created.",
          "type": "string",
          "format": "int64"
        },
        "lastRefreshAt": {
          "format": "google-datetime",
          "type": "string",
          "description": "Timestamp when an ID token was last minted for this account."
        },
        "displayName": {
          "description": "The display name of the account. This account attribute is not used by Identity Platform. It is available for informational purposes only.",
          "type": "string"
        },
        "version": {
          "type": "integer",
          "description": "The version of the account's password. Only accessible by requests bearing a Google OAuth2 credential with proper permissions.",
          "format": "int32"
        },
        "phoneNumber": {
          "type": "string",
          "description": "The account's phone number."
        },
        "validSince": {
          "description": "Oldest timestamp, in seconds since epoch, that an ID token should be considered valid. All ID tokens issued before this time are considered invalid.",
          "type": "string",
          "format": "int64"
        },
        "email": {
          "description": "The account's email address. The length of the email should be less than 256 characters and in the format of `name@domain.tld`. The email should also match the [RFC 822](https://tools.ietf.org/html/rfc822) addr-spec.",
          "type": "string"
        },
        "emailLinkSignin": {
          "description": "Output only. Whether the account can authenticate with email link.",
          "type": "boolean",
          "readOnly": true
        },
        "disabled": {
          "type": "boolean",
          "description": "Whether the account is disabled. Disabled accounts are inaccessible except for requests bearing a Google OAuth2 credential with proper permissions."
        },
        "dateOfBirth": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The date of birth set for the account. This account attribute is not used by Identity Platform. It is available for informational purposes only."
        },
        "language": {
          "type": "string",
          "description": "Output only. The language preference of the account. This account attribute is not used by Identity Platform. It is available for informational purposes only.",
          "readOnly": true
        },
        "providerUserInfo": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudIdentitytoolkitV1ProviderUserInfo"
          },
          "description": "Information about the user as provided by various Identity Providers."
        },
        "emailVerified": {
          "description": "Whether the account's email address has been verified.",
          "type": "boolean"
        },
        "customAttributes": {
          "description": "Custom claims to be added to any ID tokens minted for the account. Should be at most 1,000 characters in length and in valid JSON format.",
          "type": "string"
        },
        "passwordUpdatedAt": {
          "type": "number",
          "format": "double",
          "description": "The timestamp, in milliseconds from the epoch of 1970-01-01T00:00:00Z, when the account's password was last updated."
        },
        "salt": {
          "type": "string",
          "format": "byte",
          "description": "The account's password salt. Only accessible by requests bearing a Google OAuth2 credential with proper permissions."
        },
        "initialEmail": {
          "description": "The first email address associated with this account. The account's initial email cannot be changed once set and is used to recover access to this account if lost via the RECOVER_EMAIL flow in GetOobCode. Should match the [RFC 822](https://tools.ietf.org/html/rfc822) addr-spec.",
          "type": "string"
        },
        "screenName": {
          "readOnly": true,
          "description": "Output only. This account's screen name at Twitter or login name at GitHub.",
          "type": "string"
        },
        "tenantId": {
          "type": "string",
          "description": "ID of the tenant this account belongs to. Only set if this account belongs to a tenant."
        },
        "timeZone": {
          "description": "Output only. The time zone preference of the account. This account attribute is not used by Identity Platform. It is available for informational purposes only.",
          "type": "string",
          "readOnly": true
        },
        "rawPassword": {
          "description": "Input only. Plain text password used to update a account's password. This field is only ever used as input in a request. Identity Platform uses cryptographically secure hashing when managing passwords and will never store or transmit a user's password in plain text.",
          "type": "string"
        },
        "localId": {
          "description": "Immutable. The unique ID of the account.",
          "type": "string"
        },
        "customAuth": {
          "readOnly": true,
          "type": "boolean",
          "description": "Output only. Whether this account has been authenticated using SignInWithCustomToken."
        },
        "photoUrl": {
          "description": "The URL of the account's profile photo. This account attribute is not used by Identity Platform. It is available for informational purposes only.",
          "type": "string"
        },
        "mfaInfo": {
          "description": "Information on which multi-factor authentication providers are enabled for this account.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudIdentitytoolkitV1MfaEnrollment"
          }
        },
        "passwordHash": {
          "type": "string",
          "format": "byte",
          "description": "The account's hashed password. Only accessible by requests bearing a Google OAuth2 credential with proper [permissions](https://cloud.google.com/identity-platform/docs/access-control)."
        }
      }
    },
    "GoogleCloudIdentitytoolkitV1QueryUserInfoResponse": {
      "properties": {
        "recordsCount": {
          "description": "If `return_user_info` in the request is true, this is the number of returned accounts in this message. Otherwise, this is the total number of accounts matching the query.",
          "type": "string",
          "format": "int64"
        },
        "userInfo": {
          "description": "If `return_user_info` in the request is true, this is the accounts matching the query.",
          "items": {
            "$ref": "GoogleCloudIdentitytoolkitV1UserInfo"
          },
          "type": "array"
        }
      },
      "id": "GoogleCloudIdentitytoolkitV1QueryUserInfoResponse",
      "description": "Response message for QueryUserInfo.",
      "type": "object"
    },
    "GoogleCloudIdentitytoolkitV1SignInWithPasswordRequest": {
      "properties": {
        "tenantId": {
          "type": "string",
          "description": "The ID of the Identity Platform tenant the user is signing in to. If not set, the user will sign in to the default Identity Platform instance in the project."
        },
        "returnSecureToken": {
          "description": "Should always be true.",
          "type": "boolean"
        },
        "email": {
          "type": "string",
          "description": "Required. The email the user is signing in with. The length of email should be less than 256 characters and in the format of `name@domain.tld`. The email should also match the [RFC 822](https://tools.ietf.org/html/rfc822) addr-spec production."
        },
        "captchaResponse": {
          "description": "The reCAPTCHA token provided by the reCAPTCHA client-side integration. reCAPTCHA Enterprise uses it for risk assessment. Required when reCAPTCHA Enterprise is enabled.",
          "type": "string"
        },
        "captchaChallenge": {
          "type": "string"
        },
        "idToken": {
          "type": "string"
        },
        "delegatedProjectNumber": {
          "format": "int64",
          "type": "string"
        },
        "instanceId": {
          "type": "string"
        },
        "password": {
          "description": "Required. The password the user provides to sign in to the account.",
          "type": "string"
        },
        "pendingIdToken": {
          "type": "string"
        }
      },
      "id": "GoogleCloudIdentitytoolkitV1SignInWithPasswordRequest",
      "description": "Request message for SignInWithPassword.",
      "type": "object"
    },
    "GoogleCloudIdentitytoolkitV1SqlExpression": {
      "description": "Query conditions used to filter results.",
      "id": "GoogleCloudIdentitytoolkitV1SqlExpression",
      "type": "object",
      "properties": {
        "email": {
          "description": "A case insensitive string that the account's email should match. Only one of `email`, `phone_number`, or `user_id` should be specified in a SqlExpression. If more than one is specified, only the first (in that order) will be applied.",
          "type": "string"
        },
        "userId": {
          "description": "A string that the account's local ID should match. Only one of `email`, `phone_number`, or `user_id` should be specified in a SqlExpression If more than one is specified, only the first (in that order) will be applied.",
          "type": "string"
        },
        "phoneNumber": {
          "type": "string",
          "description": "A string that the account's phone number should match. Only one of `email`, `phone_number`, or `user_id` should be specified in a SqlExpression. If more than one is specified, only the first (in that order) will be applied."
        }
      }
    },
    "GoogleCloudIdentitytoolkitV1CreateAuthUriRequest": {
      "type": "object",
      "properties": {
        "continueUri": {
          "type": "string",
          "description": "A valid URL for the IdP to redirect the user back to. The URL cannot contain fragments or the reserved `state` query parameter."
        },
        "openidRealm": {
          "type": "string"
        },
        "context": {
          "description": "An opaque string used to maintain contextual information between the authentication request and the callback from the IdP.",
          "type": "string"
        },
        "authFlowType": {
          "description": "Used for the Google provider. The type of the authentication flow to be used. If present, this should be `CODE_FLOW` to specify the authorization code flow. Otherwise, the default ID Token flow will be used.",
          "type": "string"
        },
        "customParameter": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Additional customized query parameters to be added to the authorization URI. The following parameters are reserved and cannot be added: `client_id`, `response_type`, `scope`, `redirect_uri`, `state`. For the Microsoft provider, the Azure AD tenant to sign-in to can be specified in the `tenant` custom parameter.",
          "type": "object"
        },
        "tenantId": {
          "description": "The ID of the Identity Platform tenant to create an authorization URI or lookup an email identifier for. If not set, the operation will be performed in the default Identity Platform instance in the project.",
          "type": "string"
        },
        "providerId": {
          "description": "The provider ID of the IdP for the user to sign in with. This should be a provider ID enabled for sign-in, which is either from the list of [default supported IdPs](https://cloud.google.com/identity-platform/docs/reference/rest/v2/defaultSupportedIdps/list), or of the format `oidc.*` or `saml.*`. Some examples are `google.com`, `facebook.com`, `oidc.testapp`, and `saml.testapp`. At least one of the fields `identifier` and `provider_id` must be set.",
          "type": "string"
        },
        "otaApp": {
          "type": "string"
        },
        "appId": {
          "type": "string"
        },
        "oauthScope": {
          "description": "Additional space-delimited OAuth 2.0 scopes specifying the scope of the authentication request with the IdP. Used for OAuth 2.0 IdPs. For the Google provider, the authorization code flow will be used if this field is set.",
          "type": "string"
        },
        "sessionId": {
          "type": "string",
          "description": "A session ID that can be verified against in SignInWithIdp to prevent session fixation attacks. If absent, a random string will be generated and returned as the session ID."
        },
        "hostedDomain": {
          "type": "string",
          "description": "Used for the Google provider. The G Suite hosted domain of the user in order to restrict sign-in to users at that domain."
        },
        "oauthConsumerKey": {
          "type": "string"
        },
        "identifier": {
          "type": "string",
          "description": "The email identifier of the user account to fetch associated providers for. At least one of the fields `identifier` and `provider_id` must be set. The length of the email address should be less than 256 characters and in the format of `name@domain.tld`. The email address should also match the [RFC 822](https://tools.ietf.org/html/rfc822) addr-spec production."
        }
      },
      "id": "GoogleCloudIdentitytoolkitV1CreateAuthUriRequest",
      "description": "Request message for CreateAuthUri."
    },
    "GoogleCloudIdentitytoolkitV1SendVerificationCodeResponse": {
      "description": "Response message for SendVerificationCode.",
      "type": "object",
      "properties": {
        "sessionInfo": {
          "type": "string",
          "description": "Encrypted session information. This can be used in signInWithPhoneNumber to authenticate the phone number."
        }
      },
      "id": "GoogleCloudIdentitytoolkitV1SendVerificationCodeResponse"
    },
    "GoogleCloudIdentitytoolkitV1BatchDeleteAccountsRequest": {
      "description": "Request message for BatchDeleteAccounts.",
      "type": "object",
      "id": "GoogleCloudIdentitytoolkitV1BatchDeleteAccountsRequest",
      "properties": {
        "tenantId": {
          "type": "string",
          "description": "If the accounts belong to an Identity Platform tenant, the ID of the tenant. If the accounts belong to an default Identity Platform project, the field is not needed."
        },
        "localIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Required. List of user IDs to be deleted."
        },
        "force": {
          "type": "boolean",
          "description": "Whether to force deleting accounts that are not in disabled state. If false, only disabled accounts will be deleted, and accounts that are not disabled will be added to the `errors`."
        }
      }
    },
    "GoogleCloudIdentitytoolkitV1SignInWithEmailLinkRequest": {
      "description": "Request message for SignInWithEmailLink",
      "properties": {
        "email": {
          "description": "Required. The email address the sign-in link was sent to. The length of email should be less than 256 characters and in the format of `name@domain.tld`. The email should also match the [RFC 822](https://tools.ietf.org/html/rfc822) addr-spec production.",
          "type": "string"
        },
        "tenantId": {
          "description": "The ID of the Identity Platform tenant the user is signing in to. If not set, the user will sign in to the default Identity Platform project.",
          "type": "string"
        },
        "idToken": {
          "type": "string",
          "description": "A valid ID token for an Identity Platform account. If passed, this request will link the email address to the user represented by this ID token and enable sign-in with email link on the account for the future."
        },
        "oobCode": {
          "type": "string",
          "description": "Required. The out-of-band code from the email link."
        }
      },
      "id": "GoogleCloudIdentitytoolkitV1SignInWithEmailLinkRequest",
      "type": "object"
    },
    "GoogleCloudIdentitytoolkitV1SendVerificationCodeRequest": {
      "id": "GoogleCloudIdentitytoolkitV1SendVerificationCodeRequest",
      "properties": {
        "safetyNetToken": {
          "description": "Android only. Used to assert application identity in place of a recaptcha token. At least one of (`ios_receipt` and `ios_secret`), `recaptcha_token`, or `safety_net_token` must be specified to verify the verification code is being sent on behalf of a real app and not an emulator. A SafetyNet Token can be generated via the [SafetyNet Android Attestation API](https://developer.android.com/training/safetynet/attestation.html), with the Base64 encoding of the `phone_number` field as the nonce.",
          "type": "string"
        },
        "iosSecret": {
          "type": "string",
          "description": "Secret delivered to iOS app as a push notification. Should be passed with an `ios_receipt` as well as the `x-ios-bundle-identifier` header."
        },
        "autoRetrievalInfo": {
          "description": "Android only. Used by Google Play Services to identify the app for auto-retrieval.",
          "$ref": "GoogleCloudIdentitytoolkitV1AutoRetrievalInfo"
        },
        "iosReceipt": {
          "description": "Receipt of successful iOS app token validation. At least one of (`ios_receipt` and `ios_secret`), `recaptcha_token`, or `safety_net_token` must be specified to verify the verification code is being sent on behalf of a real app and not an emulator. This should come from the response of verifyIosClient. If present, the caller should also provide the `ios_secret`, as well as a bundle ID in the `x-ios-bundle-identifier` header, which must match the bundle ID from the verifyIosClient request.",
          "type": "string"
        },
        "phoneNumber": {
          "type": "string",
          "description": "The phone number to send the verification code to in E.164 format."
        },
        "tenantId": {
          "type": "string",
          "description": "Tenant ID of the Identity Platform tenant the user is signing in to."
        },
        "playIntegrityToken": {
          "type": "string",
          "description": "Android only. Used to assert application identity in place of a recaptcha token (and safety_net_token). At least one of (`ios_receipt` and `ios_secret`), `recaptcha_token`, , or `play_integrity_token` must be specified to verify the verification code is being sent on behalf of a real app and not an emulator. A Play Integrity Token can be generated via the [PlayIntegrity API](https://developer.android.com/google/play/integrity) with applying SHA256 to the `phone_number` field as the nonce."
        },
        "recaptchaToken": {
          "description": "Recaptcha token for app verification. At least one of (`ios_receipt` and `ios_secret`), `recaptcha_token`, or `safety_net_token` must be specified to verify the verification code is being sent on behalf of a real app and not an emulator. The recaptcha should be generated by calling getRecaptchaParams and the recaptcha token will be generated on user completion of the recaptcha challenge.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Request message for SendVerificationCode. At least one of (`ios_receipt` and `ios_secret`), `recaptcha_token`, or `safety_net_token` must be specified to verify the verification code is being sent on behalf of a real app and not an emulator."
    },
    "GoogleCloudIdentitytoolkitV1SignInWithIdpResponse": {
      "description": "Response message for SignInWithIdp.",
      "properties": {
        "oauthExpireIn": {
          "type": "integer",
          "description": "The number of seconds until the OAuth access token from the IdP expires.",
          "format": "int32"
        },
        "dateOfBirth": {
          "description": "The date of birth for the user's account at the IdP.",
          "type": "string"
        },
        "language": {
          "description": "The language preference for the user's account at the IdP.",
          "type": "string"
        },
        "inputEmail": {
          "type": "string"
        },
        "needConfirmation": {
          "description": "Whether or not there is an existing Identity Platform user account with the same email address as the current account signed in at the IdP, and the account's email addresss is not verified at the IdP. The user will need to sign in to the existing Identity Platform account and then link the current credential from the IdP to it. Only present if the \"One account per email address\" setting is enabled.",
          "type": "boolean"
        },
        "firstName": {
          "type": "string",
          "description": "The first name for the user's account at the IdP."
        },
        "displayName": {
          "description": "The display name for the user's account at the IdP.",
          "type": "string"
        },
        "oauthAuthorizationCode": {
          "description": "The OAuth 2.0 authorization code, if available. Only present for the Google provider.",
          "type": "string"
        },
        "errorMessage": {
          "description": "The error message returned if `return_idp_credential` is set to `true` and either the `FEDERATED_USER_ID_ALREADY_LINKED` or `EMAIL_EXISTS` error is encountered. This field's value is either `FEDERATED_USER_ID_ALREADY_LINKED` or `EMAIL_EXISTS`.",
          "type": "string"
        },
        "idToken": {
          "description": "An Identity Platform ID token for the authenticated user.",
          "type": "string"
        },
        "rawUserInfo": {
          "description": "The stringified JSON response containing all the data corresponding to the user's account at the IdP.",
          "type": "string"
        },
        "providerId": {
          "type": "string",
          "description": "The provider ID of the IdP that the user is signing in to. Always present in the response."
        },
        "mfaInfo": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudIdentitytoolkitV1MfaEnrollment"
          },
          "description": "Info on which multi-factor authentication providers are enabled for the account. Present if the user needs to complete the sign-in using multi-factor authentication."
        },
        "oauthTokenSecret": {
          "type": "string",
          "description": "The OAuth 1.0 token secret from the IdP, if available. Only present for the Twitter provider."
        },
        "screenName": {
          "type": "string",
          "description": "The screen name for the user's account at the Twitter IdP or the login name for the user's account at the GitHub IdP."
        },
        "oauthAccessToken": {
          "type": "string",
          "description": "The OAuth access token from the IdP, if available."
        },
        "oauthRefreshToken": {
          "description": "The OAuth 2.0 refresh token from the IdP, if available and `return_refresh_token` is set to `true`.",
          "type": "string"
        },
        "lastName": {
          "type": "string",
          "description": "The last name for the user's account at the IdP."
        },
        "pendingToken": {
          "description": "An opaque string that can be used as a credential from the IdP the user is signing into. The pending token obtained here can be set in a future SignInWithIdp request to sign the same user in with the IdP again.",
          "type": "string"
        },
        "nickName": {
          "type": "string",
          "description": "The nickname for the user's account at the IdP."
        },
        "fullName": {
          "description": "The full name for the user's account at the IdP.",
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "oauthIdToken": {
          "type": "string",
          "description": "The OpenID Connect ID token from the IdP, if available."
        },
        "originalEmail": {
          "type": "string",
          "description": "The main (top-level) email address of the user's Identity Platform account, if different from the email address at the IdP. Only present if the \"One account per email address\" setting is enabled."
        },
        "refreshToken": {
          "type": "string",
          "description": "An Identity Platform refresh token for the authenticated user."
        },
        "email": {
          "description": "The email address of the user's account at the IdP.",
          "type": "string"
        },
        "expiresIn": {
          "description": "The number of seconds until the Identity Platform ID token expires.",
          "format": "int64",
          "type": "string"
        },
        "timeZone": {
          "description": "The time zone for the user's account at the IdP.",
          "type": "string"
        },
        "context": {
          "type": "string",
          "description": "The opaque string set in CreateAuthUri that is used to maintain contextual information between the authentication request and the callback from the IdP."
        },
        "mfaPendingCredential": {
          "description": "An opaque string that functions as proof that the user has successfully passed the first factor authentication.",
          "type": "string"
        },
        "verifiedProvider": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "A list of provider IDs that the user can sign in to in order to resolve a `need_confirmation` error. Only present if `need_confirmation` is set to `true`."
        },
        "tenantId": {
          "type": "string",
          "description": "The value of the `tenant_id` field in the request."
        },
        "isNewUser": {
          "description": "Whether or not a new Identity Platform account was created for the authenticated user.",
          "type": "boolean"
        },
        "federatedId": {
          "type": "string",
          "description": "The user's account ID at the IdP. Always present in the response."
        },
        "emailRecycled": {
          "type": "boolean",
          "description": "Whether or not there is an existing Identity Platform user account with the same email address but linked to a different account at the same IdP. Only present if the \"One account per email address\" setting is enabled and the email address at the IdP is verified."
        },
        "photoUrl": {
          "type": "string",
          "description": "The URL of the user's profile picture at the IdP."
        },
        "localId": {
          "type": "string",
          "description": "The ID of the authenticated Identity Platform user. Always present in the response."
        },
        "needEmail": {
          "type": "boolean"
        },
        "emailVerified": {
          "description": "Whether the user account's email address is verified.",
          "type": "boolean"
        }
      },
      "id": "GoogleCloudIdentitytoolkitV1SignInWithIdpResponse",
      "type": "object"
    },
    "GoogleCloudIdentitytoolkitV1FederatedUserIdentifier": {
      "id": "GoogleCloudIdentitytoolkitV1FederatedUserIdentifier",
      "description": "Federated user identifier at an Identity Provider.",
      "properties": {
        "providerId": {
          "type": "string",
          "description": "The ID of supported identity providers. This should be a provider ID enabled for sign-in, which is either from the list of [default supported IdPs](https://cloud.google.com/identity-platform/docs/reference/rest/v2/defaultSupportedIdps/list), or of the format `oidc.*` or `saml.*`. Some examples are `google.com`, `facebook.com`, `oidc.testapp`, and `saml.testapp`."
        },
        "rawId": {
          "description": "The user ID of the account at the third-party Identity Provider specified by `provider_id`.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleCloudIdentitytoolkitV1SetAccountInfoResponse": {
      "description": "Response message for SetAccountInfo",
      "id": "GoogleCloudIdentitytoolkitV1SetAccountInfoResponse",
      "type": "object",
      "properties": {
        "photoUrl": {
          "description": "The user's photo URL for the account's profile photo.",
          "type": "string"
        },
        "refreshToken": {
          "type": "string",
          "description": "A refresh token for the account. This is used for legacy user sign up."
        },
        "email": {
          "description": "The account's email address.",
          "type": "string"
        },
        "providerUserInfo": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudIdentitytoolkitV1ProviderUserInfo"
          },
          "description": "The linked Identity Providers on the account."
        },
        "displayName": {
          "description": "The account's display name.",
          "type": "string"
        },
        "expiresIn": {
          "format": "int64",
          "description": "The number of seconds until the Identity Platform ID token expires.",
          "type": "string"
        },
        "localId": {
          "description": "The ID of the authenticated user.",
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "emailVerified": {
          "description": "Whether the account's email has been verified.",
          "type": "boolean"
        },
        "idToken": {
          "type": "string",
          "description": "An Identity Platform ID token for the account. This is used for legacy user sign up."
        },
        "passwordHash": {
          "type": "string",
          "description": "Deprecated. No actual password hash is currently returned."
        },
        "newEmail": {
          "description": "The new email that has been set on the user's account attributes.",
          "type": "string"
        }
      }
    },
    "GoogleCloudIdentitytoolkitV1SignInWithPasswordResponse": {
      "type": "object",
      "properties": {
        "mfaInfo": {
          "type": "array",
          "description": "Info on which multi-factor authentication providers are enabled for the account. Present if the user needs to complete the sign-in using multi-factor authentication.",
          "items": {
            "$ref": "GoogleCloudIdentitytoolkitV1MfaEnrollment"
          }
        },
        "expiresIn": {
          "description": "The number of seconds until the Identity Platform ID token expires.",
          "format": "int64",
          "type": "string"
        },
        "profilePicture": {
          "type": "string",
          "description": "The user's profile picture stored in the account's attributes."
        },
        "kind": {
          "type": "string"
        },
        "refreshToken": {
          "type": "string",
          "description": "An Identity Platform refresh token for the authenticated user."
        },
        "registered": {
          "type": "boolean",
          "description": "Whether the email is for an existing account. Always true."
        },
        "oauthAuthorizationCode": {
          "type": "string"
        },
        "idToken": {
          "description": "An Identity Platform ID token for the authenticated user.",
          "type": "string"
        },
        "localId": {
          "description": "The ID of the authenticated user. Always present in the response.",
          "type": "string"
        },
        "displayName": {
          "description": "The user's display name stored in the account's attributes.",
          "type": "string"
        },
        "mfaPendingCredential": {
          "description": "An opaque string that functions as proof that the user has successfully passed the first factor authentication.",
          "type": "string"
        },
        "oauthExpireIn": {
          "description": "The access token expiration time in seconds.",
          "type": "integer",
          "format": "int32"
        },
        "email": {
          "description": "The email of the authenticated user. Always present in the response.",
          "type": "string"
        },
        "oauthAccessToken": {
          "description": "The OAuth2 access token.",
          "type": "string"
        }
      },
      "id": "GoogleCloudIdentitytoolkitV1SignInWithPasswordResponse",
      "description": "Response message for SignInWithPassword."
    },
    "GoogleCloudIdentitytoolkitV1ResetPasswordResponse": {
      "properties": {
        "requestType": {
          "enum": [
            "OOB_REQ_TYPE_UNSPECIFIED",
            "PASSWORD_RESET",
            "OLD_EMAIL_AGREE",
            "NEW_EMAIL_ACCEPT",
            "VERIFY_EMAIL",
            "RECOVER_EMAIL",
            "EMAIL_SIGNIN",
            "VERIFY_AND_CHANGE_EMAIL",
            "REVERT_SECOND_FACTOR_ADDITION"
          ],
          "enumDescriptions": [
            "Oob code type is not specified.",
            "reset password",
            "",
            "",
            "verify the account's email address by sending an email",
            "",
            "sign in with email only",
            "This flow sends an email to the specified new email, and when applied by clicking the link in the email changes the account's email to the new email. Used when the account must have verified email at all times, such as MFA accounts.",
            ""
          ],
          "type": "string"
        },
        "mfaInfo": {
          "$ref": "GoogleCloudIdentitytoolkitV1MfaEnrollment"
        },
        "kind": {
          "type": "string"
        },
        "newEmail": {
          "type": "string"
        },
        "email": {
          "description": "The email associated with the out-of-band code that was used.",
          "type": "string"
        }
      },
      "id": "GoogleCloudIdentitytoolkitV1ResetPasswordResponse",
      "description": "Response message for ResetPassword.",
      "type": "object"
    },
    "GoogleCloudIdentitytoolkitV1BatchDeleteErrorInfo": {
      "id": "GoogleCloudIdentitytoolkitV1BatchDeleteErrorInfo",
      "description": "Error info for account failed to be deleted.",
      "properties": {
        "message": {
          "description": "Detailed error message.",
          "type": "string"
        },
        "index": {
          "description": "The index of the errored item in the original local_ids field.",
          "type": "integer",
          "format": "int32"
        },
        "localId": {
          "description": "The corresponding user ID.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleCloudIdentitytoolkitV1MfaEnrollment": {
      "type": "object",
      "properties": {
        "enrolledAt": {
          "format": "google-datetime",
          "description": "Timestamp when the account enrolled this second factor.",
          "type": "string"
        },
        "displayName": {
          "type": "string",
          "description": "Display name for this mfa option e.g. \"corp cell phone\"."
        },
        "unobfuscatedPhoneInfo": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Unobfuscated phone_info."
        },
        "mfaEnrollmentId": {
          "type": "string",
          "description": "ID of this MFA option."
        },
        "phoneInfo": {
          "description": "Normally this will show the phone number associated with this enrollment. In some situations, such as after a first factor sign in, it will only show the obfuscated version of the associated phone number.",
          "type": "string"
        }
      },
      "id": "GoogleCloudIdentitytoolkitV1MfaEnrollment",
      "description": "Information on which multi-factor authentication (MFA) providers are enabled for an account."
    },
    "GoogleCloudIdentitytoolkitV1SignInWithCustomTokenRequest": {
      "type": "object",
      "id": "GoogleCloudIdentitytoolkitV1SignInWithCustomTokenRequest",
      "properties": {
        "delegatedProjectNumber": {
          "type": "string",
          "format": "int64"
        },
        "tenantId": {
          "type": "string",
          "description": "The ID of the Identity Platform tenant the user is signing in to. If present, the ID should match the tenant_id in the token."
        },
        "token": {
          "type": "string",
          "description": "Required. The custom Auth token asserted by the developer. The token should be a [JSON Web Token (JWT)](https://tools.ietf.org/html/rfc7519) that includes the claims listed in the [API reference](https://cloud.google.com/identity-platform/docs/reference/rest/client/) under the \"Custom Token Claims\" section."
        },
        "instanceId": {
          "type": "string"
        },
        "returnSecureToken": {
          "description": "Should always be true.",
          "type": "boolean"
        }
      },
      "description": "Request message for SignInWithCustomToken."
    },
    "GoogleCloudIdentitytoolkitV1GetProjectConfigResponse": {
      "type": "object",
      "description": "Response message for GetProjectConfig.",
      "id": "GoogleCloudIdentitytoolkitV1GetProjectConfigResponse",
      "properties": {
        "verifyEmailTemplate": {
          "$ref": "GoogleCloudIdentitytoolkitV1EmailTemplate",
          "description": "Email template for verify email. This field is only returned for authenticated calls from a developer."
        },
        "idpConfig": {
          "items": {
            "$ref": "GoogleCloudIdentitytoolkitV1IdpConfig"
          },
          "type": "array",
          "description": "OAuth2 provider config. This field is only returned for authenticated calls from a developer."
        },
        "projectId": {
          "description": "The project id of the retrieved configuration.",
          "type": "string"
        },
        "changeEmailTemplate": {
          "description": "Email template for change email. This field is only returned for authenticated calls from a developer.",
          "$ref": "GoogleCloudIdentitytoolkitV1EmailTemplate"
        },
        "authorizedDomains": {
          "items": {
            "type": "string"
          },
          "description": "Authorized domains for widget redirect.",
          "type": "array"
        },
        "enableAnonymousUser": {
          "type": "boolean",
          "description": "Whether anonymous user is enabled. This field is only returned for authenticated calls from a developer."
        },
        "legacyResetPasswordTemplate": {
          "description": "Reset password email template for legacy Firebase V1 app. This field is only returned for authenticated calls from a developer.",
          "$ref": "GoogleCloudIdentitytoolkitV1EmailTemplate"
        },
        "resetPasswordTemplate": {
          "$ref": "GoogleCloudIdentitytoolkitV1EmailTemplate",
          "description": "Email template for reset password. This field is only returned for authenticated calls from a developer."
        },
        "useEmailSending": {
          "description": "Whether to use email sending. This field is only returned for authenticated calls from a developer.",
          "type": "boolean"
        },
        "apiKey": {
          "type": "string",
          "description": "Google Cloud API key. This field is only returned for authenticated calls from a developer."
        },
        "dynamicLinksDomain": {
          "type": "string",
          "description": "The Firebase Dynamic Links domain used to construct links for redirects to native apps."
        },
        "revertSecondFactorAdditionTemplate": {
          "$ref": "GoogleCloudIdentitytoolkitV1EmailTemplate",
          "description": "Email template for reverting second factor additions. This field is only returned for authenticated calls from a developer."
        },
        "allowPasswordUser": {
          "description": "Whether to allow password account sign up. This field is only returned for authenticated calls from a developer.",
          "type": "boolean"
        }
      }
    },
    "GoogleCloudIdentitytoolkitV1EmailTemplate": {
      "id": "GoogleCloudIdentitytoolkitV1EmailTemplate",
      "description": "Email template",
      "properties": {
        "subject": {
          "type": "string",
          "description": "Subject of the email"
        },
        "body": {
          "description": "Email body",
          "type": "string"
        },
        "disabled": {
          "type": "boolean",
          "description": "Whether the template is disabled. If true, a default template will be used."
        },
        "fromLocalPart": {
          "description": "Local part of From address",
          "type": "string"
        },
        "from": {
          "type": "string",
          "description": "From address of the email"
        },
        "replyTo": {
          "description": "Reply-to address",
          "type": "string"
        },
        "fromDisplayName": {
          "description": "From display name",
          "type": "string"
        },
        "locale": {
          "description": "Value is in III language code format (e.g. \"zh-CN\", \"es\"). Both '-' and '_' separators are accepted.",
          "type": "string"
        },
        "customized": {
          "type": "boolean",
          "description": "Whether the body or subject of the email is customized."
        },
        "format": {
          "enumDescriptions": [
            "Default value. Do not use.",
            "Email body is in plain text format.",
            "Email body is in HTML format."
          ],
          "enum": [
            "EMAIL_BODY_FORMAT_UNSPECIFIED",
            "PLAINTEXT",
            "HTML"
          ],
          "description": "Email body format",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleCloudIdentitytoolkitV1GetAccountInfoResponse": {
      "id": "GoogleCloudIdentitytoolkitV1GetAccountInfoResponse",
      "description": "Response message for GetAccountInfo.",
      "type": "object",
      "properties": {
        "users": {
          "description": "The information of specific user account(s) matching the parameters in the request.",
          "items": {
            "$ref": "GoogleCloudIdentitytoolkitV1UserInfo"
          },
          "type": "array"
        },
        "kind": {
          "type": "string"
        }
      }
    },
    "GoogleCloudIdentitytoolkitV1IssueSamlResponseRequest": {
      "id": "GoogleCloudIdentitytoolkitV1IssueSamlResponseRequest",
      "properties": {
        "samlAppEntityId": {
          "type": "string",
          "description": "SAML app entity id specified in Google Admin Console for each app. If developers want to redirect to a third-party app rather than a G Suite app, they'll probably they need this. When it's used, we'll return a RelayState. This includes a SAMLRequest, which can be used to trigger a SP-initiated SAML flow to redirect to the real app."
        },
        "rpId": {
          "type": "string",
          "description": "Relying Party identifier, which is the audience of issued SAMLResponse."
        },
        "idToken": {
          "description": "The Identity Platform ID token. It will be verified and then converted to a new SAMLResponse.",
          "type": "string"
        }
      },
      "description": "Request message for IssueSamlResponse.",
      "type": "object"
    },
    "GoogleCloudIdentitytoolkitV1SignUpResponse": {
      "id": "GoogleCloudIdentitytoolkitV1SignUpResponse",
      "type": "object",
      "description": "Response message for SignUp.",
      "properties": {
        "email": {
          "type": "string",
          "description": "The created user's email."
        },
        "localId": {
          "description": "The ID of the created user. Always present in the response.",
          "type": "string"
        },
        "expiresIn": {
          "format": "int64",
          "type": "string",
          "description": "The number of seconds until the ID token expires."
        },
        "idToken": {
          "description": "An Identity Platform ID token for the created user. This field is only set for non-admin requests.",
          "type": "string"
        },
        "displayName": {
          "type": "string",
          "description": "The created user's display name."
        },
        "refreshToken": {
          "description": "An Identity Platform refresh token for the created user. This field is only set for non-admin requests.",
          "type": "string"
        },
        "kind": {
          "type": "string"
        }
      }
    },
    "GoogleCloudIdentitytoolkitV1CreateSessionCookieRequest": {
      "id": "GoogleCloudIdentitytoolkitV1CreateSessionCookieRequest",
      "properties": {
        "idToken": {
          "type": "string",
          "description": "Required. A valid Identity Platform ID token."
        },
        "tenantId": {
          "type": "string",
          "description": "The tenant ID of the Identity Platform tenant the account belongs to."
        },
        "validDuration": {
          "format": "int64",
          "type": "string",
          "description": "The number of seconds until the session cookie expires. Specify a duration in seconds, between five minutes and fourteen days, inclusively."
        }
      },
      "description": "Request message for CreateSessionCookie.",
      "type": "object"
    },
    "GoogleCloudIdentitytoolkitV1GetAccountInfoRequest": {
      "id": "GoogleCloudIdentitytoolkitV1GetAccountInfoRequest",
      "description": "Request message for GetAccountInfo.",
      "type": "object",
      "properties": {
        "localId": {
          "items": {
            "type": "string"
          },
          "description": "The ID of one or more accounts to fetch. Should only be specified by authenticated requests bearing a Google OAuth 2.0 credential with proper [permissions](https://cloud.google.com/identity-platform/docs/access-control).",
          "type": "array"
        },
        "email": {
          "items": {
            "type": "string"
          },
          "description": "The email address of one or more accounts to fetch. The length of email should be less than 256 characters and in the format of `name@domain.tld`. The email should also match the [RFC 822](https://tools.ietf.org/html/rfc822) addr-spec production. Should only be specified by authenticated requests from a developer.",
          "type": "array"
        },
        "initialEmail": {
          "items": {
            "type": "string"
          },
          "description": "The initial email of one or more accounts to fetch. The length of email should be less than 256 characters and in the format of `name@domain.tld`. The email should also match the [RFC 822](https://tools.ietf.org/html/rfc822) addr-spec production. Should only be specified by authenticated requests from a developer.",
          "type": "array"
        },
        "federatedUserId": {
          "items": {
            "$ref": "GoogleCloudIdentitytoolkitV1FederatedUserIdentifier"
          },
          "type": "array",
          "description": "The federated user identifier of one or more accounts to fetch. Should only be specified by authenticated requests bearing a Google OAuth 2.0 credential with proper [permissions](https://cloud.google.com/identity-platform/docs/access-control)."
        },
        "delegatedProjectNumber": {
          "type": "string",
          "format": "int64"
        },
        "idToken": {
          "type": "string",
          "description": "The Identity Platform ID token of the account to fetch. Require to be specified for requests from end users."
        },
        "targetProjectId": {
          "description": "The ID of the Google Cloud project that the account or the Identity Platform tenant specified by `tenant_id` belongs to. Should only be specified by authenticated requests bearing a Google OAuth 2.0 credential with proper [permissions](https://cloud.google.com/identity-platform/docs/access-control).",
          "type": "string"
        },
        "phoneNumber": {
          "description": "The phone number of one or more accounts to fetch. Should only be specified by authenticated requests from a developer and should be in E.164 format, for example, +15555555555.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "tenantId": {
          "description": "The ID of the tenant that the account belongs to. Should only be specified by authenticated requests from a developer.",
          "type": "string"
        }
      }
    },
    "GoogleCloudIdentitytoolkitV1CreateSessionCookieResponse": {
      "type": "object",
      "properties": {
        "sessionCookie": {
          "type": "string",
          "description": "The session cookie that has been created from the Identity Platform ID token specified in the request. It is in the form of a JSON Web Token (JWT). Always present."
        }
      },
      "id": "GoogleCloudIdentitytoolkitV1CreateSessionCookieResponse",
      "description": "Response message for CreateSessionCookie."
    },
    "GoogleCloudIdentitytoolkitV1SignInWithPhoneNumberResponse": {
      "properties": {
        "expiresIn": {
          "type": "string",
          "description": "The number of seconds until the ID token expires.",
          "format": "int64"
        },
        "refreshToken": {
          "type": "string",
          "description": "Refresh token for the authenticated user."
        },
        "isNewUser": {
          "description": "Whether the authenticated user was created by this request.",
          "type": "boolean"
        },
        "temporaryProof": {
          "type": "string",
          "description": "A proof of the phone number verification, provided if a phone authentication is successful but the user operation fails. This happens when the request tries to link a phone number to a user with an ID token or reauthenticate with an ID token but the phone number is linked to a different user."
        },
        "phoneNumber": {
          "type": "string",
          "description": "Phone number of the authenticated user. Always present in the response."
        },
        "localId": {
          "type": "string",
          "description": "The id of the authenticated user. Present in the case of a successful authentication. In the case when the phone could be verified but the account operation could not be performed, a temporary proof will be returned instead."
        },
        "temporaryProofExpiresIn": {
          "type": "string",
          "format": "int64",
          "description": "The number of seconds until the temporary proof expires."
        },
        "verificationProof": {
          "description": "Do not use.",
          "type": "string"
        },
        "idToken": {
          "description": "Identity Platform ID token for the authenticated user.",
          "type": "string"
        },
        "verificationProofExpiresIn": {
          "description": "Do not use.",
          "type": "string",
          "format": "int64"
        }
      },
      "description": "Response message for SignInWithPhoneNumber.",
      "type": "object",
      "id": "GoogleCloudIdentitytoolkitV1SignInWithPhoneNumberResponse"
    },
    "GoogleCloudIdentitytoolkitV1SetAccountInfoRequest": {
      "properties": {
        "idToken": {
          "description": "A valid Identity Platform ID token. Required when attempting to change user-related information.",
          "type": "string"
        },
        "upgradeToFederatedLogin": {
          "description": "Whether the account should be restricted to only using federated login.",
          "type": "boolean"
        },
        "emailVerified": {
          "description": "Whether the user's email has been verified. Specifying this field requires a Google OAuth 2.0 credential with proper [permissions] (https://cloud.google.com/identity-platform/docs/access-control).",
          "type": "boolean"
        },
        "phoneNumber": {
          "description": "The phone number to be updated in the account's attributes.",
          "type": "string"
        },
        "delegatedProjectNumber": {
          "format": "int64",
          "type": "string"
        },
        "lastLoginAt": {
          "type": "string",
          "format": "int64",
          "description": "The timestamp in milliseconds when the account last logged in."
        },
        "captchaResponse": {
          "type": "string",
          "description": "The response from reCaptcha challenge. This is required when the system detects possible abuse activities."
        },
        "captchaChallenge": {
          "type": "string"
        },
        "password": {
          "type": "string",
          "description": "The user's new password to be updated in the account's attributes. The password must be at least 6 characters long."
        },
        "disableUser": {
          "type": "boolean",
          "description": "If true, marks the account as disabled, meaning the user will no longer be able to sign-in."
        },
        "validSince": {
          "type": "string",
          "format": "int64",
          "description": "Specifies the minimum timestamp in seconds for an Identity Platform ID token to be considered valid."
        },
        "displayName": {
          "description": "The user's new display name to be updated in the account's attributes. The length of the display name must be less than or equal to 256 characters.",
          "type": "string"
        },
        "deleteAttribute": {
          "items": {
            "type": "string",
            "enum": [
              "USER_ATTRIBUTE_NAME_UNSPECIFIED",
              "EMAIL",
              "DISPLAY_NAME",
              "PROVIDER",
              "PHOTO_URL",
              "PASSWORD",
              "RAW_USER_INFO"
            ],
            "enumDescriptions": [
              "User attribute name is not specified.",
              "User attribute key name is email.",
              "User attribute key name is displayName.",
              "User attribute key name is provider.",
              "User attribute key name is photoURL.",
              "User attribute key name is password.",
              "User attribute key name is rawUserInfo."
            ]
          },
          "type": "array",
          "description": "The account's attributes to be deleted."
        },
        "mfa": {
          "description": "The multi-factor authentication related information to be set on the user's account. This will overwrite any previous multi-factor related information on the account. Specifying this field requires a Google OAuth 2.0 credential with proper [permissions] (https://cloud.google.com/identity-platform/docs/access-control).",
          "$ref": "GoogleCloudIdentitytoolkitV1MfaInfo"
        },
        "linkProviderUserInfo": {
          "description": "The provider to be linked to the user's account. Specifying this field requires a Google OAuth 2.0 credential with proper [permissions] (https://cloud.google.com/identity-platform/docs/access-control).",
          "$ref": "GoogleCloudIdentitytoolkitV1ProviderUserInfo"
        },
        "provider": {
          "items": {
            "type": "string"
          },
          "description": "The Identity Providers that the account should be associated with.",
          "type": "array"
        },
        "email": {
          "type": "string",
          "description": "The user's new email to be updated in the account's attributes. The length of email should be less than 256 characters and in the format of `name@domain.tld`. The email should also match the [RFC 822](https://tools.ietf.org/html/rfc822) addr-spec production."
        },
        "photoUrl": {
          "description": "The user's new photo URL for the account's profile photo to be updated in the account's attributes. The length of the URL must be less than or equal to 2048 characters.",
          "type": "string"
        },
        "returnSecureToken": {
          "type": "boolean",
          "description": "Whether or not to return an ID and refresh token. Should always be true."
        },
        "deleteProvider": {
          "type": "array",
          "description": "The Identity Providers to unlink from the user's account.",
          "items": {
            "type": "string"
          }
        },
        "tenantId": {
          "type": "string",
          "description": "The tenant ID of the Identity Platform tenant that the account belongs to. Requests from end users should pass an Identity Platform ID token rather than setting this field."
        },
        "createdAt": {
          "description": "The timestamp in milliseconds when the account was created.",
          "type": "string",
          "format": "int64"
        },
        "customAttributes": {
          "description": "JSON formatted custom attributes to be stored in the Identity Platform ID token. Specifying this field requires a Google OAuth 2.0 credential with proper [permissions] (https://cloud.google.com/identity-platform/docs/access-control).",
          "type": "string"
        },
        "targetProjectId": {
          "description": "The project ID for the project that the account belongs to. Specifying this field requires Google OAuth 2.0 credential with proper [permissions] (https://cloud.google.com/identity-platform/docs/access-control). Requests from end users should pass an Identity Platform ID token instead.",
          "type": "string"
        },
        "oobCode": {
          "type": "string",
          "description": "The out-of-band code to be applied on the user's account. The following out-of-band code types are supported: * VERIFY_EMAIL * RECOVER_EMAIL * REVERT_SECOND_FACTOR_ADDITION * VERIFY_AND_CHANGE_EMAIL"
        },
        "localId": {
          "description": "The ID of the user. Specifying this field requires a Google OAuth 2.0 credential with proper [permissions] (https://cloud.google.com/identity-platform/docs/access-control). For requests from end-users, an ID token should be passed instead.",
          "type": "string"
        },
        "instanceId": {
          "type": "string"
        }
      },
      "id": "GoogleCloudIdentitytoolkitV1SetAccountInfoRequest",
      "type": "object",
      "description": "Request message for SetAccountInfo."
    },
    "GoogleCloudIdentitytoolkitV1IssueSamlResponseResponse": {
      "type": "object",
      "id": "GoogleCloudIdentitytoolkitV1IssueSamlResponseResponse",
      "description": "Response for IssueSamlResponse request.",
      "properties": {
        "lastName": {
          "description": "Last name of the user.",
          "type": "string"
        },
        "firstName": {
          "description": "First name of the user.",
          "type": "string"
        },
        "isNewUser": {
          "description": "Whether the logged in user was created by this request.",
          "type": "boolean"
        },
        "relayState": {
          "description": "Generated RelayState.",
          "type": "string"
        },
        "email": {
          "type": "string",
          "description": "Email of the user."
        },
        "acsEndpoint": {
          "type": "string",
          "description": "The ACS endpoint which consumes the returned SAMLResponse."
        },
        "samlResponse": {
          "type": "string",
          "description": "Signed SAMLResponse created for the Relying Party."
        }
      }
    },
    "GoogleCloudIdentitytoolkitV1SignInWithGameCenterRequest": {
      "type": "object",
      "properties": {
        "salt": {
          "description": "Required. A random string used to generate the given signature.",
          "type": "string"
        },
        "gamePlayerId": {
          "type": "string",
          "description": "The user's Game Center game player ID. A unique identifier for a player of the game. https://developer.apple.com/documentation/gamekit/gkplayer/3113960-gameplayerid"
        },
        "teamPlayerId": {
          "description": "The user's Game Center team player ID. A unique identifier for a player of all the games that you distribute using your developer account. https://developer.apple.com/documentation/gamekit/gkplayer/3174857-teamplayerid",
          "type": "string"
        },
        "tenantId": {
          "description": "The ID of the Identity Platform tenant the user is signing in to.",
          "type": "string"
        },
        "publicKeyUrl": {
          "type": "string",
          "description": "Required. The URL to fetch the Apple public key in order to verify the given signature is signed by Apple."
        },
        "displayName": {
          "type": "string",
          "description": "The user's Game Center display name."
        },
        "idToken": {
          "description": "A valid ID token for an Identity Platform account. If present, this request will link the Game Center player ID to the account represented by this ID token.",
          "type": "string"
        },
        "timestamp": {
          "format": "int64",
          "type": "string",
          "description": "Required. The time when the signature was created by Apple, in milliseconds since the epoch."
        },
        "signature": {
          "type": "string",
          "description": "Required. The verification signature data generated by Apple."
        },
        "playerId": {
          "type": "string",
          "description": "Required. The user's Game Center player ID. Deprecated by Apple. Pass `playerID` along with `gamePlayerID` and `teamPlayerID` to initiate the migration of a user's Game Center player ID to `gamePlayerID`."
        }
      },
      "id": "GoogleCloudIdentitytoolkitV1SignInWithGameCenterRequest",
      "description": "Request message for SignInWithGameCenter"
    },
    "GoogleCloudIdentitytoolkitV1VerifyIosClientResponse": {
      "type": "object",
      "properties": {
        "suggestedTimeout": {
          "format": "int64",
          "description": "Suggested time that the client should wait in seconds for delivery of the push notification.",
          "type": "string"
        },
        "receipt": {
          "description": "Receipt of successful app token validation.",
          "type": "string"
        }
      },
      "id": "GoogleCloudIdentitytoolkitV1VerifyIosClientResponse",
      "description": "Response message for VerifyIosClient."
    },
    "GoogleCloudIdentitytoolkitV1ProviderUserInfo": {
      "type": "object",
      "description": "Information about the user as provided by various Identity Providers.",
      "id": "GoogleCloudIdentitytoolkitV1ProviderUserInfo",
      "properties": {
        "federatedId": {
          "type": "string",
          "description": "The user's identifier at the Identity Provider."
        },
        "providerId": {
          "description": "The ID of the Identity Provider.",
          "type": "string"
        },
        "photoUrl": {
          "type": "string",
          "description": "The user's profile photo URL at the Identity Provider."
        },
        "phoneNumber": {
          "description": "The user's phone number at the Identity Provider.",
          "type": "string"
        },
        "email": {
          "description": "The user's email address at the Identity Provider.",
          "type": "string"
        },
        "rawId": {
          "type": "string",
          "description": "The user's raw identifier directly returned from Identity Provider."
        },
        "displayName": {
          "description": "The user's display name at the Identity Provider.",
          "type": "string"
        },
        "screenName": {
          "type": "string",
          "description": "The user's screen_name at Twitter or login name at GitHub."
        }
      }
    },
    "GoogleCloudIdentitytoolkitV1SignUpRequest": {
      "type": "object",
      "description": "Request message for SignUp.",
      "properties": {
        "localId": {
          "type": "string",
          "description": "The ID of the user to create. The ID must be unique within the project that the user is being created under. Specifying this field requires a Google OAuth 2.0 credential with the proper [permissions](https://cloud.google.com/identity-platform/docs/access-control)."
        },
        "email": {
          "description": "The email to assign to the created user. The length of the email should be less than 256 characters and in the format of `name@domain.tld`. The email should also match the [RFC 822](https://tools.ietf.org/html/rfc822) addr-spec production. An anonymous user will be created if not provided.",
          "type": "string"
        },
        "phoneNumber": {
          "type": "string",
          "description": "The phone number of the user to create. Specifying this field requires a Google OAuth 2.0 credential with the proper [permissions](https://cloud.google.com/identity-platform/docs/access-control)."
        },
        "password": {
          "type": "string",
          "description": "The password to assign to the created user. The password must be be at least 6 characters long. If set, the `email` field must also be set."
        },
        "captchaChallenge": {
          "type": "string"
        },
        "idToken": {
          "type": "string",
          "description": "A valid ID token for an Identity Platform user. If set, this request will link the authentication credential to the user represented by this ID token. For a non-admin request, both the `email` and `password` fields must be set. For an admin request, `local_id` must not be set."
        },
        "instanceId": {
          "type": "string"
        },
        "photoUrl": {
          "type": "string",
          "description": "The profile photo url of the user to create."
        },
        "emailVerified": {
          "description": "Whether the user's email is verified. Specifying this field requires a Google OAuth 2.0 credential with the proper [permissions](https://cloud.google.com/identity-platform/docs/access-control).",
          "type": "boolean"
        },
        "captchaResponse": {
          "description": "The reCAPTCHA token provided by the reCAPTCHA client-side integration. reCAPTCHA Enterprise uses it for assessment. Required when reCAPTCHA enterprise is enabled.",
          "type": "string"
        },
        "mfaInfo": {
          "items": {
            "$ref": "GoogleCloudIdentitytoolkitV1MfaFactor"
          },
          "description": "The multi-factor authentication providers for the user to create.",
          "type": "array"
        },
        "displayName": {
          "type": "string",
          "description": "The display name of the user to be created."
        },
        "tenantId": {
          "type": "string",
          "description": "The ID of the Identity Platform tenant to create a user under. If not set, the user will be created under the default Identity Platform project."
        },
        "targetProjectId": {
          "description": "The project ID of the project which the user should belong to. Specifying this field requires a Google OAuth 2.0 credential with the proper [permissions](https://cloud.google.com/identity-platform/docs/access-control). If this is not set, the target project is inferred from the scope associated to the Bearer access token.",
          "type": "string"
        },
        "disabled": {
          "description": "Whether the user will be disabled upon creation. Disabled accounts are inaccessible except for requests bearing a Google OAuth2 credential with proper [permissions](https://cloud.google.com/identity-platform/docs/access-control).",
          "type": "boolean"
        }
      },
      "id": "GoogleCloudIdentitytoolkitV1SignUpRequest"
    },
    "GoogleCloudIdentitytoolkitV1DeleteAccountResponse": {
      "properties": {
        "kind": {
          "type": "string"
        }
      },
      "type": "object",
      "description": "Response message for DeleteAccount.",
      "id": "GoogleCloudIdentitytoolkitV1DeleteAccountResponse"
    },
    "GoogleCloudIdentitytoolkitV1QueryUserInfoRequest": {
      "id": "GoogleCloudIdentitytoolkitV1QueryUserInfoRequest",
      "properties": {
        "returnUserInfo": {
          "type": "boolean",
          "description": "If `true`, this request will return the accounts matching the query. If `false`, only the __count__ of accounts matching the query will be returned. Defaults to `true`."
        },
        "sortBy": {
          "enum": [
            "SORT_BY_FIELD_UNSPECIFIED",
            "USER_ID",
            "NAME",
            "CREATED_AT",
            "LAST_LOGIN_AT",
            "USER_EMAIL"
          ],
          "enumDescriptions": [
            "Sort field is not specified.",
            "Sort result by userId.",
            "Sort result by name.",
            "Sort result by createdAt.",
            "Sort result by lastLoginAt.",
            "Sort result by userEmail."
          ],
          "type": "string",
          "description": "The field to use for sorting user accounts. Defaults to `USER_ID`. Note: when `phone_number` is specified in `expression`, the result ignores the sorting. Only valid when `return_user_info` is set to `true`."
        },
        "limit": {
          "type": "string",
          "description": "The maximum number of accounts to return with an upper limit of __500__. Defaults to _500_. Only valid when `return_user_info` is set to `true`.",
          "format": "int64"
        },
        "expression": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudIdentitytoolkitV1SqlExpression"
          },
          "description": "Query conditions used to filter results. If more than one is passed, only the first SqlExpression is evaluated."
        },
        "tenantId": {
          "description": "The ID of the tenant to which the result is scoped.",
          "type": "string"
        },
        "offset": {
          "description": "The number of accounts to skip from the beginning of matching records. Only valid when `return_user_info` is set to `true`.",
          "type": "string",
          "format": "int64"
        },
        "order": {
          "enum": [
            "ORDER_UNSPECIFIED",
            "ASC",
            "DESC"
          ],
          "enumDescriptions": [
            "Order is not specified.",
            "Sort on ascending order.",
            "Sort on descending order."
          ],
          "description": "The order for sorting query result. Defaults to __ascending__ order. Only valid when `return_user_info` is set to `true`.",
          "type": "string"
        }
      },
      "description": "Request message for QueryUserInfo.",
      "type": "object"
    },
    "GoogleCloudIdentitytoolkitV1ErrorInfo": {
      "description": "Error information explaining why an account cannot be uploaded. batch upload.",
      "type": "object",
      "id": "GoogleCloudIdentitytoolkitV1ErrorInfo",
      "properties": {
        "index": {
          "type": "integer",
          "format": "int32",
          "description": "The index of the item, range is [0, request.size - 1]"
        },
        "message": {
          "type": "string",
          "description": "Detailed error message"
        }
      }
    },
    "GoogleCloudIdentitytoolkitV1AutoRetrievalInfo": {
      "properties": {
        "appSignatureHash": {
          "description": "The Android app's signature hash for Google Play Service's SMS Retriever API.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "The information required to auto-retrieve an SMS.",
      "id": "GoogleCloudIdentitytoolkitV1AutoRetrievalInfo"
    },
    "GoogleCloudIdentitytoolkitV1CreateAuthUriResponse": {
      "properties": {
        "sessionId": {
          "type": "string",
          "description": "The session ID from the request, or a random string generated by CreateAuthUri if absent. It is used to prevent session fixation attacks."
        },
        "captchaRequired": {
          "type": "boolean",
          "description": "Whether a CAPTCHA is needed because there have been too many failed login attempts by the user. Present only when a registered email identifier is set in the request."
        },
        "providerId": {
          "description": "The provider ID from the request, if provided.",
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "allProviders": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "forExistingProvider": {
          "description": "Whether the user has previously signed in with the provider ID in the request. Present only when a registered email identifier is set in the request.",
          "type": "boolean"
        },
        "registered": {
          "description": "Whether the email identifier represents an existing account. Present only when an email identifier is set in the request.",
          "type": "boolean"
        },
        "signinMethods": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "The list of sign-in methods that the user has previously used. Each element is one of `password`, `emailLink`, or the provider ID of an IdP. Present only when a registered email identifier is set in the request."
        },
        "authUri": {
          "type": "string",
          "description": "The authorization URI for the requested provider. Present only when a provider ID is set in the request."
        }
      },
      "type": "object",
      "id": "GoogleCloudIdentitytoolkitV1CreateAuthUriResponse",
      "description": "Response message for CreateAuthUri."
    },
    "GoogleCloudIdentitytoolkitV1VerifyIosClientRequest": {
      "id": "GoogleCloudIdentitytoolkitV1VerifyIosClientRequest",
      "description": "Request message for VerifyIosClient",
      "properties": {
        "isSandbox": {
          "type": "boolean",
          "description": "Whether the app token is in the iOS sandbox. If false, the app token is in the production environment."
        },
        "appToken": {
          "type": "string",
          "description": "A device token that the iOS client gets after registering to APNs (Apple Push Notification service)."
        }
      },
      "type": "object"
    },
    "GoogleCloudIdentitytoolkitV1DeleteAccountRequest": {
      "type": "object",
      "description": "Request message for DeleteAccount.",
      "id": "GoogleCloudIdentitytoolkitV1DeleteAccountRequest",
      "properties": {
        "localId": {
          "description": "The ID of user account to delete. Specifying this field requires a Google OAuth 2.0 credential with proper [permissions](https://cloud.google.com/identity-platform/docs/access-control). Requests from users lacking the credential should pass an ID token instead.",
          "type": "string"
        },
        "delegatedProjectNumber": {
          "format": "int64",
          "type": "string"
        },
        "idToken": {
          "type": "string",
          "description": "The Identity Platform ID token of the account to delete. Require to be specified for requests from end users that lack Google OAuth 2.0 credential. Authenticated requests bearing a Google OAuth2 credential with proper permissions may pass local_id to specify the account to delete alternatively."
        },
        "targetProjectId": {
          "description": "The ID of the project which the account belongs to. Should only be specified in authenticated requests that specify local_id of an account.",
          "type": "string"
        },
        "tenantId": {
          "description": "The ID of the tenant that the account belongs to, if applicable. Only require to be specified for authenticated requests bearing a Google OAuth 2.0 credential that specify local_id of an account that belongs to an Identity Platform tenant.",
          "type": "string"
        }
      }
    },
    "GoogleCloudIdentitytoolkitV1GetSessionCookiePublicKeysResponse": {
      "type": "object",
      "description": "Response message for GetSessionCookiePublicKeys.",
      "properties": {
        "keys": {
          "description": "Public keys of the session cookie signer, formatted as [JSON Web Keys (JWK)](https://tools.ietf.org/html/rfc7517).",
          "items": {
            "$ref": "GoogleCloudIdentitytoolkitV1OpenIdConnectKey"
          },
          "type": "array"
        }
      },
      "id": "GoogleCloudIdentitytoolkitV1GetSessionCookiePublicKeysResponse"
    },
    "GoogleCloudIdentitytoolkitV1GetRecaptchaParamResponse": {
      "description": "Response message for GetRecaptchaParam.",
      "id": "GoogleCloudIdentitytoolkitV1GetRecaptchaParamResponse",
      "type": "object",
      "properties": {
        "kind": {
          "type": "string"
        },
        "recaptchaSiteKey": {
          "description": "The reCAPTCHA v2 site key used to invoke the reCAPTCHA service. Always present.",
          "type": "string"
        },
        "recaptchaStoken": {
          "type": "string"
        },
        "producerProjectNumber": {
          "description": "The producer project number used to generate PIA tokens",
          "type": "string"
        }
      }
    },
    "GoogleCloudIdentitytoolkitV1SignInWithIdpRequest": {
      "description": "Request message for SignInWithIdp.",
      "id": "GoogleCloudIdentitytoolkitV1SignInWithIdpRequest",
      "properties": {
        "idToken": {
          "description": "A valid Identity Platform ID token. If passed, the user's account at the IdP will be linked to the account represented by this ID token.",
          "type": "string"
        },
        "returnRefreshToken": {
          "type": "boolean",
          "description": "Whether or not to return the OAuth refresh token from the IdP, if available."
        },
        "sessionId": {
          "type": "string",
          "description": "The session ID returned from a previous CreateAuthUri call. This field is verified against that session ID to prevent session fixation attacks. Required if the user is signing in with an authorization response from a previous CreateAuthUri authorization request."
        },
        "postBody": {
          "type": "string",
          "description": "If the user is signing in with an authorization response obtained via a previous CreateAuthUri authorization request, this is the body of the HTTP POST callback from the IdP, if present. Otherwise, if the user is signing in with a manually provided IdP credential, this should be a URL-encoded form that contains the credential (e.g. an ID token or access token for OAuth 2.0 IdPs) and the provider ID of the IdP that issued the credential. For example, if the user is signing in to the Google provider using a Google ID token, this should be set to `id_token=[GOOGLE_ID_TOKEN]&providerId=google.com`, where `[GOOGLE_ID_TOKEN]` should be replaced with the Google ID token. If the user is signing in to the Facebook provider using a Facebook authentication token, this should be set to `id_token=[FACEBOOK_AUTHENTICATION_TOKEN]&providerId=facebook.com&nonce= [NONCE]`, where `[FACEBOOK_AUTHENTICATION_TOKEN]` should be replaced with the Facebook authentication token. Nonce is required for validating the token. The request will fail if no nonce is provided. If the user is signing in to the Facebook provider using a Facebook access token, this should be set to `access_token=[FACEBOOK_ACCESS_TOKEN]&providerId=facebook.com`, where `[FACEBOOK_ACCESS_TOKEN]` should be replaced with the Facebook access token. If the user is signing in to the Twitter provider using a Twitter OAuth 1.0 credential, this should be set to `access_token=[TWITTER_ACCESS_TOKEN]&oauth_token_secret=[TWITTER_TOKEN_SECRET]&providerId=twitter.com`, where `[TWITTER_ACCESS_TOKEN]` and `[TWITTER_TOKEN_SECRET]` should be replaced with the Twitter OAuth access token and Twitter OAuth token secret respectively."
        },
        "pendingIdToken": {
          "type": "string"
        },
        "returnIdpCredential": {
          "description": "Whether or not to return OAuth credentials from the IdP on the following errors: `FEDERATED_USER_ID_ALREADY_LINKED` and `EMAIL_EXISTS`.",
          "type": "boolean"
        },
        "requestUri": {
          "description": "Required. The URL to which the IdP redirects the user back. This can be set to `http://localhost` if the user is signing in with a manually provided IdP credential.",
          "type": "string"
        },
        "delegatedProjectNumber": {
          "type": "string",
          "format": "int64"
        },
        "tenantId": {
          "type": "string",
          "description": "The ID of the Identity Platform tenant the user is signing in to. If not set, the user will sign in to the default Identity Platform project."
        },
        "pendingToken": {
          "type": "string",
          "description": "An opaque string from a previous SignInWithIdp response. If set, it can be used to repeat the sign-in operation from the previous SignInWithIdp operation."
        },
        "returnSecureToken": {
          "description": "Should always be true.",
          "type": "boolean"
        },
        "autoCreate": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "GoogleCloudIdentitytoolkitV1OpenIdConnectKey": {
      "type": "object",
      "id": "GoogleCloudIdentitytoolkitV1OpenIdConnectKey",
      "description": "Represents a public key of the session cookie signer, formatted as a [JSON Web Key (JWK)](https://tools.ietf.org/html/rfc7517).",
      "properties": {
        "n": {
          "description": "Modulus for the RSA public key, it is represented as the base64url encoding of the value's big endian representation.",
          "type": "string"
        },
        "kty": {
          "type": "string",
          "description": "Key type."
        },
        "alg": {
          "description": "Signature algorithm.",
          "type": "string"
        },
        "kid": {
          "description": "Unique string to identify this key.",
          "type": "string"
        },
        "use": {
          "type": "string",
          "description": "Key use."
        },
        "e": {
          "type": "string",
          "description": "Exponent for the RSA public key, it is represented as the base64url encoding of the value's big endian representation."
        }
      }
    },
    "GoogleCloudIdentitytoolkitV1SignInWithGameCenterResponse": {
      "properties": {
        "refreshToken": {
          "type": "string",
          "description": "An Identity Platform refresh token for the authenticated user."
        },
        "expiresIn": {
          "type": "string",
          "description": "The number of seconds until the ID token expires.",
          "format": "int64"
        },
        "localId": {
          "description": "The ID of the authenticated user. Always present in the response.",
          "type": "string"
        },
        "isNewUser": {
          "type": "boolean",
          "description": "Whether the logged in user was created by this request."
        },
        "teamPlayerId": {
          "type": "string",
          "description": "The user's Game Center team player ID. A unique identifier for a player of all the games that you distribute using your developer account. https://developer.apple.com/documentation/gamekit/gkplayer/3174857-teamplayerid"
        },
        "playerId": {
          "type": "string",
          "description": "The user's Game Center player ID. Pass `playerID` along with `gamePlayerID` and `teamPlayerID` to initiate the migration of a user's Game Center player ID to `gamePlayerID`."
        },
        "idToken": {
          "type": "string",
          "description": "An Identity Platform ID token for the authenticated user."
        },
        "gamePlayerId": {
          "description": "The user's Game Center game player ID. A unique identifier for a player of the game. https://developer.apple.com/documentation/gamekit/gkplayer/3113960-gameplayerid",
          "type": "string"
        },
        "displayName": {
          "type": "string",
          "description": "Display name of the authenticated user."
        }
      },
      "type": "object",
      "description": "Response message for SignInWithGameCenter",
      "id": "GoogleCloudIdentitytoolkitV1SignInWithGameCenterResponse"
    },
    "GoogleCloudIdentitytoolkitV1ResetPasswordRequest": {
      "description": "Request message for ResetPassword.",
      "properties": {
        "newPassword": {
          "description": "The new password to be set for this account. Specifying this field will result in a change to the account and consume the out-of-band code if one was specified and it was of type PASSWORD_RESET.",
          "type": "string"
        },
        "oobCode": {
          "description": "An out-of-band (OOB) code generated by GetOobCode request. Specify only this parameter (or only this parameter and a tenant ID) to get the out-of-band code's type in the response without mutating the account's state. Only a PASSWORD_RESET out-of-band code can be consumed via this method.",
          "type": "string"
        },
        "oldPassword": {
          "description": "The current password of the account to be modified. Specify this and email to change an account's password without using an out-of-band code.",
          "type": "string"
        },
        "email": {
          "type": "string",
          "description": "The email of the account to be modified. Specify this and the old password in order to change an account's password without using an out-of-band code."
        },
        "tenantId": {
          "description": "The tenant ID of the Identity Platform tenant the account belongs to.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudIdentitytoolkitV1ResetPasswordRequest"
    },
    "GoogleCloudIdentitytoolkitV1Argon2Parameters": {
      "properties": {
        "memoryCostKib": {
          "description": "Required. The memory cost in kibibytes. Maximum is 32768.",
          "format": "int32",
          "type": "integer"
        },
        "hashType": {
          "type": "string",
          "description": "Required. Must not be HASH_TYPE_UNSPECIFIED.",
          "enum": [
            "HASH_TYPE_UNSPECIFIED",
            "ARGON2_D",
            "ARGON2_ID",
            "ARGON2_I"
          ],
          "enumDescriptions": [
            "The hash type is not specified.",
            "An Argon2 variant, Argon2d.",
            "An Argon2 variant, Argonid. Recommended.",
            "An Argon2 variant, Argon2i."
          ]
        },
        "parallelism": {
          "description": "Required. The degree of parallelism, also called threads or lanes. Minimum is 1, maximum is 16.",
          "format": "int32",
          "type": "integer"
        },
        "version": {
          "description": "The version of the Argon2 algorithm. This defaults to VERSION_13 if not specified.",
          "type": "string",
          "enum": [
            "VERSION_UNSPECIFIED",
            "VERSION_10",
            "VERSION_13"
          ],
          "enumDescriptions": [
            "The version is not specified.",
            "The previous version, 0x10.",
            "The current version, 0x13. The default value for version."
          ]
        },
        "hashLengthBytes": {
          "type": "integer",
          "description": "Required. The desired hash length in bytes. Minimum is 4 and maximum is 1024.",
          "format": "int32"
        },
        "iterations": {
          "type": "integer",
          "description": "Required. The number of iterations to perform. Minimum is 1, maximum is 16.",
          "format": "int32"
        },
        "associatedData": {
          "type": "string",
          "format": "byte",
          "description": "The additional associated data, if provided, is appended to the hash value to provide an additional layer of security. A base64-encoded string if specified via JSON."
        }
      },
      "description": "The parameters for Argon2 hashing algorithm.",
      "id": "GoogleCloudIdentitytoolkitV1Argon2Parameters",
      "type": "object"
    },
    "GoogleCloudIdentitytoolkitV1UploadAccountResponse": {
      "description": "Response message for UploadAccount.",
      "id": "GoogleCloudIdentitytoolkitV1UploadAccountResponse",
      "type": "object",
      "properties": {
        "kind": {
          "type": "string"
        },
        "error": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudIdentitytoolkitV1ErrorInfo"
          },
          "description": "Detailed error info for accounts that cannot be uploaded."
        }
      }
    },
    "GoogleCloudIdentitytoolkitV1UploadAccountRequest": {
      "properties": {
        "rounds": {
          "format": "int32",
          "description": "The number of rounds used for hash calculation. Only required for the following hashing functions: * MD5 * SHA1 * SHA256 * SHA512 * PBKDF_SHA1 * PBKDF2_SHA256 * SCRYPT",
          "type": "integer"
        },
        "parallelization": {
          "format": "int32",
          "type": "integer",
          "description": "The parallelization cost parameter to be used by the STANDARD_SCRYPT hashing function. This parameter, along with block_size and cpu_mem_cost help tune the resources needed to hash a password, and should be tuned as processor speeds and memory technologies advance."
        },
        "saltSeparator": {
          "description": "One or more bytes to be inserted between the salt and plain text password. For stronger security, this should be a single non-printable character.",
          "type": "string",
          "format": "byte"
        },
        "signerKey": {
          "description": "The signer key used to hash the password. Required for the following hashing functions: * SCRYPT, * HMAC_MD5, * HMAC_SHA1, * HMAC_SHA256, * HMAC_SHA512",
          "format": "byte",
          "type": "string"
        },
        "tenantId": {
          "type": "string",
          "description": "The ID of the Identity Platform tenant the account belongs to."
        },
        "argon2Parameters": {
          "description": "The parameters for Argon2 hashing algorithm.",
          "$ref": "GoogleCloudIdentitytoolkitV1Argon2Parameters"
        },
        "hashAlgorithm": {
          "description": "Required. The hashing function used to hash the account passwords. Must be one of the following: * HMAC_SHA256 * HMAC_SHA1 * HMAC_MD5 * SCRYPT * PBKDF_SHA1 * MD5 * HMAC_SHA512 * SHA1 * BCRYPT * PBKDF2_SHA256 * SHA256 * SHA512 * STANDARD_SCRYPT * ARGON2",
          "type": "string"
        },
        "allowOverwrite": {
          "description": "Whether to overwrite an existing account in Identity Platform with a matching `local_id` in the request. If true, the existing account will be overwritten. If false, an error will be returned.",
          "type": "boolean"
        },
        "dkLen": {
          "description": "The desired key length for the STANDARD_SCRYPT hashing function. Must be at least 1.",
          "format": "int32",
          "type": "integer"
        },
        "passwordHashOrder": {
          "type": "string",
          "description": "Password and salt order when verify password.",
          "enum": [
            "UNSPECIFIED_ORDER",
            "SALT_AND_PASSWORD",
            "PASSWORD_AND_SALT"
          ],
          "enumDescriptions": [
            "The order is not specified.",
            "The order is salt first, and then password.",
            "The order is password first, and then salt."
          ]
        },
        "memoryCost": {
          "type": "integer",
          "format": "int32",
          "description": "Memory cost for hash calculation. Only required when the hashing function is SCRYPT."
        },
        "users": {
          "description": "A list of accounts to upload. `local_id` is required for each user; everything else is optional.",
          "items": {
            "$ref": "GoogleCloudIdentitytoolkitV1UserInfo"
          },
          "type": "array"
        },
        "cpuMemCost": {
          "description": "The CPU memory cost parameter to be used by the STANDARD_SCRYPT hashing function. This parameter, along with block_size and cpu_mem_cost help tune the resources needed to hash a password, and should be tuned as processor speeds and memory technologies advance.",
          "type": "integer",
          "format": "int32"
        },
        "delegatedProjectNumber": {
          "type": "string",
          "format": "int64"
        },
        "blockSize": {
          "description": "The block size parameter used by the STANDARD_SCRYPT hashing function. This parameter, along with parallelization and cpu_mem_cost help tune the resources needed to hash a password, and should be tuned as processor speeds and memory technologies advance.",
          "type": "integer",
          "format": "int32"
        },
        "sanityCheck": {
          "description": "If true, the service will do the following list of checks before an account is uploaded: * Duplicate emails * Duplicate federated IDs * Federated ID provider validation If the duplication exists within the list of accounts to be uploaded, it will prevent the entire list from being uploaded. If the email or federated ID is a duplicate of a user already within the project/tenant, the account will not be uploaded, but the rest of the accounts will be unaffected. If false, these checks will be skipped.",
          "type": "boolean"
        }
      },
      "description": "Request message for UploadAccount.",
      "type": "object",
      "id": "GoogleCloudIdentitytoolkitV1UploadAccountRequest"
    },
    "GoogleCloudIdentitytoolkitV1GetOobCodeResponse": {
      "properties": {
        "kind": {
          "type": "string"
        },
        "oobLink": {
          "type": "string",
          "description": "If return_oob_link is true in the request, the OOB link to be sent to the user. This returns the constructed link including [Firebase Dynamic Link](https://firebase.google.com/docs/dynamic-links) related parameters."
        },
        "email": {
          "description": "If return_oob_link is false in the request, the email address the verification was sent to.",
          "type": "string"
        },
        "oobCode": {
          "type": "string",
          "description": "If return_oob_link is true in the request, the OOB code to send."
        }
      },
      "type": "object",
      "description": "Response message for GetOobCode.",
      "id": "GoogleCloudIdentitytoolkitV1GetOobCodeResponse"
    },
    "GoogleCloudIdentitytoolkitV1MfaInfo": {
      "description": "Multi-factor authentication related information.",
      "id": "GoogleCloudIdentitytoolkitV1MfaInfo",
      "type": "object",
      "properties": {
        "enrollments": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudIdentitytoolkitV1MfaEnrollment"
          },
          "description": "The second factors the user has enrolled."
        }
      }
    }
  },
  "revision": "20230224",
  "version_module": true,
  "ownerDomain": "google.com",
  "description": "The Google Identity Toolkit API lets you use open standards to verify a user's identity.",
  "resources": {
    "accounts": {
      "methods": {
        "update": {
          "parameterOrder": [],
          "id": "identitytoolkit.accounts.update",
          "path": "v1/accounts:update",
          "flatPath": "v1/accounts:update",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "request": {
            "$ref": "GoogleCloudIdentitytoolkitV1SetAccountInfoRequest"
          },
          "parameters": {},
          "httpMethod": "POST",
          "description": "Updates account-related information for the specified user by setting specific fields or applying action codes. Requests from administrators and end users are supported.",
          "response": {
            "$ref": "GoogleCloudIdentitytoolkitV1SetAccountInfoResponse"
          }
        },
        "sendOobCode": {
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "id": "identitytoolkit.accounts.sendOobCode",
          "parameterOrder": [],
          "flatPath": "v1/accounts:sendOobCode",
          "response": {
            "$ref": "GoogleCloudIdentitytoolkitV1GetOobCodeResponse"
          },
          "parameters": {},
          "httpMethod": "POST",
          "description": "Sends an out-of-band confirmation code for an account. Requests from a authenticated request can optionally return a link including the OOB code instead of sending it.",
          "request": {
            "$ref": "GoogleCloudIdentitytoolkitV1GetOobCodeRequest"
          },
          "path": "v1/accounts:sendOobCode"
        },
        "createAuthUri": {
          "path": "v1/accounts:createAuthUri",
          "description": "If an email identifier is specified, checks and returns if any user account is registered with the email. If there is a registered account, fetches all providers associated with the account's email. If the provider ID of an Identity Provider (IdP) is specified, creates an authorization URI for the IdP. The user can be directed to this URI to sign in with the IdP. An [API key](https://cloud.google.com/docs/authentication/api-keys) is required in the request in order to identify the Google Cloud project.",
          "id": "identitytoolkit.accounts.createAuthUri",
          "httpMethod": "POST",
          "parameters": {},
          "flatPath": "v1/accounts:createAuthUri",
          "request": {
            "$ref": "GoogleCloudIdentitytoolkitV1CreateAuthUriRequest"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "parameterOrder": [],
          "response": {
            "$ref": "GoogleCloudIdentitytoolkitV1CreateAuthUriResponse"
          }
        },
        "sendVerificationCode": {
          "response": {
            "$ref": "GoogleCloudIdentitytoolkitV1SendVerificationCodeResponse"
          },
          "parameters": {},
          "parameterOrder": [],
          "path": "v1/accounts:sendVerificationCode",
          "flatPath": "v1/accounts:sendVerificationCode",
          "description": "Sends a SMS verification code for phone number sign-in. An [API key](https://cloud.google.com/docs/authentication/api-keys) is required in the request in order to identify the Google Cloud project.",
          "id": "identitytoolkit.accounts.sendVerificationCode",
          "httpMethod": "POST",
          "request": {
            "$ref": "GoogleCloudIdentitytoolkitV1SendVerificationCodeRequest"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ]
        },
        "lookup": {
          "path": "v1/accounts:lookup",
          "parameters": {},
          "request": {
            "$ref": "GoogleCloudIdentitytoolkitV1GetAccountInfoRequest"
          },
          "response": {
            "$ref": "GoogleCloudIdentitytoolkitV1GetAccountInfoResponse"
          },
          "description": "Gets account information for all matched accounts. For an end user request, retrieves the account of the end user. For an admin request with Google OAuth 2.0 credential, retrieves one or multiple account(s) with matching criteria.",
          "flatPath": "v1/accounts:lookup",
          "parameterOrder": [],
          "httpMethod": "POST",
          "id": "identitytoolkit.accounts.lookup",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ]
        },
        "issueSamlResponse": {
          "request": {
            "$ref": "GoogleCloudIdentitytoolkitV1IssueSamlResponseRequest"
          },
          "id": "identitytoolkit.accounts.issueSamlResponse",
          "path": "v1/accounts:issueSamlResponse",
          "flatPath": "v1/accounts:issueSamlResponse",
          "description": "Experimental",
          "parameterOrder": [],
          "parameters": {},
          "response": {
            "$ref": "GoogleCloudIdentitytoolkitV1IssueSamlResponseResponse"
          },
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ]
        },
        "signInWithEmailLink": {
          "flatPath": "v1/accounts:signInWithEmailLink",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "request": {
            "$ref": "GoogleCloudIdentitytoolkitV1SignInWithEmailLinkRequest"
          },
          "description": "Signs in or signs up a user with a out-of-band code from an email link. If a user does not exist with the given email address, a user record will be created. If the sign-in succeeds, an Identity Platform ID and refresh token are issued for the authenticated user. An [API key](https://cloud.google.com/docs/authentication/api-keys) is required in the request in order to identify the Google Cloud project.",
          "parameterOrder": [],
          "id": "identitytoolkit.accounts.signInWithEmailLink",
          "path": "v1/accounts:signInWithEmailLink",
          "response": {
            "$ref": "GoogleCloudIdentitytoolkitV1SignInWithEmailLinkResponse"
          },
          "parameters": {},
          "httpMethod": "POST"
        },
        "delete": {
          "path": "v1/accounts:delete",
          "parameterOrder": [],
          "description": "Deletes a user's account.",
          "parameters": {},
          "request": {
            "$ref": "GoogleCloudIdentitytoolkitV1DeleteAccountRequest"
          },
          "response": {
            "$ref": "GoogleCloudIdentitytoolkitV1DeleteAccountResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "httpMethod": "POST",
          "id": "identitytoolkit.accounts.delete",
          "flatPath": "v1/accounts:delete"
        },
        "resetPassword": {
          "parameterOrder": [],
          "path": "v1/accounts:resetPassword",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "request": {
            "$ref": "GoogleCloudIdentitytoolkitV1ResetPasswordRequest"
          },
          "flatPath": "v1/accounts:resetPassword",
          "httpMethod": "POST",
          "parameters": {},
          "description": "Resets the password of an account either using an out-of-band code generated by sendOobCode or by specifying the email and password of the account to be modified. Can also check the purpose of an out-of-band code without consuming it.",
          "id": "identitytoolkit.accounts.resetPassword",
          "response": {
            "$ref": "GoogleCloudIdentitytoolkitV1ResetPasswordResponse"
          }
        },
        "signInWithPhoneNumber": {
          "request": {
            "$ref": "GoogleCloudIdentitytoolkitV1SignInWithPhoneNumberRequest"
          },
          "id": "identitytoolkit.accounts.signInWithPhoneNumber",
          "parameters": {},
          "description": "Completes a phone number authentication attempt. If a user already exists with the given phone number, an ID token is minted for that user. Otherwise, a new user is created and associated with the phone number. This method may also be used to link a phone number to an existing user. An [API key](https://cloud.google.com/docs/authentication/api-keys) is required in the request in order to identify the Google Cloud project.",
          "path": "v1/accounts:signInWithPhoneNumber",
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "response": {
            "$ref": "GoogleCloudIdentitytoolkitV1SignInWithPhoneNumberResponse"
          },
          "parameterOrder": [],
          "flatPath": "v1/accounts:signInWithPhoneNumber"
        },
        "verifyIosClient": {
          "response": {
            "$ref": "GoogleCloudIdentitytoolkitV1VerifyIosClientResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "request": {
            "$ref": "GoogleCloudIdentitytoolkitV1VerifyIosClientRequest"
          },
          "path": "v1/accounts:verifyIosClient",
          "flatPath": "v1/accounts:verifyIosClient",
          "parameters": {},
          "description": "Verifies an iOS client is a real iOS device. If the request is valid, a receipt will be sent in the response and a secret will be sent via Apple Push Notification Service. The client should send both of them back to certain Identity Platform APIs in a later call (for example, /accounts:sendVerificationCode), in order to verify the client. The bundle ID is required in the request header as `x-ios-bundle-identifier`. An [API key](https://cloud.google.com/docs/authentication/api-keys) is required in the request in order to identify the Google Cloud project.",
          "id": "identitytoolkit.accounts.verifyIosClient",
          "parameterOrder": [],
          "httpMethod": "POST"
        },
        "signUp": {
          "httpMethod": "POST",
          "path": "v1/accounts:signUp",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "description": "Signs up a new email and password user or anonymous user, or upgrades an anonymous user to email and password. For an admin request with a Google OAuth 2.0 credential with the proper [permissions](https://cloud.google.com/identity-platform/docs/access-control), creates a new anonymous, email and password, or phone number user. An [API key](https://cloud.google.com/docs/authentication/api-keys) is required in the request in order to identify the Google Cloud project.",
          "response": {
            "$ref": "GoogleCloudIdentitytoolkitV1SignUpResponse"
          },
          "request": {
            "$ref": "GoogleCloudIdentitytoolkitV1SignUpRequest"
          },
          "parameterOrder": [],
          "parameters": {},
          "flatPath": "v1/accounts:signUp",
          "id": "identitytoolkit.accounts.signUp"
        },
        "signInWithPassword": {
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "response": {
            "$ref": "GoogleCloudIdentitytoolkitV1SignInWithPasswordResponse"
          },
          "httpMethod": "POST",
          "id": "identitytoolkit.accounts.signInWithPassword",
          "flatPath": "v1/accounts:signInWithPassword",
          "parameters": {},
          "request": {
            "$ref": "GoogleCloudIdentitytoolkitV1SignInWithPasswordRequest"
          },
          "description": "Signs in a user with email and password. If the sign-in succeeds, a new Identity Platform ID token and refresh token are issued for the authenticated user. An [API key](https://cloud.google.com/docs/authentication/api-keys) is required in the request in order to identify the Google Cloud project.",
          "path": "v1/accounts:signInWithPassword",
          "parameterOrder": []
        },
        "signInWithIdp": {
          "flatPath": "v1/accounts:signInWithIdp",
          "parameters": {},
          "path": "v1/accounts:signInWithIdp",
          "parameterOrder": [],
          "description": "Signs in or signs up a user using credentials from an Identity Provider (IdP). This is done by manually providing an IdP credential, or by providing the authorization response obtained via the authorization request from CreateAuthUri. If the sign-in succeeds, a new Identity Platform ID token and refresh token are issued for the authenticated user. A new Identity Platform user account will be created if the user has not previously signed in to the IdP with the same account. In addition, when the \"One account per email address\" setting is enabled, there should not be an existing Identity Platform user account with the same email address for a new user account to be created. An [API key](https://cloud.google.com/docs/authentication/api-keys) is required in the request in order to identify the Google Cloud project.",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "response": {
            "$ref": "GoogleCloudIdentitytoolkitV1SignInWithIdpResponse"
          },
          "id": "identitytoolkit.accounts.signInWithIdp",
          "httpMethod": "POST",
          "request": {
            "$ref": "GoogleCloudIdentitytoolkitV1SignInWithIdpRequest"
          }
        },
        "signInWithGameCenter": {
          "response": {
            "$ref": "GoogleCloudIdentitytoolkitV1SignInWithGameCenterResponse"
          },
          "request": {
            "$ref": "GoogleCloudIdentitytoolkitV1SignInWithGameCenterRequest"
          },
          "flatPath": "v1/accounts:signInWithGameCenter",
          "path": "v1/accounts:signInWithGameCenter",
          "parameters": {},
          "parameterOrder": [],
          "id": "identitytoolkit.accounts.signInWithGameCenter",
          "httpMethod": "POST",
          "description": "Signs in or signs up a user with iOS Game Center credentials. If the sign-in succeeds, a new Identity Platform ID token and refresh token are issued for the authenticated user. The bundle ID is required in the request header as `x-ios-bundle-identifier`. An [API key](https://cloud.google.com/docs/authentication/api-keys) is required in the request in order to identify the Google Cloud project. Apple has [deprecated the `playerID` field](https://developer.apple.com/documentation/gamekit/gkplayer/1521127-playerid/). The Apple platform Firebase SDK will use `gamePlayerID` and `teamPlayerID` from version 10.5.0 and onwards. Upgrading to SDK version 10.5.0 or later updates existing integrations that use `playerID` to instead use `gamePlayerID` and `teamPlayerID`. When making calls to `signInWithGameCenter`, you must include `playerID` along with the new fields `gamePlayerID` and `teamPlayerID` to successfully identify all existing users. Upgrading existing Game Center sign in integrations to SDK version 10.5.0 or later is irreversible.",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ]
        },
        "signInWithCustomToken": {
          "parameterOrder": [],
          "path": "v1/accounts:signInWithCustomToken",
          "parameters": {},
          "httpMethod": "POST",
          "id": "identitytoolkit.accounts.signInWithCustomToken",
          "response": {
            "$ref": "GoogleCloudIdentitytoolkitV1SignInWithCustomTokenResponse"
          },
          "request": {
            "$ref": "GoogleCloudIdentitytoolkitV1SignInWithCustomTokenRequest"
          },
          "description": "Signs in or signs up a user by exchanging a custom Auth token. Upon a successful sign-in or sign-up, a new Identity Platform ID token and refresh token are issued for the user. An [API key](https://cloud.google.com/docs/authentication/api-keys) is required in the request in order to identify the Google Cloud project.",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "flatPath": "v1/accounts:signInWithCustomToken"
        }
      }
    },
    "v1": {
      "methods": {
        "getPublicKeys": {
          "id": "identitytoolkit.getPublicKeys",
          "parameters": {},
          "description": "Retrieves public keys of the legacy Identity Toolkit token signer to enable third parties to verify the legacy ID token. For now the X509 pem cert is the only format supported.",
          "response": {
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object."
            }
          },
          "path": "v1/publicKeys",
          "parameterOrder": [],
          "flatPath": "v1/publicKeys",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "httpMethod": "GET"
        },
        "getProjects": {
          "parameterOrder": [],
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "description": "Gets a project's public Identity Toolkit configuration. (Legacy) This method also supports authenticated calls from a developer to retrieve non-public configuration.",
          "id": "identitytoolkit.getProjects",
          "response": {
            "$ref": "GoogleCloudIdentitytoolkitV1GetProjectConfigResponse"
          },
          "flatPath": "v1/projects",
          "parameters": {
            "clientId": {
              "type": "string",
              "location": "query",
              "description": "The RP OAuth client ID. If set, a check will be performed to ensure that the OAuth client is valid for the retrieved project and the request rejected with a client error if not valid."
            },
            "firebaseAppId": {
              "description": "The Firebase app ID, for applications that use Firebase. This can be found in the Firebase console for your project. If set, a check will be performed to ensure that the app ID is valid for the retrieved project. If not valid, the request will be rejected with a client error.",
              "type": "string",
              "location": "query"
            },
            "returnDynamicLink": {
              "location": "query",
              "description": "Whether dynamic link should be returned.",
              "type": "boolean"
            },
            "sha1Cert": {
              "location": "query",
              "type": "string",
              "description": "SHA-1 Android application cert hash. If set, a check will be performed to ensure that the cert hash is valid for the retrieved project and android_package_name."
            },
            "iosBundleId": {
              "description": "iOS bundle id to check against the real ios bundle id. If this field is provided, the action will throw an error if this does not match the real iOS bundle id.",
              "location": "query",
              "type": "string"
            },
            "projectNumber": {
              "format": "int64",
              "type": "string",
              "description": "Project number of the configuration to retrieve. This field is deprecated and should not be used by new integrations.",
              "location": "query"
            },
            "androidPackageName": {
              "location": "query",
              "description": "Android package name to check against the real android package name. If this field is provided, and sha1_cert_hash is not provided, the action will throw an error if this does not match the real android package name.",
              "type": "string"
            },
            "delegatedProjectNumber": {
              "type": "string",
              "format": "int64",
              "location": "query",
              "description": "Project Number of the delegated project request. This field should only be used as part of the Firebase V1 migration."
            }
          },
          "httpMethod": "GET",
          "path": "v1/projects"
        },
        "getSessionCookiePublicKeys": {
          "id": "identitytoolkit.getSessionCookiePublicKeys",
          "parameters": {},
          "response": {
            "$ref": "GoogleCloudIdentitytoolkitV1GetSessionCookiePublicKeysResponse"
          },
          "parameterOrder": [],
          "flatPath": "v1/sessionCookiePublicKeys",
          "httpMethod": "GET",
          "path": "v1/sessionCookiePublicKeys",
          "description": "Retrieves the set of public keys of the session cookie JSON Web Token (JWT) signer that can be used to validate the session cookie created through createSessionCookie."
        },
        "getRecaptchaParams": {
          "httpMethod": "GET",
          "parameters": {},
          "response": {
            "$ref": "GoogleCloudIdentitytoolkitV1GetRecaptchaParamResponse"
          },
          "flatPath": "v1/recaptchaParams",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "parameterOrder": [],
          "id": "identitytoolkit.getRecaptchaParams",
          "path": "v1/recaptchaParams",
          "description": "Gets parameters needed for generating a reCAPTCHA challenge."
        }
      }
    },
    "projects": {
      "resources": {
        "tenants": {
          "methods": {
            "createSessionCookie": {
              "request": {
                "$ref": "GoogleCloudIdentitytoolkitV1CreateSessionCookieRequest"
              },
              "parameters": {
                "targetProjectId": {
                  "description": "The ID of the project that the account belongs to.",
                  "location": "path",
                  "pattern": "^[^/]+$",
                  "type": "string",
                  "required": true
                },
                "tenantId": {
                  "type": "string",
                  "required": true,
                  "pattern": "^[^/]+$",
                  "location": "path",
                  "description": "The tenant ID of the Identity Platform tenant the account belongs to."
                }
              },
              "description": "Creates a session cookie for the given Identity Platform ID token. The session cookie is used by the client to preserve the user's login state.",
              "response": {
                "$ref": "GoogleCloudIdentitytoolkitV1CreateSessionCookieResponse"
              },
              "path": "v1/projects/{+targetProjectId}/tenants/{+tenantId}:createSessionCookie",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "targetProjectId",
                "tenantId"
              ],
              "id": "identitytoolkit.projects.tenants.createSessionCookie",
              "httpMethod": "POST",
              "flatPath": "v1/projects/{projectsId}/tenants/{tenantsId}:createSessionCookie"
            },
            "accounts": {
              "response": {
                "$ref": "GoogleCloudIdentitytoolkitV1SignUpResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "targetProjectId",
                "tenantId"
              ],
              "parameters": {
                "targetProjectId": {
                  "pattern": "^[^/]+$",
                  "required": true,
                  "location": "path",
                  "description": "The project ID of the project which the user should belong to. Specifying this field requires a Google OAuth 2.0 credential with the proper [permissions](https://cloud.google.com/identity-platform/docs/access-control). If this is not set, the target project is inferred from the scope associated to the Bearer access token.",
                  "type": "string"
                },
                "tenantId": {
                  "location": "path",
                  "pattern": "^[^/]+$",
                  "description": "The ID of the Identity Platform tenant to create a user under. If not set, the user will be created under the default Identity Platform project.",
                  "required": true,
                  "type": "string"
                }
              },
              "description": "Signs up a new email and password user or anonymous user, or upgrades an anonymous user to email and password. For an admin request with a Google OAuth 2.0 credential with the proper [permissions](https://cloud.google.com/identity-platform/docs/access-control), creates a new anonymous, email and password, or phone number user. An [API key](https://cloud.google.com/docs/authentication/api-keys) is required in the request in order to identify the Google Cloud project.",
              "flatPath": "v1/projects/{projectsId}/tenants/{tenantsId}/accounts",
              "id": "identitytoolkit.projects.tenants.accounts",
              "httpMethod": "POST",
              "path": "v1/projects/{+targetProjectId}/tenants/{+tenantId}/accounts",
              "request": {
                "$ref": "GoogleCloudIdentitytoolkitV1SignUpRequest"
              }
            }
          },
          "resources": {
            "accounts": {
              "methods": {
                "sendOobCode": {
                  "request": {
                    "$ref": "GoogleCloudIdentitytoolkitV1GetOobCodeRequest"
                  },
                  "httpMethod": "POST",
                  "description": "Sends an out-of-band confirmation code for an account. Requests from a authenticated request can optionally return a link including the OOB code instead of sending it.",
                  "parameters": {
                    "tenantId": {
                      "description": "The tenant ID of the Identity Platform tenant the account belongs to.",
                      "type": "string",
                      "pattern": "^[^/]+$",
                      "required": true,
                      "location": "path"
                    },
                    "targetProjectId": {
                      "required": true,
                      "type": "string",
                      "pattern": "^[^/]+$",
                      "location": "path",
                      "description": "The Project ID of the Identity Platform project which the account belongs to. To specify this field, it requires a Google OAuth 2.0 credential with proper [permissions](https://cloud.google.com/identity-platform/docs/access-control)."
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "GoogleCloudIdentitytoolkitV1GetOobCodeResponse"
                  },
                  "parameterOrder": [
                    "targetProjectId",
                    "tenantId"
                  ],
                  "id": "identitytoolkit.projects.tenants.accounts.sendOobCode",
                  "path": "v1/projects/{+targetProjectId}/tenants/{+tenantId}/accounts:sendOobCode",
                  "flatPath": "v1/projects/{projectsId}/tenants/{tenantsId}/accounts:sendOobCode"
                },
                "batchCreate": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/firebase"
                  ],
                  "parameters": {
                    "targetProjectId": {
                      "location": "path",
                      "pattern": "^[^/]+$",
                      "description": "The Project ID of the Identity Platform project which the account belongs to.",
                      "required": true,
                      "type": "string"
                    },
                    "tenantId": {
                      "location": "path",
                      "pattern": "^[^/]+$",
                      "required": true,
                      "description": "The ID of the Identity Platform tenant the account belongs to.",
                      "type": "string"
                    }
                  },
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "GoogleCloudIdentitytoolkitV1UploadAccountResponse"
                  },
                  "parameterOrder": [
                    "targetProjectId",
                    "tenantId"
                  ],
                  "path": "v1/projects/{+targetProjectId}/tenants/{+tenantId}/accounts:batchCreate",
                  "request": {
                    "$ref": "GoogleCloudIdentitytoolkitV1UploadAccountRequest"
                  },
                  "flatPath": "v1/projects/{projectsId}/tenants/{tenantsId}/accounts:batchCreate",
                  "description": "Uploads multiple accounts into the Google Cloud project. If there is a problem uploading one or more of the accounts, the rest will be uploaded, and a list of the errors will be returned. To use this method requires a Google OAuth 2.0 credential with proper [permissions](https://cloud.google.com/identity-platform/docs/access-control).",
                  "id": "identitytoolkit.projects.tenants.accounts.batchCreate"
                },
                "batchGet": {
                  "path": "v1/projects/{+targetProjectId}/tenants/{+tenantId}/accounts:batchGet",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/firebase"
                  ],
                  "description": "Download account information for all accounts on the project in a paginated manner. To use this method requires a Google OAuth 2.0 credential with proper [permissions](https://cloud.google.com/identity-platform/docs/access-control).. Furthermore, additional permissions are needed to get password hash, password salt, and password version from accounts; otherwise these fields are redacted.",
                  "response": {
                    "$ref": "GoogleCloudIdentitytoolkitV1DownloadAccountResponse"
                  },
                  "httpMethod": "GET",
                  "id": "identitytoolkit.projects.tenants.accounts.batchGet",
                  "flatPath": "v1/projects/{projectsId}/tenants/{tenantsId}/accounts:batchGet",
                  "parameterOrder": [
                    "targetProjectId",
                    "tenantId"
                  ],
                  "parameters": {
                    "tenantId": {
                      "location": "path",
                      "description": "The ID of the Identity Platform tenant the accounts belongs to. If not specified, accounts on the Identity Platform project are returned.",
                      "type": "string",
                      "required": true,
                      "pattern": "^[^/]+$"
                    },
                    "nextPageToken": {
                      "description": "The pagination token from the response of a previous request.",
                      "location": "query",
                      "type": "string"
                    },
                    "targetProjectId": {
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "pattern": "^[^/]+$",
                      "description": "If `tenant_id` is specified, the ID of the Google Cloud project that the Identity Platform tenant belongs to. Otherwise, the ID of the Google Cloud project that the accounts belong to."
                    },
                    "maxResults": {
                      "location": "query",
                      "format": "int32",
                      "description": "The maximum number of results to return. Must be at least 1 and no greater than 1000. By default, it is 20.",
                      "type": "integer"
                    },
                    "delegatedProjectNumber": {
                      "location": "query",
                      "type": "string",
                      "format": "int64"
                    }
                  }
                },
                "lookup": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets account information for all matched accounts. For an end user request, retrieves the account of the end user. For an admin request with Google OAuth 2.0 credential, retrieves one or multiple account(s) with matching criteria.",
                  "response": {
                    "$ref": "GoogleCloudIdentitytoolkitV1GetAccountInfoResponse"
                  },
                  "flatPath": "v1/projects/{projectsId}/tenants/{tenantsId}/accounts:lookup",
                  "request": {
                    "$ref": "GoogleCloudIdentitytoolkitV1GetAccountInfoRequest"
                  },
                  "path": "v1/projects/{+targetProjectId}/tenants/{+tenantId}/accounts:lookup",
                  "parameters": {
                    "targetProjectId": {
                      "type": "string",
                      "pattern": "^[^/]+$",
                      "required": true,
                      "location": "path",
                      "description": "The ID of the Google Cloud project that the account or the Identity Platform tenant specified by `tenant_id` belongs to. Should only be specified by authenticated requests bearing a Google OAuth 2.0 credential with proper [permissions](https://cloud.google.com/identity-platform/docs/access-control)."
                    },
                    "tenantId": {
                      "pattern": "^[^/]+$",
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "description": "The ID of the tenant that the account belongs to. Should only be specified by authenticated requests from a developer."
                    }
                  },
                  "parameterOrder": [
                    "targetProjectId",
                    "tenantId"
                  ],
                  "id": "identitytoolkit.projects.tenants.accounts.lookup",
                  "httpMethod": "POST"
                },
                "batchDelete": {
                  "flatPath": "v1/projects/{projectsId}/tenants/{tenantsId}/accounts:batchDelete",
                  "parameters": {
                    "targetProjectId": {
                      "description": "If `tenant_id` is specified, the ID of the Google Cloud project that the Identity Platform tenant belongs to. Otherwise, the ID of the Google Cloud project that accounts belong to.",
                      "location": "path",
                      "pattern": "^[^/]+$",
                      "type": "string",
                      "required": true
                    },
                    "tenantId": {
                      "required": true,
                      "type": "string",
                      "description": "If the accounts belong to an Identity Platform tenant, the ID of the tenant. If the accounts belong to an default Identity Platform project, the field is not needed.",
                      "location": "path",
                      "pattern": "^[^/]+$"
                    }
                  },
                  "description": "Batch deletes multiple accounts. For accounts that fail to be deleted, error info is contained in the response. The method ignores accounts that do not exist or are duplicated in the request. This method requires a Google OAuth 2.0 credential with proper [permissions] (https://cloud.google.com/identity-platform/docs/access-control).",
                  "parameterOrder": [
                    "targetProjectId",
                    "tenantId"
                  ],
                  "response": {
                    "$ref": "GoogleCloudIdentitytoolkitV1BatchDeleteAccountsResponse"
                  },
                  "request": {
                    "$ref": "GoogleCloudIdentitytoolkitV1BatchDeleteAccountsRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/firebase"
                  ],
                  "httpMethod": "POST",
                  "path": "v1/projects/{+targetProjectId}/tenants/{+tenantId}/accounts:batchDelete",
                  "id": "identitytoolkit.projects.tenants.accounts.batchDelete"
                },
                "update": {
                  "parameterOrder": [
                    "targetProjectId",
                    "tenantId"
                  ],
                  "id": "identitytoolkit.projects.tenants.accounts.update",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "description": "Updates account-related information for the specified user by setting specific fields or applying action codes. Requests from administrators and end users are supported.",
                  "request": {
                    "$ref": "GoogleCloudIdentitytoolkitV1SetAccountInfoRequest"
                  },
                  "path": "v1/projects/{+targetProjectId}/tenants/{+tenantId}/accounts:update",
                  "flatPath": "v1/projects/{projectsId}/tenants/{tenantsId}/accounts:update",
                  "response": {
                    "$ref": "GoogleCloudIdentitytoolkitV1SetAccountInfoResponse"
                  },
                  "parameters": {
                    "tenantId": {
                      "type": "string",
                      "pattern": "^[^/]+$",
                      "location": "path",
                      "description": "The tenant ID of the Identity Platform tenant that the account belongs to. Requests from end users should pass an Identity Platform ID token rather than setting this field.",
                      "required": true
                    },
                    "targetProjectId": {
                      "description": "The project ID for the project that the account belongs to. Specifying this field requires Google OAuth 2.0 credential with proper [permissions] (https://cloud.google.com/identity-platform/docs/access-control). Requests from end users should pass an Identity Platform ID token instead.",
                      "pattern": "^[^/]+$",
                      "type": "string",
                      "required": true,
                      "location": "path"
                    }
                  }
                },
                "query": {
                  "parameterOrder": [
                    "targetProjectId",
                    "tenantId"
                  ],
                  "description": "Looks up user accounts within a project or a tenant based on conditions in the request.",
                  "parameters": {
                    "targetProjectId": {
                      "pattern": "^[^/]+$",
                      "type": "string",
                      "required": true,
                      "description": "The ID of the project to which the result is scoped.",
                      "location": "path"
                    },
                    "tenantId": {
                      "type": "string",
                      "location": "path",
                      "description": "The ID of the tenant to which the result is scoped.",
                      "pattern": "^[^/]+$",
                      "required": true
                    }
                  },
                  "request": {
                    "$ref": "GoogleCloudIdentitytoolkitV1QueryUserInfoRequest"
                  },
                  "response": {
                    "$ref": "GoogleCloudIdentitytoolkitV1QueryUserInfoResponse"
                  },
                  "id": "identitytoolkit.projects.tenants.accounts.query",
                  "path": "v1/projects/{+targetProjectId}/tenants/{+tenantId}/accounts:query",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/firebase"
                  ],
                  "httpMethod": "POST",
                  "flatPath": "v1/projects/{projectsId}/tenants/{tenantsId}/accounts:query"
                },
                "delete": {
                  "parameterOrder": [
                    "targetProjectId",
                    "tenantId"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "path": "v1/projects/{+targetProjectId}/tenants/{+tenantId}/accounts:delete",
                  "description": "Deletes a user's account.",
                  "response": {
                    "$ref": "GoogleCloudIdentitytoolkitV1DeleteAccountResponse"
                  },
                  "flatPath": "v1/projects/{projectsId}/tenants/{tenantsId}/accounts:delete",
                  "request": {
                    "$ref": "GoogleCloudIdentitytoolkitV1DeleteAccountRequest"
                  },
                  "parameters": {
                    "targetProjectId": {
                      "pattern": "^[^/]+$",
                      "description": "The ID of the project which the account belongs to. Should only be specified in authenticated requests that specify local_id of an account.",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    },
                    "tenantId": {
                      "required": true,
                      "type": "string",
                      "description": "The ID of the tenant that the account belongs to, if applicable. Only require to be specified for authenticated requests bearing a Google OAuth 2.0 credential that specify local_id of an account that belongs to an Identity Platform tenant.",
                      "location": "path",
                      "pattern": "^[^/]+$"
                    }
                  },
                  "id": "identitytoolkit.projects.tenants.accounts.delete"
                }
              }
            }
          }
        },
        "accounts": {
          "methods": {
            "delete": {
              "parameters": {
                "targetProjectId": {
                  "type": "string",
                  "location": "path",
                  "description": "The ID of the project which the account belongs to. Should only be specified in authenticated requests that specify local_id of an account.",
                  "required": true,
                  "pattern": "^[^/]+$"
                }
              },
              "flatPath": "v1/projects/{projectsId}/accounts:delete",
              "request": {
                "$ref": "GoogleCloudIdentitytoolkitV1DeleteAccountRequest"
              },
              "description": "Deletes a user's account.",
              "path": "v1/projects/{+targetProjectId}/accounts:delete",
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "targetProjectId"
              ],
              "response": {
                "$ref": "GoogleCloudIdentitytoolkitV1DeleteAccountResponse"
              },
              "id": "identitytoolkit.projects.accounts.delete"
            },
            "batchCreate": {
              "parameterOrder": [
                "targetProjectId"
              ],
              "httpMethod": "POST",
              "flatPath": "v1/projects/{projectsId}/accounts:batchCreate",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/firebase"
              ],
              "id": "identitytoolkit.projects.accounts.batchCreate",
              "description": "Uploads multiple accounts into the Google Cloud project. If there is a problem uploading one or more of the accounts, the rest will be uploaded, and a list of the errors will be returned. To use this method requires a Google OAuth 2.0 credential with proper [permissions](https://cloud.google.com/identity-platform/docs/access-control).",
              "request": {
                "$ref": "GoogleCloudIdentitytoolkitV1UploadAccountRequest"
              },
              "parameters": {
                "targetProjectId": {
                  "description": "The Project ID of the Identity Platform project which the account belongs to.",
                  "type": "string",
                  "required": true,
                  "location": "path",
                  "pattern": "^[^/]+$"
                }
              },
              "path": "v1/projects/{+targetProjectId}/accounts:batchCreate",
              "response": {
                "$ref": "GoogleCloudIdentitytoolkitV1UploadAccountResponse"
              }
            },
            "batchDelete": {
              "httpMethod": "POST",
              "description": "Batch deletes multiple accounts. For accounts that fail to be deleted, error info is contained in the response. The method ignores accounts that do not exist or are duplicated in the request. This method requires a Google OAuth 2.0 credential with proper [permissions] (https://cloud.google.com/identity-platform/docs/access-control).",
              "id": "identitytoolkit.projects.accounts.batchDelete",
              "response": {
                "$ref": "GoogleCloudIdentitytoolkitV1BatchDeleteAccountsResponse"
              },
              "parameterOrder": [
                "targetProjectId"
              ],
              "path": "v1/projects/{+targetProjectId}/accounts:batchDelete",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/firebase"
              ],
              "request": {
                "$ref": "GoogleCloudIdentitytoolkitV1BatchDeleteAccountsRequest"
              },
              "flatPath": "v1/projects/{projectsId}/accounts:batchDelete",
              "parameters": {
                "targetProjectId": {
                  "type": "string",
                  "location": "path",
                  "required": true,
                  "description": "If `tenant_id` is specified, the ID of the Google Cloud project that the Identity Platform tenant belongs to. Otherwise, the ID of the Google Cloud project that accounts belong to.",
                  "pattern": "^[^/]+$"
                }
              }
            },
            "lookup": {
              "path": "v1/projects/{+targetProjectId}/accounts:lookup",
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "id": "identitytoolkit.projects.accounts.lookup",
              "request": {
                "$ref": "GoogleCloudIdentitytoolkitV1GetAccountInfoRequest"
              },
              "response": {
                "$ref": "GoogleCloudIdentitytoolkitV1GetAccountInfoResponse"
              },
              "description": "Gets account information for all matched accounts. For an end user request, retrieves the account of the end user. For an admin request with Google OAuth 2.0 credential, retrieves one or multiple account(s) with matching criteria.",
              "parameterOrder": [
                "targetProjectId"
              ],
              "parameters": {
                "targetProjectId": {
                  "required": true,
                  "type": "string",
                  "pattern": "^[^/]+$",
                  "description": "The ID of the Google Cloud project that the account or the Identity Platform tenant specified by `tenant_id` belongs to. Should only be specified by authenticated requests bearing a Google OAuth 2.0 credential with proper [permissions](https://cloud.google.com/identity-platform/docs/access-control).",
                  "location": "path"
                }
              },
              "flatPath": "v1/projects/{projectsId}/accounts:lookup"
            },
            "batchGet": {
              "response": {
                "$ref": "GoogleCloudIdentitytoolkitV1DownloadAccountResponse"
              },
              "parameters": {
                "delegatedProjectNumber": {
                  "location": "query",
                  "type": "string",
                  "format": "int64"
                },
                "nextPageToken": {
                  "description": "The pagination token from the response of a previous request.",
                  "type": "string",
                  "location": "query"
                },
                "maxResults": {
                  "format": "int32",
                  "description": "The maximum number of results to return. Must be at least 1 and no greater than 1000. By default, it is 20.",
                  "type": "integer",
                  "location": "query"
                },
                "tenantId": {
                  "description": "The ID of the Identity Platform tenant the accounts belongs to. If not specified, accounts on the Identity Platform project are returned.",
                  "location": "query",
                  "type": "string"
                },
                "targetProjectId": {
                  "location": "path",
                  "type": "string",
                  "description": "If `tenant_id` is specified, the ID of the Google Cloud project that the Identity Platform tenant belongs to. Otherwise, the ID of the Google Cloud project that the accounts belong to.",
                  "pattern": "^[^/]+$",
                  "required": true
                }
              },
              "parameterOrder": [
                "targetProjectId"
              ],
              "flatPath": "v1/projects/{projectsId}/accounts:batchGet",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/firebase"
              ],
              "description": "Download account information for all accounts on the project in a paginated manner. To use this method requires a Google OAuth 2.0 credential with proper [permissions](https://cloud.google.com/identity-platform/docs/access-control).. Furthermore, additional permissions are needed to get password hash, password salt, and password version from accounts; otherwise these fields are redacted.",
              "httpMethod": "GET",
              "id": "identitytoolkit.projects.accounts.batchGet",
              "path": "v1/projects/{+targetProjectId}/accounts:batchGet"
            },
            "sendOobCode": {
              "request": {
                "$ref": "GoogleCloudIdentitytoolkitV1GetOobCodeRequest"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "id": "identitytoolkit.projects.accounts.sendOobCode",
              "path": "v1/projects/{+targetProjectId}/accounts:sendOobCode",
              "flatPath": "v1/projects/{projectsId}/accounts:sendOobCode",
              "parameters": {
                "targetProjectId": {
                  "pattern": "^[^/]+$",
                  "type": "string",
                  "required": true,
                  "description": "The Project ID of the Identity Platform project which the account belongs to. To specify this field, it requires a Google OAuth 2.0 credential with proper [permissions](https://cloud.google.com/identity-platform/docs/access-control).",
                  "location": "path"
                }
              },
              "description": "Sends an out-of-band confirmation code for an account. Requests from a authenticated request can optionally return a link including the OOB code instead of sending it.",
              "response": {
                "$ref": "GoogleCloudIdentitytoolkitV1GetOobCodeResponse"
              },
              "parameterOrder": [
                "targetProjectId"
              ],
              "httpMethod": "POST"
            },
            "update": {
              "description": "Updates account-related information for the specified user by setting specific fields or applying action codes. Requests from administrators and end users are supported.",
              "flatPath": "v1/projects/{projectsId}/accounts:update",
              "path": "v1/projects/{+targetProjectId}/accounts:update",
              "response": {
                "$ref": "GoogleCloudIdentitytoolkitV1SetAccountInfoResponse"
              },
              "parameterOrder": [
                "targetProjectId"
              ],
              "request": {
                "$ref": "GoogleCloudIdentitytoolkitV1SetAccountInfoRequest"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "httpMethod": "POST",
              "id": "identitytoolkit.projects.accounts.update",
              "parameters": {
                "targetProjectId": {
                  "type": "string",
                  "description": "The project ID for the project that the account belongs to. Specifying this field requires Google OAuth 2.0 credential with proper [permissions] (https://cloud.google.com/identity-platform/docs/access-control). Requests from end users should pass an Identity Platform ID token instead.",
                  "pattern": "^[^/]+$",
                  "location": "path",
                  "required": true
                }
              }
            },
            "query": {
              "response": {
                "$ref": "GoogleCloudIdentitytoolkitV1QueryUserInfoResponse"
              },
              "id": "identitytoolkit.projects.accounts.query",
              "httpMethod": "POST",
              "flatPath": "v1/projects/{projectsId}/accounts:query",
              "description": "Looks up user accounts within a project or a tenant based on conditions in the request.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/firebase"
              ],
              "request": {
                "$ref": "GoogleCloudIdentitytoolkitV1QueryUserInfoRequest"
              },
              "parameterOrder": [
                "targetProjectId"
              ],
              "path": "v1/projects/{+targetProjectId}/accounts:query",
              "parameters": {
                "targetProjectId": {
                  "type": "string",
                  "required": true,
                  "pattern": "^[^/]+$",
                  "location": "path",
                  "description": "The ID of the project to which the result is scoped."
                }
              }
            }
          }
        }
      },
      "methods": {
        "accounts": {
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "description": "Signs up a new email and password user or anonymous user, or upgrades an anonymous user to email and password. For an admin request with a Google OAuth 2.0 credential with the proper [permissions](https://cloud.google.com/identity-platform/docs/access-control), creates a new anonymous, email and password, or phone number user. An [API key](https://cloud.google.com/docs/authentication/api-keys) is required in the request in order to identify the Google Cloud project.",
          "request": {
            "$ref": "GoogleCloudIdentitytoolkitV1SignUpRequest"
          },
          "id": "identitytoolkit.projects.accounts",
          "parameterOrder": [
            "targetProjectId"
          ],
          "path": "v1/projects/{+targetProjectId}/accounts",
          "flatPath": "v1/projects/{projectsId}/accounts",
          "httpMethod": "POST",
          "parameters": {
            "targetProjectId": {
              "pattern": "^[^/]+$",
              "type": "string",
              "description": "The project ID of the project which the user should belong to. Specifying this field requires a Google OAuth 2.0 credential with the proper [permissions](https://cloud.google.com/identity-platform/docs/access-control). If this is not set, the target project is inferred from the scope associated to the Bearer access token.",
              "location": "path",
              "required": true
            }
          },
          "response": {
            "$ref": "GoogleCloudIdentitytoolkitV1SignUpResponse"
          }
        },
        "createSessionCookie": {
          "parameterOrder": [
            "targetProjectId"
          ],
          "flatPath": "v1/projects/{projectsId}:createSessionCookie",
          "description": "Creates a session cookie for the given Identity Platform ID token. The session cookie is used by the client to preserve the user's login state.",
          "response": {
            "$ref": "GoogleCloudIdentitytoolkitV1CreateSessionCookieResponse"
          },
          "httpMethod": "POST",
          "request": {
            "$ref": "GoogleCloudIdentitytoolkitV1CreateSessionCookieRequest"
          },
          "path": "v1/projects/{+targetProjectId}:createSessionCookie",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "parameters": {
            "targetProjectId": {
              "location": "path",
              "pattern": "^[^/]+$",
              "description": "The ID of the project that the account belongs to.",
              "type": "string",
              "required": true
            }
          },
          "id": "identitytoolkit.projects.createSessionCookie"
        },
        "queryAccounts": {
          "response": {
            "$ref": "GoogleCloudIdentitytoolkitV1QueryUserInfoResponse"
          },
          "description": "Looks up user accounts within a project or a tenant based on conditions in the request.",
          "parameters": {
            "targetProjectId": {
              "location": "path",
              "type": "string",
              "description": "The ID of the project to which the result is scoped.",
              "pattern": "^[^/]+$",
              "required": true
            }
          },
          "request": {
            "$ref": "GoogleCloudIdentitytoolkitV1QueryUserInfoRequest"
          },
          "httpMethod": "POST",
          "parameterOrder": [
            "targetProjectId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/firebase"
          ],
          "id": "identitytoolkit.projects.queryAccounts",
          "flatPath": "v1/projects/{projectsId}:queryAccounts",
          "path": "v1/projects/{+targetProjectId}:queryAccounts"
        }
      }
    }
  },
  "name": "identitytoolkit",
  "kind": "discovery#restDescription",
  "ownerName": "Google",
  "baseUrl": "https://identitytoolkit.googleapis.com/",
  "parameters": {
    "fields": {
      "location": "query",
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response."
    },
    "callback": {
      "type": "string",
      "location": "query",
      "description": "JSONP"
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query",
      "type": "string"
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "location": "query",
      "type": "string"
    },
    "alt": {
      "type": "string",
      "description": "Data format for response.",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "default": "json",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query"
    },
    "prettyPrint": {
      "location": "query",
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "type": "boolean"
    },
    "key": {
      "location": "query",
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
    },
    "$.xgafv": {
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "location": "query",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "type": "string"
    },
    "access_token": {
      "description": "OAuth access token.",
      "type": "string",
      "location": "query"
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "quotaUser": {
      "location": "query",
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
    }
  },
  "basePath": "",
  "canonicalName": "Identity Toolkit",
  "fullyEncodeReservedExpansion": true,
  "id": "identitytoolkit:v1"
}
