{
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "title": "Blogger API",
  "kind": "discovery#restDescription",
  "canonicalName": "Blogger",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/blogger": {
          "description": "Manage your Blogger account"
        }
      }
    }
  },
  "rootUrl": "https://blogger.googleapis.com/",
  "servicePath": "",
  "description": "The Blogger API provides access to posts, comments and pages of a Blogger blog.",
  "version": "v2",
  "basePath": "",
  "documentationLink": "https://developers.google.com/blogger/docs/3.0/getting_started",
  "id": "blogger:v2",
  "ownerName": "Google",
  "parameters": {
    "quotaUser": {
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string"
    },
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query",
      "type": "string"
    },
    "prettyPrint": {
      "location": "query",
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean",
      "default": "true"
    },
    "key": {
      "location": "query",
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
    },
    "callback": {
      "type": "string",
      "location": "query",
      "description": "JSONP"
    },
    "upload_protocol": {
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string"
    },
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "oauth_token": {
      "location": "query",
      "type": "string",
      "description": "OAuth 2.0 token for the current user."
    },
    "alt": {
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "location": "query",
      "description": "Data format for response.",
      "default": "json",
      "type": "string"
    },
    "$.xgafv": {
      "description": "V1 error format.",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "type": "string",
      "location": "query",
      "enum": [
        "1",
        "2"
      ]
    },
    "access_token": {
      "description": "OAuth access token.",
      "type": "string",
      "location": "query"
    }
  },
  "ownerDomain": "google.com",
  "schemas": {
    "Blog": {
      "properties": {
        "updated": {
          "type": "string",
          "description": "RFC 3339 date-time when this blog was last updated."
        },
        "description": {
          "description": "The description of this blog. This is displayed underneath the title.",
          "type": "string"
        },
        "posts": {
          "properties": {
            "totalItems": {
              "description": "The count of posts in this blog.",
              "format": "int32",
              "type": "integer"
            },
            "selfLink": {
              "description": "The URL of the container for posts in this blog.",
              "type": "string"
            },
            "items": {
              "type": "array",
              "description": "The List of Posts for this Blog.",
              "items": {
                "$ref": "Post"
              }
            }
          },
          "description": "The container of posts in this blog.",
          "type": "object"
        },
        "id": {
          "description": "The identifier for this resource.",
          "type": "string"
        },
        "selfLink": {
          "type": "string",
          "description": "The API REST URL to fetch this resource from."
        },
        "locale": {
          "description": "The locale this Blog is set to.",
          "type": "object",
          "properties": {
            "language": {
              "description": "The language this blog is authored in.",
              "type": "string"
            },
            "variant": {
              "type": "string",
              "description": "The language variant this blog is authored in."
            },
            "country": {
              "type": "string",
              "description": "The country this blog's locale is set to."
            }
          }
        },
        "url": {
          "type": "string",
          "description": "The URL where this blog is published."
        },
        "pages": {
          "description": "The container of pages in this blog.",
          "type": "object",
          "properties": {
            "totalItems": {
              "type": "integer",
              "description": "The count of pages in this blog.",
              "format": "int32"
            },
            "selfLink": {
              "type": "string",
              "description": "The URL of the container for pages in this blog."
            }
          }
        },
        "name": {
          "description": "The name of this blog. This is displayed as the title.",
          "type": "string"
        },
        "kind": {
          "type": "string",
          "description": "The kind of this entry. Always blogger#blog."
        },
        "customMetaData": {
          "type": "string",
          "description": "The JSON custom meta-data for the Blog."
        },
        "status": {
          "description": "The status of the blog.",
          "enumDescriptions": [
            "",
            ""
          ],
          "type": "string",
          "enum": [
            "LIVE",
            "DELETED"
          ]
        },
        "published": {
          "description": "RFC 3339 date-time when this blog was published.",
          "type": "string"
        }
      },
      "id": "Blog",
      "type": "object"
    },
    "PostList": {
      "id": "PostList",
      "properties": {
        "prevPageToken": {
          "description": "Pagination token to fetch the previous page, if one exists.",
          "type": "string"
        },
        "nextPageToken": {
          "description": "Pagination token to fetch the next page, if one exists.",
          "type": "string"
        },
        "etag": {
          "description": "Etag of the response.",
          "type": "string"
        },
        "kind": {
          "description": "The kind of this entity. Always blogger#postList.",
          "type": "string"
        },
        "items": {
          "type": "array",
          "description": "The list of Posts for this Blog.",
          "items": {
            "$ref": "Post"
          }
        }
      },
      "type": "object"
    },
    "Comment": {
      "properties": {
        "id": {
          "type": "string",
          "description": "The identifier for this resource."
        },
        "selfLink": {
          "description": "The API REST URL to fetch this resource from.",
          "type": "string"
        },
        "author": {
          "properties": {
            "url": {
              "description": "The URL of the creator's Profile page.",
              "type": "string"
            },
            "image": {
              "description": "The creator's avatar.",
              "properties": {
                "url": {
                  "description": "The creator's avatar URL.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "id": {
              "type": "string",
              "description": "The identifier of the creator."
            },
            "displayName": {
              "description": "The display name.",
              "type": "string"
            }
          },
          "type": "object",
          "description": "The author of this Comment."
        },
        "inReplyTo": {
          "properties": {
            "id": {
              "type": "string",
              "description": "The identified of the parent of this comment."
            }
          },
          "type": "object",
          "description": "Data about the comment this is in reply to."
        },
        "updated": {
          "description": "RFC 3339 date-time when this comment was last updated.",
          "type": "string"
        },
        "status": {
          "enum": [
            "LIVE",
            "EMPTIED",
            "PENDING",
            "SPAM"
          ],
          "type": "string",
          "enumDescriptions": [
            "",
            "",
            "",
            ""
          ],
          "description": "The status of the comment (only populated for admin users)."
        },
        "post": {
          "description": "Data about the post containing this comment.",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "The identifier of the post containing this comment."
            }
          }
        },
        "published": {
          "type": "string",
          "description": "RFC 3339 date-time when this comment was published."
        },
        "content": {
          "type": "string",
          "description": "The actual content of the comment. May include HTML markup."
        },
        "kind": {
          "description": "The kind of this entry. Always blogger#comment.",
          "type": "string"
        },
        "blog": {
          "description": "Data about the blog containing this comment.",
          "type": "object",
          "properties": {
            "id": {
              "description": "The identifier of the blog containing this comment.",
              "type": "string"
            }
          }
        }
      },
      "type": "object",
      "id": "Comment"
    },
    "User": {
      "type": "object",
      "id": "User",
      "properties": {
        "about": {
          "description": "Profile summary information.",
          "type": "string"
        },
        "displayName": {
          "description": "The display name.",
          "type": "string"
        },
        "kind": {
          "type": "string",
          "description": "The kind of this entity. Always blogger#user."
        },
        "locale": {
          "description": "This user's locale",
          "properties": {
            "language": {
              "type": "string",
              "description": "The language this blog is authored in."
            },
            "country": {
              "type": "string",
              "description": "The country this blog's locale is set to."
            },
            "variant": {
              "description": "The language variant this blog is authored in.",
              "type": "string"
            }
          },
          "type": "object"
        },
        "id": {
          "type": "string",
          "description": "The identifier for this User."
        },
        "blogs": {
          "type": "object",
          "properties": {
            "selfLink": {
              "type": "string",
              "description": "The URL of the Blogs for this user."
            }
          },
          "description": "The container of blogs for this user."
        },
        "created": {
          "type": "string",
          "description": "The timestamp of when this profile was created, in seconds since epoch."
        },
        "url": {
          "type": "string",
          "description": "The user's profile page."
        },
        "selfLink": {
          "description": "The API REST URL to fetch this resource from.",
          "type": "string"
        }
      }
    },
    "BlogUserInfo": {
      "id": "BlogUserInfo",
      "properties": {
        "blog_user_info": {
          "description": "Information about a User for the Blog.",
          "$ref": "BlogPerUserInfo"
        },
        "blog": {
          "$ref": "Blog",
          "description": "The Blog resource."
        },
        "kind": {
          "description": "The kind of this entity. Always blogger#blogUserInfo.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PageList": {
      "properties": {
        "items": {
          "items": {
            "$ref": "Page"
          },
          "description": "The list of Pages for a Blog.",
          "type": "array"
        },
        "kind": {
          "description": "The kind of this entity. Always blogger#pageList.",
          "type": "string"
        },
        "nextPageToken": {
          "type": "string",
          "description": "Pagination token to fetch the next page, if one exists."
        },
        "etag": {
          "type": "string",
          "description": "Etag of the response."
        }
      },
      "id": "PageList",
      "type": "object"
    },
    "CommentList": {
      "properties": {
        "kind": {
          "description": "The kind of this entry. Always blogger#commentList.",
          "type": "string"
        },
        "items": {
          "description": "The List of Comments for a Post.",
          "items": {
            "$ref": "Comment"
          },
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "Pagination token to fetch the next page, if one exists."
        },
        "prevPageToken": {
          "type": "string",
          "description": "Pagination token to fetch the previous page, if one exists."
        },
        "etag": {
          "description": "Etag of the response.",
          "type": "string"
        }
      },
      "id": "CommentList",
      "type": "object"
    },
    "Page": {
      "id": "Page",
      "properties": {
        "author": {
          "properties": {
            "url": {
              "type": "string",
              "description": "The URL of the creator's Profile page."
            },
            "displayName": {
              "description": "The display name.",
              "type": "string"
            },
            "id": {
              "type": "string",
              "description": "The identifier of the creator."
            },
            "image": {
              "type": "object",
              "properties": {
                "url": {
                  "description": "The creator's avatar URL.",
                  "type": "string"
                }
              },
              "description": "The creator's avatar."
            }
          },
          "type": "object",
          "description": "The author of this Page."
        },
        "id": {
          "type": "string",
          "description": "The identifier for this resource."
        },
        "trashed": {
          "type": "string",
          "description": "RFC 3339 date-time when this Page was trashed."
        },
        "published": {
          "description": "RFC 3339 date-time when this Page was published.",
          "type": "string"
        },
        "etag": {
          "description": "Etag of the resource.",
          "type": "string"
        },
        "status": {
          "enum": [
            "LIVE",
            "DRAFT",
            "SOFT_TRASHED"
          ],
          "description": "The status of the page for admin resources (either LIVE or DRAFT).",
          "enumDescriptions": [
            "",
            "",
            ""
          ],
          "type": "string"
        },
        "kind": {
          "type": "string",
          "description": "The kind of this entity. Always blogger#page."
        },
        "updated": {
          "description": "RFC 3339 date-time when this Page was last updated.",
          "type": "string"
        },
        "url": {
          "description": "The URL that this Page is displayed at.",
          "type": "string"
        },
        "selfLink": {
          "type": "string",
          "description": "The API REST URL to fetch this resource from."
        },
        "content": {
          "description": "The body content of this Page, in HTML.",
          "type": "string"
        },
        "blog": {
          "description": "Data about the blog containing this Page.",
          "properties": {
            "id": {
              "type": "string",
              "description": "The identifier of the blog containing this page."
            }
          },
          "type": "object"
        },
        "title": {
          "type": "string",
          "description": "The title of this entity. This is the name displayed in the Admin user interface."
        }
      },
      "type": "object"
    },
    "Post": {
      "id": "Post",
      "type": "object",
      "properties": {
        "customMetaData": {
          "type": "string",
          "description": "The JSON meta-data for the Post."
        },
        "author": {
          "properties": {
            "url": {
              "description": "The URL of the creator's Profile page.",
              "type": "string"
            },
            "displayName": {
              "description": "The display name.",
              "type": "string"
            },
            "id": {
              "type": "string",
              "description": "The identifier of the creator."
            },
            "image": {
              "description": "The creator's avatar.",
              "type": "object",
              "properties": {
                "url": {
                  "description": "The creator's avatar URL.",
                  "type": "string"
                }
              }
            }
          },
          "description": "The author of this Post.",
          "type": "object"
        },
        "selfLink": {
          "type": "string",
          "description": "The API REST URL to fetch this resource from."
        },
        "images": {
          "description": "Display image for the Post.",
          "items": {
            "properties": {
              "url": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "status": {
          "type": "string",
          "description": "Status of the post. Only set for admin-level requests.",
          "enum": [
            "LIVE",
            "DRAFT",
            "SCHEDULED",
            "SOFT_TRASHED"
          ],
          "enumDescriptions": [
            "",
            "",
            "",
            ""
          ]
        },
        "titleLink": {
          "type": "string",
          "description": "The title link URL, similar to atom's related link."
        },
        "replies": {
          "properties": {
            "selfLink": {
              "description": "The URL of the comments on this post.",
              "type": "string"
            },
            "totalItems": {
              "format": "int64",
              "description": "The count of comments on this post.",
              "type": "string"
            },
            "items": {
              "type": "array",
              "description": "The List of Comments for this Post.",
              "items": {
                "$ref": "Comment"
              }
            }
          },
          "type": "object",
          "description": "The container of comments on this Post."
        },
        "trashed": {
          "type": "string",
          "description": "RFC 3339 date-time when this Post was last trashed."
        },
        "url": {
          "description": "The URL where this Post is displayed.",
          "type": "string"
        },
        "content": {
          "type": "string",
          "description": "The content of the Post. May contain HTML markup."
        },
        "readerComments": {
          "description": "Comment control and display setting for readers of this post.",
          "enumDescriptions": [
            "",
            "",
            ""
          ],
          "type": "string",
          "enum": [
            "ALLOW",
            "DONT_ALLOW_SHOW_EXISTING",
            "DONT_ALLOW_HIDE_EXISTING"
          ]
        },
        "published": {
          "type": "string",
          "description": "RFC 3339 date-time when this Post was published."
        },
        "kind": {
          "description": "The kind of this entity. Always blogger#post.",
          "type": "string"
        },
        "blog": {
          "description": "Data about the blog containing this Post.",
          "properties": {
            "id": {
              "description": "The identifier of the Blog that contains this Post.",
              "type": "string"
            }
          },
          "type": "object"
        },
        "location": {
          "description": "The location for geotagged posts.",
          "properties": {
            "span": {
              "description": "Location's viewport span. Can be used when rendering a map preview.",
              "type": "string"
            },
            "name": {
              "description": "Location name.",
              "type": "string"
            },
            "lng": {
              "format": "double",
              "description": "Location's longitude.",
              "type": "number"
            },
            "lat": {
              "description": "Location's latitude.",
              "type": "number",
              "format": "double"
            }
          },
          "type": "object"
        },
        "etag": {
          "type": "string",
          "description": "Etag of the resource."
        },
        "id": {
          "type": "string",
          "description": "The identifier of this Post."
        },
        "title": {
          "description": "The title of the Post.",
          "type": "string"
        },
        "labels": {
          "items": {
            "type": "string"
          },
          "description": "The list of labels this Post was tagged with.",
          "type": "array"
        },
        "updated": {
          "type": "string",
          "description": "RFC 3339 date-time when this Post was last updated."
        }
      }
    },
    "BlogPerUserInfo": {
      "id": "BlogPerUserInfo",
      "properties": {
        "userId": {
          "type": "string",
          "description": "ID of the User."
        },
        "photosAlbumKey": {
          "description": "The Photo Album Key for the user when adding photos to the blog.",
          "type": "string"
        },
        "blogId": {
          "description": "ID of the Blog resource.",
          "type": "string"
        },
        "role": {
          "enumDescriptions": [
            "",
            "",
            "",
            ""
          ],
          "description": "Access permissions that the user has for the blog (ADMIN, AUTHOR, or READER).",
          "type": "string",
          "enum": [
            "VIEW_TYPE_UNSPECIFIED",
            "READER",
            "AUTHOR",
            "ADMIN"
          ]
        },
        "hasAdminAccess": {
          "type": "boolean",
          "description": "True if the user has Admin level access to the blog."
        },
        "kind": {
          "type": "string",
          "description": "The kind of this entity. Always blogger#blogPerUserInfo."
        }
      },
      "type": "object"
    },
    "BlogList": {
      "id": "BlogList",
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "description": "The list of Blogs this user has Authorship or Admin rights over.",
          "items": {
            "$ref": "Blog"
          }
        },
        "kind": {
          "type": "string",
          "description": "The kind of this entity. Always blogger#blogList."
        },
        "blogUserInfos": {
          "items": {
            "$ref": "BlogUserInfo"
          },
          "description": "Admin level list of blog per-user information.",
          "type": "array"
        }
      }
    }
  },
  "discoveryVersion": "v1",
  "baseUrl": "https://blogger.googleapis.com/",
  "protocol": "rest",
  "fullyEncodeReservedExpansion": true,
  "batchPath": "batch",
  "name": "blogger",
  "revision": "20230226",
  "resources": {
    "posts": {
      "methods": {
        "list": {
          "parameterOrder": [
            "blogId"
          ],
          "path": "v2/blogs/{blogId}/posts",
          "httpMethod": "GET",
          "description": "Lists posts.",
          "response": {
            "$ref": "PostList"
          },
          "flatPath": "v2/blogs/{blogId}/posts",
          "parameters": {
            "fetchBodies": {
              "location": "query",
              "type": "boolean"
            },
            "maxResults": {
              "type": "integer",
              "format": "uint32",
              "location": "query"
            },
            "blogId": {
              "location": "path",
              "required": true,
              "type": "string"
            },
            "startDate": {
              "type": "string",
              "location": "query"
            },
            "pageToken": {
              "location": "query",
              "type": "string"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/blogger"
          ],
          "id": "blogger.posts.list"
        },
        "get": {
          "id": "blogger.posts.get",
          "httpMethod": "GET",
          "flatPath": "v2/blogs/{blogId}/posts/{postId}",
          "scopes": [
            "https://www.googleapis.com/auth/blogger"
          ],
          "parameters": {
            "blogId": {
              "required": true,
              "location": "path",
              "type": "string"
            },
            "postId": {
              "required": true,
              "type": "string",
              "location": "path"
            }
          },
          "description": "Gets a post by blog id and post id",
          "response": {
            "$ref": "Post"
          },
          "parameterOrder": [
            "blogId",
            "postId"
          ],
          "path": "v2/blogs/{blogId}/posts/{postId}"
        }
      }
    },
    "pages": {
      "methods": {
        "list": {
          "flatPath": "v2/blogs/{blogId}/pages",
          "path": "v2/blogs/{blogId}/pages",
          "parameters": {
            "fetchBodies": {
              "type": "boolean",
              "location": "query"
            },
            "blogId": {
              "type": "string",
              "location": "path",
              "required": true
            }
          },
          "response": {
            "$ref": "PageList"
          },
          "parameterOrder": [
            "blogId"
          ],
          "id": "blogger.pages.list",
          "scopes": [
            "https://www.googleapis.com/auth/blogger"
          ],
          "description": "Lists pages.",
          "httpMethod": "GET"
        },
        "get": {
          "parameterOrder": [
            "blogId",
            "pageId"
          ],
          "path": "v2/blogs/{blogId}/pages/{pageId}",
          "httpMethod": "GET",
          "description": "Gets a page by blog id and page id.",
          "response": {
            "$ref": "Page"
          },
          "scopes": [
            "https://www.googleapis.com/auth/blogger"
          ],
          "parameters": {
            "pageId": {
              "required": true,
              "type": "string",
              "location": "path"
            },
            "blogId": {
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "id": "blogger.pages.get",
          "flatPath": "v2/blogs/{blogId}/pages/{pageId}"
        }
      }
    },
    "blogs": {
      "methods": {
        "list": {
          "parameters": {
            "userId": {
              "type": "string",
              "location": "path",
              "required": true
            }
          },
          "description": "Lists blogs by user id, possibly filtered.",
          "parameterOrder": [
            "userId"
          ],
          "response": {
            "$ref": "BlogList"
          },
          "path": "v2/users/{userId}/blogs",
          "id": "blogger.blogs.list",
          "scopes": [
            "https://www.googleapis.com/auth/blogger"
          ],
          "httpMethod": "GET",
          "flatPath": "v2/users/{userId}/blogs"
        },
        "get": {
          "response": {
            "$ref": "Blog"
          },
          "path": "v2/blogs/{blogId}",
          "httpMethod": "GET",
          "parameterOrder": [
            "blogId"
          ],
          "flatPath": "v2/blogs/{blogId}",
          "description": "Gets a blog by id.",
          "scopes": [
            "https://www.googleapis.com/auth/blogger"
          ],
          "id": "blogger.blogs.get",
          "parameters": {
            "blogId": {
              "required": true,
              "type": "string",
              "location": "path"
            }
          }
        }
      }
    },
    "comments": {
      "methods": {
        "list": {
          "httpMethod": "GET",
          "path": "v2/blogs/{blogId}/posts/{postId}/comments",
          "parameterOrder": [
            "blogId",
            "postId"
          ],
          "flatPath": "v2/blogs/{blogId}/posts/{postId}/comments",
          "description": "Lists comments.",
          "response": {
            "$ref": "CommentList"
          },
          "id": "blogger.comments.list",
          "parameters": {
            "pageToken": {
              "location": "query",
              "type": "string"
            },
            "postId": {
              "required": true,
              "type": "string",
              "location": "path"
            },
            "blogId": {
              "type": "string",
              "required": true,
              "location": "path"
            },
            "startDate": {
              "location": "query",
              "type": "string"
            },
            "maxResults": {
              "type": "integer",
              "format": "uint32",
              "location": "query"
            },
            "fetchBodies": {
              "type": "boolean",
              "location": "query"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/blogger"
          ]
        },
        "get": {
          "httpMethod": "GET",
          "id": "blogger.comments.get",
          "parameterOrder": [
            "blogId",
            "postId",
            "commentId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/blogger"
          ],
          "flatPath": "v2/blogs/{blogId}/posts/{postId}/comments/{commentId}",
          "path": "v2/blogs/{blogId}/posts/{postId}/comments/{commentId}",
          "description": "Gets a comment by blog id, post id and comment id.",
          "parameters": {
            "commentId": {
              "location": "path",
              "type": "string",
              "required": true
            },
            "blogId": {
              "location": "path",
              "type": "string",
              "required": true
            },
            "postId": {
              "required": true,
              "type": "string",
              "location": "path"
            }
          },
          "response": {
            "$ref": "Comment"
          }
        }
      }
    },
    "users": {
      "methods": {
        "get": {
          "parameters": {
            "userId": {
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "v2/users/{userId}",
          "parameterOrder": [
            "userId"
          ],
          "description": "Gets a user by user id.",
          "id": "blogger.users.get",
          "scopes": [
            "https://www.googleapis.com/auth/blogger"
          ],
          "flatPath": "v2/users/{userId}",
          "httpMethod": "GET",
          "response": {
            "$ref": "User"
          }
        }
      }
    }
  },
  "mtlsRootUrl": "https://blogger.mtls.googleapis.com/"
}
