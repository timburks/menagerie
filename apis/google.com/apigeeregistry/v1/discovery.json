{
  "discoveryVersion": "v1",
  "servicePath": "",
  "kind": "discovery#restDescription",
  "ownerDomain": "google.com",
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "methods": {
            "get": {
              "description": "Gets information about a location.",
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}",
              "path": "v1/{+name}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "id": "apigeeregistry.projects.locations.get",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "location": "path",
                  "type": "string",
                  "required": true,
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "description": "Resource name for the location."
                }
              },
              "response": {
                "$ref": "Location"
              },
              "parameterOrder": [
                "name"
              ]
            },
            "list": {
              "flatPath": "v1/projects/{projectsId}/locations",
              "id": "apigeeregistry.projects.locations.list",
              "httpMethod": "GET",
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "parameters": {
                "filter": {
                  "location": "query",
                  "type": "string",
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like `\"displayName=tokyo\"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160)."
                },
                "name": {
                  "description": "The resource that owns the locations collection, if applicable.",
                  "pattern": "^projects/[^/]+$",
                  "required": true,
                  "type": "string",
                  "location": "path"
                },
                "pageSize": {
                  "location": "query",
                  "type": "integer",
                  "description": "The maximum number of results to return. If not set, the service selects a default.",
                  "format": "int32"
                },
                "pageToken": {
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.",
                  "location": "query",
                  "type": "string"
                }
              },
              "path": "v1/{+name}/locations",
              "description": "Lists information about the supported locations for this service.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "name"
              ]
            }
          },
          "resources": {
            "operations": {
              "methods": {
                "delete": {
                  "httpMethod": "DELETE",
                  "response": {
                    "$ref": "Empty"
                  },
                  "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "id": "apigeeregistry.projects.locations.operations.delete",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "type": "string",
                      "required": true,
                      "description": "The name of the operation resource to be deleted."
                    }
                  },
                  "path": "v1/{+name}"
                },
                "get": {
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                  "httpMethod": "GET",
                  "path": "v1/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "type": "string",
                      "location": "path",
                      "description": "The name of the operation resource.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$"
                    }
                  },
                  "id": "apigeeregistry.projects.locations.operations.get",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}"
                },
                "cancel": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel",
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Empty"
                  },
                  "parameters": {
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "description": "The name of the operation resource to be cancelled."
                    }
                  },
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "CancelOperationRequest"
                  },
                  "path": "v1/{+name}:cancel",
                  "id": "apigeeregistry.projects.locations.operations.cancel",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "list": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations",
                  "response": {
                    "$ref": "ListOperationsResponse"
                  },
                  "path": "v1/{+name}/operations",
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `\"/v1/{name=users/*}/operations\"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.",
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET",
                  "parameters": {
                    "pageSize": {
                      "type": "integer",
                      "description": "The standard list page size.",
                      "format": "int32",
                      "location": "query"
                    },
                    "filter": {
                      "location": "query",
                      "description": "The standard list filter.",
                      "type": "string"
                    },
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "The standard list page token."
                    },
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "description": "The name of the operation's parent resource.",
                      "required": true
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "apigeeregistry.projects.locations.operations.list"
                }
              }
            },
            "runtime": {
              "methods": {
                "setIamPolicy": {
                  "parameterOrder": [
                    "resource"
                  ],
                  "path": "v1/{+resource}:setIamPolicy",
                  "response": {
                    "$ref": "Policy"
                  },
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "httpMethod": "POST",
                  "id": "apigeeregistry.projects.locations.runtime.setIamPolicy",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/runtime:setIamPolicy",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "resource": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/runtime$",
                      "type": "string",
                      "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "location": "path",
                      "required": true
                    }
                  },
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors."
                },
                "getIamPolicy": {
                  "path": "v1/{+resource}:getIamPolicy",
                  "response": {
                    "$ref": "Policy"
                  },
                  "parameters": {
                    "options.requestedPolicyVersion": {
                      "format": "int32",
                      "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                      "type": "integer",
                      "location": "query"
                    },
                    "resource": {
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/runtime$",
                      "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "location": "path"
                    }
                  },
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                  "id": "apigeeregistry.projects.locations.runtime.getIamPolicy",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/runtime:getIamPolicy",
                  "parameterOrder": [
                    "resource"
                  ],
                  "httpMethod": "GET"
                },
                "testIamPermissions": {
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "path": "v1/{+resource}:testIamPermissions",
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "id": "apigeeregistry.projects.locations.runtime.testIamPermissions",
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/runtime:testIamPermissions",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/runtime$",
                      "type": "string"
                    }
                  }
                }
              }
            },
            "apis": {
              "resources": {
                "artifacts": {
                  "methods": {
                    "setIamPolicy": {
                      "request": {
                        "$ref": "SetIamPolicyRequest"
                      },
                      "parameters": {
                        "resource": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/apis/[^/]+/artifacts/[^/]+$",
                          "type": "string",
                          "location": "path",
                          "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                          "required": true
                        }
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/apis/{apisId}/artifacts/{artifactsId}:setIamPolicy",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "Policy"
                      },
                      "path": "v1/{+resource}:setIamPolicy",
                      "httpMethod": "POST",
                      "id": "apigeeregistry.projects.locations.apis.artifacts.setIamPolicy",
                      "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
                      "parameterOrder": [
                        "resource"
                      ]
                    },
                    "get": {
                      "description": "Returns a specified artifact.",
                      "response": {
                        "$ref": "Artifact"
                      },
                      "parameters": {
                        "name": {
                          "location": "path",
                          "type": "string",
                          "description": "Required. The name of the artifact to retrieve. Format: `{parent}/artifacts/*`",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/apis/[^/]+/artifacts/[^/]+$"
                        }
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/apis/{apisId}/artifacts/{artifactsId}",
                      "parameterOrder": [
                        "name"
                      ],
                      "path": "v1/{+name}",
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "apigeeregistry.projects.locations.apis.artifacts.get"
                    },
                    "getIamPolicy": {
                      "parameterOrder": [
                        "resource"
                      ],
                      "parameters": {
                        "options.requestedPolicyVersion": {
                          "location": "query",
                          "type": "integer",
                          "format": "int32",
                          "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                        },
                        "resource": {
                          "required": true,
                          "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/apis/[^/]+/artifacts/[^/]+$",
                          "location": "path"
                        }
                      },
                      "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                      "httpMethod": "GET",
                      "id": "apigeeregistry.projects.locations.apis.artifacts.getIamPolicy",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/apis/{apisId}/artifacts/{artifactsId}:getIamPolicy",
                      "response": {
                        "$ref": "Policy"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1/{+resource}:getIamPolicy"
                    },
                    "create": {
                      "response": {
                        "$ref": "Artifact"
                      },
                      "parameters": {
                        "parent": {
                          "description": "Required. The parent, which owns this collection of artifacts. Format: `{parent}`",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/apis/[^/]+$",
                          "location": "path",
                          "type": "string"
                        },
                        "artifactId": {
                          "location": "query",
                          "description": "Required. The ID to use for the artifact, which will become the final component of the artifact's resource name. This value should be 4-63 characters, and valid characters are /a-z-/. Following AIP-162, IDs must not have the form of a UUID.",
                          "type": "string"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/apis/{apisId}/artifacts",
                      "description": "Creates a specified artifact.",
                      "request": {
                        "$ref": "Artifact"
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "id": "apigeeregistry.projects.locations.apis.artifacts.create",
                      "httpMethod": "POST",
                      "path": "v1/{+parent}/artifacts"
                    },
                    "list": {
                      "path": "v1/{+parent}/artifacts",
                      "parameters": {
                        "orderBy": {
                          "location": "query",
                          "type": "string",
                          "description": "A comma-separated list of fields, e.g. \"foo,bar\" Fields can be sorted in descending order using the \"desc\" identifier, e.g. \"foo desc,bar\""
                        },
                        "pageToken": {
                          "location": "query",
                          "description": "A page token, received from a previous `ListArtifacts` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListArtifacts` must match the call that provided the page token.",
                          "type": "string"
                        },
                        "pageSize": {
                          "description": "The maximum number of artifacts to return. The service may return fewer than this value. If unspecified, at most 50 values will be returned. The maximum is 1000; values above 1000 will be coerced to 1000.",
                          "type": "integer",
                          "location": "query",
                          "format": "int32"
                        },
                        "parent": {
                          "type": "string",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/apis/[^/]+$",
                          "description": "Required. The parent, which owns this collection of artifacts. Format: `{parent}`",
                          "required": true
                        },
                        "filter": {
                          "description": "An expression that can be used to filter the list. Filters use the Common Expression Language and can refer to all message fields except contents.",
                          "type": "string",
                          "location": "query"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "httpMethod": "GET",
                      "id": "apigeeregistry.projects.locations.apis.artifacts.list",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "ListArtifactsResponse"
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/apis/{apisId}/artifacts",
                      "description": "Returns matching artifacts."
                    },
                    "delete": {
                      "description": "Removes a specified artifact.",
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "Empty"
                      },
                      "id": "apigeeregistry.projects.locations.apis.artifacts.delete",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1/{+name}",
                      "httpMethod": "DELETE",
                      "parameters": {
                        "name": {
                          "required": true,
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/apis/[^/]+/artifacts/[^/]+$",
                          "type": "string",
                          "description": "Required. The name of the artifact to delete. Format: `{parent}/artifacts/*`"
                        }
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/apis/{apisId}/artifacts/{artifactsId}"
                    },
                    "testIamPermissions": {
                      "request": {
                        "$ref": "TestIamPermissionsRequest"
                      },
                      "httpMethod": "POST",
                      "parameterOrder": [
                        "resource"
                      ],
                      "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                      "response": {
                        "$ref": "TestIamPermissionsResponse"
                      },
                      "parameters": {
                        "resource": {
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/apis/[^/]+/artifacts/[^/]+$",
                          "type": "string",
                          "location": "path",
                          "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/apis/{apisId}/artifacts/{artifactsId}:testIamPermissions",
                      "id": "apigeeregistry.projects.locations.apis.artifacts.testIamPermissions",
                      "path": "v1/{+resource}:testIamPermissions"
                    },
                    "getContents": {
                      "description": "Returns the contents of a specified artifact. If artifacts are stored with GZip compression, the default behavior is to return the artifact uncompressed (the mime_type response field indicates the exact format returned).",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "HttpBody"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "parameters": {
                        "name": {
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/apis/[^/]+/artifacts/[^/]+$",
                          "type": "string",
                          "location": "path",
                          "description": "Required. The name of the artifact whose contents should be retrieved. Format: `{parent}/artifacts/*`"
                        }
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/apis/{apisId}/artifacts/{artifactsId}:getContents",
                      "id": "apigeeregistry.projects.locations.apis.artifacts.getContents",
                      "path": "v1/{+name}:getContents",
                      "httpMethod": "GET"
                    },
                    "replaceArtifact": {
                      "parameterOrder": [
                        "name"
                      ],
                      "parameters": {
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/apis/[^/]+/artifacts/[^/]+$",
                          "type": "string",
                          "location": "path",
                          "description": "Resource name.",
                          "required": true
                        }
                      },
                      "httpMethod": "PUT",
                      "response": {
                        "$ref": "Artifact"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "request": {
                        "$ref": "Artifact"
                      },
                      "id": "apigeeregistry.projects.locations.apis.artifacts.replaceArtifact",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/apis/{apisId}/artifacts/{artifactsId}",
                      "description": "Used to replace a specified artifact.",
                      "path": "v1/{+name}"
                    }
                  }
                },
                "deployments": {
                  "methods": {
                    "listRevisions": {
                      "description": "Lists all revisions of a deployment. Revisions are returned in descending order of revision creation time.",
                      "path": "v1/{+name}:listRevisions",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/apis/{apisId}/deployments/{deploymentsId}:listRevisions",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "name"
                      ],
                      "httpMethod": "GET",
                      "id": "apigeeregistry.projects.locations.apis.deployments.listRevisions",
                      "parameters": {
                        "filter": {
                          "description": "An expression that can be used to filter the list. Filters use the Common Expression Language and can refer to all message fields.",
                          "location": "query",
                          "type": "string"
                        },
                        "name": {
                          "description": "Required. The name of the deployment to list revisions for.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/apis/[^/]+/deployments/[^/]+$",
                          "required": true,
                          "type": "string",
                          "location": "path"
                        },
                        "pageToken": {
                          "location": "query",
                          "type": "string",
                          "description": "The page token, received from a previous ListApiDeploymentRevisions call. Provide this to retrieve the subsequent page."
                        },
                        "pageSize": {
                          "format": "int32",
                          "description": "The maximum number of revisions to return per page.",
                          "location": "query",
                          "type": "integer"
                        }
                      },
                      "response": {
                        "$ref": "ListApiDeploymentRevisionsResponse"
                      }
                    },
                    "get": {
                      "parameters": {
                        "name": {
                          "description": "Required. The name of the deployment to retrieve. Format: `projects/*/locations/*/apis/*/deployments/*`",
                          "pattern": "^projects/[^/]+/locations/[^/]+/apis/[^/]+/deployments/[^/]+$",
                          "type": "string",
                          "required": true,
                          "location": "path"
                        }
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/apis/{apisId}/deployments/{deploymentsId}",
                      "description": "Returns a specified deployment.",
                      "id": "apigeeregistry.projects.locations.apis.deployments.get",
                      "path": "v1/{+name}",
                      "response": {
                        "$ref": "ApiDeployment"
                      },
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "name"
                      ]
                    },
                    "rollback": {
                      "httpMethod": "POST",
                      "id": "apigeeregistry.projects.locations.apis.deployments.rollback",
                      "response": {
                        "$ref": "ApiDeployment"
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/apis/{apisId}/deployments/{deploymentsId}:rollback",
                      "path": "v1/{+name}:rollback",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "request": {
                        "$ref": "RollbackApiDeploymentRequest"
                      },
                      "description": "Sets the current revision to a specified prior revision. Note that this creates a new revision with a new revision ID.",
                      "parameters": {
                        "name": {
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/apis/[^/]+/deployments/[^/]+$",
                          "description": "Required. The deployment being rolled back.",
                          "location": "path",
                          "required": true
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ]
                    },
                    "delete": {
                      "parameters": {
                        "force": {
                          "location": "query",
                          "type": "boolean",
                          "description": "If set to true, any child resources will also be deleted. (Otherwise, the request will only work if there are no child resources.)"
                        },
                        "name": {
                          "description": "Required. The name of the deployment to delete. Format: `projects/*/locations/*/apis/*/deployments/*`",
                          "type": "string",
                          "location": "path",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/apis/[^/]+/deployments/[^/]+$"
                        }
                      },
                      "id": "apigeeregistry.projects.locations.apis.deployments.delete",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "DELETE",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/apis/{apisId}/deployments/{deploymentsId}",
                      "description": "Removes a specified deployment, all revisions, and all child resources (e.g., artifacts).",
                      "path": "v1/{+name}",
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "Empty"
                      }
                    },
                    "deleteRevision": {
                      "parameters": {
                        "name": {
                          "type": "string",
                          "required": true,
                          "description": "Required. The name of the deployment revision to be deleted, with a revision ID explicitly included. Example: `projects/sample/locations/global/apis/petstore/deployments/prod@c7cfa2a8`",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/apis/[^/]+/deployments/[^/]+$"
                        }
                      },
                      "description": "Deletes a revision of a deployment.",
                      "id": "apigeeregistry.projects.locations.apis.deployments.deleteRevision",
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "ApiDeployment"
                      },
                      "path": "v1/{+name}:deleteRevision",
                      "httpMethod": "DELETE",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/apis/{apisId}/deployments/{deploymentsId}:deleteRevision",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "tagRevision": {
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/apis/{apisId}/deployments/{deploymentsId}:tagRevision",
                      "id": "apigeeregistry.projects.locations.apis.deployments.tagRevision",
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "ApiDeployment"
                      },
                      "path": "v1/{+name}:tagRevision",
                      "httpMethod": "POST",
                      "request": {
                        "$ref": "TagApiDeploymentRevisionRequest"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/apis/[^/]+/deployments/[^/]+$",
                          "required": true,
                          "description": "Required. The name of the deployment to be tagged, including the revision ID.",
                          "location": "path",
                          "type": "string"
                        }
                      },
                      "description": "Adds a tag to a specified revision of a deployment."
                    },
                    "create": {
                      "path": "v1/{+parent}/deployments",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/apis/{apisId}/deployments",
                      "parameters": {
                        "apiDeploymentId": {
                          "location": "query",
                          "type": "string",
                          "description": "Required. The ID to use for the deployment, which will become the final component of the deployment's resource name. This value should be 4-63 characters, and valid characters are /a-z-/. Following AIP-162, IDs must not have the form of a UUID."
                        },
                        "parent": {
                          "location": "path",
                          "description": "Required. The parent, which owns this collection of deployments. Format: `projects/*/locations/*/apis/*`",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/apis/[^/]+$",
                          "required": true
                        }
                      },
                      "id": "apigeeregistry.projects.locations.apis.deployments.create",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Creates a specified deployment.",
                      "parameterOrder": [
                        "parent"
                      ],
                      "request": {
                        "$ref": "ApiDeployment"
                      },
                      "httpMethod": "POST",
                      "response": {
                        "$ref": "ApiDeployment"
                      }
                    },
                    "testIamPermissions": {
                      "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                      "parameters": {
                        "resource": {
                          "required": true,
                          "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                          "type": "string",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/apis/[^/]+/deployments/[^/]+$"
                        }
                      },
                      "path": "v1/{+resource}:testIamPermissions",
                      "response": {
                        "$ref": "TestIamPermissionsResponse"
                      },
                      "id": "apigeeregistry.projects.locations.apis.deployments.testIamPermissions",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/apis/{apisId}/deployments/{deploymentsId}:testIamPermissions",
                      "httpMethod": "POST",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "request": {
                        "$ref": "TestIamPermissionsRequest"
                      },
                      "parameterOrder": [
                        "resource"
                      ]
                    },
                    "getIamPolicy": {
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/apis/{apisId}/deployments/{deploymentsId}:getIamPolicy",
                      "httpMethod": "GET",
                      "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                      "id": "apigeeregistry.projects.locations.apis.deployments.getIamPolicy",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "options.requestedPolicyVersion": {
                          "type": "integer",
                          "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                          "format": "int32",
                          "location": "query"
                        },
                        "resource": {
                          "location": "path",
                          "type": "string",
                          "required": true,
                          "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/apis/[^/]+/deployments/[^/]+$"
                        }
                      },
                      "path": "v1/{+resource}:getIamPolicy",
                      "parameterOrder": [
                        "resource"
                      ],
                      "response": {
                        "$ref": "Policy"
                      }
                    },
                    "patch": {
                      "path": "v1/{+name}",
                      "description": "Used to modify a specified deployment.",
                      "httpMethod": "PATCH",
                      "response": {
                        "$ref": "ApiDeployment"
                      },
                      "request": {
                        "$ref": "ApiDeployment"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "parameters": {
                        "allowMissing": {
                          "description": "If set to true, and the deployment is not found, a new deployment will be created. In this situation, `update_mask` is ignored.",
                          "location": "query",
                          "type": "boolean"
                        },
                        "name": {
                          "location": "path",
                          "required": true,
                          "description": "Resource name.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/apis/[^/]+/deployments/[^/]+$",
                          "type": "string"
                        },
                        "updateMask": {
                          "type": "string",
                          "format": "google-fieldmask",
                          "location": "query",
                          "description": "The list of fields to be updated. If omitted, all fields are updated that are set in the request message (fields set to default values are ignored). If an asterisk \"*\" is specified, all fields are updated, including fields that are unspecified/default in the request."
                        }
                      },
                      "id": "apigeeregistry.projects.locations.apis.deployments.patch",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/apis/{apisId}/deployments/{deploymentsId}"
                    },
                    "setIamPolicy": {
                      "parameters": {
                        "resource": {
                          "type": "string",
                          "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/apis/[^/]+/deployments/[^/]+$",
                          "location": "path",
                          "required": true
                        }
                      },
                      "httpMethod": "POST",
                      "response": {
                        "$ref": "Policy"
                      },
                      "id": "apigeeregistry.projects.locations.apis.deployments.setIamPolicy",
                      "request": {
                        "$ref": "SetIamPolicyRequest"
                      },
                      "parameterOrder": [
                        "resource"
                      ],
                      "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
                      "path": "v1/{+resource}:setIamPolicy",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/apis/{apisId}/deployments/{deploymentsId}:setIamPolicy"
                    },
                    "list": {
                      "id": "apigeeregistry.projects.locations.apis.deployments.list",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/apis/{apisId}/deployments",
                      "parameterOrder": [
                        "parent"
                      ],
                      "httpMethod": "GET",
                      "parameters": {
                        "parent": {
                          "description": "Required. The parent, which owns this collection of deployments. Format: `projects/*/locations/*/apis/*`",
                          "pattern": "^projects/[^/]+/locations/[^/]+/apis/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "orderBy": {
                          "location": "query",
                          "type": "string",
                          "description": "A comma-separated list of fields, e.g. \"foo,bar\" Fields can be sorted in descending order using the \"desc\" identifier, e.g. \"foo desc,bar\""
                        },
                        "pageToken": {
                          "type": "string",
                          "location": "query",
                          "description": "A page token, received from a previous `ListApiDeployments` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListApiDeployments` must match the call that provided the page token."
                        },
                        "filter": {
                          "type": "string",
                          "location": "query",
                          "description": "An expression that can be used to filter the list. Filters use the Common Expression Language and can refer to all message fields."
                        },
                        "pageSize": {
                          "description": "The maximum number of deployments to return. The service may return fewer than this value. If unspecified, at most 50 values will be returned. The maximum is 1000; values above 1000 will be coerced to 1000.",
                          "location": "query",
                          "format": "int32",
                          "type": "integer"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Returns matching deployments.",
                      "response": {
                        "$ref": "ListApiDeploymentsResponse"
                      },
                      "path": "v1/{+parent}/deployments"
                    }
                  },
                  "resources": {
                    "artifacts": {
                      "methods": {
                        "delete": {
                          "httpMethod": "DELETE",
                          "parameters": {
                            "name": {
                              "location": "path",
                              "pattern": "^projects/[^/]+/locations/[^/]+/apis/[^/]+/deployments/[^/]+/artifacts/[^/]+$",
                              "description": "Required. The name of the artifact to delete. Format: `{parent}/artifacts/*`",
                              "required": true,
                              "type": "string"
                            }
                          },
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/apis/{apisId}/deployments/{deploymentsId}/artifacts/{artifactsId}",
                          "id": "apigeeregistry.projects.locations.apis.deployments.artifacts.delete",
                          "response": {
                            "$ref": "Empty"
                          },
                          "path": "v1/{+name}",
                          "parameterOrder": [
                            "name"
                          ],
                          "description": "Removes a specified artifact.",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ]
                        },
                        "getContents": {
                          "parameters": {
                            "name": {
                              "type": "string",
                              "location": "path",
                              "description": "Required. The name of the artifact whose contents should be retrieved. Format: `{parent}/artifacts/*`",
                              "pattern": "^projects/[^/]+/locations/[^/]+/apis/[^/]+/deployments/[^/]+/artifacts/[^/]+$",
                              "required": true
                            }
                          },
                          "parameterOrder": [
                            "name"
                          ],
                          "id": "apigeeregistry.projects.locations.apis.deployments.artifacts.getContents",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "path": "v1/{+name}:getContents",
                          "description": "Returns the contents of a specified artifact. If artifacts are stored with GZip compression, the default behavior is to return the artifact uncompressed (the mime_type response field indicates the exact format returned).",
                          "response": {
                            "$ref": "HttpBody"
                          },
                          "httpMethod": "GET",
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/apis/{apisId}/deployments/{deploymentsId}/artifacts/{artifactsId}:getContents"
                        },
                        "list": {
                          "response": {
                            "$ref": "ListArtifactsResponse"
                          },
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/apis/{apisId}/deployments/{deploymentsId}/artifacts",
                          "id": "apigeeregistry.projects.locations.apis.deployments.artifacts.list",
                          "path": "v1/{+parent}/artifacts",
                          "parameterOrder": [
                            "parent"
                          ],
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "description": "Returns matching artifacts.",
                          "httpMethod": "GET",
                          "parameters": {
                            "pageToken": {
                              "description": "A page token, received from a previous `ListArtifacts` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListArtifacts` must match the call that provided the page token.",
                              "location": "query",
                              "type": "string"
                            },
                            "pageSize": {
                              "description": "The maximum number of artifacts to return. The service may return fewer than this value. If unspecified, at most 50 values will be returned. The maximum is 1000; values above 1000 will be coerced to 1000.",
                              "format": "int32",
                              "type": "integer",
                              "location": "query"
                            },
                            "filter": {
                              "description": "An expression that can be used to filter the list. Filters use the Common Expression Language and can refer to all message fields except contents.",
                              "type": "string",
                              "location": "query"
                            },
                            "parent": {
                              "required": true,
                              "pattern": "^projects/[^/]+/locations/[^/]+/apis/[^/]+/deployments/[^/]+$",
                              "type": "string",
                              "description": "Required. The parent, which owns this collection of artifacts. Format: `{parent}`",
                              "location": "path"
                            },
                            "orderBy": {
                              "description": "A comma-separated list of fields, e.g. \"foo,bar\" Fields can be sorted in descending order using the \"desc\" identifier, e.g. \"foo desc,bar\"",
                              "type": "string",
                              "location": "query"
                            }
                          }
                        },
                        "get": {
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/apis/{apisId}/deployments/{deploymentsId}/artifacts/{artifactsId}",
                          "response": {
                            "$ref": "Artifact"
                          },
                          "httpMethod": "GET",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "parameters": {
                            "name": {
                              "type": "string",
                              "location": "path",
                              "description": "Required. The name of the artifact to retrieve. Format: `{parent}/artifacts/*`",
                              "pattern": "^projects/[^/]+/locations/[^/]+/apis/[^/]+/deployments/[^/]+/artifacts/[^/]+$",
                              "required": true
                            }
                          },
                          "parameterOrder": [
                            "name"
                          ],
                          "description": "Returns a specified artifact.",
                          "path": "v1/{+name}",
                          "id": "apigeeregistry.projects.locations.apis.deployments.artifacts.get"
                        },
                        "replaceArtifact": {
                          "path": "v1/{+name}",
                          "parameterOrder": [
                            "name"
                          ],
                          "request": {
                            "$ref": "Artifact"
                          },
                          "response": {
                            "$ref": "Artifact"
                          },
                          "id": "apigeeregistry.projects.locations.apis.deployments.artifacts.replaceArtifact",
                          "parameters": {
                            "name": {
                              "required": true,
                              "pattern": "^projects/[^/]+/locations/[^/]+/apis/[^/]+/deployments/[^/]+/artifacts/[^/]+$",
                              "description": "Resource name.",
                              "type": "string",
                              "location": "path"
                            }
                          },
                          "httpMethod": "PUT",
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/apis/{apisId}/deployments/{deploymentsId}/artifacts/{artifactsId}",
                          "description": "Used to replace a specified artifact.",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ]
                        },
                        "create": {
                          "description": "Creates a specified artifact.",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/apis/{apisId}/deployments/{deploymentsId}/artifacts",
                          "parameterOrder": [
                            "parent"
                          ],
                          "httpMethod": "POST",
                          "response": {
                            "$ref": "Artifact"
                          },
                          "id": "apigeeregistry.projects.locations.apis.deployments.artifacts.create",
                          "parameters": {
                            "parent": {
                              "required": true,
                              "pattern": "^projects/[^/]+/locations/[^/]+/apis/[^/]+/deployments/[^/]+$",
                              "description": "Required. The parent, which owns this collection of artifacts. Format: `{parent}`",
                              "location": "path",
                              "type": "string"
                            },
                            "artifactId": {
                              "description": "Required. The ID to use for the artifact, which will become the final component of the artifact's resource name. This value should be 4-63 characters, and valid characters are /a-z-/. Following AIP-162, IDs must not have the form of a UUID.",
                              "location": "query",
                              "type": "string"
                            }
                          },
                          "request": {
                            "$ref": "Artifact"
                          },
                          "path": "v1/{+parent}/artifacts"
                        }
                      }
                    }
                  }
                },
                "versions": {
                  "methods": {
                    "getIamPolicy": {
                      "path": "v1/{+resource}:getIamPolicy",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/apis/{apisId}/versions/{versionsId}:getIamPolicy",
                      "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "options.requestedPolicyVersion": {
                          "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                          "format": "int32",
                          "type": "integer",
                          "location": "query"
                        },
                        "resource": {
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+$",
                          "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                          "type": "string",
                          "required": true
                        }
                      },
                      "parameterOrder": [
                        "resource"
                      ],
                      "response": {
                        "$ref": "Policy"
                      },
                      "id": "apigeeregistry.projects.locations.apis.versions.getIamPolicy"
                    },
                    "get": {
                      "response": {
                        "$ref": "ApiVersion"
                      },
                      "id": "apigeeregistry.projects.locations.apis.versions.get",
                      "description": "Returns a specified version.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "name"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/apis/{apisId}/versions/{versionsId}",
                      "httpMethod": "GET",
                      "parameters": {
                        "name": {
                          "type": "string",
                          "location": "path",
                          "required": true,
                          "description": "Required. The name of the version to retrieve. Format: `projects/*/locations/*/apis/*/versions/*`",
                          "pattern": "^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+$"
                        }
                      },
                      "path": "v1/{+name}"
                    },
                    "setIamPolicy": {
                      "request": {
                        "$ref": "SetIamPolicyRequest"
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/apis/{apisId}/versions/{versionsId}:setIamPolicy",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "resource"
                      ],
                      "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
                      "httpMethod": "POST",
                      "id": "apigeeregistry.projects.locations.apis.versions.setIamPolicy",
                      "parameters": {
                        "resource": {
                          "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+$",
                          "type": "string",
                          "location": "path",
                          "required": true
                        }
                      },
                      "response": {
                        "$ref": "Policy"
                      },
                      "path": "v1/{+resource}:setIamPolicy"
                    },
                    "testIamPermissions": {
                      "parameters": {
                        "resource": {
                          "type": "string",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+$",
                          "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                          "required": true
                        }
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/apis/{apisId}/versions/{versionsId}:testIamPermissions",
                      "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                      "id": "apigeeregistry.projects.locations.apis.versions.testIamPermissions",
                      "parameterOrder": [
                        "resource"
                      ],
                      "response": {
                        "$ref": "TestIamPermissionsResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1/{+resource}:testIamPermissions",
                      "httpMethod": "POST",
                      "request": {
                        "$ref": "TestIamPermissionsRequest"
                      }
                    },
                    "patch": {
                      "parameterOrder": [
                        "name"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/apis/{apisId}/versions/{versionsId}",
                      "id": "apigeeregistry.projects.locations.apis.versions.patch",
                      "request": {
                        "$ref": "ApiVersion"
                      },
                      "path": "v1/{+name}",
                      "httpMethod": "PATCH",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Used to modify a specified version.",
                      "response": {
                        "$ref": "ApiVersion"
                      },
                      "parameters": {
                        "updateMask": {
                          "format": "google-fieldmask",
                          "location": "query",
                          "description": "The list of fields to be updated. If omitted, all fields are updated that are set in the request message (fields set to default values are ignored). If an asterisk \"*\" is specified, all fields are updated, including fields that are unspecified/default in the request.",
                          "type": "string"
                        },
                        "name": {
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+$",
                          "description": "Resource name.",
                          "type": "string",
                          "location": "path"
                        },
                        "allowMissing": {
                          "description": "If set to true, and the version is not found, a new version will be created. In this situation, `update_mask` is ignored.",
                          "location": "query",
                          "type": "boolean"
                        }
                      }
                    },
                    "create": {
                      "request": {
                        "$ref": "ApiVersion"
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/apis/{apisId}/versions",
                      "parameters": {
                        "apiVersionId": {
                          "type": "string",
                          "description": "Required. The ID to use for the version, which will become the final component of the version's resource name. This value should be 1-63 characters, and valid characters are /a-z-/. Following AIP-162, IDs must not have the form of a UUID.",
                          "location": "query"
                        },
                        "parent": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/apis/[^/]+$",
                          "required": true,
                          "location": "path",
                          "description": "Required. The parent, which owns this collection of versions. Format: `projects/*/locations/*/apis/*`",
                          "type": "string"
                        }
                      },
                      "response": {
                        "$ref": "ApiVersion"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "apigeeregistry.projects.locations.apis.versions.create",
                      "parameterOrder": [
                        "parent"
                      ],
                      "description": "Creates a specified version.",
                      "path": "v1/{+parent}/versions",
                      "httpMethod": "POST"
                    },
                    "list": {
                      "description": "Returns matching versions.",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/apis/{apisId}/versions",
                      "id": "apigeeregistry.projects.locations.apis.versions.list",
                      "parameterOrder": [
                        "parent"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "GET",
                      "response": {
                        "$ref": "ListApiVersionsResponse"
                      },
                      "path": "v1/{+parent}/versions",
                      "parameters": {
                        "parent": {
                          "required": true,
                          "type": "string",
                          "description": "Required. The parent, which owns this collection of versions. Format: `projects/*/locations/*/apis/*`",
                          "pattern": "^projects/[^/]+/locations/[^/]+/apis/[^/]+$",
                          "location": "path"
                        },
                        "pageSize": {
                          "location": "query",
                          "description": "The maximum number of versions to return. The service may return fewer than this value. If unspecified, at most 50 values will be returned. The maximum is 1000; values above 1000 will be coerced to 1000.",
                          "format": "int32",
                          "type": "integer"
                        },
                        "orderBy": {
                          "type": "string",
                          "description": "A comma-separated list of fields, e.g. \"foo,bar\" Fields can be sorted in descending order using the \"desc\" identifier, e.g. \"foo desc,bar\"",
                          "location": "query"
                        },
                        "pageToken": {
                          "description": "A page token, received from a previous `ListApiVersions` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListApiVersions` must match the call that provided the page token.",
                          "type": "string",
                          "location": "query"
                        },
                        "filter": {
                          "location": "query",
                          "description": "An expression that can be used to filter the list. Filters use the Common Expression Language and can refer to all message fields.",
                          "type": "string"
                        }
                      }
                    },
                    "delete": {
                      "httpMethod": "DELETE",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/apis/{apisId}/versions/{versionsId}",
                      "response": {
                        "$ref": "Empty"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "path": "v1/{+name}",
                      "parameters": {
                        "force": {
                          "type": "boolean",
                          "location": "query",
                          "description": "If set to true, any child resources will also be deleted. (Otherwise, the request will only work if there are no child resources.)"
                        },
                        "name": {
                          "type": "string",
                          "description": "Required. The name of the version to delete. Format: `projects/*/locations/*/apis/*/versions/*`",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+$",
                          "location": "path"
                        }
                      },
                      "description": "Removes a specified version and all of the resources that it owns.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "apigeeregistry.projects.locations.apis.versions.delete"
                    }
                  },
                  "resources": {
                    "artifacts": {
                      "methods": {
                        "delete": {
                          "description": "Removes a specified artifact.",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "parameters": {
                            "name": {
                              "required": true,
                              "pattern": "^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+/artifacts/[^/]+$",
                              "location": "path",
                              "description": "Required. The name of the artifact to delete. Format: `{parent}/artifacts/*`",
                              "type": "string"
                            }
                          },
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/apis/{apisId}/versions/{versionsId}/artifacts/{artifactsId}",
                          "id": "apigeeregistry.projects.locations.apis.versions.artifacts.delete",
                          "parameterOrder": [
                            "name"
                          ],
                          "response": {
                            "$ref": "Empty"
                          },
                          "path": "v1/{+name}",
                          "httpMethod": "DELETE"
                        },
                        "create": {
                          "parameters": {
                            "artifactId": {
                              "description": "Required. The ID to use for the artifact, which will become the final component of the artifact's resource name. This value should be 4-63 characters, and valid characters are /a-z-/. Following AIP-162, IDs must not have the form of a UUID.",
                              "type": "string",
                              "location": "query"
                            },
                            "parent": {
                              "location": "path",
                              "type": "string",
                              "description": "Required. The parent, which owns this collection of artifacts. Format: `{parent}`",
                              "required": true,
                              "pattern": "^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+$"
                            }
                          },
                          "parameterOrder": [
                            "parent"
                          ],
                          "id": "apigeeregistry.projects.locations.apis.versions.artifacts.create",
                          "path": "v1/{+parent}/artifacts",
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/apis/{apisId}/versions/{versionsId}/artifacts",
                          "request": {
                            "$ref": "Artifact"
                          },
                          "httpMethod": "POST",
                          "response": {
                            "$ref": "Artifact"
                          },
                          "description": "Creates a specified artifact.",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ]
                        },
                        "getIamPolicy": {
                          "httpMethod": "GET",
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/apis/{apisId}/versions/{versionsId}/artifacts/{artifactsId}:getIamPolicy",
                          "id": "apigeeregistry.projects.locations.apis.versions.artifacts.getIamPolicy",
                          "parameterOrder": [
                            "resource"
                          ],
                          "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                          "path": "v1/{+resource}:getIamPolicy",
                          "parameters": {
                            "options.requestedPolicyVersion": {
                              "location": "query",
                              "format": "int32",
                              "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                              "type": "integer"
                            },
                            "resource": {
                              "required": true,
                              "type": "string",
                              "location": "path",
                              "pattern": "^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+/artifacts/[^/]+$",
                              "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
                            }
                          },
                          "response": {
                            "$ref": "Policy"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ]
                        },
                        "get": {
                          "httpMethod": "GET",
                          "path": "v1/{+name}",
                          "parameters": {
                            "name": {
                              "required": true,
                              "description": "Required. The name of the artifact to retrieve. Format: `{parent}/artifacts/*`",
                              "type": "string",
                              "location": "path",
                              "pattern": "^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+/artifacts/[^/]+$"
                            }
                          },
                          "description": "Returns a specified artifact.",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/apis/{apisId}/versions/{versionsId}/artifacts/{artifactsId}",
                          "response": {
                            "$ref": "Artifact"
                          },
                          "id": "apigeeregistry.projects.locations.apis.versions.artifacts.get",
                          "parameterOrder": [
                            "name"
                          ]
                        },
                        "replaceArtifact": {
                          "id": "apigeeregistry.projects.locations.apis.versions.artifacts.replaceArtifact",
                          "parameterOrder": [
                            "name"
                          ],
                          "description": "Used to replace a specified artifact.",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/apis/{apisId}/versions/{versionsId}/artifacts/{artifactsId}",
                          "response": {
                            "$ref": "Artifact"
                          },
                          "httpMethod": "PUT",
                          "request": {
                            "$ref": "Artifact"
                          },
                          "parameters": {
                            "name": {
                              "required": true,
                              "location": "path",
                              "type": "string",
                              "pattern": "^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+/artifacts/[^/]+$",
                              "description": "Resource name."
                            }
                          },
                          "path": "v1/{+name}"
                        },
                        "setIamPolicy": {
                          "response": {
                            "$ref": "Policy"
                          },
                          "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
                          "parameters": {
                            "resource": {
                              "required": true,
                              "location": "path",
                              "type": "string",
                              "pattern": "^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+/artifacts/[^/]+$",
                              "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
                            }
                          },
                          "parameterOrder": [
                            "resource"
                          ],
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "path": "v1/{+resource}:setIamPolicy",
                          "request": {
                            "$ref": "SetIamPolicyRequest"
                          },
                          "id": "apigeeregistry.projects.locations.apis.versions.artifacts.setIamPolicy",
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/apis/{apisId}/versions/{versionsId}/artifacts/{artifactsId}:setIamPolicy",
                          "httpMethod": "POST"
                        },
                        "getContents": {
                          "parameters": {
                            "name": {
                              "description": "Required. The name of the artifact whose contents should be retrieved. Format: `{parent}/artifacts/*`",
                              "location": "path",
                              "required": true,
                              "pattern": "^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+/artifacts/[^/]+$",
                              "type": "string"
                            }
                          },
                          "httpMethod": "GET",
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/apis/{apisId}/versions/{versionsId}/artifacts/{artifactsId}:getContents",
                          "response": {
                            "$ref": "HttpBody"
                          },
                          "description": "Returns the contents of a specified artifact. If artifacts are stored with GZip compression, the default behavior is to return the artifact uncompressed (the mime_type response field indicates the exact format returned).",
                          "path": "v1/{+name}:getContents",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "id": "apigeeregistry.projects.locations.apis.versions.artifacts.getContents",
                          "parameterOrder": [
                            "name"
                          ]
                        },
                        "testIamPermissions": {
                          "httpMethod": "POST",
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/apis/{apisId}/versions/{versionsId}/artifacts/{artifactsId}:testIamPermissions",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "response": {
                            "$ref": "TestIamPermissionsResponse"
                          },
                          "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                          "path": "v1/{+resource}:testIamPermissions",
                          "id": "apigeeregistry.projects.locations.apis.versions.artifacts.testIamPermissions",
                          "parameters": {
                            "resource": {
                              "type": "string",
                              "location": "path",
                              "pattern": "^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+/artifacts/[^/]+$",
                              "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                              "required": true
                            }
                          },
                          "request": {
                            "$ref": "TestIamPermissionsRequest"
                          },
                          "parameterOrder": [
                            "resource"
                          ]
                        },
                        "list": {
                          "id": "apigeeregistry.projects.locations.apis.versions.artifacts.list",
                          "description": "Returns matching artifacts.",
                          "path": "v1/{+parent}/artifacts",
                          "response": {
                            "$ref": "ListArtifactsResponse"
                          },
                          "parameterOrder": [
                            "parent"
                          ],
                          "parameters": {
                            "pageSize": {
                              "format": "int32",
                              "location": "query",
                              "type": "integer",
                              "description": "The maximum number of artifacts to return. The service may return fewer than this value. If unspecified, at most 50 values will be returned. The maximum is 1000; values above 1000 will be coerced to 1000."
                            },
                            "parent": {
                              "location": "path",
                              "description": "Required. The parent, which owns this collection of artifacts. Format: `{parent}`",
                              "required": true,
                              "type": "string",
                              "pattern": "^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+$"
                            },
                            "pageToken": {
                              "type": "string",
                              "location": "query",
                              "description": "A page token, received from a previous `ListArtifacts` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListArtifacts` must match the call that provided the page token."
                            },
                            "orderBy": {
                              "location": "query",
                              "description": "A comma-separated list of fields, e.g. \"foo,bar\" Fields can be sorted in descending order using the \"desc\" identifier, e.g. \"foo desc,bar\"",
                              "type": "string"
                            },
                            "filter": {
                              "location": "query",
                              "type": "string",
                              "description": "An expression that can be used to filter the list. Filters use the Common Expression Language and can refer to all message fields except contents."
                            }
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "httpMethod": "GET",
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/apis/{apisId}/versions/{versionsId}/artifacts"
                        }
                      }
                    },
                    "specs": {
                      "resources": {
                        "artifacts": {
                          "methods": {
                            "replaceArtifact": {
                              "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform"
                              ],
                              "request": {
                                "$ref": "Artifact"
                              },
                              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/apis/{apisId}/versions/{versionsId}/specs/{specsId}/artifacts/{artifactsId}",
                              "response": {
                                "$ref": "Artifact"
                              },
                              "id": "apigeeregistry.projects.locations.apis.versions.specs.artifacts.replaceArtifact",
                              "path": "v1/{+name}",
                              "description": "Used to replace a specified artifact.",
                              "parameters": {
                                "name": {
                                  "type": "string",
                                  "description": "Resource name.",
                                  "pattern": "^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+/specs/[^/]+/artifacts/[^/]+$",
                                  "required": true,
                                  "location": "path"
                                }
                              },
                              "httpMethod": "PUT",
                              "parameterOrder": [
                                "name"
                              ]
                            },
                            "create": {
                              "parameters": {
                                "artifactId": {
                                  "type": "string",
                                  "description": "Required. The ID to use for the artifact, which will become the final component of the artifact's resource name. This value should be 4-63 characters, and valid characters are /a-z-/. Following AIP-162, IDs must not have the form of a UUID.",
                                  "location": "query"
                                },
                                "parent": {
                                  "type": "string",
                                  "pattern": "^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+/specs/[^/]+$",
                                  "required": true,
                                  "location": "path",
                                  "description": "Required. The parent, which owns this collection of artifacts. Format: `{parent}`"
                                }
                              },
                              "parameterOrder": [
                                "parent"
                              ],
                              "id": "apigeeregistry.projects.locations.apis.versions.specs.artifacts.create",
                              "path": "v1/{+parent}/artifacts",
                              "description": "Creates a specified artifact.",
                              "httpMethod": "POST",
                              "response": {
                                "$ref": "Artifact"
                              },
                              "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform"
                              ],
                              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/apis/{apisId}/versions/{versionsId}/specs/{specsId}/artifacts",
                              "request": {
                                "$ref": "Artifact"
                              }
                            },
                            "testIamPermissions": {
                              "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform"
                              ],
                              "response": {
                                "$ref": "TestIamPermissionsResponse"
                              },
                              "parameterOrder": [
                                "resource"
                              ],
                              "request": {
                                "$ref": "TestIamPermissionsRequest"
                              },
                              "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                              "parameters": {
                                "resource": {
                                  "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                                  "type": "string",
                                  "required": true,
                                  "pattern": "^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+/specs/[^/]+/artifacts/[^/]+$",
                                  "location": "path"
                                }
                              },
                              "path": "v1/{+resource}:testIamPermissions",
                              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/apis/{apisId}/versions/{versionsId}/specs/{specsId}/artifacts/{artifactsId}:testIamPermissions",
                              "httpMethod": "POST",
                              "id": "apigeeregistry.projects.locations.apis.versions.specs.artifacts.testIamPermissions"
                            },
                            "getIamPolicy": {
                              "response": {
                                "$ref": "Policy"
                              },
                              "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform"
                              ],
                              "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                              "path": "v1/{+resource}:getIamPolicy",
                              "id": "apigeeregistry.projects.locations.apis.versions.specs.artifacts.getIamPolicy",
                              "httpMethod": "GET",
                              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/apis/{apisId}/versions/{versionsId}/specs/{specsId}/artifacts/{artifactsId}:getIamPolicy",
                              "parameters": {
                                "options.requestedPolicyVersion": {
                                  "location": "query",
                                  "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                                  "format": "int32",
                                  "type": "integer"
                                },
                                "resource": {
                                  "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                                  "pattern": "^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+/specs/[^/]+/artifacts/[^/]+$",
                                  "required": true,
                                  "type": "string",
                                  "location": "path"
                                }
                              },
                              "parameterOrder": [
                                "resource"
                              ]
                            },
                            "get": {
                              "parameterOrder": [
                                "name"
                              ],
                              "id": "apigeeregistry.projects.locations.apis.versions.specs.artifacts.get",
                              "path": "v1/{+name}",
                              "response": {
                                "$ref": "Artifact"
                              },
                              "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform"
                              ],
                              "description": "Returns a specified artifact.",
                              "httpMethod": "GET",
                              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/apis/{apisId}/versions/{versionsId}/specs/{specsId}/artifacts/{artifactsId}",
                              "parameters": {
                                "name": {
                                  "required": true,
                                  "location": "path",
                                  "type": "string",
                                  "description": "Required. The name of the artifact to retrieve. Format: `{parent}/artifacts/*`",
                                  "pattern": "^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+/specs/[^/]+/artifacts/[^/]+$"
                                }
                              }
                            },
                            "list": {
                              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/apis/{apisId}/versions/{versionsId}/specs/{specsId}/artifacts",
                              "parameters": {
                                "pageToken": {
                                  "type": "string",
                                  "location": "query",
                                  "description": "A page token, received from a previous `ListArtifacts` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListArtifacts` must match the call that provided the page token."
                                },
                                "orderBy": {
                                  "description": "A comma-separated list of fields, e.g. \"foo,bar\" Fields can be sorted in descending order using the \"desc\" identifier, e.g. \"foo desc,bar\"",
                                  "location": "query",
                                  "type": "string"
                                },
                                "pageSize": {
                                  "format": "int32",
                                  "location": "query",
                                  "type": "integer",
                                  "description": "The maximum number of artifacts to return. The service may return fewer than this value. If unspecified, at most 50 values will be returned. The maximum is 1000; values above 1000 will be coerced to 1000."
                                },
                                "filter": {
                                  "location": "query",
                                  "description": "An expression that can be used to filter the list. Filters use the Common Expression Language and can refer to all message fields except contents.",
                                  "type": "string"
                                },
                                "parent": {
                                  "required": true,
                                  "type": "string",
                                  "description": "Required. The parent, which owns this collection of artifacts. Format: `{parent}`",
                                  "location": "path",
                                  "pattern": "^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+/specs/[^/]+$"
                                }
                              },
                              "parameterOrder": [
                                "parent"
                              ],
                              "httpMethod": "GET",
                              "id": "apigeeregistry.projects.locations.apis.versions.specs.artifacts.list",
                              "description": "Returns matching artifacts.",
                              "path": "v1/{+parent}/artifacts",
                              "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform"
                              ],
                              "response": {
                                "$ref": "ListArtifactsResponse"
                              }
                            },
                            "delete": {
                              "path": "v1/{+name}",
                              "description": "Removes a specified artifact.",
                              "parameters": {
                                "name": {
                                  "location": "path",
                                  "description": "Required. The name of the artifact to delete. Format: `{parent}/artifacts/*`",
                                  "pattern": "^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+/specs/[^/]+/artifacts/[^/]+$",
                                  "type": "string",
                                  "required": true
                                }
                              },
                              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/apis/{apisId}/versions/{versionsId}/specs/{specsId}/artifacts/{artifactsId}",
                              "parameterOrder": [
                                "name"
                              ],
                              "response": {
                                "$ref": "Empty"
                              },
                              "id": "apigeeregistry.projects.locations.apis.versions.specs.artifacts.delete",
                              "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform"
                              ],
                              "httpMethod": "DELETE"
                            },
                            "getContents": {
                              "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform"
                              ],
                              "parameters": {
                                "name": {
                                  "required": true,
                                  "location": "path",
                                  "type": "string",
                                  "pattern": "^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+/specs/[^/]+/artifacts/[^/]+$",
                                  "description": "Required. The name of the artifact whose contents should be retrieved. Format: `{parent}/artifacts/*`"
                                }
                              },
                              "path": "v1/{+name}:getContents",
                              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/apis/{apisId}/versions/{versionsId}/specs/{specsId}/artifacts/{artifactsId}:getContents",
                              "response": {
                                "$ref": "HttpBody"
                              },
                              "httpMethod": "GET",
                              "description": "Returns the contents of a specified artifact. If artifacts are stored with GZip compression, the default behavior is to return the artifact uncompressed (the mime_type response field indicates the exact format returned).",
                              "parameterOrder": [
                                "name"
                              ],
                              "id": "apigeeregistry.projects.locations.apis.versions.specs.artifacts.getContents"
                            },
                            "setIamPolicy": {
                              "parameters": {
                                "resource": {
                                  "type": "string",
                                  "pattern": "^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+/specs/[^/]+/artifacts/[^/]+$",
                                  "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                                  "required": true,
                                  "location": "path"
                                }
                              },
                              "id": "apigeeregistry.projects.locations.apis.versions.specs.artifacts.setIamPolicy",
                              "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
                              "response": {
                                "$ref": "Policy"
                              },
                              "parameterOrder": [
                                "resource"
                              ],
                              "httpMethod": "POST",
                              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/apis/{apisId}/versions/{versionsId}/specs/{specsId}/artifacts/{artifactsId}:setIamPolicy",
                              "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform"
                              ],
                              "path": "v1/{+resource}:setIamPolicy",
                              "request": {
                                "$ref": "SetIamPolicyRequest"
                              }
                            }
                          }
                        }
                      },
                      "methods": {
                        "getContents": {
                          "parameters": {
                            "name": {
                              "required": true,
                              "pattern": "^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+/specs/[^/]+$",
                              "description": "Required. The name of the spec whose contents should be retrieved. Format: `projects/*/locations/*/apis/*/versions/*/specs/*`",
                              "location": "path",
                              "type": "string"
                            }
                          },
                          "description": "Returns the contents of a specified spec. If specs are stored with GZip compression, the default behavior is to return the spec uncompressed (the mime_type response field indicates the exact format returned).",
                          "httpMethod": "GET",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "parameterOrder": [
                            "name"
                          ],
                          "response": {
                            "$ref": "HttpBody"
                          },
                          "path": "v1/{+name}:getContents",
                          "id": "apigeeregistry.projects.locations.apis.versions.specs.getContents",
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/apis/{apisId}/versions/{versionsId}/specs/{specsId}:getContents"
                        },
                        "setIamPolicy": {
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "httpMethod": "POST",
                          "path": "v1/{+resource}:setIamPolicy",
                          "parameterOrder": [
                            "resource"
                          ],
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/apis/{apisId}/versions/{versionsId}/specs/{specsId}:setIamPolicy",
                          "parameters": {
                            "resource": {
                              "pattern": "^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+/specs/[^/]+$",
                              "type": "string",
                              "location": "path",
                              "required": true,
                              "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
                            }
                          },
                          "id": "apigeeregistry.projects.locations.apis.versions.specs.setIamPolicy",
                          "response": {
                            "$ref": "Policy"
                          },
                          "request": {
                            "$ref": "SetIamPolicyRequest"
                          },
                          "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors."
                        },
                        "deleteRevision": {
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "parameters": {
                            "name": {
                              "type": "string",
                              "required": true,
                              "pattern": "^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+/specs/[^/]+$",
                              "location": "path",
                              "description": "Required. The name of the spec revision to be deleted, with a revision ID explicitly included. Example: `projects/sample/locations/global/apis/petstore/versions/1.0.0/specs/openapi.yaml@c7cfa2a8`"
                            }
                          },
                          "parameterOrder": [
                            "name"
                          ],
                          "description": "Deletes a revision of a spec.",
                          "path": "v1/{+name}:deleteRevision",
                          "httpMethod": "DELETE",
                          "response": {
                            "$ref": "ApiSpec"
                          },
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/apis/{apisId}/versions/{versionsId}/specs/{specsId}:deleteRevision",
                          "id": "apigeeregistry.projects.locations.apis.versions.specs.deleteRevision"
                        },
                        "listRevisions": {
                          "parameters": {
                            "filter": {
                              "description": "An expression that can be used to filter the list. Filters use the Common Expression Language and can refer to all message fields.",
                              "location": "query",
                              "type": "string"
                            },
                            "pageSize": {
                              "type": "integer",
                              "location": "query",
                              "format": "int32",
                              "description": "The maximum number of revisions to return per page."
                            },
                            "name": {
                              "type": "string",
                              "pattern": "^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+/specs/[^/]+$",
                              "description": "Required. The name of the spec to list revisions for.",
                              "location": "path",
                              "required": true
                            },
                            "pageToken": {
                              "type": "string",
                              "location": "query",
                              "description": "The page token, received from a previous ListApiSpecRevisions call. Provide this to retrieve the subsequent page."
                            }
                          },
                          "path": "v1/{+name}:listRevisions",
                          "response": {
                            "$ref": "ListApiSpecRevisionsResponse"
                          },
                          "id": "apigeeregistry.projects.locations.apis.versions.specs.listRevisions",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "httpMethod": "GET",
                          "parameterOrder": [
                            "name"
                          ],
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/apis/{apisId}/versions/{versionsId}/specs/{specsId}:listRevisions",
                          "description": "Lists all revisions of a spec. Revisions are returned in descending order of revision creation time."
                        },
                        "rollback": {
                          "parameterOrder": [
                            "name"
                          ],
                          "httpMethod": "POST",
                          "response": {
                            "$ref": "ApiSpec"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "path": "v1/{+name}:rollback",
                          "description": "Sets the current revision to a specified prior revision. Note that this creates a new revision with a new revision ID.",
                          "id": "apigeeregistry.projects.locations.apis.versions.specs.rollback",
                          "parameters": {
                            "name": {
                              "description": "Required. The spec being rolled back.",
                              "type": "string",
                              "pattern": "^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+/specs/[^/]+$",
                              "required": true,
                              "location": "path"
                            }
                          },
                          "request": {
                            "$ref": "RollbackApiSpecRequest"
                          },
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/apis/{apisId}/versions/{versionsId}/specs/{specsId}:rollback"
                        },
                        "tagRevision": {
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "path": "v1/{+name}:tagRevision",
                          "id": "apigeeregistry.projects.locations.apis.versions.specs.tagRevision",
                          "description": "Adds a tag to a specified revision of a spec.",
                          "request": {
                            "$ref": "TagApiSpecRevisionRequest"
                          },
                          "parameters": {
                            "name": {
                              "required": true,
                              "type": "string",
                              "description": "Required. The name of the spec to be tagged, including the revision ID.",
                              "location": "path",
                              "pattern": "^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+/specs/[^/]+$"
                            }
                          },
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/apis/{apisId}/versions/{versionsId}/specs/{specsId}:tagRevision",
                          "parameterOrder": [
                            "name"
                          ],
                          "httpMethod": "POST",
                          "response": {
                            "$ref": "ApiSpec"
                          }
                        },
                        "create": {
                          "response": {
                            "$ref": "ApiSpec"
                          },
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/apis/{apisId}/versions/{versionsId}/specs",
                          "id": "apigeeregistry.projects.locations.apis.versions.specs.create",
                          "path": "v1/{+parent}/specs",
                          "request": {
                            "$ref": "ApiSpec"
                          },
                          "description": "Creates a specified spec.",
                          "parameterOrder": [
                            "parent"
                          ],
                          "httpMethod": "POST",
                          "parameters": {
                            "parent": {
                              "type": "string",
                              "pattern": "^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+$",
                              "description": "Required. The parent, which owns this collection of specs. Format: `projects/*/locations/*/apis/*/versions/*`",
                              "location": "path",
                              "required": true
                            },
                            "apiSpecId": {
                              "type": "string",
                              "description": "Required. The ID to use for the spec, which will become the final component of the spec's resource name. This value should be 4-63 characters, and valid characters are /a-z-/. Following AIP-162, IDs must not have the form of a UUID.",
                              "location": "query"
                            }
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ]
                        },
                        "delete": {
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "description": "Removes a specified spec, all revisions, and all child resources (e.g., artifacts).",
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/apis/{apisId}/versions/{versionsId}/specs/{specsId}",
                          "httpMethod": "DELETE",
                          "path": "v1/{+name}",
                          "parameters": {
                            "name": {
                              "description": "Required. The name of the spec to delete. Format: `projects/*/locations/*/apis/*/versions/*/specs/*`",
                              "type": "string",
                              "location": "path",
                              "required": true,
                              "pattern": "^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+/specs/[^/]+$"
                            },
                            "force": {
                              "location": "query",
                              "type": "boolean",
                              "description": "If set to true, any child resources will also be deleted. (Otherwise, the request will only work if there are no child resources.)"
                            }
                          },
                          "response": {
                            "$ref": "Empty"
                          },
                          "id": "apigeeregistry.projects.locations.apis.versions.specs.delete",
                          "parameterOrder": [
                            "name"
                          ]
                        },
                        "getIamPolicy": {
                          "response": {
                            "$ref": "Policy"
                          },
                          "httpMethod": "GET",
                          "parameterOrder": [
                            "resource"
                          ],
                          "path": "v1/{+resource}:getIamPolicy",
                          "parameters": {
                            "options.requestedPolicyVersion": {
                              "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                              "type": "integer",
                              "location": "query",
                              "format": "int32"
                            },
                            "resource": {
                              "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                              "location": "path",
                              "required": true,
                              "type": "string",
                              "pattern": "^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+/specs/[^/]+$"
                            }
                          },
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/apis/{apisId}/versions/{versionsId}/specs/{specsId}:getIamPolicy",
                          "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "id": "apigeeregistry.projects.locations.apis.versions.specs.getIamPolicy"
                        },
                        "get": {
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/apis/{apisId}/versions/{versionsId}/specs/{specsId}",
                          "parameters": {
                            "name": {
                              "description": "Required. The name of the spec to retrieve. Format: `projects/*/locations/*/apis/*/versions/*/specs/*`",
                              "required": true,
                              "location": "path",
                              "type": "string",
                              "pattern": "^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+/specs/[^/]+$"
                            }
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "description": "Returns a specified spec.",
                          "path": "v1/{+name}",
                          "response": {
                            "$ref": "ApiSpec"
                          },
                          "parameterOrder": [
                            "name"
                          ],
                          "httpMethod": "GET",
                          "id": "apigeeregistry.projects.locations.apis.versions.specs.get"
                        },
                        "testIamPermissions": {
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "path": "v1/{+resource}:testIamPermissions",
                          "parameters": {
                            "resource": {
                              "location": "path",
                              "pattern": "^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+/specs/[^/]+$",
                              "type": "string",
                              "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                              "required": true
                            }
                          },
                          "parameterOrder": [
                            "resource"
                          ],
                          "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                          "httpMethod": "POST",
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/apis/{apisId}/versions/{versionsId}/specs/{specsId}:testIamPermissions",
                          "request": {
                            "$ref": "TestIamPermissionsRequest"
                          },
                          "id": "apigeeregistry.projects.locations.apis.versions.specs.testIamPermissions",
                          "response": {
                            "$ref": "TestIamPermissionsResponse"
                          }
                        },
                        "patch": {
                          "parameters": {
                            "name": {
                              "type": "string",
                              "location": "path",
                              "required": true,
                              "description": "Resource name.",
                              "pattern": "^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+/specs/[^/]+$"
                            },
                            "allowMissing": {
                              "location": "query",
                              "description": "If set to true, and the spec is not found, a new spec will be created. In this situation, `update_mask` is ignored.",
                              "type": "boolean"
                            },
                            "updateMask": {
                              "format": "google-fieldmask",
                              "type": "string",
                              "location": "query",
                              "description": "The list of fields to be updated. If omitted, all fields are updated that are set in the request message (fields set to default values are ignored). If an asterisk \"*\" is specified, all fields are updated, including fields that are unspecified/default in the request."
                            }
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "response": {
                            "$ref": "ApiSpec"
                          },
                          "description": "Used to modify a specified spec.",
                          "id": "apigeeregistry.projects.locations.apis.versions.specs.patch",
                          "httpMethod": "PATCH",
                          "parameterOrder": [
                            "name"
                          ],
                          "path": "v1/{+name}",
                          "request": {
                            "$ref": "ApiSpec"
                          },
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/apis/{apisId}/versions/{versionsId}/specs/{specsId}"
                        },
                        "list": {
                          "description": "Returns matching specs.",
                          "httpMethod": "GET",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "path": "v1/{+parent}/specs",
                          "response": {
                            "$ref": "ListApiSpecsResponse"
                          },
                          "parameters": {
                            "orderBy": {
                              "location": "query",
                              "description": "A comma-separated list of fields, e.g. \"foo,bar\" Fields can be sorted in descending order using the \"desc\" identifier, e.g. \"foo desc,bar\"",
                              "type": "string"
                            },
                            "pageToken": {
                              "description": "A page token, received from a previous `ListApiSpecs` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListApiSpecs` must match the call that provided the page token.",
                              "location": "query",
                              "type": "string"
                            },
                            "parent": {
                              "required": true,
                              "type": "string",
                              "pattern": "^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+$",
                              "location": "path",
                              "description": "Required. The parent, which owns this collection of specs. Format: `projects/*/locations/*/apis/*/versions/*`"
                            },
                            "pageSize": {
                              "format": "int32",
                              "type": "integer",
                              "description": "The maximum number of specs to return. The service may return fewer than this value. If unspecified, at most 50 values will be returned. The maximum is 1000; values above 1000 will be coerced to 1000.",
                              "location": "query"
                            },
                            "filter": {
                              "location": "query",
                              "description": "An expression that can be used to filter the list. Filters use the Common Expression Language and can refer to all message fields except contents.",
                              "type": "string"
                            }
                          },
                          "parameterOrder": [
                            "parent"
                          ],
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/apis/{apisId}/versions/{versionsId}/specs",
                          "id": "apigeeregistry.projects.locations.apis.versions.specs.list"
                        }
                      }
                    }
                  }
                }
              },
              "methods": {
                "get": {
                  "id": "apigeeregistry.projects.locations.apis.get",
                  "httpMethod": "GET",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/apis/{apisId}",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/apis/[^/]+$",
                      "required": true,
                      "description": "Required. The name of the API to retrieve. Format: `projects/*/locations/*/apis/*`"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Returns a specified API.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+name}",
                  "response": {
                    "$ref": "Api"
                  }
                },
                "getIamPolicy": {
                  "path": "v1/{+resource}:getIamPolicy",
                  "id": "apigeeregistry.projects.locations.apis.getIamPolicy",
                  "httpMethod": "GET",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/apis/[^/]+$"
                    },
                    "options.requestedPolicyVersion": {
                      "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                      "format": "int32",
                      "location": "query",
                      "type": "integer"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/apis/{apisId}:getIamPolicy",
                  "response": {
                    "$ref": "Policy"
                  },
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                  "parameterOrder": [
                    "resource"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "create": {
                  "id": "apigeeregistry.projects.locations.apis.create",
                  "description": "Creates a specified API.",
                  "httpMethod": "POST",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/apis",
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent, which owns this collection of APIs. Format: `projects/*/locations/*`",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string"
                    },
                    "apiId": {
                      "description": "Required. The ID to use for the API, which will become the final component of the API's resource name. This value should be 4-63 characters, and valid characters are /a-z-/. Following AIP-162, IDs must not have the form of a UUID.",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "response": {
                    "$ref": "Api"
                  },
                  "path": "v1/{+parent}/apis",
                  "request": {
                    "$ref": "Api"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "delete": {
                  "path": "v1/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "apigeeregistry.projects.locations.apis.delete",
                  "description": "Removes a specified API and all of the resources that it owns.",
                  "httpMethod": "DELETE",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/apis/{apisId}",
                  "parameters": {
                    "force": {
                      "location": "query",
                      "description": "If set to true, any child resources will also be deleted. (Otherwise, the request will only work if there are no child resources.)",
                      "type": "boolean"
                    },
                    "name": {
                      "required": true,
                      "description": "Required. The name of the API to delete. Format: `projects/*/locations/*/apis/*`",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/apis/[^/]+$",
                      "location": "path"
                    }
                  },
                  "response": {
                    "$ref": "Empty"
                  }
                },
                "setIamPolicy": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "resource"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/apis/{apisId}:setIamPolicy",
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
                  "id": "apigeeregistry.projects.locations.apis.setIamPolicy",
                  "path": "v1/{+resource}:setIamPolicy",
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/apis/[^/]+$",
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
                    }
                  },
                  "response": {
                    "$ref": "Policy"
                  }
                },
                "list": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "description": "Required. The parent, which owns this collection of APIs. Format: `projects/*/locations/*`",
                      "location": "path",
                      "required": true
                    },
                    "orderBy": {
                      "description": "A comma-separated list of fields, e.g. \"foo,bar\" Fields can be sorted in descending order using the \"desc\" identifier, e.g. \"foo desc,bar\"",
                      "type": "string",
                      "location": "query"
                    },
                    "pageToken": {
                      "description": "A page token, received from a previous `ListApis` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListApis` must match the call that provided the page token.",
                      "location": "query",
                      "type": "string"
                    },
                    "filter": {
                      "description": "An expression that can be used to filter the list. Filters use the Common Expression Language and can refer to all message fields.",
                      "type": "string",
                      "location": "query"
                    },
                    "pageSize": {
                      "format": "int32",
                      "description": "The maximum number of APIs to return. The service may return fewer than this value. If unspecified, at most 50 values will be returned. The maximum is 1000; values above 1000 will be coerced to 1000.",
                      "location": "query",
                      "type": "integer"
                    }
                  },
                  "response": {
                    "$ref": "ListApisResponse"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Returns matching APIs.",
                  "id": "apigeeregistry.projects.locations.apis.list",
                  "httpMethod": "GET",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/apis",
                  "path": "v1/{+parent}/apis"
                },
                "patch": {
                  "path": "v1/{+name}",
                  "id": "apigeeregistry.projects.locations.apis.patch",
                  "response": {
                    "$ref": "Api"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/apis/{apisId}",
                  "httpMethod": "PATCH",
                  "description": "Used to modify a specified API.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "Api"
                  },
                  "parameters": {
                    "allowMissing": {
                      "type": "boolean",
                      "location": "query",
                      "description": "If set to true, and the API is not found, a new API will be created. In this situation, `update_mask` is ignored."
                    },
                    "updateMask": {
                      "description": "The list of fields to be updated. If omitted, all fields are updated that are set in the request message (fields set to default values are ignored). If an asterisk \"*\" is specified, all fields are updated, including fields that are unspecified/default in the request.",
                      "type": "string",
                      "format": "google-fieldmask",
                      "location": "query"
                    },
                    "name": {
                      "type": "string",
                      "description": "Resource name.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/apis/[^/]+$",
                      "required": true
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ]
                },
                "testIamPermissions": {
                  "path": "v1/{+resource}:testIamPermissions",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "location": "path",
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/apis/[^/]+$",
                      "type": "string",
                      "required": true
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/apis/{apisId}:testIamPermissions",
                  "id": "apigeeregistry.projects.locations.apis.testIamPermissions",
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  }
                }
              }
            },
            "artifacts": {
              "methods": {
                "getIamPolicy": {
                  "path": "v1/{+resource}:getIamPolicy",
                  "parameters": {
                    "options.requestedPolicyVersion": {
                      "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "resource": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/artifacts/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
                    }
                  },
                  "id": "apigeeregistry.projects.locations.artifacts.getIamPolicy",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "resource"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/artifacts/{artifactsId}:getIamPolicy",
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                  "response": {
                    "$ref": "Policy"
                  }
                },
                "getContents": {
                  "id": "apigeeregistry.projects.locations.artifacts.getContents",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/artifacts/{artifactsId}:getContents",
                  "path": "v1/{+name}:getContents",
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "HttpBody"
                  },
                  "description": "Returns the contents of a specified artifact. If artifacts are stored with GZip compression, the default behavior is to return the artifact uncompressed (the mime_type response field indicates the exact format returned).",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the artifact whose contents should be retrieved. Format: `{parent}/artifacts/*`",
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/artifacts/[^/]+$"
                    }
                  }
                },
                "delete": {
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/artifacts/[^/]+$",
                      "description": "Required. The name of the artifact to delete. Format: `{parent}/artifacts/*`",
                      "required": true,
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/artifacts/{artifactsId}",
                  "id": "apigeeregistry.projects.locations.artifacts.delete",
                  "description": "Removes a specified artifact.",
                  "httpMethod": "DELETE",
                  "response": {
                    "$ref": "Empty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "setIamPolicy": {
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "id": "apigeeregistry.projects.locations.artifacts.setIamPolicy",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/artifacts/{artifactsId}:setIamPolicy",
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
                  "path": "v1/{+resource}:setIamPolicy",
                  "parameters": {
                    "resource": {
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/artifacts/[^/]+$"
                    }
                  },
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "resource"
                  ],
                  "response": {
                    "$ref": "Policy"
                  }
                },
                "replaceArtifact": {
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/artifacts/[^/]+$",
                      "description": "Resource name.",
                      "location": "path",
                      "type": "string",
                      "required": true
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/artifacts/{artifactsId}",
                  "id": "apigeeregistry.projects.locations.artifacts.replaceArtifact",
                  "httpMethod": "PUT",
                  "path": "v1/{+name}",
                  "request": {
                    "$ref": "Artifact"
                  },
                  "response": {
                    "$ref": "Artifact"
                  },
                  "description": "Used to replace a specified artifact.",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "create": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "Artifact"
                  },
                  "httpMethod": "POST",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/artifacts",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+parent}/artifacts",
                  "id": "apigeeregistry.projects.locations.artifacts.create",
                  "parameters": {
                    "artifactId": {
                      "description": "Required. The ID to use for the artifact, which will become the final component of the artifact's resource name. This value should be 4-63 characters, and valid characters are /a-z-/. Following AIP-162, IDs must not have the form of a UUID.",
                      "type": "string",
                      "location": "query"
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "description": "Required. The parent, which owns this collection of artifacts. Format: `{parent}`",
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "response": {
                    "$ref": "Artifact"
                  },
                  "description": "Creates a specified artifact."
                },
                "get": {
                  "response": {
                    "$ref": "Artifact"
                  },
                  "description": "Returns a specified artifact.",
                  "path": "v1/{+name}",
                  "parameters": {
                    "name": {
                      "required": true,
                      "type": "string",
                      "description": "Required. The name of the artifact to retrieve. Format: `{parent}/artifacts/*`",
                      "pattern": "^projects/[^/]+/locations/[^/]+/artifacts/[^/]+$",
                      "location": "path"
                    }
                  },
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/artifacts/{artifactsId}",
                  "id": "apigeeregistry.projects.locations.artifacts.get",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "list": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "id": "apigeeregistry.projects.locations.artifacts.list",
                  "response": {
                    "$ref": "ListArtifactsResponse"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/artifacts",
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "A page token, received from a previous `ListArtifacts` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListArtifacts` must match the call that provided the page token."
                    },
                    "filter": {
                      "description": "An expression that can be used to filter the list. Filters use the Common Expression Language and can refer to all message fields except contents.",
                      "type": "string",
                      "location": "query"
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "type": "string",
                      "description": "Required. The parent, which owns this collection of artifacts. Format: `{parent}`",
                      "location": "path"
                    },
                    "pageSize": {
                      "location": "query",
                      "description": "The maximum number of artifacts to return. The service may return fewer than this value. If unspecified, at most 50 values will be returned. The maximum is 1000; values above 1000 will be coerced to 1000.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "orderBy": {
                      "location": "query",
                      "type": "string",
                      "description": "A comma-separated list of fields, e.g. \"foo,bar\" Fields can be sorted in descending order using the \"desc\" identifier, e.g. \"foo desc,bar\""
                    }
                  },
                  "path": "v1/{+parent}/artifacts",
                  "description": "Returns matching artifacts."
                },
                "testIamPermissions": {
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                  "parameterOrder": [
                    "resource"
                  ],
                  "httpMethod": "POST",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/artifacts/{artifactsId}:testIamPermissions",
                  "path": "v1/{+resource}:testIamPermissions",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "apigeeregistry.projects.locations.artifacts.testIamPermissions",
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "parameters": {
                    "resource": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/artifacts/[^/]+$",
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "type": "string",
                      "required": true
                    }
                  }
                }
              }
            },
            "instances": {
              "methods": {
                "get": {
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "location": "path",
                      "description": "Required. The name of the Instance to retrieve. Format: `projects/*/locations/*/instances/*`.",
                      "required": true
                    }
                  },
                  "path": "v1/{+name}",
                  "description": "Gets details of a single Instance.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}",
                  "response": {
                    "$ref": "Instance"
                  },
                  "id": "apigeeregistry.projects.locations.instances.get",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "setIamPolicy": {
                  "path": "v1/{+resource}:setIamPolicy",
                  "id": "apigeeregistry.projects.locations.instances.setIamPolicy",
                  "response": {
                    "$ref": "Policy"
                  },
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:setIamPolicy",
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
                    }
                  }
                },
                "testIamPermissions": {
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+resource}:testIamPermissions",
                  "id": "apigeeregistry.projects.locations.instances.testIamPermissions",
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:testIamPermissions",
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  }
                },
                "getIamPolicy": {
                  "httpMethod": "GET",
                  "parameters": {
                    "options.requestedPolicyVersion": {
                      "location": "query",
                      "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                      "type": "integer",
                      "format": "int32"
                    },
                    "resource": {
                      "location": "path",
                      "type": "string",
                      "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "required": true
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:getIamPolicy",
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+resource}:getIamPolicy",
                  "parameterOrder": [
                    "resource"
                  ],
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                  "id": "apigeeregistry.projects.locations.instances.getIamPolicy"
                },
                "delete": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "DELETE",
                  "description": "Deletes the Registry instance.",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "description": "Required. The name of the Instance to delete. Format: `projects/*/locations/*/instances/*`.",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$"
                    }
                  },
                  "id": "apigeeregistry.projects.locations.instances.delete",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}"
                },
                "create": {
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v1/{+parent}/instances",
                  "description": "Provisions instance resources for the Registry.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "instanceId": {
                      "description": "Required. Identifier to assign to the Instance. Must be unique within scope of the parent resource.",
                      "location": "query",
                      "type": "string"
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. Parent resource of the Instance, of the form: `projects/*/locations/*`",
                      "type": "string",
                      "location": "path",
                      "required": true
                    }
                  },
                  "request": {
                    "$ref": "Instance"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/instances",
                  "id": "apigeeregistry.projects.locations.instances.create"
                }
              }
            }
          }
        }
      }
    }
  },
  "version_module": true,
  "fullyEncodeReservedExpansion": true,
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "basePath": "",
  "mtlsRootUrl": "https://apigeeregistry.mtls.googleapis.com/",
  "protocol": "rest",
  "version": "v1",
  "title": "Apigee Registry API",
  "description": "",
  "parameters": {
    "$.xgafv": {
      "type": "string",
      "description": "V1 error format.",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query",
      "enum": [
        "1",
        "2"
      ]
    },
    "alt": {
      "type": "string",
      "location": "query",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "default": "json",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "description": "Data format for response."
    },
    "upload_protocol": {
      "location": "query",
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
    },
    "quotaUser": {
      "location": "query",
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
    },
    "key": {
      "type": "string",
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
    },
    "uploadType": {
      "type": "string",
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
    },
    "callback": {
      "description": "JSONP",
      "type": "string",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "access_token": {
      "description": "OAuth access token.",
      "type": "string",
      "location": "query"
    },
    "prettyPrint": {
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean",
      "default": "true",
      "location": "query"
    },
    "oauth_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth 2.0 token for the current user."
    }
  },
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "rootUrl": "https://apigeeregistry.googleapis.com/",
  "baseUrl": "https://apigeeregistry.googleapis.com/",
  "name": "apigeeregistry",
  "id": "apigeeregistry:v1",
  "batchPath": "batch",
  "documentationLink": "https://cloud.google.com/apigee/docs/api-hub/what-is-api-hub",
  "ownerName": "Google",
  "revision": "20230127",
  "schemas": {
    "RollbackApiDeploymentRequest": {
      "id": "RollbackApiDeploymentRequest",
      "type": "object",
      "properties": {
        "revisionId": {
          "type": "string",
          "description": "Required. The revision ID to roll back to. It must be a revision of the same deployment. Example: `c7cfa2a8`"
        }
      },
      "description": "Request message for RollbackApiDeployment."
    },
    "ListApiSpecsResponse": {
      "id": "ListApiSpecsResponse",
      "description": "Response message for ListApiSpecs.",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        },
        "apiSpecs": {
          "type": "array",
          "items": {
            "$ref": "ApiSpec"
          },
          "description": "The specs from the specified publisher."
        }
      }
    },
    "Instance": {
      "type": "object",
      "description": "An Instance represents the instance resources of the Registry. Currently, only one instance is allowed for each project.",
      "properties": {
        "name": {
          "description": "Format: `projects/*/locations/*/instance`. Currently only `locations/global` is supported.",
          "type": "string"
        },
        "updateTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. Last update timestamp.",
          "readOnly": true
        },
        "state": {
          "readOnly": true,
          "description": "Output only. The current state of the Instance.",
          "enum": [
            "STATE_UNSPECIFIED",
            "INACTIVE",
            "CREATING",
            "ACTIVE",
            "UPDATING",
            "DELETING",
            "FAILED"
          ],
          "enumDescriptions": [
            "The default value. This value is used if the state is omitted.",
            "The Instance has not been initialized or has been deleted.",
            "The Instance is being created.",
            "The Instance has been created and is ready for use.",
            "The Instance is being updated.",
            "The Instance is being deleted.",
            "The Instance encountered an error during a state change."
          ],
          "type": "string"
        },
        "stateMessage": {
          "readOnly": true,
          "description": "Output only. Extra information of Instance.State if the state is `FAILED`.",
          "type": "string"
        },
        "build": {
          "$ref": "Build",
          "description": "Output only. Build info of the Instance if it's in `ACTIVE` state.",
          "readOnly": true
        },
        "createTime": {
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. Creation timestamp.",
          "type": "string"
        },
        "config": {
          "description": "Required. Config of the Instance.",
          "$ref": "Config"
        }
      },
      "id": "Instance"
    },
    "Location": {
      "properties": {
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "Service-specific metadata. For example the available capacity at the given location."
        },
        "name": {
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`",
          "type": "string"
        },
        "displayName": {
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\".",
          "type": "string"
        },
        "locationId": {
          "type": "string",
          "description": "The canonical id for this location. For example: `\"us-east1\"`."
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}"
        }
      },
      "type": "object",
      "id": "Location",
      "description": "A resource that represents Google Cloud Platform location."
    },
    "Empty": {
      "type": "object",
      "id": "Empty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "properties": {}
    },
    "CancelOperationRequest": {
      "description": "The request message for Operations.CancelOperation.",
      "type": "object",
      "properties": {},
      "id": "CancelOperationRequest"
    },
    "ListApiVersionsResponse": {
      "id": "ListApiVersionsResponse",
      "description": "Response message for ListApiVersions.",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages."
        },
        "apiVersions": {
          "type": "array",
          "items": {
            "$ref": "ApiVersion"
          },
          "description": "The versions from the specified publisher."
        }
      },
      "type": "object"
    },
    "ApiDeployment": {
      "description": "Describes a service running at particular address that provides a particular version of an API. ApiDeployments have revisions which correspond to different configurations of a single deployment in time. Revision identifiers should be updated whenever the served API spec or endpoint address changes.",
      "id": "ApiDeployment",
      "type": "object",
      "properties": {
        "displayName": {
          "description": "Human-meaningful name.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Resource name."
        },
        "revisionUpdateTime": {
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. Last update timestamp: when the represented revision was last modified.",
          "type": "string"
        },
        "intendedAudience": {
          "type": "string",
          "description": "Text briefly identifying the intended audience of the API. Changes to this value will not affect the revision."
        },
        "revisionId": {
          "type": "string",
          "description": "Output only. Immutable. The revision ID of the deployment. A new revision is committed whenever the deployment contents are changed. The format is an 8-character hexadecimal string.",
          "readOnly": true
        },
        "annotations": {
          "description": "Annotations attach non-identifying metadata to resources. Annotation keys and values are less restricted than those of labels, but should be generally used for small values of broad interest. Larger, topic- specific metadata should be stored in Artifacts.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "revisionCreateTime": {
          "type": "string",
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. Revision creation timestamp; when the represented revision was created."
        },
        "apiSpecRevision": {
          "description": "The full resource name (including revision ID) of the spec of the API being served by the deployment. Changes to this value will update the revision. Format: `projects/{project}/locations/{location}/apis/{api}/versions/{version}/specs/{spec@revision}`",
          "type": "string"
        },
        "description": {
          "type": "string",
          "description": "A detailed description."
        },
        "endpointUri": {
          "type": "string",
          "description": "The address where the deployment is serving. Changes to this value will update the revision."
        },
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. Creation timestamp; when the deployment resource was created."
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Labels attach identifying metadata to resources. Identifying metadata can be used to filter list operations. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one resource (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with `apigeeregistry.googleapis.com/` and cannot be changed."
        },
        "externalChannelUri": {
          "type": "string",
          "description": "The address of the external channel of the API (e.g., the Developer Portal). Changes to this value will not affect the revision."
        },
        "accessGuidance": {
          "description": "Text briefly describing how to access the endpoint. Changes to this value will not affect the revision.",
          "type": "string"
        }
      }
    },
    "ListApiDeploymentsResponse": {
      "description": "Response message for ListApiDeployments.",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        },
        "apiDeployments": {
          "items": {
            "$ref": "ApiDeployment"
          },
          "description": "The deployments from the specified publisher.",
          "type": "array"
        }
      },
      "id": "ListApiDeploymentsResponse"
    },
    "TestIamPermissionsResponse": {
      "properties": {
        "permissions": {
          "description": "A subset of `TestPermissionsRequest.permissions` that the caller is allowed.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "id": "TestIamPermissionsResponse",
      "type": "object",
      "description": "Response message for `TestIamPermissions` method."
    },
    "Binding": {
      "id": "Binding",
      "description": "Associates `members`, or principals, with a `role`.",
      "type": "object",
      "properties": {
        "members": {
          "items": {
            "type": "string"
          },
          "description": "Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding.",
          "type": "array"
        },
        "condition": {
          "$ref": "Expr",
          "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
        },
        "role": {
          "type": "string",
          "description": "Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`."
        }
      }
    },
    "Api": {
      "id": "Api",
      "type": "object",
      "description": "A top-level description of an API. Produced by producers and are commitments to provide services.",
      "properties": {
        "updateTime": {
          "readOnly": true,
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. Last update timestamp."
        },
        "createTime": {
          "readOnly": true,
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. Creation timestamp."
        },
        "availability": {
          "description": "A user-definable description of the availability of this service. Format: free-form, but we expect single words that describe availability, e.g., \"NONE\", \"TESTING\", \"PREVIEW\", \"GENERAL\", \"DEPRECATED\", \"SHUTDOWN\".",
          "type": "string"
        },
        "annotations": {
          "description": "Annotations attach non-identifying metadata to resources. Annotation keys and values are less restricted than those of labels, but should be generally used for small values of broad interest. Larger, topic- specific metadata should be stored in Artifacts.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "displayName": {
          "type": "string",
          "description": "Human-meaningful name."
        },
        "description": {
          "type": "string",
          "description": "A detailed description."
        },
        "recommendedVersion": {
          "description": "The recommended version of the API. Format: `projects/{project}/locations/{location}/apis/{api}/versions/{version}`",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Resource name."
        },
        "recommendedDeployment": {
          "type": "string",
          "description": "The recommended deployment of the API. Format: `projects/{project}/locations/{location}/apis/{api}/deployments/{deployment}`"
        },
        "labels": {
          "description": "Labels attach identifying metadata to resources. Identifying metadata can be used to filter list operations. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores, and dashes. International characters are allowed. No more than 64 user labels can be associated with one resource (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with `apigeeregistry.googleapis.com/` and cannot be changed.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "ApiSpec": {
      "id": "ApiSpec",
      "description": "Describes a version of an API in a structured way. ApiSpecs provide formal descriptions that consumers can use to use a version. ApiSpec resources are intended to be fully-resolved descriptions of an ApiVersion. When specs consist of multiple files, these should be bundled together (e.g., in a zip archive) and stored as a unit. Multiple specs can exist to provide representations in different API description formats. Synchronization of these representations would be provided by tooling and background services.",
      "properties": {
        "description": {
          "description": "A detailed description.",
          "type": "string"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Labels attach identifying metadata to resources. Identifying metadata can be used to filter list operations. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one resource (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with `apigeeregistry.googleapis.com/` and cannot be changed."
        },
        "annotations": {
          "description": "Annotations attach non-identifying metadata to resources. Annotation keys and values are less restricted than those of labels, but should be generally used for small values of broad interest. Larger, topic- specific metadata should be stored in Artifacts.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "mimeType": {
          "description": "A style (format) descriptor for this spec that is specified as a Media Type (https://en.wikipedia.org/wiki/Media_type). Possible values include `application/vnd.apigee.proto`, `application/vnd.apigee.openapi`, and `application/vnd.apigee.graphql`, with possible suffixes representing compression types. These hypothetical names are defined in the vendor tree defined in RFC6838 (https://tools.ietf.org/html/rfc6838) and are not final. Content types can specify compression. Currently only GZip compression is supported (indicated with \"+gzip\").",
          "type": "string"
        },
        "sizeBytes": {
          "format": "int32",
          "type": "integer",
          "readOnly": true,
          "description": "Output only. The size of the spec file in bytes. If the spec is gzipped, this is the size of the uncompressed spec."
        },
        "revisionUpdateTime": {
          "type": "string",
          "description": "Output only. Last update timestamp: when the represented revision was last modified.",
          "readOnly": true,
          "format": "google-datetime"
        },
        "sourceUri": {
          "type": "string",
          "description": "The original source URI of the spec (if one exists). This is an external location that can be used for reference purposes but which may not be authoritative since this external resource may change after the spec is retrieved."
        },
        "revisionCreateTime": {
          "type": "string",
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. Revision creation timestamp; when the represented revision was created."
        },
        "filename": {
          "type": "string",
          "description": "A possibly-hierarchical name used to refer to the spec from other specs."
        },
        "name": {
          "type": "string",
          "description": "Resource name."
        },
        "contents": {
          "type": "string",
          "format": "byte",
          "description": "Input only. The contents of the spec. Provided by API callers when specs are created or updated. To access the contents of a spec, use GetApiSpecContents."
        },
        "revisionId": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Immutable. The revision ID of the spec. A new revision is committed whenever the spec contents are changed. The format is an 8-character hexadecimal string."
        },
        "hash": {
          "readOnly": true,
          "description": "Output only. A SHA-256 hash of the spec's contents. If the spec is gzipped, this is the hash of the uncompressed spec.",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. Creation timestamp; when the spec resource was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        }
      },
      "type": "object"
    },
    "Build": {
      "description": "Build information of the Instance if it's in `ACTIVE` state.",
      "type": "object",
      "id": "Build",
      "properties": {
        "commitId": {
          "description": "Output only. Commit ID of the latest commit in the build.",
          "type": "string",
          "readOnly": true
        },
        "commitTime": {
          "description": "Output only. Commit time of the latest commit in the build.",
          "readOnly": true,
          "format": "google-datetime",
          "type": "string"
        },
        "repo": {
          "readOnly": true,
          "description": "Output only. Path of the open source repository: github.com/apigee/registry.",
          "type": "string"
        }
      }
    },
    "Policy": {
      "properties": {
        "version": {
          "type": "integer",
          "format": "int32",
          "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
        },
        "etag": {
          "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
          "format": "byte",
          "type": "string"
        },
        "bindings": {
          "description": "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
          "items": {
            "$ref": "Binding"
          },
          "type": "array"
        }
      },
      "type": "object",
      "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time \u003c timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time \u003c timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
      "id": "Policy"
    },
    "ApiVersion": {
      "properties": {
        "description": {
          "type": "string",
          "description": "A detailed description."
        },
        "updateTime": {
          "readOnly": true,
          "description": "Output only. Last update timestamp.",
          "type": "string",
          "format": "google-datetime"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Labels attach identifying metadata to resources. Identifying metadata can be used to filter list operations. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one resource (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with `apigeeregistry.googleapis.com/` and cannot be changed."
        },
        "createTime": {
          "description": "Output only. Creation timestamp.",
          "readOnly": true,
          "format": "google-datetime",
          "type": "string"
        },
        "primarySpec": {
          "type": "string",
          "description": "The primary spec for this version. Format: projects/{project}/locations/{location}/apis/{api}/versions/{version}/specs/{spec}"
        },
        "displayName": {
          "type": "string",
          "description": "Human-meaningful name."
        },
        "name": {
          "description": "Resource name.",
          "type": "string"
        },
        "state": {
          "type": "string",
          "description": "A user-definable description of the lifecycle phase of this API version. Format: free-form, but we expect single words that describe API maturity, e.g., \"CONCEPT\", \"DESIGN\", \"DEVELOPMENT\", \"STAGING\", \"PRODUCTION\", \"DEPRECATED\", \"RETIRED\"."
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Annotations attach non-identifying metadata to resources. Annotation keys and values are less restricted than those of labels, but should be generally used for small values of broad interest. Larger, topic- specific metadata should be stored in Artifacts."
        }
      },
      "description": "Describes a particular version of an API. ApiVersions are what consumers actually use.",
      "type": "object",
      "id": "ApiVersion"
    },
    "ListApiDeploymentRevisionsResponse": {
      "type": "object",
      "id": "ListApiDeploymentRevisionsResponse",
      "properties": {
        "nextPageToken": {
          "description": "A token that can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        },
        "apiDeployments": {
          "items": {
            "$ref": "ApiDeployment"
          },
          "type": "array",
          "description": "The revisions of the deployment."
        }
      },
      "description": "Response message for ListApiDeploymentRevisionsResponse."
    },
    "OperationMetadata": {
      "id": "OperationMetadata",
      "type": "object",
      "properties": {
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The time the operation was created."
        },
        "statusMessage": {
          "description": "Human-readable status of the operation, if any.",
          "type": "string"
        },
        "endTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The time the operation finished running."
        },
        "cancellationRequested": {
          "type": "boolean",
          "description": "Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`."
        },
        "apiVersion": {
          "type": "string",
          "description": "API version used to start the operation."
        },
        "verb": {
          "type": "string",
          "description": "Name of the verb executed by the operation."
        },
        "target": {
          "type": "string",
          "description": "Server-defined resource path for the target of the operation."
        }
      },
      "description": "Represents the metadata of the long-running operation."
    },
    "ListLocationsResponse": {
      "properties": {
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        },
        "locations": {
          "items": {
            "$ref": "Location"
          },
          "type": "array",
          "description": "A list of locations that matches the specified filter in the request."
        }
      },
      "type": "object",
      "description": "The response message for Locations.ListLocations.",
      "id": "ListLocationsResponse"
    },
    "Status": {
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "The status code, which should be an enum value of google.rpc.Code."
        },
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
        },
        "details": {
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            }
          },
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "type": "array"
        }
      },
      "id": "Status",
      "type": "object"
    },
    "TestIamPermissionsRequest": {
      "description": "Request message for `TestIamPermissions` method.",
      "type": "object",
      "id": "TestIamPermissionsRequest",
      "properties": {
        "permissions": {
          "description": "The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "TagApiSpecRevisionRequest": {
      "type": "object",
      "description": "Request message for TagApiSpecRevision.",
      "id": "TagApiSpecRevisionRequest",
      "properties": {
        "tag": {
          "type": "string",
          "description": "Required. The tag to apply. The tag should be at most 40 characters, and match `a-z{3,39}`."
        }
      }
    },
    "Artifact": {
      "description": "Artifacts of resources. Artifacts are unique (single-value) per resource and are used to store metadata that is too large or numerous to be stored directly on the resource. Since artifacts are stored separately from parent resources, they should generally be used for metadata that is needed infrequently, i.e., not for display in primary views of the resource but perhaps displayed or downloaded upon request. The `ListArtifacts` method allows artifacts to be quickly enumerated and checked for presence without downloading their (potentially-large) contents.",
      "id": "Artifact",
      "type": "object",
      "properties": {
        "contents": {
          "description": "Input only. The contents of the artifact. Provided by API callers when artifacts are created or replaced. To access the contents of an artifact, use GetArtifactContents.",
          "type": "string",
          "format": "byte"
        },
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. Creation timestamp.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Resource name."
        },
        "sizeBytes": {
          "format": "int32",
          "type": "integer",
          "readOnly": true,
          "description": "Output only. The size of the artifact in bytes. If the artifact is gzipped, this is the size of the uncompressed artifact."
        },
        "hash": {
          "type": "string",
          "description": "Output only. A SHA-256 hash of the artifact's contents. If the artifact is gzipped, this is the hash of the uncompressed artifact.",
          "readOnly": true
        },
        "annotations": {
          "description": "Annotations attach non-identifying metadata to resources. Annotation keys and values are less restricted than those of labels, but should be generally used for small values of broad interest. Larger, topic- specific metadata should be stored in Artifacts.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "updateTime": {
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. Last update timestamp.",
          "type": "string"
        },
        "mimeType": {
          "type": "string",
          "description": "A content type specifier for the artifact. Content type specifiers are Media Types (https://en.wikipedia.org/wiki/Media_type) with a possible \"schema\" parameter that specifies a schema for the stored information. Content types can specify compression. Currently only GZip compression is supported (indicated with \"+gzip\")."
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Labels attach identifying metadata to resources. Identifying metadata can be used to filter list operations. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one resource (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with \"registry.googleapis.com/\" and cannot be changed."
        }
      }
    },
    "TagApiDeploymentRevisionRequest": {
      "description": "Request message for TagApiDeploymentRevision.",
      "properties": {
        "tag": {
          "description": "Required. The tag to apply. The tag should be at most 40 characters, and match `a-z{3,39}`.",
          "type": "string"
        }
      },
      "id": "TagApiDeploymentRevisionRequest",
      "type": "object"
    },
    "Expr": {
      "properties": {
        "location": {
          "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.",
          "type": "string"
        },
        "description": {
          "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.",
          "type": "string"
        },
        "expression": {
          "type": "string",
          "description": "Textual representation of an expression in Common Expression Language syntax."
        },
        "title": {
          "type": "string",
          "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
        }
      },
      "type": "object",
      "description": "Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() \u003c 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.",
      "id": "Expr"
    },
    "ListOperationsResponse": {
      "properties": {
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        },
        "operations": {
          "description": "A list of operations that matches the specified filter in the request.",
          "items": {
            "$ref": "Operation"
          },
          "type": "array"
        }
      },
      "type": "object",
      "description": "The response message for Operations.ListOperations.",
      "id": "ListOperationsResponse"
    },
    "Config": {
      "id": "Config",
      "type": "object",
      "description": "Available configurations to provision an Instance.",
      "properties": {
        "location": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The GCP location where the Instance resides."
        },
        "cmekKeyName": {
          "description": "Required. The Customer Managed Encryption Key (CMEK) used for data encryption. The CMEK name should follow the format of `projects/([^/]+)/locations/([^/]+)/keyRings/([^/]+)/cryptoKeys/([^/]+)`, where the `location` must match InstanceConfig.location.",
          "type": "string"
        }
      }
    },
    "ListApiSpecRevisionsResponse": {
      "description": "Response message for ListApiSpecRevisionsResponse.",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "A token that can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        },
        "apiSpecs": {
          "description": "The revisions of the spec.",
          "items": {
            "$ref": "ApiSpec"
          },
          "type": "array"
        }
      },
      "id": "ListApiSpecRevisionsResponse"
    },
    "SetIamPolicyRequest": {
      "description": "Request message for `SetIamPolicy` method.",
      "properties": {
        "policy": {
          "$ref": "Policy",
          "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them."
        }
      },
      "id": "SetIamPolicyRequest",
      "type": "object"
    },
    "RollbackApiSpecRequest": {
      "type": "object",
      "properties": {
        "revisionId": {
          "description": "Required. The revision ID to roll back to. It must be a revision of the same spec. Example: `c7cfa2a8`",
          "type": "string"
        }
      },
      "description": "Request message for RollbackApiSpec.",
      "id": "RollbackApiSpecRequest"
    },
    "Operation": {
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "properties": {
        "metadata": {
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "type": "object",
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any."
        },
        "response": {
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "type": "object",
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`."
        },
        "done": {
          "type": "boolean",
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
        },
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
          "type": "string"
        },
        "error": {
          "$ref": "Status",
          "description": "The error result of the operation in case of failure or cancellation."
        }
      },
      "id": "Operation",
      "type": "object"
    },
    "ListArtifactsResponse": {
      "type": "object",
      "properties": {
        "artifacts": {
          "items": {
            "$ref": "Artifact"
          },
          "type": "array",
          "description": "The artifacts from the specified publisher."
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages."
        }
      },
      "description": "Response message for ListArtifacts.",
      "id": "ListArtifactsResponse"
    },
    "HttpBody": {
      "properties": {
        "extensions": {
          "items": {
            "type": "object",
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            }
          },
          "description": "Application specific response metadata. Must be set in the first response for streaming APIs.",
          "type": "array"
        },
        "contentType": {
          "description": "The HTTP Content-Type header value specifying the content type of the body.",
          "type": "string"
        },
        "data": {
          "format": "byte",
          "description": "The HTTP request/response body as raw binary.",
          "type": "string"
        }
      },
      "id": "HttpBody",
      "description": "Message that represents an arbitrary HTTP body. It should only be used for payload formats that can't be represented as JSON, such as raw binary or an HTML page. This message can be used both in streaming and non-streaming API methods in the request as well as the response. It can be used as a top-level request field, which is convenient if one wants to extract parameters from either the URL or HTTP template into the request fields and also want access to the raw HTTP body. Example: message GetResourceRequest { // A unique request id. string request_id = 1; // The raw HTTP body is bound to this field. google.api.HttpBody http_body = 2; } service ResourceService { rpc GetResource(GetResourceRequest) returns (google.api.HttpBody); rpc UpdateResource(google.api.HttpBody) returns (google.protobuf.Empty); } Example with streaming methods: service CaldavService { rpc GetCalendar(stream google.api.HttpBody) returns (stream google.api.HttpBody); rpc UpdateCalendar(stream google.api.HttpBody) returns (stream google.api.HttpBody); } Use of this type only changes how the request and response bodies are handled, all other features will continue to work unchanged.",
      "type": "object"
    },
    "ListApisResponse": {
      "properties": {
        "nextPageToken": {
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        },
        "apis": {
          "items": {
            "$ref": "Api"
          },
          "description": "The APIs from the specified publisher.",
          "type": "array"
        }
      },
      "id": "ListApisResponse",
      "type": "object",
      "description": "Response message for ListApis."
    }
  },
  "canonicalName": "Apigee Registry"
}
