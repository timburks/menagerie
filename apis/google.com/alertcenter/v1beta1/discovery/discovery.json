{
  "id": "alertcenter:v1beta1",
  "name": "alertcenter",
  "parameters": {
    "access_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth access token."
    },
    "callback": {
      "description": "JSONP",
      "type": "string",
      "location": "query"
    },
    "upload_protocol": {
      "location": "query",
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
    },
    "oauth_token": {
      "location": "query",
      "description": "OAuth 2.0 token for the current user.",
      "type": "string"
    },
    "$.xgafv": {
      "description": "V1 error format.",
      "type": "string",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "enum": [
        "1",
        "2"
      ],
      "location": "query"
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query",
      "type": "string"
    },
    "alt": {
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "description": "Data format for response.",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query",
      "type": "string",
      "default": "json"
    },
    "prettyPrint": {
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "type": "boolean",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response."
    },
    "uploadType": {
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string"
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query",
      "type": "string"
    }
  },
  "protocol": "rest",
  "canonicalName": "AlertCenter",
  "fullyEncodeReservedExpansion": true,
  "discoveryVersion": "v1",
  "basePath": "",
  "schemas": {
    "BatchDeleteAlertsRequest": {
      "type": "object",
      "properties": {
        "customerId": {
          "description": "Optional. The unique identifier of the Google Workspace account of the customer the alerts are associated with. The `customer_id` must have the initial \"C\" stripped (for example, `046psxkn`). Inferred from the caller identity if not provided. [Find your customer ID](https://support.google.com/cloudidentity/answer/10070793).",
          "type": "string"
        },
        "alertId": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Required. The list of alert IDs to delete."
        }
      },
      "id": "BatchDeleteAlertsRequest",
      "description": "A request to perform batch delete on alerts."
    },
    "Settings": {
      "description": "Customer-level settings.",
      "id": "Settings",
      "type": "object",
      "properties": {
        "notifications": {
          "items": {
            "$ref": "Notification"
          },
          "type": "array",
          "description": "The list of notifications."
        }
      }
    },
    "AppsOutage": {
      "description": "An outage incident reported for a Google Workspace service.",
      "properties": {
        "dashboardUri": {
          "type": "string",
          "description": "Link to the outage event in Google Workspace Status Dashboard"
        },
        "nextUpdateTime": {
          "format": "google-datetime",
          "description": "Timestamp by which the next update is expected to arrive.",
          "type": "string"
        },
        "resolutionTime": {
          "description": "Timestamp when the outage is expected to be resolved, or has confirmed resolution. Provided only when known.",
          "format": "google-datetime",
          "type": "string"
        },
        "status": {
          "enum": [
            "STATUS_UNSPECIFIED",
            "NEW",
            "ONGOING",
            "RESOLVED",
            "FALSE_POSITIVE",
            "PARTIALLY_RESOLVED",
            "MERGED",
            "DOWNGRADED"
          ],
          "enumDescriptions": [
            "Status is unspecified.",
            "The incident has just been reported.",
            "The incident is ongoing.",
            "The incident has been resolved.",
            "Further assessment indicated no customer impact.",
            "The incident has been partially resolved.",
            "The incident was merged into a parent.",
            "The incident has lower impact than initially anticipated."
          ],
          "description": "Current outage status.",
          "type": "string"
        },
        "mergeInfo": {
          "description": "Indicates new alert details under which the outage is communicated. Only populated when Status is MERGED.",
          "$ref": "MergeInfo"
        },
        "incidentTrackingId": {
          "description": "Incident tracking ID.",
          "type": "string"
        },
        "products": {
          "items": {
            "type": "string"
          },
          "description": "List of products impacted by the outage.",
          "type": "array"
        }
      },
      "type": "object",
      "id": "AppsOutage"
    },
    "Empty": {
      "type": "object",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "id": "Empty",
      "properties": {}
    },
    "BadWhitelist": {
      "id": "BadWhitelist",
      "type": "object",
      "properties": {
        "messages": {
          "description": "The list of messages contained by this alert.",
          "type": "array",
          "items": {
            "$ref": "GmailMessageInfo"
          }
        },
        "sourceIp": {
          "description": "The source IP address of the malicious email, for example, `127.0.0.1`.",
          "type": "string"
        },
        "maliciousEntity": {
          "description": "The entity whose actions triggered a Gmail phishing alert.",
          "$ref": "MaliciousEntity"
        },
        "domainId": {
          "description": "The domain ID.",
          "$ref": "DomainId"
        }
      },
      "description": "Alert for setting the domain or IP that malicious email comes from as whitelisted domain or IP in Gmail advanced settings."
    },
    "ListAlertsResponse": {
      "properties": {
        "alerts": {
          "description": "The list of alerts.",
          "type": "array",
          "items": {
            "$ref": "Alert"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "The token for the next page. If not empty, indicates that there may be more alerts that match the listing request; this value can be used in a subsequent ListAlertsRequest to get alerts continuing from last result of the current list call."
        }
      },
      "type": "object",
      "description": "Response message for an alert listing request.",
      "id": "ListAlertsResponse"
    },
    "SuspiciousActivity": {
      "id": "SuspiciousActivity",
      "properties": {
        "events": {
          "description": "Required. The list of security events.",
          "type": "array",
          "items": {
            "$ref": "SuspiciousActivitySecurityDetail"
          }
        },
        "email": {
          "description": "The email of the user this alert was created for.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "A mobile suspicious activity alert. Derived from audit logs."
    },
    "VoicemailMisconfiguration": {
      "type": "object",
      "id": "VoicemailMisconfiguration",
      "description": "Issue(s) with sending to voicemail.",
      "properties": {
        "errors": {
          "items": {
            "$ref": "VoicemailRecipientError"
          },
          "type": "array",
          "description": "Issue(s) with voicemail recipients."
        }
      }
    },
    "TransferError": {
      "properties": {
        "entityType": {
          "description": "Type of entity being transferred to. For ring group members, this should always be USER.",
          "enumDescriptions": [
            "Entity type wasn't set.",
            "Transfer to auto attendant.",
            "Transfer to ring group.",
            "Transfer to user."
          ],
          "enum": [
            "TRANSFER_ENTITY_TYPE_UNSPECIFIED",
            "TRANSFER_AUTO_ATTENDANT",
            "TRANSFER_RING_GROUP",
            "TRANSFER_USER"
          ],
          "type": "string"
        },
        "invalidReason": {
          "enumDescriptions": [
            "Reason wasn't specified.",
            "The transfer target can't be found—most likely it was deleted.",
            "The user's Google Voice license was removed.",
            "The user's Google Workspace account was suspended.",
            "The transfer target no longer has a phone number. This reason should become deprecated once we support numberless transfer."
          ],
          "description": "Reason for the error.",
          "type": "string",
          "enum": [
            "TRANSFER_INVALID_REASON_UNSPECIFIED",
            "TRANSFER_TARGET_DELETED",
            "UNLICENSED",
            "SUSPENDED",
            "NO_PHONE_NUMBER"
          ]
        },
        "name": {
          "type": "string",
          "description": "User's full name, or the ring group / auto attendant name. This may be unavailable if the entity was deleted."
        },
        "email": {
          "description": "User's email address. This may be unavailable if the entity was deleted.",
          "type": "string"
        },
        "id": {
          "description": "Ring group or auto attendant ID. Not set for users.",
          "type": "string"
        }
      },
      "description": "Details for an invalid transfer or forward.",
      "type": "object",
      "id": "TransferError"
    },
    "MandatoryServiceAnnouncement": {
      "id": "MandatoryServiceAnnouncement",
      "type": "object",
      "description": "Alert Created by the MSA team for communications necessary for continued use of Google Workspace Products.",
      "properties": {
        "title": {
          "type": "string",
          "description": "One line summary of the announcement"
        },
        "description": {
          "description": "Detailed, freeform text describing the announcement",
          "type": "string"
        }
      }
    },
    "UserChanges": {
      "id": "UserChanges",
      "description": "Alerts from UserChanges bucket Rules for predefined rules which contain the below rules. Suspended user made active New user Added User suspended (by admin) User granted admin privileges User admin privileges revoked User deleted Users password changed",
      "properties": {
        "name": {
          "description": "Rule name",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CsvRow": {
      "description": "A representation of a single data row in a CSV file.",
      "id": "CsvRow",
      "properties": {
        "entries": {
          "items": {
            "type": "string"
          },
          "description": "The data entries in a CSV file row, as a string array rather than a single comma-separated string.",
          "type": "array"
        }
      },
      "type": "object"
    },
    "MergeInfo": {
      "type": "object",
      "id": "MergeInfo",
      "description": "New alert tracking numbers.",
      "properties": {
        "newAlertId": {
          "type": "string",
          "description": "Optional. New alert ID. Reference the [google.apps.alertcenter.Alert] with this ID for the current state."
        },
        "newIncidentTrackingId": {
          "description": "The new tracking ID from the parent incident.",
          "type": "string"
        }
      }
    },
    "BatchUndeleteAlertsResponse": {
      "type": "object",
      "properties": {
        "successAlertIds": {
          "type": "array",
          "description": "The successful list of alert IDs.",
          "items": {
            "type": "string"
          }
        },
        "failedAlertStatus": {
          "type": "object",
          "description": "The status details for each failed `alert_id`.",
          "additionalProperties": {
            "$ref": "Status"
          }
        }
      },
      "id": "BatchUndeleteAlertsResponse",
      "description": "Response to batch undelete operation on alerts."
    },
    "PredefinedDetectorInfo": {
      "description": "Detector provided by Google.",
      "id": "PredefinedDetectorInfo",
      "properties": {
        "detectorName": {
          "type": "string",
          "description": "Name that uniquely identifies the detector."
        }
      },
      "type": "object"
    },
    "VoicemailRecipientError": {
      "description": "Issue(s) with a voicemail recipient.",
      "type": "object",
      "properties": {
        "invalidReason": {
          "enumDescriptions": [
            "Reason wasn't specified.",
            "User can't receive emails due to insufficient quota.",
            "All recipients were deleted."
          ],
          "type": "string",
          "enum": [
            "EMAIL_INVALID_REASON_UNSPECIFIED",
            "OUT_OF_QUOTA",
            "RECIPIENT_DELETED"
          ],
          "description": "Reason for the error."
        },
        "email": {
          "description": "Email address of the invalid recipient. This may be unavailable if the recipient was deleted.",
          "type": "string"
        }
      },
      "id": "VoicemailRecipientError"
    },
    "ListAlertFeedbackResponse": {
      "description": "Response message for an alert feedback listing request.",
      "properties": {
        "feedback": {
          "type": "array",
          "description": "The list of alert feedback. Feedback entries for each alert are ordered by creation time descending.",
          "items": {
            "$ref": "AlertFeedback"
          }
        }
      },
      "type": "object",
      "id": "ListAlertFeedbackResponse"
    },
    "ApnsCertificateExpirationInfo": {
      "description": "The explanation message associated with ApnsCertificationExpiring and ApnsCertificationExpired alerts.",
      "properties": {
        "uid": {
          "type": "string",
          "description": "The UID for the certificate."
        },
        "expirationTime": {
          "description": "The expiration date of the APNS Certificate.",
          "type": "string",
          "format": "google-datetime"
        },
        "appleId": {
          "type": "string",
          "description": "The Apple ID used for the certificate may be blank if admins didn't enter it."
        }
      },
      "type": "object",
      "id": "ApnsCertificateExpirationInfo"
    },
    "Attachment": {
      "type": "object",
      "description": "Attachment with application-specific information about an alert.",
      "id": "Attachment",
      "properties": {
        "csv": {
          "description": "A CSV file attachment.",
          "$ref": "Csv"
        }
      }
    },
    "DlpRuleViolation": {
      "type": "object",
      "description": "Alerts that get triggered on violations of Data Loss Prevention (DLP) rules.",
      "properties": {
        "ruleViolationInfo": {
          "description": "Details about the violated DLP rule. Admins can use the predefined detectors provided by Google Cloud DLP https://cloud.google.com/dlp/ when setting up a DLP rule. Matched Cloud DLP detectors in this violation if any will be captured in the MatchInfo.predefined_detector.",
          "$ref": "RuleViolationInfo"
        }
      },
      "id": "DlpRuleViolation"
    },
    "Alert": {
      "description": "An alert affecting a customer.",
      "type": "object",
      "properties": {
        "updateTime": {
          "type": "string",
          "description": "Output only. The time this alert was last updated.",
          "format": "google-datetime"
        },
        "metadata": {
          "description": "Output only. The metadata associated with this alert.",
          "$ref": "AlertMetadata"
        },
        "data": {
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "description": "Optional. The data associated with this alert, for example google.apps.alertcenter.type.DeviceCompromised."
        },
        "source": {
          "type": "string",
          "description": "Required. A unique identifier for the system that reported the alert. This is output only after alert is created. Supported sources are any of the following: * Google Operations * Mobile device management * Gmail phishing * Data Loss Prevention * Domain wide takeout * State sponsored attack * Google identity * Apps outage"
        },
        "securityInvestigationToolLink": {
          "description": "Output only. An optional [Security Investigation Tool](https://support.google.com/a/answer/7575955) query for this alert.",
          "type": "string"
        },
        "type": {
          "type": "string",
          "description": "Required. The type of the alert. This is output only after alert is created. For a list of available alert types see [Google Workspace Alert types](https://developers.google.com/admin-sdk/alertcenter/reference/alert-types)."
        },
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The time this alert was created."
        },
        "endTime": {
          "type": "string",
          "description": "Optional. The time the event that caused this alert ceased being active. If provided, the end time must not be earlier than the start time. If not provided, it indicates an ongoing alert.",
          "format": "google-datetime"
        },
        "alertId": {
          "type": "string",
          "description": "Output only. The unique identifier for the alert."
        },
        "customerId": {
          "description": "Output only. The unique identifier of the Google Workspace account of the customer.",
          "type": "string"
        },
        "startTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Required. The time the event that caused this alert was started or detected."
        },
        "deleted": {
          "description": "Output only. `True` if this alert is marked for deletion.",
          "type": "boolean"
        },
        "etag": {
          "description": "Optional. `etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of an alert from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform alert updates in order to avoid race conditions: An `etag` is returned in the response which contains alerts, and systems are expected to put that etag in the request to update alert to ensure that their change will be applied to the same version of the alert. If no `etag` is provided in the call to update alert, then the existing alert is overwritten blindly.",
          "type": "string"
        }
      },
      "id": "Alert"
    },
    "AccountSuspensionDetails": {
      "id": "AccountSuspensionDetails",
      "type": "object",
      "description": "Details about why an account is receiving an account suspension warning.",
      "properties": {
        "productName": {
          "type": "string",
          "description": "The name of the product being abused. This is restricted to only the following values: \"Gmail\" \"Google Workspace\" \"Payments\" \"Voice\" \"YouTube\" \"Other\""
        },
        "abuseReason": {
          "description": "The reason why this account is receiving an account suspension warning.",
          "enumDescriptions": [
            "Abuse reason is unspecified.",
            "This account is being suspended for a Terms of Service violation.",
            "This account is being suspended for spam.",
            "This account is being suspended for phishing.",
            "This account is being suspended for artificially boosting traffic to a website.",
            "This account is being suspended for fraud.",
            "This account is being suspended for number harvesting.",
            "This account is being suspended for payments fraud.",
            "This account is being suspended for unwanted content."
          ],
          "type": "string",
          "enum": [
            "ACCOUNT_SUSPENSION_ABUSE_REASON_UNSPECIFIED",
            "TOS_VIOLATION",
            "SPAM",
            "PHISHING",
            "TRAFFIC_PUMPING",
            "FRAUD",
            "NUMBER_HARVESTING",
            "PAYMENTS_FRAUD",
            "UNWANTED_CONTENT"
          ]
        }
      }
    },
    "DomainId": {
      "id": "DomainId",
      "properties": {
        "customerPrimaryDomain": {
          "type": "string",
          "description": "The primary domain for the customer."
        }
      },
      "type": "object",
      "description": "Domain ID of Gmail phishing alerts."
    },
    "LoginDetails": {
      "description": "The details of the login action.",
      "properties": {
        "loginTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Optional. The successful login time that is associated with the warning event. This isn't present for blocked login attempts."
        },
        "ipAddress": {
          "description": "Optional. The human-readable IP address (for example, `11.22.33.44`) that is associated with the warning event.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "LoginDetails"
    },
    "StateSponsoredAttack": {
      "properties": {
        "email": {
          "description": "The email of the user this incident was created for.",
          "type": "string"
        }
      },
      "description": "A state-sponsored attack alert. Derived from audit logs.",
      "id": "StateSponsoredAttack",
      "type": "object"
    },
    "BatchDeleteAlertsResponse": {
      "type": "object",
      "id": "BatchDeleteAlertsResponse",
      "properties": {
        "failedAlertStatus": {
          "description": "The status details for each failed `alert_id`.",
          "additionalProperties": {
            "$ref": "Status"
          },
          "type": "object"
        },
        "successAlertIds": {
          "description": "The successful list of alert IDs.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "description": "Response to batch delete operation on alerts."
    },
    "GoogleOperations": {
      "type": "object",
      "id": "GoogleOperations",
      "properties": {
        "affectedUserEmails": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The list of emails which correspond to the users directly affected by the incident."
        },
        "attachmentData": {
          "$ref": "Attachment",
          "description": "Optional. Application-specific data for an incident, provided when the Google Workspace application which reported the incident cannot be completely restored to a valid state."
        },
        "title": {
          "description": "A one-line incident description.",
          "type": "string"
        },
        "domain": {
          "description": "Customer domain for email template personalization.",
          "type": "string"
        },
        "description": {
          "type": "string",
          "description": "A detailed, freeform incident description."
        },
        "header": {
          "description": "A header to display above the incident message. Typically used to attach a localized notice on the timeline for followup comms translations.",
          "type": "string"
        }
      },
      "description": "An incident reported by Google Operations for a Google Workspace application."
    },
    "SuperAdminPasswordResetEvent": {
      "properties": {
        "userEmail": {
          "type": "string",
          "description": "email of person whose password was reset"
        }
      },
      "id": "SuperAdminPasswordResetEvent",
      "description": "Event occurred when password was reset for super admin in customer's account. The event are being received from insight forwarder",
      "type": "object"
    },
    "AccountWarning": {
      "id": "AccountWarning",
      "type": "object",
      "description": "Alerts for user account warning events.",
      "properties": {
        "email": {
          "description": "Required. The email of the user that this event belongs to.",
          "type": "string"
        },
        "loginDetails": {
          "description": "Optional. Details of the login action associated with the warning event. This is only available for: * Suspicious login * Suspicious login (less secure app) * Suspicious programmatic login * User suspended (suspicious activity)",
          "$ref": "LoginDetails"
        }
      }
    },
    "DomainWideTakeoutInitiated": {
      "description": "A takeout operation for the entire domain was initiated by an admin. Derived from audit logs.",
      "id": "DomainWideTakeoutInitiated",
      "properties": {
        "takeoutRequestId": {
          "description": "The takeout request ID.",
          "type": "string"
        },
        "email": {
          "type": "string",
          "description": "The email of the admin who initiated the takeout."
        }
      },
      "type": "object"
    },
    "SSOProfileDeletedEvent": {
      "id": "SSOProfileDeletedEvent",
      "type": "object",
      "description": "Event occurred when SSO Profile deleted in customer's account. The event are being received from insight forwarder",
      "properties": {
        "inboundSsoProfileName": {
          "description": "sso profile name which got deleted",
          "type": "string"
        }
      }
    },
    "AppSettingsChanged": {
      "description": "Alerts from AppSettingsChanged bucket Rules configured by Admin which contain the below rules. Calendar settings changed Drive settings changed Email settings changed Mobile settings changed",
      "id": "AppSettingsChanged",
      "properties": {
        "alertDetails": {
          "format": "byte",
          "description": "Any other associated alert details, for example, AlertConfiguration.",
          "type": "string"
        },
        "name": {
          "description": "Rule name",
          "type": "string"
        }
      },
      "type": "object"
    },
    "UserDefinedDetectorInfo": {
      "id": "UserDefinedDetectorInfo",
      "properties": {
        "resourceName": {
          "description": "Resource name that uniquely identifies the detector.",
          "type": "string"
        },
        "displayName": {
          "type": "string",
          "description": "Display name of the detector."
        }
      },
      "type": "object",
      "description": "Detector defined by administrators."
    },
    "ResourceInfo": {
      "id": "ResourceInfo",
      "type": "object",
      "properties": {
        "resourceTitle": {
          "description": "Title of the resource, for example email subject, or document title.",
          "type": "string"
        },
        "documentId": {
          "type": "string",
          "description": "Drive file ID."
        }
      },
      "description": "Proto that contains resource information."
    },
    "AlertMetadata": {
      "properties": {
        "status": {
          "type": "string",
          "description": "The current status of the alert. The supported values are the following: * NOT_STARTED * IN_PROGRESS * CLOSED"
        },
        "assignee": {
          "description": "The email address of the user assigned to the alert.",
          "type": "string"
        },
        "customerId": {
          "description": "Output only. The unique identifier of the Google Workspace account of the customer.",
          "type": "string"
        },
        "updateTime": {
          "description": "Output only. The time this metadata was last updated.",
          "type": "string",
          "format": "google-datetime"
        },
        "severity": {
          "description": "The severity value of the alert. Alert Center will set this field at alert creation time, default's to an empty string when it could not be determined. The supported values for update actions on this field are the following: * HIGH * MEDIUM * LOW",
          "type": "string"
        },
        "alertId": {
          "type": "string",
          "description": "Output only. The alert identifier."
        },
        "etag": {
          "type": "string",
          "description": "Optional. `etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of an alert metadata from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform metadata updates in order to avoid race conditions: An `etag` is returned in the response which contains alert metadata, and systems are expected to put that etag in the request to update alert metadata to ensure that their change will be applied to the same version of the alert metadata. If no `etag` is provided in the call to update alert metadata, then the existing alert metadata is overwritten blindly."
        }
      },
      "id": "AlertMetadata",
      "type": "object",
      "description": "An alert metadata."
    },
    "SSOProfileCreatedEvent": {
      "id": "SSOProfileCreatedEvent",
      "description": "Event occurred when SSO Profile created in customer's account. The event are being received from insight forwarder",
      "properties": {
        "inboundSsoProfileName": {
          "type": "string",
          "description": "sso profile name which got created"
        }
      },
      "type": "object"
    },
    "SensitiveAdminAction": {
      "id": "SensitiveAdminAction",
      "properties": {
        "superAdminPasswordResetEvent": {
          "$ref": "SuperAdminPasswordResetEvent",
          "description": "Event occurred when password was reset for super admin in customer's account"
        },
        "ssoProfileDeletedEvent": {
          "description": "Event occurred when SSO Profile deleted in customer's account",
          "$ref": "SSOProfileDeletedEvent"
        },
        "eventTime": {
          "description": "The time at which event occurred",
          "type": "string",
          "format": "google-datetime"
        },
        "ssoProfileCreatedEvent": {
          "$ref": "SSOProfileCreatedEvent",
          "description": "Event occurred when SSO Profile created in customer's account"
        },
        "ssoProfileUpdatedEvent": {
          "description": "Event occurred when SSO Profile updated in customer's account",
          "$ref": "SSOProfileUpdatedEvent"
        },
        "actorEmail": {
          "type": "string",
          "description": "Email of person who performed the action"
        },
        "primaryAdminChangedEvent": {
          "description": "Event occurred when primary admin changed in customer's account",
          "$ref": "PrimaryAdminChangedEvent"
        }
      },
      "type": "object",
      "description": "Alert that is triggered when Sensitive Admin Action occur in customer account."
    },
    "TransferMisconfiguration": {
      "properties": {
        "errors": {
          "items": {
            "$ref": "TransferError"
          },
          "description": "Details for each invalid transfer or forward.",
          "type": "array"
        }
      },
      "id": "TransferMisconfiguration",
      "description": "Error related to transferring or forwarding a phone call.",
      "type": "object"
    },
    "PhishingSpike": {
      "description": "Alert for a spike in user reported phishing. *Warning*: This type has been deprecated. Use [MailPhishing](/admin-sdk/alertcenter/reference/rest/v1beta1/MailPhishing) instead.",
      "type": "object",
      "properties": {
        "isInternal": {
          "description": "If `true`, the email originated from within the organization.",
          "type": "boolean"
        },
        "maliciousEntity": {
          "description": "The entity whose actions triggered a Gmail phishing alert.",
          "$ref": "MaliciousEntity"
        },
        "messages": {
          "description": "The list of messages contained by this alert.",
          "items": {
            "$ref": "GmailMessageInfo"
          },
          "type": "array"
        },
        "domainId": {
          "description": "The domain ID.",
          "$ref": "DomainId"
        }
      },
      "id": "PhishingSpike"
    },
    "AppMakerSqlSetupNotification": {
      "properties": {
        "requestInfo": {
          "description": "List of applications with requests for default SQL set up.",
          "type": "array",
          "items": {
            "$ref": "RequestInfo"
          }
        }
      },
      "id": "AppMakerSqlSetupNotification",
      "type": "object",
      "description": "Alerts from App Maker to notify admins to set up default SQL instance."
    },
    "MaliciousEntity": {
      "description": "Entity whose actions triggered a Gmail phishing alert.",
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "User",
          "description": "The actor who triggered a gmail phishing alert."
        },
        "displayName": {
          "description": "The header from display name.",
          "type": "string"
        },
        "fromHeader": {
          "type": "string",
          "description": "The sender email address."
        }
      },
      "id": "MaliciousEntity"
    },
    "Notification": {
      "description": "Settings for callback notifications. For more details see [Google Workspace Alert Notification](https://developers.google.com/admin-sdk/alertcenter/guides/notifications).",
      "id": "Notification",
      "properties": {
        "cloudPubsubTopic": {
          "$ref": "CloudPubsubTopic",
          "description": "A Google Cloud Pub/sub topic destination."
        }
      },
      "type": "object"
    },
    "Status": {
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
        },
        "code": {
          "format": "int32",
          "type": "integer",
          "description": "The status code, which should be an enum value of google.rpc.Code."
        },
        "details": {
          "items": {
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            },
            "type": "object"
          },
          "type": "array",
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
        }
      },
      "id": "Status"
    },
    "ActivityRule": {
      "description": "Alerts from Google Workspace Security Center rules service configured by an admin.",
      "properties": {
        "description": {
          "type": "string",
          "description": "Description of the rule."
        },
        "actionNames": {
          "description": "List of action names associated with the rule threshold.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "updateTime": {
          "description": "The timestamp of the last update to the rule.",
          "format": "google-datetime",
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "description": "Rule create timestamp.",
          "format": "google-datetime"
        },
        "query": {
          "type": "string",
          "description": "Query that is used to get the data from the associated source."
        },
        "supersedingAlert": {
          "type": "string",
          "description": "Alert ID superseding this alert. It is used to indicate that superseding alert is essentially extension of this alert and we found the relationship after creating both alerts."
        },
        "name": {
          "type": "string",
          "description": "Rule name."
        },
        "threshold": {
          "type": "string",
          "description": "Alert threshold is for example “COUNT \u003e 5”."
        },
        "supersededAlerts": {
          "description": "List of alert IDs superseded by this alert. It is used to indicate that this alert is essentially extension of superseded alerts and we found the relationship after creating these alerts.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "triggerSource": {
          "type": "string",
          "description": "The trigger sources for this rule. * GMAIL_EVENTS * DEVICE_EVENTS * USER_EVENTS"
        },
        "windowSize": {
          "description": "Rule window size. Possible values are 1 hour or 24 hours.",
          "type": "string",
          "format": "google-duration"
        },
        "displayName": {
          "type": "string",
          "description": "Alert display name."
        }
      },
      "type": "object",
      "id": "ActivityRule"
    },
    "BatchUndeleteAlertsRequest": {
      "id": "BatchUndeleteAlertsRequest",
      "type": "object",
      "properties": {
        "customerId": {
          "type": "string",
          "description": "Optional. The unique identifier of the Google Workspace account of the customer the alerts are associated with. The `customer_id` must have the initial \"C\" stripped (for example, `046psxkn`). Inferred from the caller identity if not provided. [Find your customer ID](https://support.google.com/cloudidentity/answer/10070793)."
        },
        "alertId": {
          "type": "array",
          "description": "Required. The list of alert IDs to undelete.",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "A request to perform batch undelete on alerts."
    },
    "ActionInfo": {
      "description": "Metadata related to the action.",
      "properties": {},
      "type": "object",
      "id": "ActionInfo"
    },
    "AlertFeedback": {
      "type": "object",
      "id": "AlertFeedback",
      "description": "A customer feedback about an alert.",
      "properties": {
        "customerId": {
          "type": "string",
          "description": "Output only. The unique identifier of the Google Workspace account of the customer."
        },
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The time this feedback was created."
        },
        "alertId": {
          "type": "string",
          "description": "Output only. The alert identifier."
        },
        "email": {
          "description": "Output only. The email of the user that provided the feedback.",
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "ALERT_FEEDBACK_TYPE_UNSPECIFIED",
            "NOT_USEFUL",
            "SOMEWHAT_USEFUL",
            "VERY_USEFUL"
          ],
          "description": "Required. The type of the feedback.",
          "enumDescriptions": [
            "The feedback type is not specified.",
            "The alert report is not useful.",
            "The alert report is somewhat useful.",
            "The alert report is very useful."
          ]
        },
        "feedbackId": {
          "type": "string",
          "description": "Output only. The unique identifier for the feedback."
        }
      }
    },
    "PrimaryAdminChangedEvent": {
      "id": "PrimaryAdminChangedEvent",
      "properties": {
        "previousAdminEmail": {
          "type": "string",
          "description": "Email of person who was the primary admin before the action"
        },
        "updatedAdminEmail": {
          "type": "string",
          "description": "Email of person who is the primary admin after the action"
        },
        "domain": {
          "description": "domain in which actioned occurred",
          "type": "string"
        }
      },
      "description": "Event occurred when primary admin changed in customer's account. The event are being received from insight forwarder",
      "type": "object"
    },
    "GmailMessageInfo": {
      "id": "GmailMessageInfo",
      "description": "Details of a message in phishing spike alert.",
      "properties": {
        "messageBodySnippet": {
          "description": "The snippet of the message body text (only available for reported emails).",
          "type": "string"
        },
        "subjectText": {
          "description": "The email subject text (only available for reported emails).",
          "type": "string"
        },
        "attachmentsSha256Hash": {
          "description": "The `SHA256` hash of email's attachment and all MIME parts.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "md5HashMessageBody": {
          "type": "string",
          "description": "The hash of the message body text."
        },
        "md5HashSubject": {
          "description": "The MD5 Hash of email's subject (only available for reported emails).",
          "type": "string"
        },
        "date": {
          "type": "string",
          "format": "google-datetime",
          "description": "The date of the event related to this email."
        },
        "messageId": {
          "type": "string",
          "description": "The message ID."
        },
        "recipient": {
          "description": "The recipient of this email.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "AccountSuspensionWarning": {
      "properties": {
        "suspensionDetails": {
          "items": {
            "$ref": "AccountSuspensionDetails"
          },
          "type": "array",
          "description": "Details about why an account is being suspended."
        },
        "appealWindow": {
          "format": "google-duration",
          "type": "string",
          "description": "The amount of time remaining to appeal an imminent suspension. After this window has elapsed, the account will be suspended. Only populated if the account suspension is in WARNING state."
        },
        "state": {
          "enum": [
            "ACCOUNT_SUSPENSION_WARNING_STATE_UNSPECIFIED",
            "WARNING",
            "SUSPENDED",
            "APPEAL_APPROVED",
            "APPEAL_SUBMITTED"
          ],
          "type": "string",
          "enumDescriptions": [
            "State is unspecified.",
            "Customer is receiving a warning about imminent suspension.",
            "Customer is being notified that their account has been suspended.",
            "Customer is being notified that their suspension appeal was approved.",
            "Customer has submitted their appeal, which is pending review."
          ],
          "description": "Account suspension warning state."
        }
      },
      "description": "A warning that the customer's account is about to be suspended.",
      "id": "AccountSuspensionWarning",
      "type": "object"
    },
    "RuleViolationInfo": {
      "type": "object",
      "description": "Common alert information about violated rules that are configured by Google Workspace administrators.",
      "id": "RuleViolationInfo",
      "properties": {
        "suppressedActionTypes": {
          "description": "Actions suppressed due to other actions with higher priority.",
          "type": "array",
          "items": {
            "type": "string",
            "enumDescriptions": [
              "Action type is unspecified.",
              "Block sharing a file externally.",
              "Show a warning message when sharing a file externally.",
              "Delete web protect evidence file",
              "Send alert.",
              "Activate Rule Action",
              "Deactivate Rule Action"
            ],
            "enum": [
              "ACTION_TYPE_UNSPECIFIED",
              "DRIVE_BLOCK_EXTERNAL_SHARING",
              "DRIVE_WARN_ON_EXTERNAL_SHARING",
              "DELETE_WEBPROTECT_EVIDENCE",
              "ALERT",
              "RULE_ACTIVATE",
              "RULE_DEACTIVATE"
            ]
          }
        },
        "trigger": {
          "description": "Trigger of the rule.",
          "enum": [
            "TRIGGER_UNSPECIFIED",
            "DRIVE_SHARE"
          ],
          "enumDescriptions": [
            "Trigger is unspecified.",
            "A Drive file is shared."
          ],
          "type": "string"
        },
        "triggeredActionTypes": {
          "description": "Actions applied as a consequence of the rule being triggered.",
          "type": "array",
          "items": {
            "type": "string",
            "enumDescriptions": [
              "Action type is unspecified.",
              "Block sharing a file externally.",
              "Show a warning message when sharing a file externally.",
              "Delete web protect evidence file",
              "Send alert.",
              "Activate Rule Action",
              "Deactivate Rule Action"
            ],
            "enum": [
              "ACTION_TYPE_UNSPECIFIED",
              "DRIVE_BLOCK_EXTERNAL_SHARING",
              "DRIVE_WARN_ON_EXTERNAL_SHARING",
              "DELETE_WEBPROTECT_EVIDENCE",
              "ALERT",
              "RULE_ACTIVATE",
              "RULE_DEACTIVATE"
            ]
          }
        },
        "recipients": {
          "type": "array",
          "description": "Resource recipients. For Drive, they are grantees that the Drive file was shared with at the time of rule triggering. Valid values include user emails, group emails, domains, or 'anyone' if the file was publicly accessible. If the file was private the recipients list will be empty. For Gmail, they are emails of the users or groups that the Gmail message was sent to.",
          "items": {
            "type": "string"
          }
        },
        "ruleInfo": {
          "$ref": "RuleInfo",
          "description": "Details of the violated rule."
        },
        "triggeredActionInfo": {
          "description": "Metadata related to the triggered actions.",
          "type": "array",
          "items": {
            "$ref": "ActionInfo"
          }
        },
        "triggeringUserEmail": {
          "description": "Email of the user who caused the violation. Value could be empty if not applicable, for example, a violation found by drive continuous scan.",
          "type": "string"
        },
        "resourceInfo": {
          "description": "Details of the resource which violated the rule.",
          "$ref": "ResourceInfo"
        },
        "dataSource": {
          "enumDescriptions": [
            "Data source is unspecified.",
            "Drive data source."
          ],
          "enum": [
            "DATA_SOURCE_UNSPECIFIED",
            "DRIVE"
          ],
          "type": "string",
          "description": "Source of the data."
        },
        "matchInfo": {
          "type": "array",
          "items": {
            "$ref": "MatchInfo"
          },
          "description": "List of matches that were found in the resource content."
        }
      }
    },
    "MailPhishing": {
      "properties": {
        "messages": {
          "description": "The list of messages contained by this alert.",
          "items": {
            "$ref": "GmailMessageInfo"
          },
          "type": "array"
        },
        "maliciousEntity": {
          "$ref": "MaliciousEntity",
          "description": "The entity whose actions triggered a Gmail phishing alert."
        },
        "domainId": {
          "$ref": "DomainId",
          "description": "The domain ID."
        },
        "isInternal": {
          "type": "boolean",
          "description": "If `true`, the email originated from within the organization."
        },
        "systemActionType": {
          "enumDescriptions": [
            "System action is unspecified.",
            "No operation.",
            "Messages were removed from the inbox."
          ],
          "enum": [
            "SYSTEM_ACTION_TYPE_UNSPECIFIED",
            "NO_OPERATION",
            "REMOVED_FROM_INBOX"
          ],
          "type": "string",
          "description": "System actions on the messages."
        }
      },
      "type": "object",
      "description": "Proto for all phishing alerts with common payload. Supported types are any of the following: * User reported phishing * User reported spam spike * Suspicious message reported * Phishing reclassification * Malware reclassification * Gmail potential employee spoofing",
      "id": "MailPhishing"
    },
    "VoiceMisconfiguration": {
      "description": "An alert triggered when Google Voice configuration becomes invalid, generally due to an external entity being modified or deleted.",
      "id": "VoiceMisconfiguration",
      "properties": {
        "voicemailMisconfiguration": {
          "description": "Issue(s) with sending to voicemail.",
          "$ref": "VoicemailMisconfiguration"
        },
        "membersMisconfiguration": {
          "description": "Issue(s) with members of a ring group.",
          "$ref": "TransferMisconfiguration"
        },
        "entityType": {
          "type": "string",
          "description": "Type of the entity whose configuration is now invalid.",
          "enumDescriptions": [
            "Entity type wasn't set.",
            "Invalid auto attendant.",
            "Invalid ring group."
          ],
          "enum": [
            "ENTITY_TYPE_UNSPECIFIED",
            "AUTO_ATTENDANT",
            "RING_GROUP"
          ]
        },
        "fixUri": {
          "type": "string",
          "description": "Link that the admin can follow to fix the issue."
        },
        "entityName": {
          "description": "Name of the entity whose configuration is now invalid.",
          "type": "string"
        },
        "transferMisconfiguration": {
          "description": "Issue(s) with transferring or forwarding to an external entity.",
          "$ref": "TransferMisconfiguration"
        }
      },
      "type": "object"
    },
    "MatchInfo": {
      "type": "object",
      "id": "MatchInfo",
      "properties": {
        "predefinedDetector": {
          "$ref": "PredefinedDetectorInfo",
          "description": "For matched detector predefined by Google."
        },
        "userDefinedDetector": {
          "$ref": "UserDefinedDetectorInfo",
          "description": "For matched detector defined by administrators."
        }
      },
      "description": "Proto that contains match information from the condition part of the rule."
    },
    "RequestInfo": {
      "id": "RequestInfo",
      "description": "Requests for one application that needs default SQL setup.",
      "type": "object",
      "properties": {
        "numberOfRequests": {
          "format": "int64",
          "description": "Required. Number of requests sent for this application to set up default SQL instance.",
          "type": "string"
        },
        "appKey": {
          "type": "string",
          "description": "Required. The application that requires the SQL setup."
        },
        "appDeveloperEmail": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of app developers who triggered notifications for above application."
        }
      }
    },
    "Csv": {
      "id": "Csv",
      "properties": {
        "dataRows": {
          "items": {
            "$ref": "CsvRow"
          },
          "type": "array",
          "description": "The list of data rows in a CSV file, as string arrays rather than as a single comma-separated string."
        },
        "headers": {
          "type": "array",
          "description": "The list of headers for data columns in a CSV file.",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object",
      "description": "A representation of a CSV file attachment, as a list of column headers and a list of data rows."
    },
    "ReportingRule": {
      "description": "Alerts from Reporting Rules configured by Admin.",
      "properties": {
        "name": {
          "description": "Rule name",
          "type": "string"
        },
        "alertDetails": {
          "type": "string",
          "description": "Any other associated alert details, for example, AlertConfiguration.",
          "format": "byte"
        },
        "query": {
          "description": "Alert Rule query Sample Query query { condition { filter { expected_application_id: 777491262838 expected_event_name: \"indexable_content_change\" filter_op: IN } } conjunction_operator: OR }",
          "format": "byte",
          "type": "string"
        }
      },
      "id": "ReportingRule",
      "type": "object"
    },
    "SuspiciousActivitySecurityDetail": {
      "description": "Detailed information of a single MDM suspicious activity event.",
      "id": "SuspiciousActivitySecurityDetail",
      "type": "object",
      "properties": {
        "serialNumber": {
          "description": "The serial number of the device.",
          "type": "string"
        },
        "deviceModel": {
          "description": "The model of the device.",
          "type": "string"
        },
        "newValue": {
          "type": "string",
          "description": "The new value of the device property after the change."
        },
        "deviceId": {
          "description": "Required. The device ID.",
          "type": "string"
        },
        "resourceId": {
          "description": "The device resource ID.",
          "type": "string"
        },
        "deviceType": {
          "type": "string",
          "description": "The type of the device."
        },
        "oldValue": {
          "type": "string",
          "description": "The old value of the device property before the change."
        },
        "deviceProperty": {
          "type": "string",
          "description": "The device property which was changed."
        },
        "iosVendorId": {
          "description": "Required for iOS, empty for others.",
          "type": "string"
        }
      }
    },
    "CloudPubsubTopic": {
      "id": "CloudPubsubTopic",
      "description": "A reference to a Cloud Pubsub topic. To register for notifications, the owner of the topic must grant `alerts-api-push-notifications@system.gserviceaccount.com` the `projects.topics.publish` permission.",
      "properties": {
        "payloadFormat": {
          "enumDescriptions": [
            "Payload format is not specified (will use JSON as default).",
            "Use JSON."
          ],
          "description": "Optional. The format of the payload that would be sent. If not specified the format will be JSON.",
          "enum": [
            "PAYLOAD_FORMAT_UNSPECIFIED",
            "JSON"
          ],
          "type": "string"
        },
        "topicName": {
          "description": "The `name` field of a Cloud Pubsub [Topic] (https://cloud.google.com/pubsub/docs/reference/rest/v1/projects.topics#Topic).",
          "type": "string"
        }
      },
      "type": "object"
    },
    "UndeleteAlertRequest": {
      "id": "UndeleteAlertRequest",
      "properties": {
        "customerId": {
          "description": "Optional. The unique identifier of the Google Workspace account of the customer the alert is associated with. The `customer_id` must have the initial \"C\" stripped (for example, `046psxkn`). Inferred from the caller identity if not provided. [Find your customer ID](https://support.google.com/cloudidentity/answer/10070793).",
          "type": "string"
        }
      },
      "description": "A request to undelete a specific alert that was marked for deletion.",
      "type": "object"
    },
    "SSOProfileUpdatedEvent": {
      "properties": {
        "inboundSsoProfileName": {
          "type": "string",
          "description": "sso profile name which got updated"
        },
        "inboundSsoProfileChanges": {
          "type": "string",
          "description": "changes made to sso profile"
        }
      },
      "description": "Event occurred when SSO Profile updated in customer's account. The event are being received from insight forwarder",
      "id": "SSOProfileUpdatedEvent",
      "type": "object"
    },
    "User": {
      "description": "A user.",
      "type": "object",
      "id": "User",
      "properties": {
        "emailAddress": {
          "description": "Email address of the user.",
          "type": "string"
        },
        "displayName": {
          "type": "string",
          "description": "Display name of the user."
        }
      }
    },
    "DeviceCompromisedSecurityDetail": {
      "description": "Detailed information of a single MDM device compromised event.",
      "properties": {
        "deviceModel": {
          "type": "string",
          "description": "The model of the device."
        },
        "serialNumber": {
          "type": "string",
          "description": "The serial number of the device."
        },
        "deviceId": {
          "type": "string",
          "description": "Required. The device ID."
        },
        "iosVendorId": {
          "type": "string",
          "description": "Required for iOS, empty for others."
        },
        "resourceId": {
          "type": "string",
          "description": "The device resource ID."
        },
        "deviceType": {
          "description": "The type of the device.",
          "type": "string"
        },
        "deviceCompromisedState": {
          "description": "The device compromised state. Possible values are \"`Compromised`\" or \"`Not Compromised`\".",
          "type": "string"
        }
      },
      "type": "object",
      "id": "DeviceCompromisedSecurityDetail"
    },
    "DeviceCompromised": {
      "properties": {
        "events": {
          "items": {
            "$ref": "DeviceCompromisedSecurityDetail"
          },
          "description": "Required. The list of security events.",
          "type": "array"
        },
        "email": {
          "type": "string",
          "description": "The email of the user this alert was created for."
        }
      },
      "description": "A mobile device compromised alert. Derived from audit logs.",
      "id": "DeviceCompromised",
      "type": "object"
    },
    "RuleInfo": {
      "description": "Proto that contains rule information.",
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "User provided name of the rule."
        },
        "resourceName": {
          "type": "string",
          "description": "Resource name that uniquely identifies the rule."
        }
      },
      "id": "RuleInfo"
    }
  },
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "ownerDomain": "google.com",
  "baseUrl": "https://alertcenter.googleapis.com/",
  "version_module": true,
  "mtlsRootUrl": "https://alertcenter.mtls.googleapis.com/",
  "ownerName": "Google",
  "kind": "discovery#restDescription",
  "documentationLink": "https://developers.google.com/admin-sdk/alertcenter/",
  "version": "v1beta1",
  "rootUrl": "https://alertcenter.googleapis.com/",
  "servicePath": "",
  "description": "Manages alerts on issues affecting your domain. Note: The current version of this API (v1beta1) is available to all Google Workspace customers. ",
  "batchPath": "batch",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/apps.alerts": {
          "description": "See and delete your domain's G Suite alerts, and send alert feedback"
        }
      }
    }
  },
  "resources": {
    "v1beta1": {
      "methods": {
        "getSettings": {
          "response": {
            "$ref": "Settings"
          },
          "flatPath": "v1beta1/settings",
          "id": "alertcenter.getSettings",
          "description": "Returns customer-level settings.",
          "scopes": [
            "https://www.googleapis.com/auth/apps.alerts"
          ],
          "parameters": {
            "customerId": {
              "description": "Optional. The unique identifier of the Google Workspace account of the customer the alert settings are associated with. The `customer_id` must/ have the initial \"C\" stripped (for example, `046psxkn`). Inferred from the caller identity if not provided. [Find your customer ID](https://support.google.com/cloudidentity/answer/10070793).",
              "type": "string",
              "location": "query"
            }
          },
          "path": "v1beta1/settings",
          "httpMethod": "GET",
          "parameterOrder": []
        },
        "updateSettings": {
          "parameterOrder": [],
          "response": {
            "$ref": "Settings"
          },
          "scopes": [
            "https://www.googleapis.com/auth/apps.alerts"
          ],
          "id": "alertcenter.updateSettings",
          "flatPath": "v1beta1/settings",
          "parameters": {
            "customerId": {
              "type": "string",
              "location": "query",
              "description": "Optional. The unique identifier of the Google Workspace account of the customer the alert settings are associated with. The `customer_id` must have the initial \"C\" stripped (for example, `046psxkn`). Inferred from the caller identity if not provided. [Find your customer ID](https://support.google.com/cloudidentity/answer/10070793)."
            }
          },
          "httpMethod": "PATCH",
          "description": "Updates the customer-level settings.",
          "path": "v1beta1/settings",
          "request": {
            "$ref": "Settings"
          }
        }
      }
    },
    "alerts": {
      "methods": {
        "getMetadata": {
          "flatPath": "v1beta1/alerts/{alertId}/metadata",
          "path": "v1beta1/alerts/{alertId}/metadata",
          "parameterOrder": [
            "alertId"
          ],
          "id": "alertcenter.alerts.getMetadata",
          "httpMethod": "GET",
          "response": {
            "$ref": "AlertMetadata"
          },
          "description": "Returns the metadata of an alert. Attempting to get metadata for a non-existent alert returns `NOT_FOUND` error.",
          "parameters": {
            "alertId": {
              "type": "string",
              "description": "Required. The identifier of the alert this metadata belongs to.",
              "location": "path",
              "required": true
            },
            "customerId": {
              "description": "Optional. The unique identifier of the Google Workspace account of the customer the alert metadata is associated with. The `customer_id` must have the initial \"C\" stripped (for example, `046psxkn`). Inferred from the caller identity if not provided. [Find your customer ID](https://support.google.com/cloudidentity/answer/10070793).",
              "type": "string",
              "location": "query"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/apps.alerts"
          ]
        },
        "batchDelete": {
          "parameters": {},
          "request": {
            "$ref": "BatchDeleteAlertsRequest"
          },
          "description": "Performs batch delete operation on alerts.",
          "path": "v1beta1/alerts:batchDelete",
          "id": "alertcenter.alerts.batchDelete",
          "scopes": [
            "https://www.googleapis.com/auth/apps.alerts"
          ],
          "parameterOrder": [],
          "httpMethod": "POST",
          "flatPath": "v1beta1/alerts:batchDelete",
          "response": {
            "$ref": "BatchDeleteAlertsResponse"
          }
        },
        "delete": {
          "httpMethod": "DELETE",
          "id": "alertcenter.alerts.delete",
          "flatPath": "v1beta1/alerts/{alertId}",
          "description": "Marks the specified alert for deletion. An alert that has been marked for deletion is removed from Alert Center after 30 days. Marking an alert for deletion has no effect on an alert which has already been marked for deletion. Attempting to mark a nonexistent alert for deletion results in a `NOT_FOUND` error.",
          "parameterOrder": [
            "alertId"
          ],
          "path": "v1beta1/alerts/{alertId}",
          "scopes": [
            "https://www.googleapis.com/auth/apps.alerts"
          ],
          "parameters": {
            "customerId": {
              "location": "query",
              "type": "string",
              "description": "Optional. The unique identifier of the Google Workspace account of the customer the alert is associated with. The `customer_id` must have the initial \"C\" stripped (for example, `046psxkn`). Inferred from the caller identity if not provided. [Find your customer ID](https://support.google.com/cloudidentity/answer/10070793)."
            },
            "alertId": {
              "type": "string",
              "location": "path",
              "required": true,
              "description": "Required. The identifier of the alert to delete."
            }
          },
          "response": {
            "$ref": "Empty"
          }
        },
        "get": {
          "parameterOrder": [
            "alertId"
          ],
          "parameters": {
            "customerId": {
              "location": "query",
              "type": "string",
              "description": "Optional. The unique identifier of the Google Workspace account of the customer the alert is associated with. The `customer_id` must have the initial \"C\" stripped (for example, `046psxkn`). Inferred from the caller identity if not provided. [Find your customer ID](https://support.google.com/cloudidentity/answer/10070793)."
            },
            "alertId": {
              "location": "path",
              "required": true,
              "description": "Required. The identifier of the alert to retrieve.",
              "type": "string"
            }
          },
          "httpMethod": "GET",
          "path": "v1beta1/alerts/{alertId}",
          "id": "alertcenter.alerts.get",
          "flatPath": "v1beta1/alerts/{alertId}",
          "description": "Gets the specified alert. Attempting to get a nonexistent alert returns `NOT_FOUND` error.",
          "scopes": [
            "https://www.googleapis.com/auth/apps.alerts"
          ],
          "response": {
            "$ref": "Alert"
          }
        },
        "list": {
          "description": "Lists the alerts.",
          "httpMethod": "GET",
          "flatPath": "v1beta1/alerts",
          "parameters": {
            "orderBy": {
              "location": "query",
              "description": "Optional. The sort order of the list results. If not specified results may be returned in arbitrary order. You can sort the results in descending order based on the creation timestamp using `order_by=\"create_time desc\"`. Currently, supported sorting are `create_time asc`, `create_time desc`, `update_time desc`",
              "type": "string"
            },
            "pageToken": {
              "description": "Optional. A token identifying a page of results the server should return. If empty, a new iteration is started. To continue an iteration, pass in the value from the previous ListAlertsResponse's next_page_token field.",
              "type": "string",
              "location": "query"
            },
            "customerId": {
              "type": "string",
              "location": "query",
              "description": "Optional. The unique identifier of the Google Workspace account of the customer the alerts are associated with. The `customer_id` must have the initial \"C\" stripped (for example, `046psxkn`). Inferred from the caller identity if not provided. [Find your customer ID](https://support.google.com/cloudidentity/answer/10070793)."
            },
            "filter": {
              "location": "query",
              "type": "string",
              "description": "Optional. A query string for filtering alert results. For more details, see [Query filters](https://developers.google.com/admin-sdk/alertcenter/guides/query-filters) and [Supported query filter fields](https://developers.google.com/admin-sdk/alertcenter/reference/filter-fields#alerts.list)."
            },
            "pageSize": {
              "format": "int32",
              "location": "query",
              "description": "Optional. The requested page size. Server may return fewer items than requested. If unspecified, server picks an appropriate default.",
              "type": "integer"
            }
          },
          "id": "alertcenter.alerts.list",
          "path": "v1beta1/alerts",
          "response": {
            "$ref": "ListAlertsResponse"
          },
          "parameterOrder": [],
          "scopes": [
            "https://www.googleapis.com/auth/apps.alerts"
          ]
        },
        "batchUndelete": {
          "request": {
            "$ref": "BatchUndeleteAlertsRequest"
          },
          "httpMethod": "POST",
          "path": "v1beta1/alerts:batchUndelete",
          "description": "Performs batch undelete operation on alerts.",
          "id": "alertcenter.alerts.batchUndelete",
          "parameterOrder": [],
          "flatPath": "v1beta1/alerts:batchUndelete",
          "scopes": [
            "https://www.googleapis.com/auth/apps.alerts"
          ],
          "parameters": {},
          "response": {
            "$ref": "BatchUndeleteAlertsResponse"
          }
        },
        "undelete": {
          "description": "Restores, or \"undeletes\", an alert that was marked for deletion within the past 30 days. Attempting to undelete an alert which was marked for deletion over 30 days ago (which has been removed from the Alert Center database) or a nonexistent alert returns a `NOT_FOUND` error. Attempting to undelete an alert which has not been marked for deletion has no effect.",
          "parameterOrder": [
            "alertId"
          ],
          "flatPath": "v1beta1/alerts/{alertId}:undelete",
          "httpMethod": "POST",
          "path": "v1beta1/alerts/{alertId}:undelete",
          "scopes": [
            "https://www.googleapis.com/auth/apps.alerts"
          ],
          "id": "alertcenter.alerts.undelete",
          "request": {
            "$ref": "UndeleteAlertRequest"
          },
          "parameters": {
            "alertId": {
              "description": "Required. The identifier of the alert to undelete.",
              "type": "string",
              "location": "path",
              "required": true
            }
          },
          "response": {
            "$ref": "Alert"
          }
        }
      },
      "resources": {
        "feedback": {
          "methods": {
            "create": {
              "flatPath": "v1beta1/alerts/{alertId}/feedback",
              "httpMethod": "POST",
              "id": "alertcenter.alerts.feedback.create",
              "path": "v1beta1/alerts/{alertId}/feedback",
              "parameters": {
                "customerId": {
                  "type": "string",
                  "location": "query",
                  "description": "Optional. The unique identifier of the Google Workspace account of the customer the alert is associated with. The `customer_id` must have the initial \"C\" stripped (for example, `046psxkn`). Inferred from the caller identity if not provided. [Find your customer ID](https://support.google.com/cloudidentity/answer/10070793)."
                },
                "alertId": {
                  "type": "string",
                  "description": "Required. The identifier of the alert this feedback belongs to.",
                  "location": "path",
                  "required": true
                }
              },
              "description": "Creates new feedback for an alert. Attempting to create a feedback for a non-existent alert returns `NOT_FOUND` error. Attempting to create a feedback for an alert that is marked for deletion returns `FAILED_PRECONDITION' error.",
              "request": {
                "$ref": "AlertFeedback"
              },
              "parameterOrder": [
                "alertId"
              ],
              "response": {
                "$ref": "AlertFeedback"
              },
              "scopes": [
                "https://www.googleapis.com/auth/apps.alerts"
              ]
            },
            "list": {
              "parameterOrder": [
                "alertId"
              ],
              "description": "Lists all the feedback for an alert. Attempting to list feedbacks for a non-existent alert returns `NOT_FOUND` error.",
              "id": "alertcenter.alerts.feedback.list",
              "response": {
                "$ref": "ListAlertFeedbackResponse"
              },
              "path": "v1beta1/alerts/{alertId}/feedback",
              "scopes": [
                "https://www.googleapis.com/auth/apps.alerts"
              ],
              "parameters": {
                "filter": {
                  "location": "query",
                  "description": "Optional. A query string for filtering alert feedback results. For more details, see [Query filters](https://developers.google.com/admin-sdk/alertcenter/guides/query-filters) and [Supported query filter fields](https://developers.google.com/admin-sdk/alertcenter/reference/filter-fields#alerts.feedback.list).",
                  "type": "string"
                },
                "customerId": {
                  "location": "query",
                  "description": "Optional. The unique identifier of the Google Workspace account of the customer the alert is associated with. The `customer_id` must have the initial \"C\" stripped (for example, `046psxkn`). Inferred from the caller identity if not provided. [Find your customer ID](https://support.google.com/cloudidentity/answer/10070793).",
                  "type": "string"
                },
                "alertId": {
                  "type": "string",
                  "required": true,
                  "description": "Required. The alert identifier. The \"-\" wildcard could be used to represent all alerts.",
                  "location": "path"
                }
              },
              "flatPath": "v1beta1/alerts/{alertId}/feedback",
              "httpMethod": "GET"
            }
          }
        }
      }
    }
  },
  "title": "Google Workspace Alert Center API",
  "revision": "20230220"
}
