{
  "batchPath": "batch",
  "fullyEncodeReservedExpansion": true,
  "id": "apigateway:v1beta",
  "version": "v1beta",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "ownerDomain": "google.com",
  "ownerName": "Google",
  "revision": "20230208",
  "discoveryVersion": "v1",
  "protocol": "rest",
  "parameters": {
    "callback": {
      "type": "string",
      "location": "query",
      "description": "JSONP"
    },
    "upload_protocol": {
      "type": "string",
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
    },
    "alt": {
      "description": "Data format for response.",
      "type": "string",
      "location": "query",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "default": "json",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ]
    },
    "quotaUser": {
      "type": "string",
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
    },
    "access_token": {
      "location": "query",
      "description": "OAuth access token.",
      "type": "string"
    },
    "oauth_token": {
      "location": "query",
      "description": "OAuth 2.0 token for the current user.",
      "type": "string"
    },
    "key": {
      "type": "string",
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
    },
    "prettyPrint": {
      "location": "query",
      "type": "boolean",
      "default": "true",
      "description": "Returns response with indentations and line breaks."
    },
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query",
      "type": "string"
    },
    "uploadType": {
      "location": "query",
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
    },
    "$.xgafv": {
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query",
      "enum": [
        "1",
        "2"
      ],
      "description": "V1 error format.",
      "type": "string"
    }
  },
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "methods": {
            "list": {
              "path": "v1beta/{+name}/locations",
              "description": "Lists information about the supported locations for this service.",
              "id": "apigateway.projects.locations.list",
              "response": {
                "$ref": "ApigatewayListLocationsResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1beta/projects/{projectsId}/locations",
              "parameters": {
                "name": {
                  "description": "The resource that owns the locations collection, if applicable.",
                  "pattern": "^projects/[^/]+$",
                  "type": "string",
                  "required": true,
                  "location": "path"
                },
                "filter": {
                  "type": "string",
                  "location": "query",
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like `\"displayName=tokyo\"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160)."
                },
                "pageSize": {
                  "location": "query",
                  "description": "The maximum number of results to return. If not set, the service selects a default.",
                  "type": "integer",
                  "format": "int32"
                },
                "pageToken": {
                  "type": "string",
                  "location": "query",
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page."
                }
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET"
            },
            "get": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "name"
              ],
              "id": "apigateway.projects.locations.get",
              "httpMethod": "GET",
              "path": "v1beta/{+name}",
              "description": "Gets information about a location.",
              "response": {
                "$ref": "ApigatewayLocation"
              },
              "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}",
              "parameters": {
                "name": {
                  "description": "Resource name for the location.",
                  "location": "path",
                  "type": "string",
                  "required": true,
                  "pattern": "^projects/[^/]+/locations/[^/]+$"
                }
              }
            }
          },
          "resources": {
            "gateways": {
              "methods": {
                "setIamPolicy": {
                  "parameterOrder": [
                    "resource"
                  ],
                  "httpMethod": "POST",
                  "path": "v1beta/{+resource}:setIamPolicy",
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
                  "response": {
                    "$ref": "ApigatewayPolicy"
                  },
                  "request": {
                    "$ref": "ApigatewaySetIamPolicyRequest"
                  },
                  "parameters": {
                    "resource": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/gateways/[^/]+$",
                      "type": "string",
                      "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "id": "apigateway.projects.locations.gateways.setIamPolicy",
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/gateways/{gatewaysId}:setIamPolicy",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "testIamPermissions": {
                  "id": "apigateway.projects.locations.gateways.testIamPermissions",
                  "parameters": {
                    "resource": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/gateways/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "required": true
                    }
                  },
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "ApigatewayTestIamPermissionsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "resource"
                  ],
                  "path": "v1beta/{+resource}:testIamPermissions",
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/gateways/{gatewaysId}:testIamPermissions",
                  "request": {
                    "$ref": "ApigatewayTestIamPermissionsRequest"
                  }
                },
                "create": {
                  "id": "apigateway.projects.locations.gateways.create",
                  "request": {
                    "$ref": "ApigatewayGateway"
                  },
                  "parameters": {
                    "parent": {
                      "description": "Required. Parent resource of the Gateway, of the form: `projects/*/locations/*`",
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "gatewayId": {
                      "type": "string",
                      "description": "Required. Identifier to assign to the Gateway. Must be unique within scope of the parent resource.",
                      "location": "query"
                    }
                  },
                  "description": "Creates a new Gateway in a given project and location.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "ApigatewayOperation"
                  },
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/gateways",
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v1beta/{+parent}/gateways"
                },
                "get": {
                  "path": "v1beta/{+name}",
                  "httpMethod": "GET",
                  "id": "apigateway.projects.locations.gateways.get",
                  "description": "Gets details of a single Gateway.",
                  "response": {
                    "$ref": "ApigatewayGateway"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/gateways/[^/]+$",
                      "description": "Required. Resource name of the form: `projects/*/locations/*/gateways/*`",
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/gateways/{gatewaysId}"
                },
                "delete": {
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "ApigatewayOperation"
                  },
                  "httpMethod": "DELETE",
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/gateways/{gatewaysId}",
                  "parameters": {
                    "name": {
                      "description": "Required. Resource name of the form: `projects/*/locations/*/gateways/*`",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/gateways/[^/]+$",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "description": "Deletes a single Gateway.",
                  "path": "v1beta/{+name}",
                  "id": "apigateway.projects.locations.gateways.delete"
                },
                "list": {
                  "path": "v1beta/{+parent}/gateways",
                  "parameters": {
                    "filter": {
                      "location": "query",
                      "description": "Filter.",
                      "type": "string"
                    },
                    "orderBy": {
                      "location": "query",
                      "description": "Order by parameters.",
                      "type": "string"
                    },
                    "parent": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "description": "Required. Parent resource of the Gateway, of the form: `projects/*/locations/*`",
                      "type": "string"
                    },
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "Page token."
                    },
                    "pageSize": {
                      "format": "int32",
                      "type": "integer",
                      "location": "query",
                      "description": "Page size."
                    }
                  },
                  "httpMethod": "GET",
                  "id": "apigateway.projects.locations.gateways.list",
                  "response": {
                    "$ref": "ApigatewayListGatewaysResponse"
                  },
                  "description": "Lists Gateways in a given project and location.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/gateways"
                },
                "getIamPolicy": {
                  "path": "v1beta/{+resource}:getIamPolicy",
                  "parameterOrder": [
                    "resource"
                  ],
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                  "parameters": {
                    "resource": {
                      "type": "string",
                      "location": "path",
                      "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/gateways/[^/]+$",
                      "required": true
                    },
                    "options.requestedPolicyVersion": {
                      "type": "integer",
                      "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                      "format": "int32",
                      "location": "query"
                    }
                  },
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/gateways/{gatewaysId}:getIamPolicy",
                  "id": "apigateway.projects.locations.gateways.getIamPolicy",
                  "response": {
                    "$ref": "ApigatewayPolicy"
                  }
                },
                "patch": {
                  "path": "v1beta/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "ApigatewayOperation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "location": "path",
                      "type": "string",
                      "description": "Output only. Resource name of the Gateway. Format: projects/{project}/locations/{location}/gateways/{gateway}",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/gateways/[^/]+$"
                    },
                    "updateMask": {
                      "description": "Field mask is used to specify the fields to be overwritten in the Gateway resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    }
                  },
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/gateways/{gatewaysId}",
                  "httpMethod": "PATCH",
                  "request": {
                    "$ref": "ApigatewayGateway"
                  },
                  "id": "apigateway.projects.locations.gateways.patch",
                  "description": "Updates the parameters of a single Gateway."
                }
              }
            },
            "apis": {
              "methods": {
                "list": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "GET",
                  "description": "Lists Apis in a given project and location.",
                  "parameters": {
                    "orderBy": {
                      "type": "string",
                      "description": "Order by parameters.",
                      "location": "query"
                    },
                    "pageToken": {
                      "location": "query",
                      "description": "Page token.",
                      "type": "string"
                    },
                    "pageSize": {
                      "format": "int32",
                      "type": "integer",
                      "description": "Page size.",
                      "location": "query"
                    },
                    "filter": {
                      "description": "Filter.",
                      "location": "query",
                      "type": "string"
                    },
                    "parent": {
                      "location": "path",
                      "type": "string",
                      "description": "Required. Parent resource of the API, of the form: `projects/*/locations/global`",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/apis",
                  "id": "apigateway.projects.locations.apis.list",
                  "response": {
                    "$ref": "ApigatewayListApisResponse"
                  },
                  "path": "v1beta/{+parent}/apis"
                },
                "getIamPolicy": {
                  "parameterOrder": [
                    "resource"
                  ],
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                  "parameters": {
                    "resource": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/apis/[^/]+$",
                      "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "location": "path",
                      "type": "string"
                    },
                    "options.requestedPolicyVersion": {
                      "format": "int32",
                      "type": "integer",
                      "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                      "location": "query"
                    }
                  },
                  "response": {
                    "$ref": "ApigatewayPolicy"
                  },
                  "id": "apigateway.projects.locations.apis.getIamPolicy",
                  "path": "v1beta/{+resource}:getIamPolicy",
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/apis/{apisId}:getIamPolicy"
                },
                "create": {
                  "id": "apigateway.projects.locations.apis.create",
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/apis",
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "ApigatewayOperation"
                  },
                  "request": {
                    "$ref": "ApigatewayApi"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1beta/{+parent}/apis",
                  "description": "Creates a new Api in a given project and location.",
                  "parameters": {
                    "apiId": {
                      "location": "query",
                      "description": "Required. Identifier to assign to the API. Must be unique within scope of the parent resource.",
                      "type": "string"
                    },
                    "parent": {
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "description": "Required. Parent resource of the API, of the form: `projects/*/locations/global`",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  }
                },
                "get": {
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/apis/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "description": "Required. Resource name of the form: `projects/*/locations/global/apis/*`",
                      "required": true
                    }
                  },
                  "id": "apigateway.projects.locations.apis.get",
                  "response": {
                    "$ref": "ApigatewayApi"
                  },
                  "path": "v1beta/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/apis/{apisId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Gets details of a single Api."
                },
                "delete": {
                  "response": {
                    "$ref": "ApigatewayOperation"
                  },
                  "description": "Deletes a single Api.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/apis/[^/]+$",
                      "required": true,
                      "description": "Required. Resource name of the form: `projects/*/locations/global/apis/*`",
                      "type": "string"
                    }
                  },
                  "httpMethod": "DELETE",
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/apis/{apisId}",
                  "path": "v1beta/{+name}",
                  "id": "apigateway.projects.locations.apis.delete"
                },
                "patch": {
                  "request": {
                    "$ref": "ApigatewayApi"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "apigateway.projects.locations.apis.patch",
                  "response": {
                    "$ref": "ApigatewayOperation"
                  },
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/apis/[^/]+$",
                      "description": "Output only. Resource name of the API. Format: projects/{project}/locations/global/apis/{api}",
                      "type": "string",
                      "location": "path",
                      "required": true
                    },
                    "updateMask": {
                      "format": "google-fieldmask",
                      "location": "query",
                      "description": "Field mask is used to specify the fields to be overwritten in the Api resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1beta/{+name}",
                  "httpMethod": "PATCH",
                  "description": "Updates the parameters of a single Api.",
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/apis/{apisId}"
                },
                "setIamPolicy": {
                  "request": {
                    "$ref": "ApigatewaySetIamPolicyRequest"
                  },
                  "response": {
                    "$ref": "ApigatewayPolicy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1beta/{+resource}:setIamPolicy",
                  "parameterOrder": [
                    "resource"
                  ],
                  "httpMethod": "POST",
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/apis/{apisId}:setIamPolicy",
                  "parameters": {
                    "resource": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/apis/[^/]+$",
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
                    }
                  },
                  "id": "apigateway.projects.locations.apis.setIamPolicy",
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors."
                },
                "testIamPermissions": {
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                  "parameters": {
                    "resource": {
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/apis/[^/]+$"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "response": {
                    "$ref": "ApigatewayTestIamPermissionsResponse"
                  },
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "apigateway.projects.locations.apis.testIamPermissions",
                  "path": "v1beta/{+resource}:testIamPermissions",
                  "request": {
                    "$ref": "ApigatewayTestIamPermissionsRequest"
                  },
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/apis/{apisId}:testIamPermissions"
                }
              },
              "resources": {
                "configs": {
                  "methods": {
                    "testIamPermissions": {
                      "path": "v1beta/{+resource}:testIamPermissions",
                      "id": "apigateway.projects.locations.apis.configs.testIamPermissions",
                      "parameters": {
                        "resource": {
                          "type": "string",
                          "required": true,
                          "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/apis/[^/]+/configs/[^/]+$"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "POST",
                      "parameterOrder": [
                        "resource"
                      ],
                      "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/apis/{apisId}/configs/{configsId}:testIamPermissions",
                      "response": {
                        "$ref": "ApigatewayTestIamPermissionsResponse"
                      },
                      "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                      "request": {
                        "$ref": "ApigatewayTestIamPermissionsRequest"
                      }
                    },
                    "patch": {
                      "parameterOrder": [
                        "name"
                      ],
                      "httpMethod": "PATCH",
                      "description": "Updates the parameters of a single ApiConfig.",
                      "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/apis/{apisId}/configs/{configsId}",
                      "parameters": {
                        "updateMask": {
                          "format": "google-fieldmask",
                          "type": "string",
                          "location": "query",
                          "description": "Field mask is used to specify the fields to be overwritten in the ApiConfig resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten."
                        },
                        "name": {
                          "type": "string",
                          "description": "Output only. Resource name of the API Config. Format: projects/{project}/locations/global/apis/{api}/configs/{api_config}",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/apis/[^/]+/configs/[^/]+$",
                          "required": true
                        }
                      },
                      "path": "v1beta/{+name}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "request": {
                        "$ref": "ApigatewayApiConfig"
                      },
                      "response": {
                        "$ref": "ApigatewayOperation"
                      },
                      "id": "apigateway.projects.locations.apis.configs.patch"
                    },
                    "list": {
                      "httpMethod": "GET",
                      "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/apis/{apisId}/configs",
                      "parameters": {
                        "orderBy": {
                          "description": "Order by parameters.",
                          "type": "string",
                          "location": "query"
                        },
                        "pageSize": {
                          "location": "query",
                          "description": "Page size.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "parent": {
                          "location": "path",
                          "description": "Required. Parent resource of the API Config, of the form: `projects/*/locations/global/apis/*`",
                          "pattern": "^projects/[^/]+/locations/[^/]+/apis/[^/]+$",
                          "required": true,
                          "type": "string"
                        },
                        "filter": {
                          "description": "Filter.",
                          "location": "query",
                          "type": "string"
                        },
                        "pageToken": {
                          "type": "string",
                          "description": "Page token.",
                          "location": "query"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Lists ApiConfigs in a given project and location.",
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "ApigatewayListApiConfigsResponse"
                      },
                      "id": "apigateway.projects.locations.apis.configs.list",
                      "path": "v1beta/{+parent}/configs"
                    },
                    "setIamPolicy": {
                      "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
                      "id": "apigateway.projects.locations.apis.configs.setIamPolicy",
                      "response": {
                        "$ref": "ApigatewayPolicy"
                      },
                      "parameterOrder": [
                        "resource"
                      ],
                      "parameters": {
                        "resource": {
                          "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/apis/[^/]+/configs/[^/]+$",
                          "required": true,
                          "location": "path",
                          "type": "string"
                        }
                      },
                      "httpMethod": "POST",
                      "request": {
                        "$ref": "ApigatewaySetIamPolicyRequest"
                      },
                      "path": "v1beta/{+resource}:setIamPolicy",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/apis/{apisId}/configs/{configsId}:setIamPolicy"
                    },
                    "getIamPolicy": {
                      "httpMethod": "GET",
                      "path": "v1beta/{+resource}:getIamPolicy",
                      "response": {
                        "$ref": "ApigatewayPolicy"
                      },
                      "id": "apigateway.projects.locations.apis.configs.getIamPolicy",
                      "parameters": {
                        "resource": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/apis/[^/]+/configs/[^/]+$",
                          "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                          "type": "string",
                          "required": true,
                          "location": "path"
                        },
                        "options.requestedPolicyVersion": {
                          "type": "integer",
                          "format": "int32",
                          "location": "query",
                          "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                        }
                      },
                      "parameterOrder": [
                        "resource"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                      "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/apis/{apisId}/configs/{configsId}:getIamPolicy"
                    },
                    "create": {
                      "path": "v1beta/{+parent}/configs",
                      "description": "Creates a new ApiConfig in a given project and location.",
                      "httpMethod": "POST",
                      "id": "apigateway.projects.locations.apis.configs.create",
                      "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/apis/{apisId}/configs",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "request": {
                        "$ref": "ApigatewayApiConfig"
                      },
                      "response": {
                        "$ref": "ApigatewayOperation"
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "parameters": {
                        "parent": {
                          "description": "Required. Parent resource of the API Config, of the form: `projects/*/locations/global/apis/*`",
                          "location": "path",
                          "type": "string",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/apis/[^/]+$"
                        },
                        "apiConfigId": {
                          "type": "string",
                          "location": "query",
                          "description": "Required. Identifier to assign to the API Config. Must be unique within scope of the parent resource."
                        }
                      }
                    },
                    "delete": {
                      "description": "Deletes a single ApiConfig.",
                      "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/apis/{apisId}/configs/{configsId}",
                      "parameters": {
                        "name": {
                          "required": true,
                          "type": "string",
                          "description": "Required. Resource name of the form: `projects/*/locations/global/apis/*/configs/*`",
                          "pattern": "^projects/[^/]+/locations/[^/]+/apis/[^/]+/configs/[^/]+$",
                          "location": "path"
                        }
                      },
                      "response": {
                        "$ref": "ApigatewayOperation"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "httpMethod": "DELETE",
                      "path": "v1beta/{+name}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "apigateway.projects.locations.apis.configs.delete"
                    },
                    "get": {
                      "httpMethod": "GET",
                      "parameterOrder": [
                        "name"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Gets details of a single ApiConfig.",
                      "response": {
                        "$ref": "ApigatewayApiConfig"
                      },
                      "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/apis/{apisId}/configs/{configsId}",
                      "path": "v1beta/{+name}",
                      "parameters": {
                        "view": {
                          "description": "Specifies which fields of the API Config are returned in the response. Defaults to `BASIC` view.",
                          "type": "string",
                          "location": "query",
                          "enumDescriptions": [
                            "",
                            "Do not include configuration source files.",
                            "Include configuration source files."
                          ],
                          "enum": [
                            "CONFIG_VIEW_UNSPECIFIED",
                            "BASIC",
                            "FULL"
                          ]
                        },
                        "name": {
                          "location": "path",
                          "type": "string",
                          "description": "Required. Resource name of the form: `projects/*/locations/global/apis/*/configs/*`",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/apis/[^/]+/configs/[^/]+$"
                        }
                      },
                      "id": "apigateway.projects.locations.apis.configs.get"
                    }
                  }
                }
              }
            },
            "operations": {
              "methods": {
                "delete": {
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "id": "apigateway.projects.locations.operations.delete",
                  "path": "v1beta/{+name}",
                  "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
                  "response": {
                    "$ref": "Empty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "description": "The name of the operation resource to be deleted.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "required": true
                    }
                  }
                },
                "cancel": {
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel",
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Empty"
                  },
                  "request": {
                    "$ref": "ApigatewayCancelOperationRequest"
                  },
                  "path": "v1beta/{+name}:cancel",
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
                  "id": "apigateway.projects.locations.operations.cancel",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource to be cancelled.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "required": true
                    }
                  }
                },
                "list": {
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/operations",
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `\"/v1/{name=users/*}/operations\"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "The name of the operation's parent resource.",
                      "location": "path",
                      "type": "string",
                      "required": true
                    },
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "The standard list page token."
                    },
                    "filter": {
                      "type": "string",
                      "location": "query",
                      "description": "The standard list filter."
                    },
                    "pageSize": {
                      "location": "query",
                      "type": "integer",
                      "description": "The standard list page size.",
                      "format": "int32"
                    }
                  },
                  "id": "apigateway.projects.locations.operations.list",
                  "response": {
                    "$ref": "ApigatewayListOperationsResponse"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1beta/{+name}/operations",
                  "httpMethod": "GET"
                },
                "get": {
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                  "httpMethod": "GET",
                  "path": "v1beta/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "ApigatewayOperation"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "apigateway.projects.locations.operations.get"
                }
              }
            }
          }
        }
      }
    }
  },
  "title": "API Gateway API",
  "basePath": "",
  "name": "apigateway",
  "rootUrl": "https://apigateway.googleapis.com/",
  "version_module": true,
  "baseUrl": "https://apigateway.googleapis.com/",
  "documentationLink": "https://cloud.google.com/api-gateway/docs",
  "description": "",
  "servicePath": "",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "schemas": {
    "ApigatewayBackendConfig": {
      "type": "object",
      "description": "Configuration for all backends.",
      "properties": {
        "googleServiceAccount": {
          "description": "Google Cloud IAM service account used to sign OIDC tokens for backends that have authentication configured (https://cloud.google.com/service-infrastructure/docs/service-management/reference/rest/v1/services.configs#backend). This may either be the Service Account's email (i.e. \"{ACCOUNT_ID}@{PROJECT}.iam.gserviceaccount.com\") or its full resource name (i.e. \"projects/{PROJECT}/accounts/{UNIQUE_ID}\"). This is most often used when the backend is a GCP resource such as a Cloud Run Service or an IAP-secured service. Note that this token is always sent as an authorization header bearer token. The audience of the OIDC token is configured in the associated Service Config in the BackendRule option (https://github.com/googleapis/googleapis/blob/master/google/api/backend.proto#L125).",
          "type": "string"
        }
      },
      "id": "ApigatewayBackendConfig"
    },
    "ApigatewayListGatewaysResponse": {
      "description": "Response message for ApiGatewayService.ListGateways",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Next page token."
        },
        "gateways": {
          "items": {
            "$ref": "ApigatewayGateway"
          },
          "type": "array",
          "description": "Gateways."
        },
        "unreachableLocations": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached."
        }
      },
      "type": "object",
      "id": "ApigatewayListGatewaysResponse"
    },
    "ApigatewayListOperationsResponse": {
      "id": "ApigatewayListOperationsResponse",
      "type": "object",
      "description": "The response message for Operations.ListOperations.",
      "properties": {
        "operations": {
          "items": {
            "$ref": "ApigatewayOperation"
          },
          "description": "A list of operations that matches the specified filter in the request.",
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        }
      }
    },
    "ApigatewayListApiConfigsResponse": {
      "description": "Response message for ApiGatewayService.ListApiConfigs",
      "properties": {
        "nextPageToken": {
          "description": "Next page token.",
          "type": "string"
        },
        "apiConfigs": {
          "description": "API Configs.",
          "type": "array",
          "items": {
            "$ref": "ApigatewayApiConfig"
          }
        },
        "unreachableLocations": {
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached.",
          "type": "array"
        }
      },
      "type": "object",
      "id": "ApigatewayListApiConfigsResponse"
    },
    "ApigatewayOperation": {
      "id": "ApigatewayOperation",
      "properties": {
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
          "type": "string"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any."
        },
        "response": {
          "type": "object",
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        },
        "done": {
          "type": "boolean",
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
        },
        "error": {
          "$ref": "ApigatewayStatus",
          "description": "The error result of the operation in case of failure or cancellation."
        }
      },
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "type": "object"
    },
    "ApigatewayApiConfigOpenApiDocument": {
      "type": "object",
      "properties": {
        "document": {
          "description": "The OpenAPI Specification document file.",
          "$ref": "ApigatewayApiConfigFile"
        }
      },
      "id": "ApigatewayApiConfigOpenApiDocument",
      "description": "An OpenAPI Specification Document describing an API."
    },
    "ApigatewayAuditConfig": {
      "type": "object",
      "properties": {
        "auditLogConfigs": {
          "type": "array",
          "description": "The configuration for logging of each type of permission.",
          "items": {
            "$ref": "ApigatewayAuditLogConfig"
          }
        },
        "service": {
          "type": "string",
          "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services."
        }
      },
      "id": "ApigatewayAuditConfig",
      "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging."
    },
    "ApigatewayApiConfigGrpcServiceDefinition": {
      "type": "object",
      "id": "ApigatewayApiConfigGrpcServiceDefinition",
      "properties": {
        "fileDescriptorSet": {
          "$ref": "ApigatewayApiConfigFile",
          "description": "Input only. File descriptor set, generated by protoc. To generate, use protoc with imports and source info included. For an example test.proto file, the following command would put the value in a new file named out.pb. $ protoc --include_imports --include_source_info test.proto -o out.pb"
        },
        "source": {
          "items": {
            "$ref": "ApigatewayApiConfigFile"
          },
          "type": "array",
          "description": "Optional. Uncompiled proto files associated with the descriptor set, used for display purposes (server-side compilation is not supported). These should match the inputs to 'protoc' command used to generate file_descriptor_set."
        }
      },
      "description": "A gRPC service definition."
    },
    "ApigatewayApiConfig": {
      "id": "ApigatewayApiConfig",
      "type": "object",
      "properties": {
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. Created time.",
          "readOnly": true
        },
        "openapiDocuments": {
          "description": "Optional. OpenAPI specification documents. If specified, grpc_services and managed_service_configs must not be included.",
          "items": {
            "$ref": "ApigatewayApiConfigOpenApiDocument"
          },
          "type": "array"
        },
        "updateTime": {
          "readOnly": true,
          "description": "Output only. Updated time.",
          "type": "string",
          "format": "google-datetime"
        },
        "gatewayServiceAccount": {
          "type": "string",
          "description": "Immutable. The Google Cloud IAM Service Account that Gateways serving this config should use to authenticate to other services. This may either be the Service Account's email (`{ACCOUNT_ID}@{PROJECT}.iam.gserviceaccount.com`) or its full resource name (`projects/{PROJECT}/accounts/{UNIQUE_ID}`). This is most often used when the service is a GCP resource such as a Cloud Run Service or an IAP-secured service."
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Optional. Resource labels to represent user-provided metadata. Refer to cloud documentation on labels for more details. https://cloud.google.com/compute/docs/labeling-resources"
        },
        "state": {
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "API Config does not have a state yet.",
            "API Config is being created and deployed to the API Controller.",
            "API Config is ready for use by Gateways.",
            "API Config creation failed.",
            "API Config is being deleted.",
            "API Config is being updated.",
            "API Config settings are being activated in downstream systems. API Configs in this state cannot be used by Gateways."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "ACTIVE",
            "FAILED",
            "DELETING",
            "UPDATING",
            "ACTIVATING"
          ],
          "description": "Output only. State of the API Config."
        },
        "name": {
          "description": "Output only. Resource name of the API Config. Format: projects/{project}/locations/global/apis/{api}/configs/{api_config}",
          "readOnly": true,
          "type": "string"
        },
        "serviceConfigId": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The ID of the associated Service Config ( https://cloud.google.com/service-infrastructure/docs/glossary#config)."
        },
        "gatewayConfig": {
          "description": "Immutable. Gateway specific configuration.",
          "$ref": "ApigatewayGatewayConfig"
        },
        "displayName": {
          "description": "Optional. Display name.",
          "type": "string"
        },
        "managedServiceConfigs": {
          "type": "array",
          "description": "Optional. Service Configuration files. At least one must be included when using gRPC service definitions. See https://cloud.google.com/endpoints/docs/grpc/grpc-service-config#service_configuration_overview for the expected file contents. If multiple files are specified, the files are merged with the following rules: * All singular scalar fields are merged using \"last one wins\" semantics in the order of the files uploaded. * Repeated fields are concatenated. * Singular embedded messages are merged using these rules for nested fields.",
          "items": {
            "$ref": "ApigatewayApiConfigFile"
          }
        },
        "grpcServices": {
          "description": "Optional. gRPC service definition files. If specified, openapi_documents must not be included.",
          "items": {
            "$ref": "ApigatewayApiConfigGrpcServiceDefinition"
          },
          "type": "array"
        }
      },
      "description": "An API Configuration is a combination of settings for both the Managed Service and Gateways serving this API Config."
    },
    "ApigatewayTestIamPermissionsRequest": {
      "description": "Request message for `TestIamPermissions` method.",
      "id": "ApigatewayTestIamPermissionsRequest",
      "type": "object",
      "properties": {
        "permissions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions)."
        }
      }
    },
    "ApigatewayGatewayConfig": {
      "type": "object",
      "properties": {
        "backendConfig": {
          "$ref": "ApigatewayBackendConfig",
          "description": "Required. Backend settings that are applied to all backends of the Gateway."
        }
      },
      "description": "Configuration settings for Gateways.",
      "id": "ApigatewayGatewayConfig"
    },
    "ApigatewayListLocationsResponse": {
      "id": "ApigatewayListLocationsResponse",
      "type": "object",
      "description": "The response message for Locations.ListLocations.",
      "properties": {
        "locations": {
          "items": {
            "$ref": "ApigatewayLocation"
          },
          "type": "array",
          "description": "A list of locations that matches the specified filter in the request."
        },
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        }
      }
    },
    "Empty": {
      "properties": {},
      "type": "object",
      "id": "Empty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }"
    },
    "ApigatewayOperationMetadata": {
      "properties": {
        "apiVersion": {
          "readOnly": true,
          "description": "Output only. API version used to start the operation.",
          "type": "string"
        },
        "endTime": {
          "format": "google-datetime",
          "description": "Output only. The time the operation finished running.",
          "type": "string",
          "readOnly": true
        },
        "verb": {
          "description": "Output only. Name of the verb executed by the operation.",
          "readOnly": true,
          "type": "string"
        },
        "createTime": {
          "format": "google-datetime",
          "description": "Output only. The time the operation was created.",
          "readOnly": true,
          "type": "string"
        },
        "target": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Server-defined resource path for the target of the operation."
        },
        "requestedCancellation": {
          "type": "boolean",
          "description": "Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
          "readOnly": true
        },
        "statusMessage": {
          "description": "Output only. Human-readable status of the operation, if any.",
          "readOnly": true,
          "type": "string"
        },
        "diagnostics": {
          "type": "array",
          "items": {
            "$ref": "ApigatewayOperationMetadataDiagnostic"
          },
          "description": "Output only. Diagnostics generated during processing of configuration source files.",
          "readOnly": true
        }
      },
      "description": "Represents the metadata of the long-running operation.",
      "type": "object",
      "id": "ApigatewayOperationMetadata"
    },
    "ApigatewayExpr": {
      "id": "ApigatewayExpr",
      "properties": {
        "title": {
          "type": "string",
          "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
        },
        "description": {
          "type": "string",
          "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
        },
        "expression": {
          "description": "Textual representation of an expression in Common Expression Language syntax.",
          "type": "string"
        },
        "location": {
          "type": "string",
          "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
        }
      },
      "description": "Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() \u003c 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.",
      "type": "object"
    },
    "ApigatewayPolicy": {
      "properties": {
        "etag": {
          "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
          "type": "string",
          "format": "byte"
        },
        "auditConfigs": {
          "type": "array",
          "description": "Specifies cloud audit logging configuration for this policy.",
          "items": {
            "$ref": "ApigatewayAuditConfig"
          }
        },
        "bindings": {
          "type": "array",
          "items": {
            "$ref": "ApigatewayBinding"
          },
          "description": "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`."
        },
        "version": {
          "format": "int32",
          "type": "integer",
          "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
        }
      },
      "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time \u003c timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time \u003c timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
      "type": "object",
      "id": "ApigatewayPolicy"
    },
    "ApigatewayTestIamPermissionsResponse": {
      "description": "Response message for `TestIamPermissions` method.",
      "type": "object",
      "id": "ApigatewayTestIamPermissionsResponse",
      "properties": {
        "permissions": {
          "items": {
            "type": "string"
          },
          "description": "A subset of `TestPermissionsRequest.permissions` that the caller is allowed.",
          "type": "array"
        }
      }
    },
    "ApigatewayCancelOperationRequest": {
      "type": "object",
      "description": "The request message for Operations.CancelOperation.",
      "properties": {},
      "id": "ApigatewayCancelOperationRequest"
    },
    "ApigatewayOperationMetadataDiagnostic": {
      "properties": {
        "location": {
          "description": "Location of the diagnostic.",
          "type": "string"
        },
        "message": {
          "description": "The diagnostic message.",
          "type": "string"
        }
      },
      "description": "Diagnostic information from configuration processing.",
      "id": "ApigatewayOperationMetadataDiagnostic",
      "type": "object"
    },
    "ApigatewayStatus": {
      "id": "ApigatewayStatus",
      "type": "object",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "properties": {
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer",
          "format": "int32"
        },
        "details": {
          "items": {
            "type": "object",
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            }
          },
          "type": "array",
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
        }
      }
    },
    "ApigatewayApiConfigFile": {
      "description": "A lightweight description of a file.",
      "properties": {
        "contents": {
          "description": "The bytes that constitute the file.",
          "type": "string",
          "format": "byte"
        },
        "path": {
          "description": "The file path (full or relative path). This is typically the path of the file when it is uploaded.",
          "type": "string"
        }
      },
      "id": "ApigatewayApiConfigFile",
      "type": "object"
    },
    "ApigatewaySetIamPolicyRequest": {
      "id": "ApigatewaySetIamPolicyRequest",
      "properties": {
        "policy": {
          "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them.",
          "$ref": "ApigatewayPolicy"
        },
        "updateMask": {
          "format": "google-fieldmask",
          "description": "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: \"bindings, etag\"`",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Request message for `SetIamPolicy` method."
    },
    "ApigatewayApi": {
      "description": "An API that can be served by one or more Gateways.",
      "id": "ApigatewayApi",
      "type": "object",
      "properties": {
        "updateTime": {
          "readOnly": true,
          "description": "Output only. Updated time.",
          "format": "google-datetime",
          "type": "string"
        },
        "labels": {
          "type": "object",
          "description": "Optional. Resource labels to represent user-provided metadata. Refer to cloud documentation on labels for more details. https://cloud.google.com/compute/docs/labeling-resources",
          "additionalProperties": {
            "type": "string"
          }
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Resource name of the API. Format: projects/{project}/locations/global/apis/{api}"
        },
        "displayName": {
          "type": "string",
          "description": "Optional. Display name."
        },
        "managedService": {
          "type": "string",
          "description": "Optional. Immutable. The name of a Google Managed Service ( https://cloud.google.com/service-infrastructure/docs/glossary#managed). If not specified, a new Service will automatically be created in the same project as this API."
        },
        "state": {
          "enumDescriptions": [
            "API does not have a state yet.",
            "API is being created.",
            "API is active.",
            "API creation failed.",
            "API is being deleted.",
            "API is being updated."
          ],
          "type": "string",
          "description": "Output only. State of the API.",
          "readOnly": true,
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "ACTIVE",
            "FAILED",
            "DELETING",
            "UPDATING"
          ]
        },
        "createTime": {
          "readOnly": true,
          "description": "Output only. Created time.",
          "type": "string",
          "format": "google-datetime"
        }
      }
    },
    "ApigatewayLocation": {
      "type": "object",
      "id": "ApigatewayLocation",
      "properties": {
        "displayName": {
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\".",
          "type": "string"
        },
        "labels": {
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "locationId": {
          "type": "string",
          "description": "The canonical id for this location. For example: `\"us-east1\"`."
        },
        "metadata": {
          "description": "Service-specific metadata. For example the available capacity at the given location.",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "type": "object"
        },
        "name": {
          "type": "string",
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`"
        }
      },
      "description": "A resource that represents Google Cloud Platform location."
    },
    "ApigatewayListApisResponse": {
      "id": "ApigatewayListApisResponse",
      "type": "object",
      "properties": {
        "unreachableLocations": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached."
        },
        "nextPageToken": {
          "type": "string",
          "description": "Next page token."
        },
        "apis": {
          "items": {
            "$ref": "ApigatewayApi"
          },
          "description": "APIs.",
          "type": "array"
        }
      },
      "description": "Response message for ApiGatewayService.ListApis"
    },
    "ApigatewayBinding": {
      "id": "ApigatewayBinding",
      "properties": {
        "role": {
          "description": "Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.",
          "type": "string"
        },
        "members": {
          "type": "array",
          "description": "Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding.",
          "items": {
            "type": "string"
          }
        },
        "condition": {
          "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
          "$ref": "ApigatewayExpr"
        }
      },
      "type": "object",
      "description": "Associates `members`, or principals, with a `role`."
    },
    "ApigatewayGateway": {
      "properties": {
        "labels": {
          "description": "Optional. Resource labels to represent user-provided metadata. Refer to cloud documentation on labels for more details. https://cloud.google.com/compute/docs/labeling-resources",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "createTime": {
          "readOnly": true,
          "description": "Output only. Created time.",
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "type": "string",
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. Updated time."
        },
        "state": {
          "readOnly": true,
          "enumDescriptions": [
            "Gateway does not have a state yet.",
            "Gateway is being created.",
            "Gateway is running and ready for requests.",
            "Gateway creation failed.",
            "Gateway is being deleted.",
            "Gateway is being updated."
          ],
          "description": "Output only. The current state of the Gateway.",
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "ACTIVE",
            "FAILED",
            "DELETING",
            "UPDATING"
          ],
          "type": "string"
        },
        "defaultHostname": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The default API Gateway host name of the form `{gateway_id}-{hash}.{region_code}.gateway.dev`."
        },
        "apiConfig": {
          "description": "Required. Resource name of the API Config for this Gateway. Format: projects/{project}/locations/global/apis/{api}/configs/{apiConfig}",
          "type": "string"
        },
        "displayName": {
          "type": "string",
          "description": "Optional. Display name."
        },
        "name": {
          "type": "string",
          "description": "Output only. Resource name of the Gateway. Format: projects/{project}/locations/{location}/gateways/{gateway}",
          "readOnly": true
        }
      },
      "id": "ApigatewayGateway",
      "type": "object",
      "description": "A Gateway is an API-aware HTTP proxy. It performs API-Method and/or API-Consumer specific actions based on an API Config such as authentication, policy enforcement, and backend selection."
    },
    "ApigatewayAuditLogConfig": {
      "id": "ApigatewayAuditLogConfig",
      "properties": {
        "logType": {
          "enumDescriptions": [
            "Default case. Should never be this.",
            "Admin reads. Example: CloudIAM getIamPolicy",
            "Data writes. Example: CloudSQL Users create",
            "Data reads. Example: CloudSQL Users list"
          ],
          "enum": [
            "LOG_TYPE_UNSPECIFIED",
            "ADMIN_READ",
            "DATA_WRITE",
            "DATA_READ"
          ],
          "type": "string",
          "description": "The log type that this config enables."
        },
        "exemptedMembers": {
          "type": "array",
          "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.",
      "type": "object"
    }
  },
  "mtlsRootUrl": "https://apigateway.mtls.googleapis.com/",
  "kind": "discovery#restDescription"
}
