{
  "basePath": "",
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "methods": {
            "list": {
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "httpMethod": "GET",
              "id": "vpcaccess.projects.locations.list",
              "description": "Lists information about the supported locations for this service.",
              "parameters": {
                "filter": {
                  "location": "query",
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like `\"displayName=tokyo\"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160).",
                  "type": "string"
                },
                "pageSize": {
                  "format": "int32",
                  "type": "integer",
                  "location": "query",
                  "description": "The maximum number of results to return. If not set, the service selects a default."
                },
                "name": {
                  "description": "The resource that owns the locations collection, if applicable.",
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+$"
                },
                "pageToken": {
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.",
                  "location": "query",
                  "type": "string"
                }
              },
              "path": "v1/{+name}/locations",
              "flatPath": "v1/projects/{projectsId}/locations",
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            }
          },
          "resources": {
            "operations": {
              "methods": {
                "list": {
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `\"/v1/{name=users/*}/operations\"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.",
                  "id": "vpcaccess.projects.locations.operations.list",
                  "parameters": {
                    "pageSize": {
                      "format": "int32",
                      "location": "query",
                      "description": "The standard list page size.",
                      "type": "integer"
                    },
                    "pageToken": {
                      "description": "The standard list page token.",
                      "location": "query",
                      "type": "string"
                    },
                    "filter": {
                      "type": "string",
                      "description": "The standard list filter.",
                      "location": "query"
                    },
                    "name": {
                      "description": "The name of the operation's parent resource.",
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  },
                  "path": "v1/{+name}/operations",
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations",
                  "response": {
                    "$ref": "ListOperationsResponse"
                  }
                },
                "get": {
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                  "id": "vpcaccess.projects.locations.operations.get",
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "type": "string",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}"
                }
              }
            },
            "connectors": {
              "methods": {
                "create": {
                  "request": {
                    "$ref": "Connector"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v1/{+parent}/connectors",
                  "parameters": {
                    "parent": {
                      "description": "Required. The project and location in which the configuration should be created, specified in the format `projects/*/locations/*`.",
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true
                    },
                    "connectorId": {
                      "location": "query",
                      "type": "string",
                      "description": "Required. The ID to use for this connector."
                    }
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Creates a Serverless VPC Access connector, returns an operation.",
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connectors",
                  "id": "vpcaccess.projects.locations.connectors.create"
                },
                "list": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "ListConnectorsResponse"
                  },
                  "parameters": {
                    "pageSize": {
                      "description": "Maximum number of functions to return per call.",
                      "type": "integer",
                      "format": "int32",
                      "location": "query"
                    },
                    "parent": {
                      "type": "string",
                      "required": true,
                      "description": "Required. The project and location from which the routes should be listed.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path"
                    },
                    "pageToken": {
                      "type": "string",
                      "description": "Continuation token.",
                      "location": "query"
                    }
                  },
                  "path": "v1/{+parent}/connectors",
                  "httpMethod": "GET",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connectors",
                  "description": "Lists Serverless VPC Access connectors.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "vpcaccess.projects.locations.connectors.list"
                },
                "delete": {
                  "path": "v1/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Deletes a Serverless VPC Access connector. Returns NOT_FOUND if the resource does not exist.",
                  "id": "vpcaccess.projects.locations.connectors.delete",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "name": {
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/connectors/[^/]+$",
                      "description": "Required. Name of a Serverless VPC Access connector to delete.",
                      "location": "path"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connectors/{connectorsId}",
                  "httpMethod": "DELETE",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "get": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connectors/{connectorsId}",
                  "description": "Gets a Serverless VPC Access connector. Returns NOT_FOUND if the resource does not exist.",
                  "response": {
                    "$ref": "Connector"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET",
                  "path": "v1/{+name}",
                  "parameters": {
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/connectors/[^/]+$",
                      "description": "Required. Name of a Serverless VPC Access connector to get.",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "id": "vpcaccess.projects.locations.connectors.get",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                }
              }
            }
          }
        }
      }
    }
  },
  "servicePath": "",
  "documentationLink": "https://cloud.google.com/vpc/docs/configure-serverless-vpc-access",
  "parameters": {
    "alt": {
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "description": "Data format for response.",
      "type": "string",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "default": "json",
      "location": "query"
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string",
      "location": "query"
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "prettyPrint": {
      "description": "Returns response with indentations and line breaks.",
      "location": "query",
      "type": "boolean",
      "default": "true"
    },
    "$.xgafv": {
      "location": "query",
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "type": "string"
    },
    "oauth_token": {
      "location": "query",
      "description": "OAuth 2.0 token for the current user.",
      "type": "string"
    },
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "key": {
      "location": "query",
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
    },
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query",
      "type": "string"
    }
  },
  "name": "vpcaccess",
  "schemas": {
    "Status": {
      "type": "object",
      "id": "Status",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "The status code, which should be an enum value of google.rpc.Code."
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "details": {
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            }
          },
          "type": "array",
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
        }
      }
    },
    "OperationMetadataV1Alpha1": {
      "description": "Metadata for google.longrunning.Operation.",
      "id": "OperationMetadataV1Alpha1",
      "properties": {
        "method": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Method that initiated the operation e.g. google.cloud.vpcaccess.v1alpha1.Connectors.CreateConnector."
        },
        "endTime": {
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. Time when the operation completed.",
          "type": "string"
        },
        "target": {
          "description": "Output only. Name of the resource that this operation is acting on e.g. projects/my-project/locations/us-central1/connectors/v1.",
          "type": "string",
          "readOnly": true
        },
        "insertTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. Time when the operation was created.",
          "readOnly": true
        }
      },
      "type": "object"
    },
    "ListOperationsResponse": {
      "description": "The response message for Operations.ListOperations.",
      "id": "ListOperationsResponse",
      "type": "object",
      "properties": {
        "operations": {
          "type": "array",
          "items": {
            "$ref": "Operation"
          },
          "description": "A list of operations that matches the specified filter in the request."
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      }
    },
    "OperationMetadata": {
      "id": "OperationMetadata",
      "type": "object",
      "properties": {
        "method": {
          "type": "string",
          "description": "Output only. Method that initiated the operation e.g. google.cloud.vpcaccess.v1.Connectors.CreateConnector.",
          "readOnly": true
        },
        "endTime": {
          "type": "string",
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. Time when the operation completed."
        },
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. Time when the operation was created.",
          "readOnly": true
        },
        "target": {
          "description": "Output only. Name of the resource that this operation is acting on e.g. projects/my-project/locations/us-central1/connectors/v1.",
          "type": "string",
          "readOnly": true
        }
      },
      "description": "Metadata for google.longrunning.Operation."
    },
    "Operation": {
      "id": "Operation",
      "type": "object",
      "properties": {
        "error": {
          "$ref": "Status",
          "description": "The error result of the operation in case of failure or cancellation."
        },
        "metadata": {
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        },
        "done": {
          "type": "boolean",
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
        },
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
          "type": "string"
        },
        "response": {
          "type": "object",
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        }
      },
      "description": "This resource represents a long-running operation that is the result of a network API call."
    },
    "ListLocationsResponse": {
      "type": "object",
      "description": "The response message for Locations.ListLocations.",
      "properties": {
        "locations": {
          "items": {
            "$ref": "Location"
          },
          "type": "array",
          "description": "A list of locations that matches the specified filter in the request."
        },
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        }
      },
      "id": "ListLocationsResponse"
    },
    "OperationMetadataV1Beta1": {
      "description": "Metadata for google.longrunning.Operation.",
      "properties": {
        "target": {
          "readOnly": true,
          "description": "Output only. Name of the resource that this operation is acting on e.g. projects/my-project/locations/us-central1/connectors/v1.",
          "type": "string"
        },
        "method": {
          "type": "string",
          "description": "Output only. Method that initiated the operation e.g. google.cloud.vpcaccess.v1beta1.Connectors.CreateConnector.",
          "readOnly": true
        },
        "createTime": {
          "type": "string",
          "description": "Output only. Time when the operation was created.",
          "readOnly": true,
          "format": "google-datetime"
        },
        "endTime": {
          "type": "string",
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. Time when the operation completed."
        }
      },
      "type": "object",
      "id": "OperationMetadataV1Beta1"
    },
    "Location": {
      "id": "Location",
      "description": "A resource that represents Google Cloud Platform location.",
      "properties": {
        "locationId": {
          "type": "string",
          "description": "The canonical id for this location. For example: `\"us-east1\"`."
        },
        "name": {
          "type": "string",
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`"
        },
        "labels": {
          "type": "object",
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}",
          "additionalProperties": {
            "type": "string"
          }
        },
        "displayName": {
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\".",
          "type": "string"
        },
        "metadata": {
          "type": "object",
          "description": "Service-specific metadata. For example the available capacity at the given location.",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        }
      },
      "type": "object"
    },
    "Subnet": {
      "id": "Subnet",
      "properties": {
        "projectId": {
          "description": "Project in which the subnet exists. If not set, this project is assumed to be the project for which the connector create request was issued.",
          "type": "string"
        },
        "name": {
          "description": "Subnet name (relative, not fully qualified). E.g. if the full subnet selfLink is https://compute.googleapis.com/compute/v1/projects/{project}/regions/{region}/subnetworks/{subnetName} the correct input for this field would be {subnetName}",
          "type": "string"
        }
      },
      "description": "The subnet in which to house the connector",
      "type": "object"
    },
    "ListConnectorsResponse": {
      "properties": {
        "connectors": {
          "type": "array",
          "items": {
            "$ref": "Connector"
          },
          "description": "List of Serverless VPC Access connectors."
        },
        "nextPageToken": {
          "description": "Continuation token.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "ListConnectorsResponse",
      "description": "Response for listing Serverless VPC Access connectors."
    },
    "Connector": {
      "properties": {
        "subnet": {
          "description": "The subnet in which to house the VPC Access Connector.",
          "$ref": "Subnet"
        },
        "name": {
          "type": "string",
          "description": "The resource name in the format `projects/*/locations/*/connectors/*`."
        },
        "network": {
          "description": "Name of a VPC network.",
          "type": "string"
        },
        "state": {
          "type": "string",
          "description": "Output only. State of the VPC access connector.",
          "readOnly": true,
          "enumDescriptions": [
            "Invalid state.",
            "Connector is deployed and ready to receive traffic.",
            "An Insert operation is in progress. Transient condition.",
            "A Delete operation is in progress. Transient condition.",
            "Connector is in a bad state, manual deletion recommended.",
            "The connector is being updated."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "READY",
            "CREATING",
            "DELETING",
            "ERROR",
            "UPDATING"
          ]
        },
        "ipCidrRange": {
          "type": "string",
          "description": "The range of internal addresses that follows RFC 4632 notation. Example: `10.132.0.0/28`."
        },
        "connectedProjects": {
          "type": "array",
          "readOnly": true,
          "items": {
            "type": "string"
          },
          "description": "Output only. List of projects using the connector."
        },
        "maxInstances": {
          "description": "Maximum value of instances in autoscaling group underlying the connector.",
          "type": "integer",
          "format": "int32"
        },
        "minThroughput": {
          "description": "Minimum throughput of the connector in Mbps. Default and min is 200.",
          "type": "integer",
          "format": "int32"
        },
        "machineType": {
          "type": "string",
          "description": "Machine type of VM Instance underlying connector. Default is e2-micro"
        },
        "maxThroughput": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum throughput of the connector in Mbps. Default is 300, max is 1000."
        },
        "minInstances": {
          "type": "integer",
          "format": "int32",
          "description": "Minimum value of instances in autoscaling group underlying the connector."
        }
      },
      "description": "Definition of a Serverless VPC Access connector.",
      "type": "object",
      "id": "Connector"
    }
  },
  "version": "v1",
  "batchPath": "batch",
  "protocol": "rest",
  "ownerName": "Google",
  "rootUrl": "https://vpcaccess.googleapis.com/",
  "kind": "discovery#restDescription",
  "title": "Serverless VPC Access API",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "canonicalName": "Serverless VPC Access",
  "ownerDomain": "google.com",
  "discoveryVersion": "v1",
  "id": "vpcaccess:v1",
  "version_module": true,
  "revision": "20230222",
  "description": "API for managing VPC access connectors.",
  "baseUrl": "https://vpcaccess.googleapis.com/",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "fullyEncodeReservedExpansion": true,
  "mtlsRootUrl": "https://vpcaccess.mtls.googleapis.com/"
}
