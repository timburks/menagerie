{
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/books": {
          "description": "Manage your books"
        }
      }
    }
  },
  "protocol": "rest",
  "mtlsRootUrl": "https://books.mtls.googleapis.com/",
  "resources": {
    "myconfig": {
      "methods": {
        "getUserSettings": {
          "id": "books.myconfig.getUserSettings",
          "path": "books/v1/myconfig/getUserSettings",
          "description": "Gets the current settings for the user.",
          "flatPath": "books/v1/myconfig/getUserSettings",
          "parameters": {
            "country": {
              "location": "query",
              "type": "string",
              "description": "Unused. Added only to workaround TEX mandatory request template requirement"
            }
          },
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "parameterOrder": [],
          "response": {
            "$ref": "Usersettings"
          }
        },
        "syncVolumeLicenses": {
          "description": "Request downloaded content access for specified volumes on the My eBooks shelf.",
          "httpMethod": "POST",
          "response": {
            "$ref": "Volumes"
          },
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "flatPath": "books/v1/myconfig/syncVolumeLicenses",
          "parameters": {
            "volumeIds": {
              "repeated": true,
              "location": "query",
              "type": "string",
              "description": "The volume(s) to request download restrictions for."
            },
            "locale": {
              "type": "string",
              "description": "ISO-639-1, ISO-3166-1 codes for message localization, i.e. en_US.",
              "location": "query"
            },
            "source": {
              "location": "query",
              "type": "string",
              "description": "String to identify the originator of this request.",
              "required": true
            },
            "showPreorders": {
              "description": "Set to true to show pre-ordered books. Defaults to false.",
              "type": "boolean",
              "location": "query"
            },
            "nonce": {
              "required": true,
              "type": "string",
              "description": "The client nonce value.",
              "location": "query"
            },
            "includeNonComicsSeries": {
              "description": "Set to true to include non-comics series. Defaults to false.",
              "location": "query",
              "type": "boolean"
            },
            "cpksver": {
              "type": "string",
              "location": "query",
              "description": "The device/version ID from which to release the restriction.",
              "required": true
            },
            "features": {
              "enumDescriptions": [
                "",
                "Client supports rentals."
              ],
              "type": "string",
              "repeated": true,
              "enum": [
                "FEATURES_UNDEFINED",
                "RENTALS"
              ],
              "location": "query",
              "description": "List of features supported by the client, i.e., 'RENTALS'"
            }
          },
          "parameterOrder": [
            "cpksver",
            "nonce",
            "source"
          ],
          "id": "books.myconfig.syncVolumeLicenses",
          "path": "books/v1/myconfig/syncVolumeLicenses"
        },
        "requestAccess": {
          "description": "Request concurrent and download access restrictions.",
          "path": "books/v1/myconfig/requestAccess",
          "flatPath": "books/v1/myconfig/requestAccess",
          "id": "books.myconfig.requestAccess",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "response": {
            "$ref": "RequestAccessData"
          },
          "httpMethod": "POST",
          "parameters": {
            "nonce": {
              "location": "query",
              "type": "string",
              "description": "The client nonce value.",
              "required": true
            },
            "volumeId": {
              "description": "The volume to request concurrent/download restrictions for.",
              "type": "string",
              "location": "query",
              "required": true
            },
            "cpksver": {
              "location": "query",
              "description": "The device/version ID from which to request the restrictions.",
              "type": "string",
              "required": true
            },
            "locale": {
              "location": "query",
              "type": "string",
              "description": "ISO-639-1, ISO-3166-1 codes for message localization, i.e. en_US."
            },
            "source": {
              "location": "query",
              "required": true,
              "type": "string",
              "description": "String to identify the originator of this request."
            },
            "licenseTypes": {
              "location": "query",
              "enum": [
                "LICENSE_TYPES_UNDEFINED",
                "BOTH",
                "CONCURRENT",
                "DOWNLOAD"
              ],
              "enumDescriptions": [
                "",
                "Both concurrent and download licenses.",
                "Concurrent access license.",
                "Offline download access license."
              ],
              "type": "string",
              "description": "The type of access license to request. If not specified, the default is BOTH."
            }
          },
          "parameterOrder": [
            "cpksver",
            "nonce",
            "source",
            "volumeId"
          ]
        },
        "releaseDownloadAccess": {
          "parameters": {
            "volumeIds": {
              "required": true,
              "type": "string",
              "location": "query",
              "description": "The volume(s) to release restrictions for.",
              "repeated": true
            },
            "cpksver": {
              "type": "string",
              "required": true,
              "description": "The device/version ID from which to release the restriction.",
              "location": "query"
            },
            "source": {
              "type": "string",
              "description": "String to identify the originator of this request.",
              "location": "query"
            },
            "locale": {
              "location": "query",
              "type": "string",
              "description": "ISO-639-1, ISO-3166-1 codes for message localization, i.e. en_US."
            }
          },
          "response": {
            "$ref": "DownloadAccesses"
          },
          "path": "books/v1/myconfig/releaseDownloadAccess",
          "flatPath": "books/v1/myconfig/releaseDownloadAccess",
          "httpMethod": "POST",
          "id": "books.myconfig.releaseDownloadAccess",
          "parameterOrder": [
            "cpksver",
            "volumeIds"
          ],
          "description": "Release downloaded content access restriction.",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ]
        },
        "updateUserSettings": {
          "parameterOrder": [],
          "flatPath": "books/v1/myconfig/updateUserSettings",
          "path": "books/v1/myconfig/updateUserSettings",
          "parameters": {},
          "id": "books.myconfig.updateUserSettings",
          "response": {
            "$ref": "Usersettings"
          },
          "request": {
            "$ref": "Usersettings"
          },
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "description": "Sets the settings for the user. If a sub-object is specified, it will overwrite the existing sub-object stored in the server. Unspecified sub-objects will retain the existing value."
        }
      }
    },
    "familysharing": {
      "methods": {
        "share": {
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "path": "books/v1/familysharing/share",
          "response": {
            "$ref": "Empty"
          },
          "httpMethod": "POST",
          "description": "Initiates sharing of the content with the user's family. Empty response indicates success.",
          "parameters": {
            "docId": {
              "type": "string",
              "description": "The docid to share.",
              "location": "query"
            },
            "source": {
              "location": "query",
              "type": "string",
              "description": "String to identify the originator of this request."
            },
            "volumeId": {
              "type": "string",
              "location": "query",
              "description": "The volume to share."
            }
          },
          "parameterOrder": [],
          "flatPath": "books/v1/familysharing/share",
          "id": "books.familysharing.share"
        },
        "getFamilyInfo": {
          "response": {
            "$ref": "FamilyInfo"
          },
          "parameters": {
            "source": {
              "type": "string",
              "location": "query",
              "description": "String to identify the originator of this request."
            }
          },
          "parameterOrder": [],
          "id": "books.familysharing.getFamilyInfo",
          "flatPath": "books/v1/familysharing/getFamilyInfo",
          "description": "Gets information regarding the family that the user is part of.",
          "path": "books/v1/familysharing/getFamilyInfo",
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ]
        },
        "unshare": {
          "id": "books.familysharing.unshare",
          "description": "Initiates revoking content that has already been shared with the user's family. Empty response indicates success.",
          "flatPath": "books/v1/familysharing/unshare",
          "path": "books/v1/familysharing/unshare",
          "parameters": {
            "volumeId": {
              "location": "query",
              "description": "The volume to unshare.",
              "type": "string"
            },
            "source": {
              "type": "string",
              "description": "String to identify the originator of this request.",
              "location": "query"
            },
            "docId": {
              "description": "The docid to unshare.",
              "location": "query",
              "type": "string"
            }
          },
          "response": {
            "$ref": "Empty"
          },
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "parameterOrder": []
        }
      }
    },
    "promooffer": {
      "methods": {
        "get": {
          "path": "books/v1/promooffer/get",
          "parameters": {
            "manufacturer": {
              "type": "string",
              "location": "query",
              "description": "device manufacturer"
            },
            "serial": {
              "location": "query",
              "type": "string",
              "description": "device serial"
            },
            "model": {
              "type": "string",
              "location": "query",
              "description": "device model"
            },
            "androidId": {
              "location": "query",
              "type": "string",
              "description": "device android_id"
            },
            "product": {
              "type": "string",
              "description": "device product",
              "location": "query"
            },
            "device": {
              "type": "string",
              "description": "device device",
              "location": "query"
            }
          },
          "parameterOrder": [],
          "description": "Returns a list of promo offers available to the user",
          "id": "books.promooffer.get",
          "response": {
            "$ref": "Offers"
          },
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "flatPath": "books/v1/promooffer/get"
        },
        "dismiss": {
          "httpMethod": "POST",
          "parameterOrder": [],
          "flatPath": "books/v1/promooffer/dismiss",
          "parameters": {
            "serial": {
              "location": "query",
              "description": "device serial",
              "type": "string"
            },
            "device": {
              "location": "query",
              "description": "device device",
              "type": "string"
            },
            "model": {
              "description": "device model",
              "type": "string",
              "location": "query"
            },
            "product": {
              "location": "query",
              "description": "device product",
              "type": "string"
            },
            "manufacturer": {
              "type": "string",
              "description": "device manufacturer",
              "location": "query"
            },
            "androidId": {
              "type": "string",
              "location": "query",
              "description": "device android_id"
            },
            "offerId": {
              "type": "string",
              "description": "Offer to dimiss",
              "location": "query"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "path": "books/v1/promooffer/dismiss",
          "response": {
            "$ref": "Empty"
          },
          "description": "Marks the promo offer as dismissed.",
          "id": "books.promooffer.dismiss"
        },
        "accept": {
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "parameters": {
            "offerId": {
              "location": "query",
              "type": "string"
            },
            "product": {
              "description": "device product",
              "location": "query",
              "type": "string"
            },
            "model": {
              "location": "query",
              "description": "device model",
              "type": "string"
            },
            "androidId": {
              "type": "string",
              "description": "device android_id",
              "location": "query"
            },
            "device": {
              "type": "string",
              "location": "query",
              "description": "device device"
            },
            "serial": {
              "location": "query",
              "type": "string",
              "description": "device serial"
            },
            "manufacturer": {
              "type": "string",
              "location": "query",
              "description": "device manufacturer"
            },
            "volumeId": {
              "description": "Volume id to exercise the offer",
              "location": "query",
              "type": "string"
            }
          },
          "path": "books/v1/promooffer/accept",
          "parameterOrder": [],
          "response": {
            "$ref": "Empty"
          },
          "description": "Accepts the promo offer.",
          "id": "books.promooffer.accept",
          "httpMethod": "POST",
          "flatPath": "books/v1/promooffer/accept"
        }
      }
    },
    "layers": {
      "resources": {
        "volumeAnnotations": {
          "methods": {
            "get": {
              "path": "books/v1/volumes/{volumeId}/layers/{layerId}/annotations/{annotationId}",
              "parameters": {
                "layerId": {
                  "description": "The ID for the layer to get the annotations.",
                  "required": true,
                  "location": "path",
                  "type": "string"
                },
                "source": {
                  "description": "String to identify the originator of this request.",
                  "location": "query",
                  "type": "string"
                },
                "volumeId": {
                  "description": "The volume to retrieve annotations for.",
                  "location": "path",
                  "type": "string",
                  "required": true
                },
                "annotationId": {
                  "description": "The ID of the volume annotation to retrieve.",
                  "required": true,
                  "location": "path",
                  "type": "string"
                },
                "locale": {
                  "type": "string",
                  "location": "query",
                  "description": "The locale information for the data. ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'."
                }
              },
              "flatPath": "books/v1/volumes/{volumeId}/layers/{layerId}/annotations/{annotationId}",
              "description": "Gets the volume annotation.",
              "httpMethod": "GET",
              "parameterOrder": [
                "volumeId",
                "layerId",
                "annotationId"
              ],
              "id": "books.layers.volumeAnnotations.get",
              "response": {
                "$ref": "Volumeannotation"
              },
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ]
            },
            "list": {
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "path": "books/v1/volumes/{volumeId}/layers/{layerId}",
              "parameterOrder": [
                "volumeId",
                "layerId",
                "contentVersion"
              ],
              "response": {
                "$ref": "Volumeannotations"
              },
              "description": "Gets the volume annotations for a volume and layer.",
              "parameters": {
                "pageToken": {
                  "type": "string",
                  "location": "query",
                  "description": "The value of the nextToken from the previous page."
                },
                "updatedMin": {
                  "type": "string",
                  "description": "RFC 3339 timestamp to restrict to items updated since this timestamp (inclusive).",
                  "location": "query"
                },
                "showDeleted": {
                  "description": "Set to true to return deleted annotations. updatedMin must be in the request to use this. Defaults to false.",
                  "location": "query",
                  "type": "boolean"
                },
                "startPosition": {
                  "location": "query",
                  "type": "string",
                  "description": "The start position to start retrieving data from."
                },
                "updatedMax": {
                  "type": "string",
                  "location": "query",
                  "description": "RFC 3339 timestamp to restrict to items updated prior to this timestamp (exclusive)."
                },
                "contentVersion": {
                  "type": "string",
                  "location": "query",
                  "required": true,
                  "description": "The content version for the requested volume."
                },
                "layerId": {
                  "type": "string",
                  "description": "The ID for the layer to get the annotations.",
                  "required": true,
                  "location": "path"
                },
                "maxResults": {
                  "description": "Maximum number of results to return",
                  "type": "integer",
                  "minimum": "0",
                  "maximum": "200",
                  "location": "query",
                  "format": "uint32"
                },
                "locale": {
                  "description": "The locale information for the data. ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'.",
                  "type": "string",
                  "location": "query"
                },
                "endOffset": {
                  "location": "query",
                  "description": "The end offset to end retrieving data from.",
                  "type": "string"
                },
                "volumeAnnotationsVersion": {
                  "description": "The version of the volume annotations that you are requesting.",
                  "type": "string",
                  "location": "query"
                },
                "endPosition": {
                  "type": "string",
                  "description": "The end position to end retrieving data from.",
                  "location": "query"
                },
                "volumeId": {
                  "type": "string",
                  "location": "path",
                  "required": true,
                  "description": "The volume to retrieve annotations for."
                },
                "startOffset": {
                  "description": "The start offset to start retrieving data from.",
                  "type": "string",
                  "location": "query"
                },
                "source": {
                  "description": "String to identify the originator of this request.",
                  "location": "query",
                  "type": "string"
                }
              },
              "httpMethod": "GET",
              "flatPath": "books/v1/volumes/{volumeId}/layers/{layerId}",
              "id": "books.layers.volumeAnnotations.list"
            }
          }
        },
        "annotationData": {
          "methods": {
            "list": {
              "id": "books.layers.annotationData.list",
              "parameters": {
                "source": {
                  "type": "string",
                  "description": "String to identify the originator of this request.",
                  "location": "query"
                },
                "scale": {
                  "format": "int32",
                  "description": "The requested scale for the image.",
                  "location": "query",
                  "type": "integer",
                  "minimum": "0"
                },
                "updatedMin": {
                  "location": "query",
                  "description": "RFC 3339 timestamp to restrict to items updated since this timestamp (inclusive).",
                  "type": "string"
                },
                "pageToken": {
                  "type": "string",
                  "description": "The value of the nextToken from the previous page.",
                  "location": "query"
                },
                "updatedMax": {
                  "type": "string",
                  "description": "RFC 3339 timestamp to restrict to items updated prior to this timestamp (exclusive).",
                  "location": "query"
                },
                "w": {
                  "location": "query",
                  "description": "The requested pixel width for any images. If width is provided height must also be provided.",
                  "type": "integer",
                  "format": "int32"
                },
                "annotationDataId": {
                  "location": "query",
                  "repeated": true,
                  "type": "string",
                  "description": "The list of Annotation Data Ids to retrieve. Pagination is ignored if this is set."
                },
                "h": {
                  "location": "query",
                  "type": "integer",
                  "description": "The requested pixel height for any images. If height is provided width must also be provided.",
                  "format": "int32"
                },
                "locale": {
                  "description": "The locale information for the data. ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'.",
                  "location": "query",
                  "type": "string"
                },
                "contentVersion": {
                  "type": "string",
                  "location": "query",
                  "description": "The content version for the requested volume.",
                  "required": true
                },
                "maxResults": {
                  "format": "uint32",
                  "type": "integer",
                  "minimum": "0",
                  "maximum": "200",
                  "location": "query",
                  "description": "Maximum number of results to return"
                },
                "layerId": {
                  "location": "path",
                  "required": true,
                  "description": "The ID for the layer to get the annotation data.",
                  "type": "string"
                },
                "volumeId": {
                  "description": "The volume to retrieve annotation data for.",
                  "location": "path",
                  "required": true,
                  "type": "string"
                }
              },
              "parameterOrder": [
                "volumeId",
                "layerId",
                "contentVersion"
              ],
              "response": {
                "$ref": "Annotationsdata"
              },
              "flatPath": "books/v1/volumes/{volumeId}/layers/{layerId}/data",
              "description": "Gets the annotation data for a volume and layer.",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "httpMethod": "GET",
              "path": "books/v1/volumes/{volumeId}/layers/{layerId}/data"
            },
            "get": {
              "parameterOrder": [
                "volumeId",
                "layerId",
                "annotationDataId",
                "contentVersion"
              ],
              "httpMethod": "GET",
              "response": {
                "$ref": "DictionaryAnnotationdata"
              },
              "parameters": {
                "annotationDataId": {
                  "type": "string",
                  "required": true,
                  "description": "The ID of the annotation data to retrieve.",
                  "location": "path"
                },
                "h": {
                  "format": "int32",
                  "description": "The requested pixel height for any images. If height is provided width must also be provided.",
                  "location": "query",
                  "type": "integer"
                },
                "volumeId": {
                  "required": true,
                  "description": "The volume to retrieve annotations for.",
                  "location": "path",
                  "type": "string"
                },
                "scale": {
                  "description": "The requested scale for the image.",
                  "format": "int32",
                  "minimum": "0",
                  "location": "query",
                  "type": "integer"
                },
                "source": {
                  "location": "query",
                  "type": "string",
                  "description": "String to identify the originator of this request."
                },
                "allowWebDefinitions": {
                  "type": "boolean",
                  "location": "query",
                  "description": "For the dictionary layer. Whether or not to allow web definitions."
                },
                "w": {
                  "format": "int32",
                  "description": "The requested pixel width for any images. If width is provided height must also be provided.",
                  "location": "query",
                  "type": "integer"
                },
                "contentVersion": {
                  "required": true,
                  "type": "string",
                  "description": "The content version for the volume you are trying to retrieve.",
                  "location": "query"
                },
                "layerId": {
                  "location": "path",
                  "description": "The ID for the layer to get the annotations.",
                  "type": "string",
                  "required": true
                },
                "locale": {
                  "location": "query",
                  "type": "string",
                  "description": "The locale information for the data. ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'."
                }
              },
              "flatPath": "books/v1/volumes/{volumeId}/layers/{layerId}/data/{annotationDataId}",
              "description": "Gets the annotation data.",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "path": "books/v1/volumes/{volumeId}/layers/{layerId}/data/{annotationDataId}",
              "id": "books.layers.annotationData.get"
            }
          }
        }
      },
      "methods": {
        "get": {
          "description": "Gets the layer summary for a volume.",
          "flatPath": "books/v1/volumes/{volumeId}/layersummary/{summaryId}",
          "parameterOrder": [
            "volumeId",
            "summaryId"
          ],
          "httpMethod": "GET",
          "parameters": {
            "volumeId": {
              "location": "path",
              "type": "string",
              "description": "The volume to retrieve layers for.",
              "required": true
            },
            "contentVersion": {
              "location": "query",
              "description": "The content version for the requested volume.",
              "type": "string"
            },
            "source": {
              "type": "string",
              "description": "String to identify the originator of this request.",
              "location": "query"
            },
            "summaryId": {
              "type": "string",
              "required": true,
              "location": "path",
              "description": "The ID for the layer to get the summary for."
            }
          },
          "id": "books.layers.get",
          "response": {
            "$ref": "Layersummary"
          },
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "path": "books/v1/volumes/{volumeId}/layersummary/{summaryId}"
        },
        "list": {
          "description": "List the layer summaries for a volume.",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "path": "books/v1/volumes/{volumeId}/layersummary",
          "response": {
            "$ref": "Layersummaries"
          },
          "flatPath": "books/v1/volumes/{volumeId}/layersummary",
          "parameterOrder": [
            "volumeId"
          ],
          "parameters": {
            "contentVersion": {
              "type": "string",
              "location": "query",
              "description": "The content version for the requested volume."
            },
            "maxResults": {
              "format": "uint32",
              "minimum": "0",
              "location": "query",
              "maximum": "200",
              "type": "integer",
              "description": "Maximum number of results to return"
            },
            "source": {
              "description": "String to identify the originator of this request.",
              "type": "string",
              "location": "query"
            },
            "volumeId": {
              "type": "string",
              "required": true,
              "description": "The volume to retrieve layers for.",
              "location": "path"
            },
            "pageToken": {
              "description": "The value of the nextToken from the previous page.",
              "type": "string",
              "location": "query"
            }
          },
          "httpMethod": "GET",
          "id": "books.layers.list"
        }
      }
    },
    "cloudloading": {
      "methods": {
        "deleteBook": {
          "flatPath": "books/v1/cloudloading/deleteBook",
          "response": {
            "$ref": "Empty"
          },
          "path": "books/v1/cloudloading/deleteBook",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "httpMethod": "POST",
          "description": "Remove the book and its contents",
          "parameters": {
            "volumeId": {
              "description": "The id of the book to be removed.",
              "type": "string",
              "location": "query",
              "required": true
            }
          },
          "parameterOrder": [
            "volumeId"
          ],
          "id": "books.cloudloading.deleteBook"
        },
        "updateBook": {
          "flatPath": "books/v1/cloudloading/updateBook",
          "request": {
            "$ref": "BooksCloudloadingResource"
          },
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "response": {
            "$ref": "BooksCloudloadingResource"
          },
          "httpMethod": "POST",
          "parameters": {},
          "description": "Updates a user-upload volume.",
          "path": "books/v1/cloudloading/updateBook",
          "id": "books.cloudloading.updateBook",
          "parameterOrder": []
        },
        "addBook": {
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "id": "books.cloudloading.addBook",
          "flatPath": "books/v1/cloudloading/addBook",
          "parameters": {
            "upload_client_token": {
              "type": "string",
              "description": "Scotty upload token.",
              "location": "query"
            },
            "drive_document_id": {
              "location": "query",
              "type": "string",
              "description": "A drive document id. The upload_client_token must not be set."
            },
            "name": {
              "type": "string",
              "description": "The document name. It can be set only if the drive_document_id is set.",
              "location": "query"
            },
            "mime_type": {
              "location": "query",
              "type": "string",
              "description": "The document MIME type. It can be set only if the drive_document_id is set."
            }
          },
          "path": "books/v1/cloudloading/addBook",
          "httpMethod": "POST",
          "description": "Add a user-upload volume and triggers processing.",
          "parameterOrder": [],
          "response": {
            "$ref": "BooksCloudloadingResource"
          }
        }
      }
    },
    "personalizedstream": {
      "methods": {
        "get": {
          "response": {
            "$ref": "Discoveryclusters"
          },
          "path": "books/v1/personalizedstream/get",
          "flatPath": "books/v1/personalizedstream/get",
          "id": "books.personalizedstream.get",
          "description": "Returns a stream of personalized book clusters",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "httpMethod": "GET",
          "parameters": {
            "source": {
              "description": "String to identify the originator of this request.",
              "location": "query",
              "type": "string"
            },
            "maxAllowedMaturityRating": {
              "location": "query",
              "enum": [
                "MAX_ALLOWED_MATURITY_RATING_UNDEFINED",
                "MATURE",
                "not-mature"
              ],
              "description": "The maximum allowed maturity rating of returned recommendations. Books with a higher maturity rating are filtered out.",
              "type": "string",
              "enumDescriptions": [
                "",
                "Show books which are rated mature or lower.",
                "Show books which are rated not mature."
              ]
            },
            "locale": {
              "location": "query",
              "type": "string",
              "description": "ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'. Used for generating recommendations."
            }
          },
          "parameterOrder": []
        }
      }
    },
    "dictionary": {
      "methods": {
        "listOfflineMetadata": {
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "parameterOrder": [
            "cpksver"
          ],
          "description": "Returns a list of offline dictionary metadata available",
          "parameters": {
            "cpksver": {
              "type": "string",
              "location": "query",
              "description": "The device/version ID from which to request the data.",
              "required": true
            }
          },
          "flatPath": "books/v1/dictionary/listOfflineMetadata",
          "path": "books/v1/dictionary/listOfflineMetadata",
          "httpMethod": "GET",
          "response": {
            "$ref": "Metadata"
          },
          "id": "books.dictionary.listOfflineMetadata"
        }
      }
    },
    "notification": {
      "methods": {
        "get": {
          "description": "Returns notification details for a given notification id.",
          "response": {
            "$ref": "Notification"
          },
          "parameterOrder": [
            "notification_id"
          ],
          "flatPath": "books/v1/notification/get",
          "id": "books.notification.get",
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "parameters": {
            "locale": {
              "location": "query",
              "description": "ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'. Used for generating notification title and body.",
              "type": "string"
            },
            "source": {
              "location": "query",
              "description": "String to identify the originator of this request.",
              "type": "string"
            },
            "notification_id": {
              "description": "String to identify the notification.",
              "required": true,
              "type": "string",
              "location": "query"
            }
          },
          "path": "books/v1/notification/get"
        }
      }
    },
    "volumes": {
      "resources": {
        "associated": {
          "methods": {
            "list": {
              "description": "Return a list of associated books.",
              "parameterOrder": [
                "volumeId"
              ],
              "flatPath": "books/v1/volumes/{volumeId}/associated",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "parameters": {
                "maxAllowedMaturityRating": {
                  "enumDescriptions": [
                    "",
                    "Show books which are rated mature or lower.",
                    "Show books which are rated not mature."
                  ],
                  "location": "query",
                  "description": "The maximum allowed maturity rating of returned recommendations. Books with a higher maturity rating are filtered out.",
                  "enum": [
                    "MAX_ALLOWED_MATURITY_RATING_UNDEFINED",
                    "MATURE",
                    "not-mature"
                  ],
                  "type": "string"
                },
                "volumeId": {
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "description": "ID of the source volume."
                },
                "source": {
                  "location": "query",
                  "description": "String to identify the originator of this request.",
                  "type": "string"
                },
                "locale": {
                  "location": "query",
                  "description": "ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'. Used for generating recommendations.",
                  "type": "string"
                },
                "association": {
                  "enumDescriptions": [
                    "",
                    "Recommendations for display end-of-sample.",
                    "Recommendations for display end-of-volume.",
                    "Related volumes for Play Store."
                  ],
                  "description": "Association type.",
                  "location": "query",
                  "type": "string",
                  "enum": [
                    "ASSOCIATION_UNDEFINED",
                    "end-of-sample",
                    "end-of-volume",
                    "related-for-play"
                  ]
                }
              },
              "path": "books/v1/volumes/{volumeId}/associated",
              "httpMethod": "GET",
              "response": {
                "$ref": "Volumes"
              },
              "id": "books.volumes.associated.list"
            }
          }
        },
        "mybooks": {
          "methods": {
            "list": {
              "path": "books/v1/volumes/mybooks",
              "parameterOrder": [],
              "httpMethod": "GET",
              "description": "Return a list of books in My Library.",
              "parameters": {
                "acquireMethod": {
                  "location": "query",
                  "enumDescriptions": [
                    "",
                    "Books acquired via Family Sharing",
                    "Preordered books (not yet available)",
                    "User-rented books past their expiration time",
                    "Public domain books",
                    "Purchased books",
                    "User-rented books",
                    "Sample books",
                    "User uploaded books"
                  ],
                  "enum": [
                    "ACQUIRE_METHOD_UNDEFINED",
                    "FAMILY_SHARED",
                    "PREORDERED",
                    "PREVIOUSLY_RENTED",
                    "PUBLIC_DOMAIN",
                    "PURCHASED",
                    "RENTED",
                    "SAMPLE",
                    "UPLOADED"
                  ],
                  "type": "string",
                  "description": "How the book was acquired",
                  "repeated": true
                },
                "processingState": {
                  "description": "The processing state of the user uploaded volumes to be returned. Applicable only if the UPLOADED is specified in the acquireMethod.",
                  "location": "query",
                  "type": "string",
                  "enum": [
                    "PROCESSING_STATE_UNDEFINED",
                    "COMPLETED_FAILED",
                    "COMPLETED_SUCCESS",
                    "RUNNING"
                  ],
                  "repeated": true,
                  "enumDescriptions": [
                    "",
                    "The volume processing hase failed.",
                    "The volume processing was completed.",
                    "The volume processing is not completed."
                  ]
                },
                "locale": {
                  "description": "ISO-639-1 language and ISO-3166-1 country code. Ex:'en_US'. Used for generating recommendations.",
                  "location": "query",
                  "type": "string"
                },
                "startIndex": {
                  "description": "Index of the first result to return (starts at 0)",
                  "type": "integer",
                  "location": "query",
                  "format": "uint32",
                  "minimum": "0"
                },
                "maxResults": {
                  "maximum": "100",
                  "description": "Maximum number of results to return.",
                  "minimum": "0",
                  "type": "integer",
                  "format": "uint32",
                  "location": "query"
                },
                "source": {
                  "type": "string",
                  "location": "query",
                  "description": "String to identify the originator of this request."
                },
                "country": {
                  "type": "string",
                  "location": "query",
                  "description": "ISO-3166-1 code to override the IP-based location."
                }
              },
              "id": "books.volumes.mybooks.list",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "response": {
                "$ref": "Volumes"
              },
              "flatPath": "books/v1/volumes/mybooks"
            }
          }
        },
        "useruploaded": {
          "methods": {
            "list": {
              "path": "books/v1/volumes/useruploaded",
              "id": "books.volumes.useruploaded.list",
              "response": {
                "$ref": "Volumes"
              },
              "parameterOrder": [],
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "description": "Return a list of books uploaded by the current user.",
              "parameters": {
                "locale": {
                  "description": "ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'. Used for generating recommendations.",
                  "type": "string",
                  "location": "query"
                },
                "startIndex": {
                  "format": "uint32",
                  "minimum": "0",
                  "type": "integer",
                  "description": "Index of the first result to return (starts at 0)",
                  "location": "query"
                },
                "source": {
                  "description": "String to identify the originator of this request.",
                  "location": "query",
                  "type": "string"
                },
                "volumeId": {
                  "type": "string",
                  "location": "query",
                  "description": "The ids of the volumes to be returned. If not specified all that match the processingState are returned.",
                  "repeated": true
                },
                "maxResults": {
                  "description": "Maximum number of results to return.",
                  "format": "uint32",
                  "type": "integer",
                  "minimum": "0",
                  "maximum": "40",
                  "location": "query"
                },
                "processingState": {
                  "enumDescriptions": [
                    "",
                    "The volume processing hase failed.",
                    "The volume processing was completed.",
                    "The volume processing is not completed."
                  ],
                  "description": "The processing state of the user uploaded volumes to be returned.",
                  "type": "string",
                  "enum": [
                    "PROCESSING_STATE_UNDEFINED",
                    "COMPLETED_FAILED",
                    "COMPLETED_SUCCESS",
                    "RUNNING"
                  ],
                  "location": "query",
                  "repeated": true
                }
              },
              "flatPath": "books/v1/volumes/useruploaded",
              "httpMethod": "GET"
            }
          }
        },
        "recommended": {
          "methods": {
            "rate": {
              "id": "books.volumes.recommended.rate",
              "parameterOrder": [
                "rating",
                "volumeId"
              ],
              "parameters": {
                "source": {
                  "description": "String to identify the originator of this request.",
                  "location": "query",
                  "type": "string"
                },
                "rating": {
                  "location": "query",
                  "enum": [
                    "RATING_UNDEFINED",
                    "HAVE_IT",
                    "NOT_INTERESTED"
                  ],
                  "enumDescriptions": [
                    "",
                    "Rating indicating a dismissal due to ownership.",
                    "Rating indicating a negative dismissal of a volume."
                  ],
                  "type": "string",
                  "description": "Rating to be given to the volume.",
                  "required": true
                },
                "locale": {
                  "type": "string",
                  "location": "query",
                  "description": "ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'. Used for generating recommendations."
                },
                "volumeId": {
                  "type": "string",
                  "description": "ID of the source volume.",
                  "location": "query",
                  "required": true
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "httpMethod": "POST",
              "flatPath": "books/v1/volumes/recommended/rate",
              "response": {
                "$ref": "BooksVolumesRecommendedRateResponse"
              },
              "description": "Rate a recommended book for the current user.",
              "path": "books/v1/volumes/recommended/rate"
            },
            "list": {
              "httpMethod": "GET",
              "response": {
                "$ref": "Volumes"
              },
              "path": "books/v1/volumes/recommended",
              "id": "books.volumes.recommended.list",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "parameterOrder": [],
              "flatPath": "books/v1/volumes/recommended",
              "description": "Return a list of recommended books for the current user.",
              "parameters": {
                "maxAllowedMaturityRating": {
                  "description": "The maximum allowed maturity rating of returned recommendations. Books with a higher maturity rating are filtered out.",
                  "type": "string",
                  "location": "query",
                  "enumDescriptions": [
                    "",
                    "Show books which are rated mature or lower.",
                    "Show books which are rated not mature."
                  ],
                  "enum": [
                    "MAX_ALLOWED_MATURITY_RATING_UNDEFINED",
                    "MATURE",
                    "not-mature"
                  ]
                },
                "locale": {
                  "location": "query",
                  "type": "string",
                  "description": "ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'. Used for generating recommendations."
                },
                "source": {
                  "type": "string",
                  "description": "String to identify the originator of this request.",
                  "location": "query"
                }
              }
            }
          }
        }
      },
      "methods": {
        "get": {
          "flatPath": "books/v1/volumes/{volumeId}",
          "parameters": {
            "user_library_consistent_read": {
              "type": "boolean",
              "location": "query"
            },
            "country": {
              "description": "ISO-3166-1 code to override the IP-based location.",
              "location": "query",
              "type": "string"
            },
            "partner": {
              "type": "string",
              "location": "query",
              "description": "Brand results for partner ID."
            },
            "volumeId": {
              "required": true,
              "type": "string",
              "location": "path",
              "description": "ID of volume to retrieve."
            },
            "includeNonComicsSeries": {
              "description": "Set to true to include non-comics series. Defaults to false.",
              "location": "query",
              "type": "boolean"
            },
            "projection": {
              "description": "Restrict information returned to a set of selected fields.",
              "location": "query",
              "enum": [
                "PROJECTION_UNDEFINED",
                "FULL",
                "LITE"
              ],
              "enumDescriptions": [
                "",
                "Includes all volume data.",
                "Includes a subset of fields in volumeInfo and accessInfo."
              ],
              "type": "string"
            },
            "source": {
              "description": "string to identify the originator of this request.",
              "type": "string",
              "location": "query"
            }
          },
          "id": "books.volumes.get",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "path": "books/v1/volumes/{volumeId}",
          "response": {
            "$ref": "Volume"
          },
          "description": "Gets volume information for a single volume.",
          "parameterOrder": [
            "volumeId"
          ],
          "httpMethod": "GET"
        },
        "list": {
          "description": "Performs a book search.",
          "httpMethod": "GET",
          "parameterOrder": [
            "q"
          ],
          "response": {
            "$ref": "Volumes"
          },
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "parameters": {
            "source": {
              "type": "string",
              "description": "String to identify the originator of this request.",
              "location": "query"
            },
            "partner": {
              "type": "string",
              "location": "query",
              "description": "Restrict and brand results for partner ID."
            },
            "projection": {
              "enum": [
                "PROJECTION_UNDEFINED",
                "FULL",
                "LITE"
              ],
              "type": "string",
              "location": "query",
              "enumDescriptions": [
                "",
                "Includes all volume data.",
                "Includes a subset of fields in volumeInfo and accessInfo."
              ],
              "description": "Restrict information returned to a set of selected fields."
            },
            "showPreorders": {
              "type": "boolean",
              "description": "Set to true to show books available for preorder. Defaults to false.",
              "location": "query"
            },
            "startIndex": {
              "format": "uint32",
              "type": "integer",
              "minimum": "0",
              "description": "Index of the first result to return (starts at 0)",
              "location": "query"
            },
            "maxAllowedMaturityRating": {
              "description": "The maximum allowed maturity rating of returned recommendations. Books with a higher maturity rating are filtered out.",
              "type": "string",
              "location": "query",
              "enumDescriptions": [
                "",
                "Show books which are rated mature or lower.",
                "Show books which are rated not mature."
              ],
              "enum": [
                "MAX_ALLOWED_MATURITY_RATING_UNDEFINED",
                "MATURE",
                "not-mature"
              ]
            },
            "orderBy": {
              "enumDescriptions": [
                "",
                "Most recently published.",
                "Relevance to search terms."
              ],
              "description": "Sort search results.",
              "type": "string",
              "location": "query",
              "enum": [
                "ORDER_BY_UNDEFINED",
                "newest",
                "relevance"
              ]
            },
            "maxResults": {
              "maximum": "40",
              "description": "Maximum number of results to return.",
              "minimum": "0",
              "format": "uint32",
              "location": "query",
              "type": "integer"
            },
            "libraryRestrict": {
              "location": "query",
              "enum": [
                "LIBRARY_RESTRICT_UNDEFINED",
                "my-library",
                "no-restrict"
              ],
              "enumDescriptions": [
                "",
                "Restrict to the user's library, any shelf.",
                "Do not restrict based on user's library."
              ],
              "description": "Restrict search to this user's library.",
              "type": "string"
            },
            "q": {
              "description": "Full-text search query string.",
              "required": true,
              "type": "string",
              "location": "query"
            },
            "filter": {
              "location": "query",
              "enumDescriptions": [
                "",
                "All Google eBooks.",
                "Google eBook with full volume text viewability.",
                "Public can view entire volume text.",
                "Google eBook with a price.",
                "Public able to see parts of text."
              ],
              "type": "string",
              "enum": [
                "FILTER_UNDEFINED",
                "ebooks",
                "free-ebooks",
                "full",
                "paid-ebooks",
                "partial"
              ],
              "description": "Filter search results."
            },
            "langRestrict": {
              "type": "string",
              "location": "query",
              "description": "Restrict results to books with this language code."
            },
            "download": {
              "location": "query",
              "enum": [
                "DOWNLOAD_UNDEFINED",
                "EPUB"
              ],
              "enumDescriptions": [
                "",
                "All volumes with epub."
              ],
              "description": "Restrict to volumes by download availability.",
              "type": "string"
            },
            "printType": {
              "enumDescriptions": [
                "",
                "All volume content types.",
                "Just books.",
                "Just magazines."
              ],
              "description": "Restrict to books or magazines.",
              "enum": [
                "PRINT_TYPE_UNDEFINED",
                "ALL",
                "BOOKS",
                "MAGAZINES"
              ],
              "type": "string",
              "location": "query"
            }
          },
          "id": "books.volumes.list",
          "path": "books/v1/volumes",
          "flatPath": "books/v1/volumes"
        }
      }
    },
    "mylibrary": {
      "resources": {
        "bookshelves": {
          "methods": {
            "get": {
              "id": "books.mylibrary.bookshelves.get",
              "path": "books/v1/mylibrary/bookshelves/{shelf}",
              "parameterOrder": [
                "shelf"
              ],
              "flatPath": "books/v1/mylibrary/bookshelves/{shelf}",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "httpMethod": "GET",
              "description": "Retrieves metadata for a specific bookshelf belonging to the authenticated user.",
              "parameters": {
                "source": {
                  "description": "String to identify the originator of this request.",
                  "type": "string",
                  "location": "query"
                },
                "shelf": {
                  "description": "ID of bookshelf to retrieve.",
                  "location": "path",
                  "type": "string",
                  "required": true
                }
              },
              "response": {
                "$ref": "Bookshelf"
              }
            },
            "moveVolume": {
              "response": {
                "$ref": "Empty"
              },
              "parameters": {
                "volumePosition": {
                  "required": true,
                  "location": "query",
                  "type": "integer",
                  "description": "Position on shelf to move the item (0 puts the item before the current first item, 1 puts it between the first and the second and so on.)",
                  "format": "int32"
                },
                "source": {
                  "description": "String to identify the originator of this request.",
                  "location": "query",
                  "type": "string"
                },
                "shelf": {
                  "description": "ID of bookshelf with the volume.",
                  "required": true,
                  "location": "path",
                  "type": "string"
                },
                "volumeId": {
                  "description": "ID of volume to move.",
                  "type": "string",
                  "required": true,
                  "location": "query"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "flatPath": "books/v1/mylibrary/bookshelves/{shelf}/moveVolume",
              "description": "Moves a volume within a bookshelf.",
              "httpMethod": "POST",
              "id": "books.mylibrary.bookshelves.moveVolume",
              "path": "books/v1/mylibrary/bookshelves/{shelf}/moveVolume",
              "parameterOrder": [
                "shelf",
                "volumeId",
                "volumePosition"
              ]
            },
            "addVolume": {
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "id": "books.mylibrary.bookshelves.addVolume",
              "parameterOrder": [
                "shelf",
                "volumeId"
              ],
              "description": "Adds a volume to a bookshelf.",
              "parameters": {
                "reason": {
                  "location": "query",
                  "description": "The reason for which the book is added to the library.",
                  "enumDescriptions": [
                    "",
                    "Volumes added from the PREX flow on iOS.",
                    "Volumes added from the Search flow on iOS.",
                    "Volumes added from the Onboarding flow."
                  ],
                  "enum": [
                    "REASON_UNDEFINED",
                    "IOS_PREX",
                    "IOS_SEARCH",
                    "ONBOARDING"
                  ],
                  "type": "string"
                },
                "shelf": {
                  "description": "ID of bookshelf to which to add a volume.",
                  "type": "string",
                  "location": "path",
                  "required": true
                },
                "volumeId": {
                  "description": "ID of volume to add.",
                  "required": true,
                  "type": "string",
                  "location": "query"
                },
                "source": {
                  "type": "string",
                  "description": "String to identify the originator of this request.",
                  "location": "query"
                }
              },
              "response": {
                "$ref": "Empty"
              },
              "flatPath": "books/v1/mylibrary/bookshelves/{shelf}/addVolume",
              "path": "books/v1/mylibrary/bookshelves/{shelf}/addVolume"
            },
            "removeVolume": {
              "id": "books.mylibrary.bookshelves.removeVolume",
              "httpMethod": "POST",
              "parameters": {
                "source": {
                  "description": "String to identify the originator of this request.",
                  "type": "string",
                  "location": "query"
                },
                "volumeId": {
                  "location": "query",
                  "required": true,
                  "description": "ID of volume to remove.",
                  "type": "string"
                },
                "reason": {
                  "type": "string",
                  "enum": [
                    "REASON_UNDEFINED",
                    "ONBOARDING"
                  ],
                  "enumDescriptions": [
                    "",
                    "Samples removed from the Onboarding flow."
                  ],
                  "description": "The reason for which the book is removed from the library.",
                  "location": "query"
                },
                "shelf": {
                  "description": "ID of bookshelf from which to remove a volume.",
                  "type": "string",
                  "required": true,
                  "location": "path"
                }
              },
              "response": {
                "$ref": "Empty"
              },
              "path": "books/v1/mylibrary/bookshelves/{shelf}/removeVolume",
              "description": "Removes a volume from a bookshelf.",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "parameterOrder": [
                "shelf",
                "volumeId"
              ],
              "flatPath": "books/v1/mylibrary/bookshelves/{shelf}/removeVolume"
            },
            "list": {
              "parameterOrder": [],
              "id": "books.mylibrary.bookshelves.list",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "response": {
                "$ref": "Bookshelves"
              },
              "path": "books/v1/mylibrary/bookshelves",
              "flatPath": "books/v1/mylibrary/bookshelves",
              "httpMethod": "GET",
              "parameters": {
                "source": {
                  "description": "String to identify the originator of this request.",
                  "type": "string",
                  "location": "query"
                }
              },
              "description": "Retrieves a list of bookshelves belonging to the authenticated user."
            },
            "clearVolumes": {
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "flatPath": "books/v1/mylibrary/bookshelves/{shelf}/clearVolumes",
              "response": {
                "$ref": "Empty"
              },
              "parameters": {
                "shelf": {
                  "required": true,
                  "description": "ID of bookshelf from which to remove a volume.",
                  "type": "string",
                  "location": "path"
                },
                "source": {
                  "type": "string",
                  "description": "String to identify the originator of this request.",
                  "location": "query"
                }
              },
              "id": "books.mylibrary.bookshelves.clearVolumes",
              "parameterOrder": [
                "shelf"
              ],
              "description": "Clears all volumes from a bookshelf.",
              "path": "books/v1/mylibrary/bookshelves/{shelf}/clearVolumes"
            }
          },
          "resources": {
            "volumes": {
              "methods": {
                "list": {
                  "description": "Gets volume information for volumes on a bookshelf.",
                  "path": "books/v1/mylibrary/bookshelves/{shelf}/volumes",
                  "flatPath": "books/v1/mylibrary/bookshelves/{shelf}/volumes",
                  "parameters": {
                    "projection": {
                      "enumDescriptions": [
                        "",
                        "Includes all volume data.",
                        "Includes a subset of fields in volumeInfo and accessInfo."
                      ],
                      "location": "query",
                      "enum": [
                        "PROJECTION_UNDEFINED",
                        "FULL",
                        "LITE"
                      ],
                      "description": "Restrict information returned to a set of selected fields.",
                      "type": "string"
                    },
                    "shelf": {
                      "type": "string",
                      "description": "The bookshelf ID or name retrieve volumes for.",
                      "location": "path",
                      "required": true
                    },
                    "maxResults": {
                      "description": "Maximum number of results to return",
                      "format": "uint32",
                      "location": "query",
                      "type": "integer",
                      "minimum": "0"
                    },
                    "startIndex": {
                      "format": "uint32",
                      "type": "integer",
                      "location": "query",
                      "description": "Index of the first element to return (starts at 0)",
                      "minimum": "0"
                    },
                    "source": {
                      "description": "String to identify the originator of this request.",
                      "location": "query",
                      "type": "string"
                    },
                    "showPreorders": {
                      "description": "Set to true to show pre-ordered books. Defaults to false.",
                      "location": "query",
                      "type": "boolean"
                    },
                    "q": {
                      "type": "string",
                      "location": "query",
                      "description": "Full-text search query string in this bookshelf."
                    },
                    "country": {
                      "description": "ISO-3166-1 code to override the IP-based location.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/books"
                  ],
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "Volumes"
                  },
                  "id": "books.mylibrary.bookshelves.volumes.list",
                  "parameterOrder": [
                    "shelf"
                  ]
                }
              }
            }
          }
        },
        "readingpositions": {
          "methods": {
            "setPosition": {
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "id": "books.mylibrary.readingpositions.setPosition",
              "response": {
                "$ref": "Empty"
              },
              "path": "books/v1/mylibrary/readingpositions/{volumeId}/setPosition",
              "parameters": {
                "volumeId": {
                  "type": "string",
                  "required": true,
                  "description": "ID of volume for which to update the reading position.",
                  "location": "path"
                },
                "timestamp": {
                  "type": "string",
                  "location": "query",
                  "description": "RFC 3339 UTC format timestamp associated with this reading position.",
                  "required": true
                },
                "contentVersion": {
                  "type": "string",
                  "description": "Volume content version for which this reading position applies.",
                  "location": "query"
                },
                "position": {
                  "description": "Position string for the new volume reading position.",
                  "required": true,
                  "type": "string",
                  "location": "query"
                },
                "deviceCookie": {
                  "type": "string",
                  "location": "query",
                  "description": "Random persistent device cookie optional on set position."
                },
                "action": {
                  "location": "query",
                  "type": "string",
                  "description": "Action that caused this reading position to be set.",
                  "enumDescriptions": [
                    "",
                    "User chose bookmark within volume.",
                    "User selected chapter from list.",
                    "Next page event.",
                    "Previous page event.",
                    "User navigated to page.",
                    "User chose search results within volume."
                  ],
                  "enum": [
                    "ACTION_UNDEFINED",
                    "bookmark",
                    "chapter",
                    "next-page",
                    "prev-page",
                    "scroll",
                    "search"
                  ]
                },
                "source": {
                  "description": "String to identify the originator of this request.",
                  "location": "query",
                  "type": "string"
                }
              },
              "description": "Sets my reading position information for a volume.",
              "flatPath": "books/v1/mylibrary/readingpositions/{volumeId}/setPosition",
              "parameterOrder": [
                "volumeId",
                "position",
                "timestamp"
              ]
            },
            "get": {
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "id": "books.mylibrary.readingpositions.get",
              "parameterOrder": [
                "volumeId"
              ],
              "parameters": {
                "contentVersion": {
                  "location": "query",
                  "type": "string",
                  "description": "Volume content version for which this reading position is requested."
                },
                "source": {
                  "location": "query",
                  "description": "String to identify the originator of this request.",
                  "type": "string"
                },
                "volumeId": {
                  "description": "ID of volume for which to retrieve a reading position.",
                  "required": true,
                  "type": "string",
                  "location": "path"
                }
              },
              "flatPath": "books/v1/mylibrary/readingpositions/{volumeId}",
              "path": "books/v1/mylibrary/readingpositions/{volumeId}",
              "description": "Retrieves my reading position information for a volume.",
              "response": {
                "$ref": "ReadingPosition"
              }
            }
          }
        },
        "annotations": {
          "methods": {
            "list": {
              "description": "Retrieves a list of annotations, possibly filtered.",
              "id": "books.mylibrary.annotations.list",
              "parameters": {
                "pageToken": {
                  "description": "The value of the nextToken from the previous page.",
                  "location": "query",
                  "type": "string"
                },
                "layerId": {
                  "type": "string",
                  "description": "The layer ID to limit annotation by.",
                  "location": "query"
                },
                "maxResults": {
                  "format": "uint32",
                  "maximum": "40",
                  "location": "query",
                  "type": "integer",
                  "minimum": "0",
                  "description": "Maximum number of results to return"
                },
                "updatedMin": {
                  "description": "RFC 3339 timestamp to restrict to items updated since this timestamp (inclusive).",
                  "location": "query",
                  "type": "string"
                },
                "contentVersion": {
                  "description": "The content version for the requested volume.",
                  "location": "query",
                  "type": "string"
                },
                "volumeId": {
                  "type": "string",
                  "location": "query",
                  "description": "The volume to restrict annotations to."
                },
                "layerIds": {
                  "repeated": true,
                  "description": "The layer ID(s) to limit annotation by.",
                  "type": "string",
                  "location": "query"
                },
                "source": {
                  "location": "query",
                  "type": "string",
                  "description": "String to identify the originator of this request."
                },
                "updatedMax": {
                  "location": "query",
                  "description": "RFC 3339 timestamp to restrict to items updated prior to this timestamp (exclusive).",
                  "type": "string"
                },
                "showDeleted": {
                  "location": "query",
                  "type": "boolean",
                  "description": "Set to true to return deleted annotations. updatedMin must be in the request to use this. Defaults to false."
                }
              },
              "httpMethod": "GET",
              "response": {
                "$ref": "Annotations"
              },
              "parameterOrder": [],
              "path": "books/v1/mylibrary/annotations",
              "flatPath": "books/v1/mylibrary/annotations",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ]
            },
            "summary": {
              "flatPath": "books/v1/mylibrary/annotations/summary",
              "response": {
                "$ref": "AnnotationsSummary"
              },
              "path": "books/v1/mylibrary/annotations/summary",
              "parameters": {
                "volumeId": {
                  "required": true,
                  "description": "Volume id to get the summary for.",
                  "type": "string",
                  "location": "query"
                },
                "layerIds": {
                  "location": "query",
                  "required": true,
                  "description": "Array of layer IDs to get the summary for.",
                  "type": "string",
                  "repeated": true
                }
              },
              "id": "books.mylibrary.annotations.summary",
              "description": "Gets the summary of specified layers.",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "parameterOrder": [
                "layerIds",
                "volumeId"
              ],
              "httpMethod": "POST"
            },
            "insert": {
              "request": {
                "$ref": "Annotation"
              },
              "id": "books.mylibrary.annotations.insert",
              "description": "Inserts a new annotation.",
              "flatPath": "books/v1/mylibrary/annotations",
              "response": {
                "$ref": "Annotation"
              },
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "parameters": {
                "showOnlySummaryInResponse": {
                  "description": "Requests that only the summary of the specified layer be provided in the response.",
                  "type": "boolean",
                  "location": "query"
                },
                "annotationId": {
                  "location": "query",
                  "type": "string",
                  "description": "The ID for the annotation to insert."
                },
                "country": {
                  "location": "query",
                  "type": "string",
                  "description": "ISO-3166-1 code to override the IP-based location."
                },
                "source": {
                  "type": "string",
                  "description": "String to identify the originator of this request.",
                  "location": "query"
                }
              },
              "path": "books/v1/mylibrary/annotations",
              "parameterOrder": []
            },
            "delete": {
              "parameters": {
                "annotationId": {
                  "type": "string",
                  "required": true,
                  "location": "path",
                  "description": "The ID for the annotation to delete."
                },
                "source": {
                  "location": "query",
                  "type": "string",
                  "description": "String to identify the originator of this request."
                }
              },
              "path": "books/v1/mylibrary/annotations/{annotationId}",
              "response": {
                "$ref": "Empty"
              },
              "description": "Deletes an annotation.",
              "httpMethod": "DELETE",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "flatPath": "books/v1/mylibrary/annotations/{annotationId}",
              "parameterOrder": [
                "annotationId"
              ],
              "id": "books.mylibrary.annotations.delete"
            },
            "update": {
              "httpMethod": "PUT",
              "parameters": {
                "annotationId": {
                  "description": "The ID for the annotation to update.",
                  "required": true,
                  "type": "string",
                  "location": "path"
                },
                "source": {
                  "type": "string",
                  "description": "String to identify the originator of this request.",
                  "location": "query"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "response": {
                "$ref": "Annotation"
              },
              "description": "Updates an existing annotation.",
              "id": "books.mylibrary.annotations.update",
              "flatPath": "books/v1/mylibrary/annotations/{annotationId}",
              "path": "books/v1/mylibrary/annotations/{annotationId}",
              "parameterOrder": [
                "annotationId"
              ],
              "request": {
                "$ref": "Annotation"
              }
            }
          }
        }
      }
    },
    "onboarding": {
      "methods": {
        "listCategories": {
          "path": "books/v1/onboarding/listCategories",
          "id": "books.onboarding.listCategories",
          "response": {
            "$ref": "Category"
          },
          "httpMethod": "GET",
          "parameters": {
            "locale": {
              "type": "string",
              "location": "query",
              "description": "ISO-639-1 language and ISO-3166-1 country code. Default is en-US if unset."
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "parameterOrder": [],
          "description": "List categories for onboarding experience.",
          "flatPath": "books/v1/onboarding/listCategories"
        },
        "listCategoryVolumes": {
          "flatPath": "books/v1/onboarding/listCategoryVolumes",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "parameters": {
            "pageToken": {
              "location": "query",
              "type": "string",
              "description": "The value of the nextToken from the previous page."
            },
            "locale": {
              "description": "ISO-639-1 language and ISO-3166-1 country code. Default is en-US if unset.",
              "type": "string",
              "location": "query"
            },
            "pageSize": {
              "type": "integer",
              "location": "query",
              "description": "Number of maximum results per page to be included in the response.",
              "format": "uint32"
            },
            "maxAllowedMaturityRating": {
              "enum": [
                "MAX_ALLOWED_MATURITY_RATING_UNDEFINED",
                "MATURE",
                "not-mature"
              ],
              "description": "The maximum allowed maturity rating of returned volumes. Books with a higher maturity rating are filtered out.",
              "type": "string",
              "enumDescriptions": [
                "",
                "Show books which are rated mature or lower.",
                "Show books which are rated not mature."
              ],
              "location": "query"
            },
            "categoryId": {
              "type": "string",
              "location": "query",
              "description": "List of category ids requested.",
              "repeated": true
            }
          },
          "id": "books.onboarding.listCategoryVolumes",
          "description": "List available volumes under categories for onboarding experience.",
          "httpMethod": "GET",
          "path": "books/v1/onboarding/listCategoryVolumes",
          "parameterOrder": [],
          "response": {
            "$ref": "Volume2"
          }
        }
      }
    },
    "series": {
      "resources": {
        "membership": {
          "methods": {
            "get": {
              "description": "Returns Series membership data given the series id.",
              "id": "books.series.membership.get",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "httpMethod": "GET",
              "parameters": {
                "page_size": {
                  "location": "query",
                  "format": "uint32",
                  "description": "Number of maximum results per page to be included in the response.",
                  "type": "integer"
                },
                "series_id": {
                  "required": true,
                  "type": "string",
                  "location": "query",
                  "description": "String that identifies the series"
                },
                "page_token": {
                  "description": "The value of the nextToken from the previous page.",
                  "location": "query",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "series_id"
              ],
              "response": {
                "$ref": "Seriesmembership"
              },
              "path": "books/v1/series/membership/get",
              "flatPath": "books/v1/series/membership/get"
            }
          }
        }
      },
      "methods": {
        "get": {
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "description": "Returns Series metadata for the given series ids.",
          "parameterOrder": [
            "series_id"
          ],
          "parameters": {
            "series_id": {
              "required": true,
              "repeated": true,
              "description": "String that identifies the series",
              "location": "query",
              "type": "string"
            }
          },
          "httpMethod": "GET",
          "flatPath": "books/v1/series/get",
          "response": {
            "$ref": "Series"
          },
          "path": "books/v1/series/get",
          "id": "books.series.get"
        }
      }
    },
    "bookshelves": {
      "resources": {
        "volumes": {
          "methods": {
            "list": {
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "parameterOrder": [
                "userId",
                "shelf"
              ],
              "parameters": {
                "source": {
                  "description": "String to identify the originator of this request.",
                  "location": "query",
                  "type": "string"
                },
                "maxResults": {
                  "location": "query",
                  "description": "Maximum number of results to return",
                  "type": "integer",
                  "format": "uint32",
                  "minimum": "0"
                },
                "shelf": {
                  "description": "ID of bookshelf to retrieve volumes.",
                  "location": "path",
                  "required": true,
                  "type": "string"
                },
                "userId": {
                  "location": "path",
                  "description": "ID of user for whom to retrieve bookshelf volumes.",
                  "type": "string",
                  "required": true
                },
                "showPreorders": {
                  "location": "query",
                  "type": "boolean",
                  "description": "Set to true to show pre-ordered books. Defaults to false."
                },
                "startIndex": {
                  "type": "integer",
                  "location": "query",
                  "description": "Index of the first element to return (starts at 0)",
                  "minimum": "0",
                  "format": "uint32"
                }
              },
              "id": "books.bookshelves.volumes.list",
              "description": "Retrieves volumes in a specific bookshelf for the specified user.",
              "flatPath": "books/v1/users/{userId}/bookshelves/{shelf}/volumes",
              "path": "books/v1/users/{userId}/bookshelves/{shelf}/volumes",
              "response": {
                "$ref": "Volumes"
              },
              "httpMethod": "GET"
            }
          }
        }
      },
      "methods": {
        "list": {
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "parameters": {
            "userId": {
              "location": "path",
              "description": "ID of user for whom to retrieve bookshelves.",
              "type": "string",
              "required": true
            },
            "source": {
              "type": "string",
              "description": "String to identify the originator of this request.",
              "location": "query"
            }
          },
          "path": "books/v1/users/{userId}/bookshelves",
          "httpMethod": "GET",
          "parameterOrder": [
            "userId"
          ],
          "flatPath": "books/v1/users/{userId}/bookshelves",
          "id": "books.bookshelves.list",
          "description": "Retrieves a list of public bookshelves for the specified user.",
          "response": {
            "$ref": "Bookshelves"
          }
        },
        "get": {
          "parameters": {
            "source": {
              "location": "query",
              "type": "string",
              "description": "String to identify the originator of this request."
            },
            "shelf": {
              "type": "string",
              "description": "ID of bookshelf to retrieve.",
              "required": true,
              "location": "path"
            },
            "userId": {
              "type": "string",
              "description": "ID of user for whom to retrieve bookshelves.",
              "required": true,
              "location": "path"
            }
          },
          "httpMethod": "GET",
          "id": "books.bookshelves.get",
          "path": "books/v1/users/{userId}/bookshelves/{shelf}",
          "response": {
            "$ref": "Bookshelf"
          },
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "description": "Retrieves metadata for a specific bookshelf for the specified user.",
          "flatPath": "books/v1/users/{userId}/bookshelves/{shelf}",
          "parameterOrder": [
            "userId",
            "shelf"
          ]
        }
      }
    }
  },
  "id": "books:v1",
  "revision": "20230221",
  "batchPath": "batch",
  "discoveryVersion": "v1",
  "servicePath": "",
  "ownerName": "Google",
  "schemas": {
    "Geolayerdata": {
      "properties": {
        "geo": {
          "properties": {
            "boundary": {
              "items": {
                "type": "string"
              },
              "description": "The boundary of the location as a set of loops containing pairs of latitude, longitude coordinates.",
              "type": "array"
            },
            "mapType": {
              "description": "The type of map that should be used for this location. EX: HYBRID, ROADMAP, SATELLITE, TERRAIN",
              "type": "string"
            },
            "countryCode": {
              "description": "The country code of the location.",
              "type": "string"
            },
            "cachePolicy": {
              "description": "The cache policy active for this data. EX: UNRESTRICTED, RESTRICTED, NEVER",
              "type": "string"
            },
            "viewport": {
              "description": "The viewport for showing this location. This is a latitude, longitude rectangle.",
              "properties": {
                "hi": {
                  "type": "object",
                  "properties": {
                    "latitude": {
                      "type": "number",
                      "format": "double"
                    },
                    "longitude": {
                      "format": "double",
                      "type": "number"
                    }
                  }
                },
                "lo": {
                  "type": "object",
                  "properties": {
                    "latitude": {
                      "format": "double",
                      "type": "number"
                    },
                    "longitude": {
                      "format": "double",
                      "type": "number"
                    }
                  }
                }
              },
              "type": "object"
            },
            "zoom": {
              "description": "The Zoom level to use for the map. Zoom levels between 0 (the lowest zoom level, in which the entire world can be seen on one map) to 21+ (down to individual buildings). See: https: //developers.google.com/maps/documentation/staticmaps/#Zoomlevels",
              "format": "int32",
              "type": "integer"
            },
            "latitude": {
              "format": "double",
              "type": "number",
              "description": "The latitude of the location."
            },
            "longitude": {
              "type": "number",
              "description": "The longitude of the location.",
              "format": "double"
            }
          },
          "type": "object"
        },
        "kind": {
          "type": "string"
        },
        "common": {
          "type": "object",
          "properties": {
            "snippetUrl": {
              "description": "The URL for information for this location. Ex: wikipedia link.",
              "type": "string"
            },
            "title": {
              "type": "string",
              "description": "The display title and localized canonical name to use when searching for this entity on Google search."
            },
            "previewImageUrl": {
              "description": "The URL for the preview image information.",
              "type": "string"
            },
            "snippet": {
              "type": "string",
              "description": "The description for this location."
            },
            "lang": {
              "description": "The language of the information url and description.",
              "type": "string"
            }
          }
        }
      },
      "type": "object",
      "id": "Geolayerdata"
    },
    "Layersummaries": {
      "id": "Layersummaries",
      "type": "object",
      "properties": {
        "items": {
          "items": {
            "$ref": "Layersummary"
          },
          "type": "array",
          "description": "A list of layer summary items."
        },
        "totalItems": {
          "description": "The total number of layer summaries found.",
          "format": "int32",
          "type": "integer"
        },
        "kind": {
          "description": "Resource type.",
          "type": "string"
        }
      }
    },
    "Discoveryclusters": {
      "id": "Discoveryclusters",
      "type": "object",
      "properties": {
        "clusters": {
          "type": "array",
          "items": {
            "properties": {
              "uid": {
                "type": "string"
              },
              "volumes": {
                "items": {
                  "$ref": "Volume"
                },
                "type": "array"
              },
              "subTitle": {
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "banner_with_content_container": {
                "properties": {
                  "moreButtonUrl": {
                    "type": "string"
                  },
                  "moreButtonText": {
                    "type": "string"
                  },
                  "fillColorArgb": {
                    "type": "string"
                  },
                  "imageUrl": {
                    "type": "string"
                  },
                  "maskColorArgb": {
                    "type": "string"
                  },
                  "textColorArgb": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "totalVolumes": {
                "format": "int32",
                "type": "integer"
              }
            },
            "type": "object"
          }
        },
        "totalClusters": {
          "type": "integer",
          "format": "int32"
        },
        "kind": {
          "type": "string",
          "description": "Resorce type."
        }
      }
    },
    "Offers": {
      "id": "Offers",
      "type": "object",
      "properties": {
        "kind": {
          "description": "Resource type.",
          "type": "string"
        },
        "items": {
          "type": "array",
          "description": "A list of offers.",
          "items": {
            "type": "object",
            "properties": {
              "items": {
                "type": "array",
                "items": {
                  "properties": {
                    "coverUrl": {
                      "type": "string"
                    },
                    "author": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "volumeId": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "canonicalVolumeLink": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "gservicesKey": {
                "type": "string"
              },
              "id": {
                "type": "string"
              },
              "artUrl": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "Bookshelves": {
      "properties": {
        "items": {
          "description": "A list of bookshelves.",
          "type": "array",
          "items": {
            "$ref": "Bookshelf"
          }
        },
        "kind": {
          "type": "string",
          "description": "Resource type."
        }
      },
      "id": "Bookshelves",
      "type": "object"
    },
    "Volumes": {
      "type": "object",
      "id": "Volumes",
      "properties": {
        "totalItems": {
          "type": "integer",
          "format": "int32",
          "description": "Total number of volumes found. This might be greater than the number of volumes returned in this response if results have been paginated."
        },
        "kind": {
          "type": "string",
          "description": "Resource type."
        },
        "items": {
          "items": {
            "$ref": "Volume"
          },
          "type": "array",
          "description": "A list of volumes."
        }
      }
    },
    "ReadingPosition": {
      "type": "object",
      "properties": {
        "epubCfiPosition": {
          "description": "Position in an EPUB as a CFI.",
          "type": "string"
        },
        "gbImagePosition": {
          "description": "Position in a volume for image-based content.",
          "type": "string"
        },
        "kind": {
          "type": "string",
          "description": "Resource type for a reading position."
        },
        "pdfPosition": {
          "description": "Position in a PDF file.",
          "type": "string"
        },
        "updated": {
          "description": "Timestamp when this reading position was last updated (formatted UTC timestamp with millisecond resolution).",
          "type": "string"
        },
        "volumeId": {
          "description": "Volume id associated with this reading position.",
          "type": "string"
        },
        "gbTextPosition": {
          "type": "string",
          "description": "Position in a volume for text-based content."
        }
      },
      "id": "ReadingPosition"
    },
    "RequestAccessData": {
      "type": "object",
      "id": "RequestAccessData",
      "properties": {
        "downloadAccess": {
          "description": "A download access response.",
          "$ref": "DownloadAccessRestriction"
        },
        "kind": {
          "type": "string",
          "description": "Resource type."
        },
        "concurrentAccess": {
          "description": "A concurrent access response.",
          "$ref": "ConcurrentAccessRestriction"
        }
      }
    },
    "Volumeannotation": {
      "properties": {
        "data": {
          "description": "Data for this annotation.",
          "type": "string"
        },
        "id": {
          "type": "string",
          "description": "Unique id of this volume annotation."
        },
        "annotationDataId": {
          "description": "The annotation data id for this volume annotation.",
          "type": "string"
        },
        "annotationType": {
          "description": "The type of annotation this is.",
          "type": "string"
        },
        "layerId": {
          "type": "string",
          "description": "The Layer this annotation is for."
        },
        "selectedText": {
          "description": "Excerpt from the volume.",
          "type": "string"
        },
        "kind": {
          "type": "string",
          "description": "Resource Type"
        },
        "selfLink": {
          "description": "URL to this resource.",
          "type": "string"
        },
        "updated": {
          "type": "string",
          "description": "Timestamp for the last time this anntoation was updated. (RFC 3339 UTC date-time format)."
        },
        "annotationDataLink": {
          "description": "Link to get data for this annotation.",
          "type": "string"
        },
        "contentRanges": {
          "description": "The content ranges to identify the selected text.",
          "properties": {
            "cfiRange": {
              "description": "Range in CFI format for this annotation for version above.",
              "$ref": "BooksAnnotationsRange"
            },
            "gbTextRange": {
              "description": "Range in GB text format for this annotation for version above.",
              "$ref": "BooksAnnotationsRange"
            },
            "contentVersion": {
              "description": "Content version applicable to ranges below.",
              "type": "string"
            },
            "gbImageRange": {
              "description": "Range in GB image format for this annotation for version above.",
              "$ref": "BooksAnnotationsRange"
            }
          },
          "type": "object"
        },
        "pageIds": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Pages the annotation spans."
        },
        "volumeId": {
          "type": "string",
          "description": "The Volume this annotation is for."
        },
        "deleted": {
          "description": "Indicates that this annotation is deleted.",
          "type": "boolean"
        }
      },
      "type": "object",
      "id": "Volumeannotation"
    },
    "Review": {
      "properties": {
        "rating": {
          "description": "Star rating for this review. Possible values are ONE, TWO, THREE, FOUR, FIVE or NOT_RATED.",
          "type": "string"
        },
        "title": {
          "type": "string",
          "description": "Title for this review."
        },
        "source": {
          "properties": {
            "extraDescription": {
              "description": "Extra text about the source of the review.",
              "type": "string"
            },
            "description": {
              "description": "Name of the source.",
              "type": "string"
            },
            "url": {
              "description": "URL of the source of the review.",
              "type": "string"
            }
          },
          "type": "object",
          "description": "Information regarding the source of this review, when the review is not from a Google Books user."
        },
        "fullTextUrl": {
          "description": "URL for the full review text, for reviews gathered from the web.",
          "type": "string"
        },
        "volumeId": {
          "description": "Volume that this review is for.",
          "type": "string"
        },
        "type": {
          "description": "Source type for this review. Possible values are EDITORIAL, WEB_USER or GOOGLE_USER.",
          "type": "string"
        },
        "content": {
          "type": "string",
          "description": "Review text."
        },
        "author": {
          "type": "object",
          "description": "Author of this review.",
          "properties": {
            "displayName": {
              "description": "Name of this person.",
              "type": "string"
            }
          }
        },
        "date": {
          "description": "Date of this review.",
          "type": "string"
        },
        "kind": {
          "description": "Resource type for a review.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "Review"
    },
    "DictionaryAnnotationdata": {
      "id": "DictionaryAnnotationdata",
      "properties": {
        "kind": {
          "description": "Resource Type",
          "type": "string"
        },
        "layerId": {
          "description": "The Layer id for this data. *",
          "type": "string"
        },
        "annotationType": {
          "type": "string",
          "description": "The type of annotation this data is for."
        },
        "volumeId": {
          "description": "The volume id for this data. *",
          "type": "string"
        },
        "encodedData": {
          "description": "Base64 encoded data for this annotation data.",
          "format": "byte",
          "type": "string"
        },
        "id": {
          "description": "Unique id for this annotation data.",
          "type": "string"
        },
        "data": {
          "$ref": "Dictlayerdata",
          "description": "JSON encoded data for this dictionary annotation data. Emitted with name 'data' in JSON output. Either this or geo_data will be populated."
        },
        "updated": {
          "type": "string",
          "description": "Timestamp for the last time this data was updated. (RFC 3339 UTC date-time format)."
        },
        "selfLink": {
          "description": "URL for this resource. *",
          "type": "string"
        }
      },
      "type": "object"
    },
    "BooksVolumesRecommendedRateResponse": {
      "id": "BooksVolumesRecommendedRateResponse",
      "properties": {
        "consistency_token": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Annotations": {
      "properties": {
        "nextPageToken": {
          "description": "Token to pass in for pagination for the next page. This will not be present if this request does not have more results.",
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "Annotation"
          },
          "description": "A list of annotations."
        },
        "kind": {
          "type": "string",
          "description": "Resource type."
        },
        "totalItems": {
          "type": "integer",
          "description": "Total number of annotations found. This may be greater than the number of notes returned in this response if results have been paginated.",
          "format": "int32"
        }
      },
      "type": "object",
      "id": "Annotations"
    },
    "Series": {
      "id": "Series",
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Resource type."
        },
        "series": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "seriesFormatType": {
                "type": "string"
              },
              "subscriptionId": {
                "type": "string"
              },
              "seriesId": {
                "type": "string"
              },
              "imageUrl": {
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "bannerImageUrl": {
                "type": "string"
              },
              "seriesSubscriptionReleaseInfo": {
                "type": "object",
                "properties": {
                  "currentReleaseInfo": {
                    "properties": {
                      "releaseNumber": {
                        "type": "string"
                      },
                      "currencyCode": {
                        "type": "string"
                      },
                      "releaseTime": {
                        "type": "string"
                      },
                      "amountInMicros": {
                        "format": "double",
                        "type": "number"
                      }
                    },
                    "type": "object"
                  },
                  "seriesSubscriptionType": {
                    "type": "string"
                  },
                  "cancelTime": {
                    "type": "string"
                  },
                  "nextReleaseInfo": {
                    "properties": {
                      "currencyCode": {
                        "type": "string"
                      },
                      "releaseNumber": {
                        "type": "string"
                      },
                      "amountInMicros": {
                        "type": "number",
                        "format": "double"
                      },
                      "releaseTime": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "eligibleForSubscription": {
                "type": "boolean"
              },
              "seriesType": {
                "type": "string"
              },
              "isComplete": {
                "type": "boolean"
              }
            }
          }
        }
      }
    },
    "Volume2": {
      "type": "object",
      "properties": {
        "items": {
          "items": {
            "$ref": "Volume"
          },
          "type": "array",
          "description": "A list of volumes."
        },
        "kind": {
          "type": "string",
          "description": "Resource type."
        },
        "nextPageToken": {
          "type": "string"
        }
      },
      "id": "Volume2"
    },
    "Annotation": {
      "id": "Annotation",
      "properties": {
        "pageIds": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Pages that this annotation spans."
        },
        "highlightStyle": {
          "description": "The highlight style for this annotation.",
          "type": "string"
        },
        "data": {
          "description": "User-created data for this annotation.",
          "type": "string"
        },
        "created": {
          "description": "Timestamp for the created time of this annotation.",
          "type": "string"
        },
        "afterSelectedText": {
          "type": "string",
          "description": "Anchor text after excerpt. For requests, if the user bookmarked a screen that has no flowing text on it, then this field should be empty."
        },
        "deleted": {
          "type": "boolean",
          "description": "Indicates that this annotation is deleted."
        },
        "kind": {
          "type": "string",
          "description": "Resource type."
        },
        "beforeSelectedText": {
          "description": "Anchor text before excerpt. For requests, if the user bookmarked a screen that has no flowing text on it, then this field should be empty.",
          "type": "string"
        },
        "updated": {
          "type": "string",
          "description": "Timestamp for the last time this annotation was modified."
        },
        "layerSummary": {
          "type": "object",
          "properties": {
            "remainingCharacterCount": {
              "description": "Remaining allowed characters on this layer, especially for the \"copy\" layer.",
              "type": "integer",
              "format": "int32"
            },
            "limitType": {
              "type": "string",
              "description": "Type of limitation on this layer. \"limited\" or \"unlimited\" for the \"copy\" layer."
            },
            "allowedCharacterCount": {
              "type": "integer",
              "description": "Maximum allowed characters on this layer, especially for the \"copy\" layer.",
              "format": "int32"
            }
          }
        },
        "selectedText": {
          "type": "string",
          "description": "Excerpt from the volume."
        },
        "selfLink": {
          "description": "URL to this resource.",
          "type": "string"
        },
        "currentVersionRanges": {
          "properties": {
            "gbTextRange": {
              "description": "Range in GB text format for this annotation for version above.",
              "$ref": "BooksAnnotationsRange"
            },
            "contentVersion": {
              "description": "Content version applicable to ranges below.",
              "type": "string"
            },
            "imageCfiRange": {
              "description": "Range in image CFI format for this annotation for version above.",
              "$ref": "BooksAnnotationsRange"
            },
            "gbImageRange": {
              "$ref": "BooksAnnotationsRange",
              "description": "Range in GB image format for this annotation for version above."
            },
            "cfiRange": {
              "$ref": "BooksAnnotationsRange",
              "description": "Range in CFI format for this annotation for version above."
            }
          },
          "description": "Selection ranges for the most recent content version.",
          "type": "object"
        },
        "clientVersionRanges": {
          "description": "Selection ranges sent from the client.",
          "properties": {
            "gbTextRange": {
              "description": "Range in GB text format for this annotation sent by client.",
              "$ref": "BooksAnnotationsRange"
            },
            "cfiRange": {
              "$ref": "BooksAnnotationsRange",
              "description": "Range in CFI format for this annotation sent by client."
            },
            "contentVersion": {
              "description": "Content version the client sent in.",
              "type": "string"
            },
            "imageCfiRange": {
              "$ref": "BooksAnnotationsRange",
              "description": "Range in image CFI format for this annotation sent by client."
            },
            "gbImageRange": {
              "description": "Range in GB image format for this annotation sent by client.",
              "$ref": "BooksAnnotationsRange"
            }
          },
          "type": "object"
        },
        "id": {
          "description": "Id of this annotation, in the form of a GUID.",
          "type": "string"
        },
        "layerId": {
          "description": "The layer this annotation is for.",
          "type": "string"
        },
        "volumeId": {
          "type": "string",
          "description": "The volume that this annotation belongs to."
        }
      },
      "type": "object"
    },
    "Seriesmembership": {
      "type": "object",
      "properties": {
        "nextPageToken": {
          "type": "string"
        },
        "kind": {
          "type": "string",
          "description": "Resorce type."
        },
        "member": {
          "type": "array",
          "items": {
            "$ref": "Volume"
          }
        }
      },
      "id": "Seriesmembership"
    },
    "Layersummary": {
      "id": "Layersummary",
      "type": "object",
      "properties": {
        "volumeAnnotationsVersion": {
          "description": "The current version of this layer's volume annotations. Note that this version applies only to the data in the books.layers.volumeAnnotations.* responses. The actual annotation data is versioned separately.",
          "type": "string"
        },
        "annotationsDataLink": {
          "type": "string",
          "description": "Link to get data for this annotation."
        },
        "annotationCount": {
          "description": "The number of annotations for this layer.",
          "format": "int32",
          "type": "integer"
        },
        "selfLink": {
          "type": "string",
          "description": "URL to this resource."
        },
        "id": {
          "description": "Unique id of this layer summary.",
          "type": "string"
        },
        "volumeId": {
          "description": "The volume id this resource is for.",
          "type": "string"
        },
        "layerId": {
          "type": "string",
          "description": "The layer id for this summary."
        },
        "updated": {
          "type": "string",
          "description": "Timestamp for the last time an item in this layer was updated. (RFC 3339 UTC date-time format)."
        },
        "kind": {
          "description": "Resource Type",
          "type": "string"
        },
        "annotationsLink": {
          "type": "string",
          "description": "The link to get the annotations for this layer."
        },
        "annotationTypes": {
          "description": "The list of annotation types contained for this layer.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "dataCount": {
          "description": "The number of data items for this layer.",
          "type": "integer",
          "format": "int32"
        },
        "contentVersion": {
          "description": "The content version this resource is for.",
          "type": "string"
        }
      }
    },
    "Bookshelf": {
      "properties": {
        "volumesLastUpdated": {
          "description": "Last time a volume was added or removed from this bookshelf (formatted UTC timestamp with millisecond resolution).",
          "type": "string"
        },
        "volumeCount": {
          "format": "int32",
          "type": "integer",
          "description": "Number of volumes in this bookshelf."
        },
        "description": {
          "type": "string",
          "description": "Description of this bookshelf."
        },
        "access": {
          "type": "string",
          "description": "Whether this bookshelf is PUBLIC or PRIVATE."
        },
        "title": {
          "description": "Title of this bookshelf.",
          "type": "string"
        },
        "created": {
          "description": "Created time for this bookshelf (formatted UTC timestamp with millisecond resolution).",
          "type": "string"
        },
        "id": {
          "description": "Id of this bookshelf, only unique by user.",
          "type": "integer",
          "format": "int32"
        },
        "updated": {
          "type": "string",
          "description": "Last modified time of this bookshelf (formatted UTC timestamp with millisecond resolution)."
        },
        "selfLink": {
          "description": "URL to this resource.",
          "type": "string"
        },
        "kind": {
          "description": "Resource type for bookshelf metadata.",
          "type": "string"
        }
      },
      "id": "Bookshelf",
      "type": "object"
    },
    "DownloadAccesses": {
      "id": "DownloadAccesses",
      "properties": {
        "downloadAccessList": {
          "description": "A list of download access responses.",
          "items": {
            "$ref": "DownloadAccessRestriction"
          },
          "type": "array"
        },
        "kind": {
          "description": "Resource type.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "BooksCloudloadingResource": {
      "id": "BooksCloudloadingResource",
      "type": "object",
      "properties": {
        "volumeId": {
          "type": "string"
        },
        "processingState": {
          "type": "string"
        },
        "author": {
          "type": "string"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "Dictlayerdata": {
      "id": "Dictlayerdata",
      "properties": {
        "dict": {
          "properties": {
            "source": {
              "properties": {
                "attribution": {
                  "type": "string"
                },
                "url": {
                  "type": "string"
                }
              },
              "type": "object",
              "description": "The source, url and attribution for this dictionary data."
            },
            "words": {
              "items": {
                "properties": {
                  "derivatives": {
                    "type": "array",
                    "items": {
                      "properties": {
                        "text": {
                          "type": "string"
                        },
                        "source": {
                          "properties": {
                            "url": {
                              "type": "string"
                            },
                            "attribution": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "senses": {
                    "type": "array",
                    "items": {
                      "properties": {
                        "source": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "type": "string"
                            },
                            "attribution": {
                              "type": "string"
                            }
                          }
                        },
                        "synonyms": {
                          "type": "array",
                          "items": {
                            "properties": {
                              "source": {
                                "properties": {
                                  "attribution": {
                                    "type": "string"
                                  },
                                  "url": {
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "text": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "pronunciationUrl": {
                          "type": "string"
                        },
                        "partOfSpeech": {
                          "type": "string"
                        },
                        "conjugations": {
                          "items": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string"
                              },
                              "value": {
                                "type": "string"
                              }
                            }
                          },
                          "type": "array"
                        },
                        "syllabification": {
                          "type": "string"
                        },
                        "definitions": {
                          "type": "array",
                          "items": {
                            "properties": {
                              "definition": {
                                "type": "string"
                              },
                              "examples": {
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "source": {
                                      "type": "object",
                                      "properties": {
                                        "attribution": {
                                          "type": "string"
                                        },
                                        "url": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "text": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "type": "array"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "pronunciation": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "examples": {
                    "items": {
                      "properties": {
                        "source": {
                          "properties": {
                            "url": {
                              "type": "string"
                            },
                            "attribution": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "text": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "source": {
                    "type": "object",
                    "properties": {
                      "url": {
                        "type": "string"
                      },
                      "attribution": {
                        "type": "string"
                      }
                    },
                    "description": "The words with different meanings but not related words, e.g. \"go\" (game) and \"go\" (verb)."
                  }
                },
                "type": "object"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "common": {
          "properties": {
            "title": {
              "type": "string",
              "description": "The display title and localized canonical name to use when searching for this entity on Google search."
            }
          },
          "type": "object"
        },
        "kind": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Metadata": {
      "properties": {
        "items": {
          "description": "A list of offline dictionary metadata.",
          "items": {
            "properties": {
              "language": {
                "type": "string"
              },
              "size": {
                "type": "string",
                "format": "int64"
              },
              "download_url": {
                "type": "string"
              },
              "version": {
                "format": "int64",
                "type": "string"
              },
              "encrypted_key": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "kind": {
          "type": "string",
          "description": "Resource type."
        }
      },
      "type": "object",
      "id": "Metadata"
    },
    "ConcurrentAccessRestriction": {
      "properties": {
        "reasonCode": {
          "description": "Error/warning reason code.",
          "type": "string"
        },
        "volumeId": {
          "description": "Identifies the volume for which this entry applies.",
          "type": "string"
        },
        "kind": {
          "description": "Resource type.",
          "type": "string"
        },
        "timeWindowSeconds": {
          "format": "int32",
          "type": "integer",
          "description": "Time in seconds for license auto-expiration."
        },
        "maxConcurrentDevices": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum number of concurrent access licenses for this volume."
        },
        "nonce": {
          "description": "Client nonce for verification. Download access and client-validation only.",
          "type": "string"
        },
        "deviceAllowed": {
          "type": "boolean",
          "description": "Whether access is granted for this (user, device, volume)."
        },
        "signature": {
          "description": "Response signature.",
          "type": "string"
        },
        "restricted": {
          "description": "Whether this volume has any concurrent access restrictions.",
          "type": "boolean"
        },
        "source": {
          "type": "string",
          "description": "Client app identifier for verification. Download access and client-validation only."
        },
        "message": {
          "description": "Error/warning message.",
          "type": "string"
        }
      },
      "id": "ConcurrentAccessRestriction",
      "type": "object"
    },
    "Volumeseriesinfo": {
      "properties": {
        "bookDisplayNumber": {
          "type": "string",
          "description": "The display number string. This should be used only for display purposes and the actual sequence should be inferred from the below orderNumber."
        },
        "kind": {
          "type": "string",
          "description": "Resource type."
        },
        "shortSeriesBookTitle": {
          "type": "string",
          "description": "Short book title in the context of the series."
        },
        "volumeSeries": {
          "items": {
            "type": "object",
            "properties": {
              "orderNumber": {
                "type": "integer",
                "description": "The book order number in the series.",
                "format": "int32"
              },
              "seriesId": {
                "type": "string",
                "description": "The series id."
              },
              "seriesBookType": {
                "type": "string",
                "description": "The book type in the context of series. Examples - Single Issue, Collection Edition, etc."
              },
              "issue": {
                "description": "List of issues. Applicable only for Collection Edition and Omnibus.",
                "items": {
                  "type": "object",
                  "properties": {
                    "issueDisplayNumber": {
                      "type": "string"
                    },
                    "issueOrderNumber": {
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                },
                "type": "array"
              }
            }
          },
          "type": "array"
        }
      },
      "type": "object",
      "id": "Volumeseriesinfo"
    },
    "DownloadAccessRestriction": {
      "properties": {
        "kind": {
          "type": "string",
          "description": "Resource type."
        },
        "restricted": {
          "type": "boolean",
          "description": "Whether this volume has any download access restrictions."
        },
        "volumeId": {
          "type": "string",
          "description": "Identifies the volume for which this entry applies."
        },
        "signature": {
          "description": "Response signature.",
          "type": "string"
        },
        "deviceAllowed": {
          "description": "If restricted, whether access is granted for this (user, device, volume).",
          "type": "boolean"
        },
        "downloadsAcquired": {
          "format": "int32",
          "description": "If restricted, the number of content download licenses already acquired (including the requesting client, if licensed).",
          "type": "integer"
        },
        "justAcquired": {
          "type": "boolean",
          "description": "If deviceAllowed, whether access was just acquired with this request."
        },
        "maxDownloadDevices": {
          "description": "If restricted, the maximum number of content download licenses for this volume.",
          "type": "integer",
          "format": "int32"
        },
        "reasonCode": {
          "type": "string",
          "description": "Error/warning reason code. Additional codes may be added in the future. 0 OK 100 ACCESS_DENIED_PUBLISHER_LIMIT 101 ACCESS_DENIED_LIMIT 200 WARNING_USED_LAST_ACCESS"
        },
        "message": {
          "type": "string",
          "description": "Error/warning message."
        },
        "nonce": {
          "description": "Client nonce for verification. Download access and client-validation only.",
          "type": "string"
        },
        "source": {
          "type": "string",
          "description": "Client app identifier for verification. Download access and client-validation only."
        }
      },
      "type": "object",
      "id": "DownloadAccessRestriction"
    },
    "Volumeannotations": {
      "properties": {
        "kind": {
          "description": "Resource type",
          "type": "string"
        },
        "totalItems": {
          "description": "The total number of volume annotations found.",
          "type": "integer",
          "format": "int32"
        },
        "version": {
          "description": "The version string for all of the volume annotations in this layer (not just the ones in this response). Note: the version string doesn't apply to the annotation data, just the information in this response (e.g. the location of annotations in the book).",
          "type": "string"
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token to pass in for pagination for the next page. This will not be present if this request does not have more results."
        },
        "items": {
          "description": "A list of volume annotations.",
          "items": {
            "$ref": "Volumeannotation"
          },
          "type": "array"
        }
      },
      "id": "Volumeannotations",
      "type": "object"
    },
    "Volume": {
      "type": "object",
      "id": "Volume",
      "properties": {
        "etag": {
          "description": "Opaque identifier for a specific version of a volume resource. (In LITE projection)",
          "type": "string"
        },
        "selfLink": {
          "description": "URL to this resource. (In LITE projection.)",
          "type": "string"
        },
        "searchInfo": {
          "description": "Search result information related to this volume.",
          "type": "object",
          "properties": {
            "textSnippet": {
              "description": "A text snippet containing the search query.",
              "type": "string"
            }
          }
        },
        "layerInfo": {
          "description": "What layers exist in this volume and high level information about them.",
          "properties": {
            "layers": {
              "items": {
                "properties": {
                  "layerId": {
                    "description": "The layer id of this layer (e.g. \"geo\").",
                    "type": "string"
                  },
                  "volumeAnnotationsVersion": {
                    "type": "string",
                    "description": "The current version of this layer's volume annotations. Note that this version applies only to the data in the books.layers.volumeAnnotations.* responses. The actual annotation data is versioned separately."
                  }
                },
                "type": "object"
              },
              "description": "A layer should appear here if and only if the layer exists for this book.",
              "type": "array"
            }
          },
          "type": "object"
        },
        "userInfo": {
          "description": "User specific information related to this volume. (e.g. page this user last read or whether they purchased this book)",
          "type": "object",
          "properties": {
            "readingPosition": {
              "description": "The user's current reading position in the volume, if one is available. (In LITE projection.)",
              "$ref": "ReadingPosition"
            },
            "copy": {
              "properties": {
                "remainingCharacterCount": {
                  "type": "integer",
                  "format": "int32"
                },
                "allowedCharacterCount": {
                  "format": "int32",
                  "type": "integer"
                },
                "updated": {
                  "type": "string"
                },
                "limitType": {
                  "type": "string"
                }
              },
              "description": "Copy/Paste accounting information.",
              "type": "object"
            },
            "rentalState": {
              "type": "string",
              "description": "Whether this book is an active or an expired rental."
            },
            "familySharing": {
              "properties": {
                "familyRole": {
                  "description": "The role of the user in the family.",
                  "type": "string"
                },
                "isSharingAllowed": {
                  "description": "Whether or not this volume can be shared with the family by the user. This includes sharing eligibility of both the volume and the user. If the value is true, the user can initiate a family sharing action.",
                  "type": "boolean"
                },
                "isSharingDisabledByFop": {
                  "description": "Whether or not sharing this volume is temporarily disabled due to issues with the Family Wallet.",
                  "type": "boolean"
                }
              },
              "type": "object",
              "description": "Information on the ability to share with the family."
            },
            "entitlementType": {
              "description": "Whether this volume is purchased, sample, pd download etc.",
              "format": "int32",
              "type": "integer"
            },
            "updated": {
              "type": "string",
              "description": "Timestamp when this volume was last modified by a user action, such as a reading position update, volume purchase or writing a review. (RFC 3339 UTC date-time format)."
            },
            "isFamilySharingAllowed": {
              "description": "Deprecated: Replaced by familySharing.",
              "type": "boolean"
            },
            "isFamilySharedFromUser": {
              "description": "Whether or not the user shared this volume with the family.",
              "type": "boolean"
            },
            "acquiredTime": {
              "description": "Timestamp when this volume was acquired by the user. (RFC 3339 UTC date-time format) Acquiring includes purchase, user upload, receiving family sharing, etc.",
              "type": "string"
            },
            "isFamilySharingDisabledByFop": {
              "type": "boolean",
              "description": "Deprecated: Replaced by familySharing."
            },
            "isPreordered": {
              "type": "boolean",
              "description": "Whether or not this volume was pre-ordered by the authenticated user making the request. (In LITE projection.)"
            },
            "userUploadedVolumeInfo": {
              "properties": {
                "processingState": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "isFamilySharedToUser": {
              "description": "Whether or not the user received this volume through family sharing.",
              "type": "boolean"
            },
            "isPurchased": {
              "description": "Whether or not this volume was purchased by the authenticated user making the request. (In LITE projection.)",
              "type": "boolean"
            },
            "isUploaded": {
              "description": "Whether or not this volume was user uploaded.",
              "type": "boolean"
            },
            "isInMyBooks": {
              "description": "Whether or not this volume is currently in \"my books.\"",
              "type": "boolean"
            },
            "acquisitionType": {
              "format": "int32",
              "description": "How this volume was acquired.",
              "type": "integer"
            },
            "rentalPeriod": {
              "properties": {
                "startUtcSec": {
                  "format": "int64",
                  "type": "string"
                },
                "endUtcSec": {
                  "format": "int64",
                  "type": "string"
                }
              },
              "type": "object",
              "description": "Period during this book is/was a valid rental."
            },
            "review": {
              "description": "This user's review of this volume, if one exists.",
              "$ref": "Review"
            }
          }
        },
        "id": {
          "description": "Unique identifier for a volume. (In LITE projection.)",
          "type": "string"
        },
        "volumeInfo": {
          "properties": {
            "canonicalVolumeLink": {
              "description": "Canonical URL for a volume. (In LITE projection.)",
              "type": "string"
            },
            "allowAnonLogging": {
              "description": "Whether anonymous logging should be allowed.",
              "type": "boolean"
            },
            "printedPageCount": {
              "description": "Total number of printed pages in generated pdf representation.",
              "type": "integer",
              "format": "int32"
            },
            "pageCount": {
              "type": "integer",
              "description": "Total number of pages as per publisher metadata.",
              "format": "int32"
            },
            "subtitle": {
              "description": "Volume subtitle. (In LITE projection.)",
              "type": "string"
            },
            "imageLinks": {
              "description": "A list of image links for all the sizes that are available. (In LITE projection.)",
              "type": "object",
              "properties": {
                "smallThumbnail": {
                  "description": "Image link for small thumbnail size (width of ~80 pixels). (In LITE projection)",
                  "type": "string"
                },
                "small": {
                  "description": "Image link for small size (width of ~300 pixels). (In LITE projection)",
                  "type": "string"
                },
                "thumbnail": {
                  "type": "string",
                  "description": "Image link for thumbnail size (width of ~128 pixels). (In LITE projection)"
                },
                "extraLarge": {
                  "description": "Image link for extra large size (width of ~1280 pixels). (In LITE projection)",
                  "type": "string"
                },
                "large": {
                  "description": "Image link for large size (width of ~800 pixels). (In LITE projection)",
                  "type": "string"
                },
                "medium": {
                  "description": "Image link for medium size (width of ~575 pixels). (In LITE projection)",
                  "type": "string"
                }
              }
            },
            "mainCategory": {
              "description": "The main category to which this volume belongs. It will be the category from the categories list returned below that has the highest weight.",
              "type": "string"
            },
            "publisher": {
              "type": "string",
              "description": "Publisher of this volume. (In LITE projection.)"
            },
            "samplePageCount": {
              "description": "Total number of sample pages as per publisher metadata.",
              "type": "integer",
              "format": "int32"
            },
            "language": {
              "type": "string",
              "description": "Best language for this volume (based on content). It is the two-letter ISO 639-1 code such as 'fr', 'en', etc."
            },
            "publishedDate": {
              "type": "string",
              "description": "Date of publication. (In LITE projection.)"
            },
            "maturityRating": {
              "type": "string"
            },
            "authors": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The names of the authors and/or editors for this volume. (In LITE projection)"
            },
            "panelizationSummary": {
              "properties": {
                "containsImageBubbles": {
                  "type": "boolean"
                },
                "epubBubbleVersion": {
                  "type": "string"
                },
                "imageBubbleVersion": {
                  "type": "string"
                },
                "containsEpubBubbles": {
                  "type": "boolean"
                }
              },
              "type": "object",
              "description": "A top-level summary of the panelization info in this volume."
            },
            "comicsContent": {
              "description": "Whether the volume has comics content.",
              "type": "boolean"
            },
            "readingModes": {
              "description": "The reading modes available for this volume.",
              "type": "object",
              "properties": {
                "image": {
                  "type": "boolean"
                },
                "text": {
                  "type": "boolean"
                }
              }
            },
            "industryIdentifiers": {
              "items": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "Identifier type. Possible values are ISBN_10, ISBN_13, ISSN and OTHER."
                  },
                  "identifier": {
                    "type": "string",
                    "description": "Industry specific volume identifier."
                  }
                }
              },
              "type": "array",
              "description": "Industry standard identifiers for this volume."
            },
            "contentVersion": {
              "description": "An identifier for the version of the volume content (text & images). (In LITE projection)",
              "type": "string"
            },
            "printType": {
              "type": "string",
              "description": "Type of publication of this volume. Possible values are BOOK or MAGAZINE."
            },
            "title": {
              "type": "string",
              "description": "Volume title. (In LITE projection.)"
            },
            "infoLink": {
              "type": "string",
              "description": "URL to view information about this volume on the Google Books site. (In LITE projection)"
            },
            "previewLink": {
              "description": "URL to preview this volume on the Google Books site.",
              "type": "string"
            },
            "ratingsCount": {
              "description": "The number of review ratings for this volume.",
              "type": "integer",
              "format": "int32"
            },
            "seriesInfo": {
              "$ref": "Volumeseriesinfo"
            },
            "dimensions": {
              "properties": {
                "height": {
                  "description": "Height or length of this volume (in cm).",
                  "type": "string"
                },
                "width": {
                  "description": "Width of this volume (in cm).",
                  "type": "string"
                },
                "thickness": {
                  "type": "string",
                  "description": "Thickness of this volume (in cm)."
                }
              },
              "description": "Physical dimensions of this volume.",
              "type": "object"
            },
            "categories": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "description": "A list of subject categories, such as \"Fiction\", \"Suspense\", etc."
            },
            "averageRating": {
              "type": "number",
              "format": "double",
              "description": "The mean review rating for this volume. (min = 1.0, max = 5.0)"
            },
            "description": {
              "type": "string",
              "description": "A synopsis of the volume. The text of the description is formatted in HTML and includes simple formatting elements, such as b, i, and br tags. (In LITE projection.)"
            }
          },
          "description": "General volume information.",
          "type": "object"
        },
        "recommendedInfo": {
          "type": "object",
          "description": "Recommendation related information for this volume.",
          "properties": {
            "explanation": {
              "description": "A text explaining why this volume is recommended.",
              "type": "string"
            }
          }
        },
        "accessInfo": {
          "type": "object",
          "description": "Any information about a volume related to reading or obtaining that volume text. This information can depend on country (books may be public domain in one country but not in another, e.g.).",
          "properties": {
            "viewOrderUrl": {
              "description": "For ordered but not yet processed orders, we give a URL that can be used to go to the appropriate Google Wallet page.",
              "type": "string"
            },
            "textToSpeechPermission": {
              "description": "Whether text-to-speech is permitted for this volume. Values can be ALLOWED, ALLOWED_FOR_ACCESSIBILITY, or NOT_ALLOWED.",
              "type": "string"
            },
            "viewability": {
              "description": "The read access of a volume. Possible values are PARTIAL, ALL_PAGES, NO_PAGES or UNKNOWN. This value depends on the country listed above. A value of PARTIAL means that the publisher has allowed some portion of the volume to be viewed publicly, without purchase. This can apply to eBooks as well as non-eBooks. Public domain books will always have a value of ALL_PAGES.",
              "type": "string"
            },
            "driveImportedContentLink": {
              "type": "string",
              "description": "URL to the Google Drive viewer if this volume is uploaded by the user by selecting the file from Google Drive."
            },
            "country": {
              "description": "The two-letter ISO_3166-1 country code for which this access information is valid. (In LITE projection.)",
              "type": "string"
            },
            "epub": {
              "type": "object",
              "description": "Information about epub content. (In LITE projection.)",
              "properties": {
                "acsTokenLink": {
                  "description": "URL to retrieve ACS token for epub download. (In LITE projection.)",
                  "type": "string"
                },
                "isAvailable": {
                  "description": "Is a flowing text epub available either as public domain or for purchase. (In LITE projection.)",
                  "type": "boolean"
                },
                "downloadLink": {
                  "type": "string",
                  "description": "URL to download epub. (In LITE projection.)"
                }
              }
            },
            "publicDomain": {
              "type": "boolean",
              "description": "Whether or not this book is public domain in the country listed above."
            },
            "quoteSharingAllowed": {
              "description": "Whether quote sharing is allowed for this volume.",
              "type": "boolean"
            },
            "accessViewStatus": {
              "description": "Combines the access and viewability of this volume into a single status field for this user. Values can be FULL_PURCHASED, FULL_PUBLIC_DOMAIN, SAMPLE or NONE. (In LITE projection.)",
              "type": "string"
            },
            "explicitOfflineLicenseManagement": {
              "type": "boolean",
              "description": "Whether this volume requires that the client explicitly request offline download license rather than have it done automatically when loading the content, if the client supports it."
            },
            "embeddable": {
              "description": "Whether this volume can be embedded in a viewport using the Embedded Viewer API.",
              "type": "boolean"
            },
            "pdf": {
              "type": "object",
              "properties": {
                "acsTokenLink": {
                  "description": "URL to retrieve ACS token for pdf download. (In LITE projection.)",
                  "type": "string"
                },
                "downloadLink": {
                  "type": "string",
                  "description": "URL to download pdf. (In LITE projection.)"
                },
                "isAvailable": {
                  "description": "Is a scanned image pdf available either as public domain or for purchase. (In LITE projection.)",
                  "type": "boolean"
                }
              },
              "description": "Information about pdf content. (In LITE projection.)"
            },
            "webReaderLink": {
              "type": "string",
              "description": "URL to read this volume on the Google Books site. Link will not allow users to read non-viewable volumes."
            },
            "downloadAccess": {
              "description": "Information about a volume's download license access restrictions.",
              "$ref": "DownloadAccessRestriction"
            }
          }
        },
        "kind": {
          "type": "string",
          "description": "Resource type for a volume. (In LITE projection.)"
        },
        "saleInfo": {
          "type": "object",
          "properties": {
            "saleability": {
              "type": "string",
              "description": "Whether or not this book is available for sale or offered for free in the Google eBookstore for the country listed above. Possible values are FOR_SALE, FOR_RENTAL_ONLY, FOR_SALE_AND_RENTAL, FREE, NOT_FOR_SALE, or FOR_PREORDER."
            },
            "isEbook": {
              "type": "boolean",
              "description": "Whether or not this volume is an eBook (can be added to the My eBooks shelf)."
            },
            "offers": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "listPrice": {
                    "description": "Offer list (=undiscounted) price in Micros.",
                    "properties": {
                      "amountInMicros": {
                        "format": "double",
                        "type": "number"
                      },
                      "currencyCode": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "retailPrice": {
                    "properties": {
                      "amountInMicros": {
                        "type": "number",
                        "format": "double"
                      },
                      "currencyCode": {
                        "type": "string"
                      }
                    },
                    "description": "Offer retail (=discounted) price in Micros",
                    "type": "object"
                  },
                  "rentalDuration": {
                    "description": "The rental duration (for rental offers only).",
                    "properties": {
                      "count": {
                        "format": "double",
                        "type": "number"
                      },
                      "unit": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "giftable": {
                    "description": "Indicates whether the offer is giftable.",
                    "type": "boolean"
                  },
                  "finskyOfferType": {
                    "type": "integer",
                    "description": "The finsky offer type (e.g., PURCHASE=0 RENTAL=3)",
                    "format": "int32"
                  }
                }
              },
              "description": "Offers available for this volume (sales and rentals)."
            },
            "country": {
              "type": "string",
              "description": "The two-letter ISO_3166-1 country code for which this sale information is valid. (In LITE projection.)"
            },
            "onSaleDate": {
              "description": "The date on which this book is available for sale.",
              "type": "string"
            },
            "listPrice": {
              "description": "Suggested retail price. (In LITE projection.)",
              "properties": {
                "amount": {
                  "format": "double",
                  "description": "Amount in the currency listed below. (In LITE projection.)",
                  "type": "number"
                },
                "currencyCode": {
                  "type": "string",
                  "description": "An ISO 4217, three-letter currency code. (In LITE projection.)"
                }
              },
              "type": "object"
            },
            "buyLink": {
              "description": "URL to purchase this volume on the Google Books site. (In LITE projection)",
              "type": "string"
            },
            "retailPrice": {
              "description": "The actual selling price of the book. This is the same as the suggested retail or list price unless there are offers or discounts on this volume. (In LITE projection.)",
              "type": "object",
              "properties": {
                "amount": {
                  "type": "number",
                  "description": "Amount in the currency listed below. (In LITE projection.)",
                  "format": "double"
                },
                "currencyCode": {
                  "type": "string",
                  "description": "An ISO 4217, three-letter currency code. (In LITE projection.)"
                }
              }
            }
          },
          "description": "Any information about a volume related to the eBookstore and/or purchaseability. This information can depend on the country where the request originates from (i.e. books may not be for sale in certain countries)."
        }
      }
    },
    "Category": {
      "id": "Category",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "categoryId": {
                "type": "string"
              },
              "badgeUrl": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "description": "A list of onboarding categories."
        },
        "kind": {
          "type": "string",
          "description": "Resource type."
        }
      },
      "type": "object"
    },
    "FamilyInfo": {
      "properties": {
        "kind": {
          "description": "Resource type.",
          "type": "string"
        },
        "membership": {
          "type": "object",
          "description": "Family membership info of the user that made the request.",
          "properties": {
            "isInFamily": {
              "type": "boolean"
            },
            "ageGroup": {
              "description": "The age group of the user.",
              "type": "string"
            },
            "acquirePermission": {
              "type": "string",
              "description": "Restrictions on user buying and acquiring content."
            },
            "role": {
              "description": "The role of the user in the family.",
              "type": "string"
            },
            "allowedMaturityRating": {
              "description": "The maximum allowed maturity rating for the user.",
              "type": "string"
            }
          }
        }
      },
      "id": "FamilyInfo",
      "type": "object"
    },
    "Notification": {
      "id": "Notification",
      "type": "object",
      "properties": {
        "crmExperimentIds": {
          "items": {
            "format": "int64",
            "type": "string"
          },
          "type": "array",
          "description": "The list of crm experiment ids."
        },
        "notificationGroup": {
          "type": "string"
        },
        "iconUrl": {
          "type": "string"
        },
        "timeToExpireMs": {
          "format": "int64",
          "type": "string"
        },
        "notification_type": {
          "type": "string"
        },
        "kind": {
          "description": "Resource type.",
          "type": "string"
        },
        "body": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "targetUrl": {
          "type": "string"
        },
        "show_notification_settings_action": {
          "type": "boolean"
        },
        "doc_type": {
          "type": "string"
        },
        "doc_id": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "is_document_mature": {
          "type": "boolean"
        },
        "dont_show_notification": {
          "type": "boolean"
        },
        "pcampaign_id": {
          "type": "string"
        }
      }
    },
    "Usersettings": {
      "id": "Usersettings",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Resource type."
        },
        "notesExport": {
          "type": "object",
          "properties": {
            "folderName": {
              "type": "string"
            },
            "isEnabled": {
              "type": "boolean"
            }
          },
          "description": "User settings in sub-objects, each for different purposes."
        },
        "notification": {
          "properties": {
            "matchMyInterests": {
              "type": "object",
              "properties": {
                "opted_state": {
                  "type": "string"
                }
              }
            },
            "rewardExpirations": {
              "properties": {
                "opted_state": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "moreFromSeries": {
              "properties": {
                "opted_state": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "moreFromAuthors": {
              "type": "object",
              "properties": {
                "opted_state": {
                  "type": "string"
                }
              }
            },
            "priceDrop": {
              "properties": {
                "opted_state": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "AnnotationsSummary": {
      "type": "object",
      "properties": {
        "layers": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "updated": {
                "type": "string"
              },
              "allowedCharacterCount": {
                "format": "int32",
                "type": "integer"
              },
              "layerId": {
                "type": "string"
              },
              "limitType": {
                "type": "string"
              },
              "remainingCharacterCount": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "kind": {
          "type": "string"
        }
      },
      "id": "AnnotationsSummary"
    },
    "Empty": {
      "id": "Empty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "type": "object",
      "properties": {}
    },
    "GeoAnnotationdata": {
      "type": "object",
      "properties": {
        "data": {
          "description": "JSON encoded data for this geo annotation data. Emitted with name 'data' in JSON output. Either this or dict_data will be populated.",
          "$ref": "Geolayerdata"
        },
        "volumeId": {
          "type": "string",
          "description": "The volume id for this data. *"
        },
        "annotationType": {
          "type": "string",
          "description": "The type of annotation this data is for."
        },
        "layerId": {
          "description": "The Layer id for this data. *",
          "type": "string"
        },
        "selfLink": {
          "type": "string",
          "description": "URL for this resource. *"
        },
        "kind": {
          "type": "string",
          "description": "Resource Type"
        },
        "updated": {
          "type": "string",
          "description": "Timestamp for the last time this data was updated. (RFC 3339 UTC date-time format)."
        },
        "encodedData": {
          "type": "string",
          "format": "byte",
          "description": "Base64 encoded data for this annotation data."
        },
        "id": {
          "description": "Unique id for this annotation data.",
          "type": "string"
        }
      },
      "id": "GeoAnnotationdata"
    },
    "Annotationsdata": {
      "type": "object",
      "properties": {
        "items": {
          "items": {
            "$ref": "GeoAnnotationdata"
          },
          "description": "A list of Annotation Data.",
          "type": "array"
        },
        "kind": {
          "description": "Resource type",
          "type": "string"
        },
        "nextPageToken": {
          "description": "Token to pass in for pagination for the next page. This will not be present if this request does not have more results.",
          "type": "string"
        },
        "totalItems": {
          "type": "integer",
          "format": "int32",
          "description": "The total number of volume annotations found."
        }
      },
      "id": "Annotationsdata"
    },
    "BooksAnnotationsRange": {
      "properties": {
        "endOffset": {
          "description": "The offset from the ending position.",
          "type": "string"
        },
        "startPosition": {
          "type": "string",
          "description": "The starting position for the range."
        },
        "startOffset": {
          "type": "string",
          "description": "The offset from the starting position."
        },
        "endPosition": {
          "type": "string",
          "description": "The ending position for the range."
        }
      },
      "type": "object",
      "id": "BooksAnnotationsRange"
    }
  },
  "version_module": true,
  "description": "The Google Books API allows clients to access the Google Books repository.",
  "parameters": {
    "prettyPrint": {
      "location": "query",
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "type": "boolean"
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "key": {
      "type": "string",
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
    },
    "callback": {
      "description": "JSONP",
      "location": "query",
      "type": "string"
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query",
      "type": "string"
    },
    "$.xgafv": {
      "location": "query",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "type": "string",
      "enum": [
        "1",
        "2"
      ],
      "description": "V1 error format."
    },
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "alt": {
      "description": "Data format for response.",
      "type": "string",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query"
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query",
      "type": "string"
    },
    "oauth_token": {
      "location": "query",
      "description": "OAuth 2.0 token for the current user.",
      "type": "string"
    }
  },
  "ownerDomain": "google.com",
  "baseUrl": "https://books.googleapis.com/",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "fullyEncodeReservedExpansion": true,
  "documentationLink": "https://code.google.com/apis/books/docs/v1/getting_started.html",
  "kind": "discovery#restDescription",
  "basePath": "",
  "name": "books",
  "rootUrl": "https://books.googleapis.com/",
  "version": "v1",
  "title": "Books API"
}
