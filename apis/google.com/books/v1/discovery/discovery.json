{
  "fullyEncodeReservedExpansion": true,
  "baseUrl": "https://books.googleapis.com/",
  "version_module": true,
  "rootUrl": "https://books.googleapis.com/",
  "revision": "20230221",
  "protocol": "rest",
  "version": "v1",
  "name": "books",
  "servicePath": "",
  "title": "Books API",
  "basePath": "",
  "description": "The Google Books API allows clients to access the Google Books repository.",
  "resources": {
    "onboarding": {
      "methods": {
        "listCategories": {
          "id": "books.onboarding.listCategories",
          "parameters": {
            "locale": {
              "description": "ISO-639-1 language and ISO-3166-1 country code. Default is en-US if unset.",
              "location": "query",
              "type": "string"
            }
          },
          "description": "List categories for onboarding experience.",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "response": {
            "$ref": "Category"
          },
          "httpMethod": "GET",
          "path": "books/v1/onboarding/listCategories",
          "parameterOrder": [],
          "flatPath": "books/v1/onboarding/listCategories"
        },
        "listCategoryVolumes": {
          "id": "books.onboarding.listCategoryVolumes",
          "response": {
            "$ref": "Volume2"
          },
          "flatPath": "books/v1/onboarding/listCategoryVolumes",
          "parameterOrder": [],
          "description": "List available volumes under categories for onboarding experience.",
          "path": "books/v1/onboarding/listCategoryVolumes",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "parameters": {
            "pageToken": {
              "location": "query",
              "type": "string",
              "description": "The value of the nextToken from the previous page."
            },
            "maxAllowedMaturityRating": {
              "enum": [
                "MAX_ALLOWED_MATURITY_RATING_UNDEFINED",
                "MATURE",
                "not-mature"
              ],
              "enumDescriptions": [
                "",
                "Show books which are rated mature or lower.",
                "Show books which are rated not mature."
              ],
              "description": "The maximum allowed maturity rating of returned volumes. Books with a higher maturity rating are filtered out.",
              "location": "query",
              "type": "string"
            },
            "locale": {
              "location": "query",
              "description": "ISO-639-1 language and ISO-3166-1 country code. Default is en-US if unset.",
              "type": "string"
            },
            "categoryId": {
              "repeated": true,
              "location": "query",
              "type": "string",
              "description": "List of category ids requested."
            },
            "pageSize": {
              "format": "uint32",
              "location": "query",
              "type": "integer",
              "description": "Number of maximum results per page to be included in the response."
            }
          },
          "httpMethod": "GET"
        }
      }
    },
    "dictionary": {
      "methods": {
        "listOfflineMetadata": {
          "description": "Returns a list of offline dictionary metadata available",
          "parameters": {
            "cpksver": {
              "description": "The device/version ID from which to request the data.",
              "required": true,
              "location": "query",
              "type": "string"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "flatPath": "books/v1/dictionary/listOfflineMetadata",
          "id": "books.dictionary.listOfflineMetadata",
          "path": "books/v1/dictionary/listOfflineMetadata",
          "httpMethod": "GET",
          "parameterOrder": [
            "cpksver"
          ],
          "response": {
            "$ref": "Metadata"
          }
        }
      }
    },
    "bookshelves": {
      "resources": {
        "volumes": {
          "methods": {
            "list": {
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "path": "books/v1/users/{userId}/bookshelves/{shelf}/volumes",
              "parameterOrder": [
                "userId",
                "shelf"
              ],
              "response": {
                "$ref": "Volumes"
              },
              "parameters": {
                "shelf": {
                  "location": "path",
                  "required": true,
                  "description": "ID of bookshelf to retrieve volumes.",
                  "type": "string"
                },
                "source": {
                  "type": "string",
                  "description": "String to identify the originator of this request.",
                  "location": "query"
                },
                "startIndex": {
                  "location": "query",
                  "minimum": "0",
                  "format": "uint32",
                  "description": "Index of the first element to return (starts at 0)",
                  "type": "integer"
                },
                "userId": {
                  "description": "ID of user for whom to retrieve bookshelf volumes.",
                  "required": true,
                  "location": "path",
                  "type": "string"
                },
                "showPreorders": {
                  "type": "boolean",
                  "description": "Set to true to show pre-ordered books. Defaults to false.",
                  "location": "query"
                },
                "maxResults": {
                  "minimum": "0",
                  "format": "uint32",
                  "description": "Maximum number of results to return",
                  "location": "query",
                  "type": "integer"
                }
              },
              "description": "Retrieves volumes in a specific bookshelf for the specified user.",
              "flatPath": "books/v1/users/{userId}/bookshelves/{shelf}/volumes",
              "httpMethod": "GET",
              "id": "books.bookshelves.volumes.list"
            }
          }
        }
      },
      "methods": {
        "get": {
          "parameterOrder": [
            "userId",
            "shelf"
          ],
          "path": "books/v1/users/{userId}/bookshelves/{shelf}",
          "flatPath": "books/v1/users/{userId}/bookshelves/{shelf}",
          "response": {
            "$ref": "Bookshelf"
          },
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "description": "Retrieves metadata for a specific bookshelf for the specified user.",
          "parameters": {
            "source": {
              "location": "query",
              "type": "string",
              "description": "String to identify the originator of this request."
            },
            "shelf": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "ID of bookshelf to retrieve."
            },
            "userId": {
              "description": "ID of user for whom to retrieve bookshelves.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "httpMethod": "GET",
          "id": "books.bookshelves.get"
        },
        "list": {
          "httpMethod": "GET",
          "path": "books/v1/users/{userId}/bookshelves",
          "description": "Retrieves a list of public bookshelves for the specified user.",
          "flatPath": "books/v1/users/{userId}/bookshelves",
          "parameters": {
            "source": {
              "type": "string",
              "location": "query",
              "description": "String to identify the originator of this request."
            },
            "userId": {
              "location": "path",
              "description": "ID of user for whom to retrieve bookshelves.",
              "required": true,
              "type": "string"
            }
          },
          "parameterOrder": [
            "userId"
          ],
          "id": "books.bookshelves.list",
          "response": {
            "$ref": "Bookshelves"
          },
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ]
        }
      }
    },
    "personalizedstream": {
      "methods": {
        "get": {
          "httpMethod": "GET",
          "parameters": {
            "source": {
              "type": "string",
              "description": "String to identify the originator of this request.",
              "location": "query"
            },
            "maxAllowedMaturityRating": {
              "description": "The maximum allowed maturity rating of returned recommendations. Books with a higher maturity rating are filtered out.",
              "location": "query",
              "enumDescriptions": [
                "",
                "Show books which are rated mature or lower.",
                "Show books which are rated not mature."
              ],
              "type": "string",
              "enum": [
                "MAX_ALLOWED_MATURITY_RATING_UNDEFINED",
                "MATURE",
                "not-mature"
              ]
            },
            "locale": {
              "type": "string",
              "description": "ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'. Used for generating recommendations.",
              "location": "query"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "path": "books/v1/personalizedstream/get",
          "flatPath": "books/v1/personalizedstream/get",
          "response": {
            "$ref": "Discoveryclusters"
          },
          "parameterOrder": [],
          "description": "Returns a stream of personalized book clusters",
          "id": "books.personalizedstream.get"
        }
      }
    },
    "series": {
      "resources": {
        "membership": {
          "methods": {
            "get": {
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "id": "books.series.membership.get",
              "description": "Returns Series membership data given the series id.",
              "parameters": {
                "series_id": {
                  "description": "String that identifies the series",
                  "required": true,
                  "location": "query",
                  "type": "string"
                },
                "page_size": {
                  "format": "uint32",
                  "location": "query",
                  "description": "Number of maximum results per page to be included in the response.",
                  "type": "integer"
                },
                "page_token": {
                  "location": "query",
                  "type": "string",
                  "description": "The value of the nextToken from the previous page."
                }
              },
              "flatPath": "books/v1/series/membership/get",
              "path": "books/v1/series/membership/get",
              "response": {
                "$ref": "Seriesmembership"
              },
              "httpMethod": "GET",
              "parameterOrder": [
                "series_id"
              ]
            }
          }
        }
      },
      "methods": {
        "get": {
          "flatPath": "books/v1/series/get",
          "response": {
            "$ref": "Series"
          },
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "path": "books/v1/series/get",
          "description": "Returns Series metadata for the given series ids.",
          "parameters": {
            "series_id": {
              "description": "String that identifies the series",
              "repeated": true,
              "required": true,
              "location": "query",
              "type": "string"
            }
          },
          "parameterOrder": [
            "series_id"
          ],
          "httpMethod": "GET",
          "id": "books.series.get"
        }
      }
    },
    "myconfig": {
      "methods": {
        "updateUserSettings": {
          "flatPath": "books/v1/myconfig/updateUserSettings",
          "parameterOrder": [],
          "id": "books.myconfig.updateUserSettings",
          "request": {
            "$ref": "Usersettings"
          },
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "response": {
            "$ref": "Usersettings"
          },
          "description": "Sets the settings for the user. If a sub-object is specified, it will overwrite the existing sub-object stored in the server. Unspecified sub-objects will retain the existing value.",
          "path": "books/v1/myconfig/updateUserSettings",
          "parameters": {},
          "httpMethod": "POST"
        },
        "requestAccess": {
          "description": "Request concurrent and download access restrictions.",
          "id": "books.myconfig.requestAccess",
          "parameters": {
            "locale": {
              "location": "query",
              "type": "string",
              "description": "ISO-639-1, ISO-3166-1 codes for message localization, i.e. en_US."
            },
            "volumeId": {
              "required": true,
              "description": "The volume to request concurrent/download restrictions for.",
              "location": "query",
              "type": "string"
            },
            "licenseTypes": {
              "location": "query",
              "enum": [
                "LICENSE_TYPES_UNDEFINED",
                "BOTH",
                "CONCURRENT",
                "DOWNLOAD"
              ],
              "enumDescriptions": [
                "",
                "Both concurrent and download licenses.",
                "Concurrent access license.",
                "Offline download access license."
              ],
              "type": "string",
              "description": "The type of access license to request. If not specified, the default is BOTH."
            },
            "source": {
              "required": true,
              "type": "string",
              "location": "query",
              "description": "String to identify the originator of this request."
            },
            "nonce": {
              "location": "query",
              "type": "string",
              "required": true,
              "description": "The client nonce value."
            },
            "cpksver": {
              "required": true,
              "type": "string",
              "description": "The device/version ID from which to request the restrictions.",
              "location": "query"
            }
          },
          "flatPath": "books/v1/myconfig/requestAccess",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "response": {
            "$ref": "RequestAccessData"
          },
          "path": "books/v1/myconfig/requestAccess",
          "parameterOrder": [
            "cpksver",
            "nonce",
            "source",
            "volumeId"
          ],
          "httpMethod": "POST"
        },
        "syncVolumeLicenses": {
          "response": {
            "$ref": "Volumes"
          },
          "id": "books.myconfig.syncVolumeLicenses",
          "path": "books/v1/myconfig/syncVolumeLicenses",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "httpMethod": "POST",
          "parameters": {
            "cpksver": {
              "location": "query",
              "required": true,
              "type": "string",
              "description": "The device/version ID from which to release the restriction."
            },
            "locale": {
              "location": "query",
              "type": "string",
              "description": "ISO-639-1, ISO-3166-1 codes for message localization, i.e. en_US."
            },
            "includeNonComicsSeries": {
              "description": "Set to true to include non-comics series. Defaults to false.",
              "location": "query",
              "type": "boolean"
            },
            "showPreorders": {
              "type": "boolean",
              "description": "Set to true to show pre-ordered books. Defaults to false.",
              "location": "query"
            },
            "source": {
              "type": "string",
              "required": true,
              "description": "String to identify the originator of this request.",
              "location": "query"
            },
            "features": {
              "repeated": true,
              "description": "List of features supported by the client, i.e., 'RENTALS'",
              "location": "query",
              "enum": [
                "FEATURES_UNDEFINED",
                "RENTALS"
              ],
              "enumDescriptions": [
                "",
                "Client supports rentals."
              ],
              "type": "string"
            },
            "nonce": {
              "type": "string",
              "location": "query",
              "description": "The client nonce value.",
              "required": true
            },
            "volumeIds": {
              "description": "The volume(s) to request download restrictions for.",
              "type": "string",
              "location": "query",
              "repeated": true
            }
          },
          "parameterOrder": [
            "cpksver",
            "nonce",
            "source"
          ],
          "flatPath": "books/v1/myconfig/syncVolumeLicenses",
          "description": "Request downloaded content access for specified volumes on the My eBooks shelf."
        },
        "releaseDownloadAccess": {
          "response": {
            "$ref": "DownloadAccesses"
          },
          "description": "Release downloaded content access restriction.",
          "flatPath": "books/v1/myconfig/releaseDownloadAccess",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "id": "books.myconfig.releaseDownloadAccess",
          "httpMethod": "POST",
          "parameters": {
            "volumeIds": {
              "required": true,
              "repeated": true,
              "location": "query",
              "description": "The volume(s) to release restrictions for.",
              "type": "string"
            },
            "cpksver": {
              "location": "query",
              "type": "string",
              "description": "The device/version ID from which to release the restriction.",
              "required": true
            },
            "locale": {
              "location": "query",
              "type": "string",
              "description": "ISO-639-1, ISO-3166-1 codes for message localization, i.e. en_US."
            },
            "source": {
              "location": "query",
              "type": "string",
              "description": "String to identify the originator of this request."
            }
          },
          "path": "books/v1/myconfig/releaseDownloadAccess",
          "parameterOrder": [
            "cpksver",
            "volumeIds"
          ]
        },
        "getUserSettings": {
          "path": "books/v1/myconfig/getUserSettings",
          "httpMethod": "GET",
          "id": "books.myconfig.getUserSettings",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "parameterOrder": [],
          "flatPath": "books/v1/myconfig/getUserSettings",
          "description": "Gets the current settings for the user.",
          "response": {
            "$ref": "Usersettings"
          },
          "parameters": {
            "country": {
              "type": "string",
              "description": "Unused. Added only to workaround TEX mandatory request template requirement",
              "location": "query"
            }
          }
        }
      }
    },
    "familysharing": {
      "methods": {
        "unshare": {
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "id": "books.familysharing.unshare",
          "flatPath": "books/v1/familysharing/unshare",
          "description": "Initiates revoking content that has already been shared with the user's family. Empty response indicates success.",
          "response": {
            "$ref": "Empty"
          },
          "parameters": {
            "source": {
              "location": "query",
              "description": "String to identify the originator of this request.",
              "type": "string"
            },
            "docId": {
              "type": "string",
              "location": "query",
              "description": "The docid to unshare."
            },
            "volumeId": {
              "type": "string",
              "location": "query",
              "description": "The volume to unshare."
            }
          },
          "parameterOrder": [],
          "path": "books/v1/familysharing/unshare",
          "httpMethod": "POST"
        },
        "share": {
          "response": {
            "$ref": "Empty"
          },
          "parameterOrder": [],
          "id": "books.familysharing.share",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "httpMethod": "POST",
          "description": "Initiates sharing of the content with the user's family. Empty response indicates success.",
          "path": "books/v1/familysharing/share",
          "flatPath": "books/v1/familysharing/share",
          "parameters": {
            "docId": {
              "location": "query",
              "description": "The docid to share.",
              "type": "string"
            },
            "source": {
              "description": "String to identify the originator of this request.",
              "location": "query",
              "type": "string"
            },
            "volumeId": {
              "type": "string",
              "location": "query",
              "description": "The volume to share."
            }
          }
        },
        "getFamilyInfo": {
          "id": "books.familysharing.getFamilyInfo",
          "parameters": {
            "source": {
              "type": "string",
              "description": "String to identify the originator of this request.",
              "location": "query"
            }
          },
          "flatPath": "books/v1/familysharing/getFamilyInfo",
          "response": {
            "$ref": "FamilyInfo"
          },
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "httpMethod": "GET",
          "description": "Gets information regarding the family that the user is part of.",
          "path": "books/v1/familysharing/getFamilyInfo",
          "parameterOrder": []
        }
      }
    },
    "notification": {
      "methods": {
        "get": {
          "httpMethod": "GET",
          "parameters": {
            "notification_id": {
              "description": "String to identify the notification.",
              "required": true,
              "type": "string",
              "location": "query"
            },
            "locale": {
              "type": "string",
              "description": "ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'. Used for generating notification title and body.",
              "location": "query"
            },
            "source": {
              "location": "query",
              "type": "string",
              "description": "String to identify the originator of this request."
            }
          },
          "flatPath": "books/v1/notification/get",
          "path": "books/v1/notification/get",
          "parameterOrder": [
            "notification_id"
          ],
          "id": "books.notification.get",
          "response": {
            "$ref": "Notification"
          },
          "description": "Returns notification details for a given notification id.",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ]
        }
      }
    },
    "mylibrary": {
      "resources": {
        "annotations": {
          "methods": {
            "summary": {
              "id": "books.mylibrary.annotations.summary",
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "response": {
                "$ref": "AnnotationsSummary"
              },
              "parameterOrder": [
                "layerIds",
                "volumeId"
              ],
              "parameters": {
                "layerIds": {
                  "description": "Array of layer IDs to get the summary for.",
                  "repeated": true,
                  "required": true,
                  "location": "query",
                  "type": "string"
                },
                "volumeId": {
                  "type": "string",
                  "location": "query",
                  "description": "Volume id to get the summary for.",
                  "required": true
                }
              },
              "flatPath": "books/v1/mylibrary/annotations/summary",
              "path": "books/v1/mylibrary/annotations/summary",
              "description": "Gets the summary of specified layers."
            },
            "list": {
              "response": {
                "$ref": "Annotations"
              },
              "parameters": {
                "volumeId": {
                  "type": "string",
                  "location": "query",
                  "description": "The volume to restrict annotations to."
                },
                "source": {
                  "type": "string",
                  "description": "String to identify the originator of this request.",
                  "location": "query"
                },
                "updatedMax": {
                  "description": "RFC 3339 timestamp to restrict to items updated prior to this timestamp (exclusive).",
                  "type": "string",
                  "location": "query"
                },
                "pageToken": {
                  "location": "query",
                  "description": "The value of the nextToken from the previous page.",
                  "type": "string"
                },
                "layerId": {
                  "description": "The layer ID to limit annotation by.",
                  "location": "query",
                  "type": "string"
                },
                "maxResults": {
                  "type": "integer",
                  "format": "uint32",
                  "location": "query",
                  "maximum": "40",
                  "minimum": "0",
                  "description": "Maximum number of results to return"
                },
                "layerIds": {
                  "description": "The layer ID(s) to limit annotation by.",
                  "repeated": true,
                  "type": "string",
                  "location": "query"
                },
                "showDeleted": {
                  "type": "boolean",
                  "description": "Set to true to return deleted annotations. updatedMin must be in the request to use this. Defaults to false.",
                  "location": "query"
                },
                "contentVersion": {
                  "type": "string",
                  "description": "The content version for the requested volume.",
                  "location": "query"
                },
                "updatedMin": {
                  "description": "RFC 3339 timestamp to restrict to items updated since this timestamp (inclusive).",
                  "location": "query",
                  "type": "string"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "description": "Retrieves a list of annotations, possibly filtered.",
              "httpMethod": "GET",
              "parameterOrder": [],
              "path": "books/v1/mylibrary/annotations",
              "flatPath": "books/v1/mylibrary/annotations",
              "id": "books.mylibrary.annotations.list"
            },
            "delete": {
              "description": "Deletes an annotation.",
              "parameters": {
                "source": {
                  "description": "String to identify the originator of this request.",
                  "location": "query",
                  "type": "string"
                },
                "annotationId": {
                  "type": "string",
                  "required": true,
                  "description": "The ID for the annotation to delete.",
                  "location": "path"
                }
              },
              "flatPath": "books/v1/mylibrary/annotations/{annotationId}",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "response": {
                "$ref": "Empty"
              },
              "parameterOrder": [
                "annotationId"
              ],
              "id": "books.mylibrary.annotations.delete",
              "httpMethod": "DELETE",
              "path": "books/v1/mylibrary/annotations/{annotationId}"
            },
            "insert": {
              "path": "books/v1/mylibrary/annotations",
              "parameters": {
                "annotationId": {
                  "type": "string",
                  "location": "query",
                  "description": "The ID for the annotation to insert."
                },
                "source": {
                  "location": "query",
                  "description": "String to identify the originator of this request.",
                  "type": "string"
                },
                "country": {
                  "location": "query",
                  "description": "ISO-3166-1 code to override the IP-based location.",
                  "type": "string"
                },
                "showOnlySummaryInResponse": {
                  "type": "boolean",
                  "description": "Requests that only the summary of the specified layer be provided in the response.",
                  "location": "query"
                }
              },
              "response": {
                "$ref": "Annotation"
              },
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "parameterOrder": [],
              "request": {
                "$ref": "Annotation"
              },
              "description": "Inserts a new annotation.",
              "flatPath": "books/v1/mylibrary/annotations",
              "httpMethod": "POST",
              "id": "books.mylibrary.annotations.insert"
            },
            "update": {
              "path": "books/v1/mylibrary/annotations/{annotationId}",
              "description": "Updates an existing annotation.",
              "parameterOrder": [
                "annotationId"
              ],
              "request": {
                "$ref": "Annotation"
              },
              "id": "books.mylibrary.annotations.update",
              "flatPath": "books/v1/mylibrary/annotations/{annotationId}",
              "httpMethod": "PUT",
              "parameters": {
                "source": {
                  "description": "String to identify the originator of this request.",
                  "type": "string",
                  "location": "query"
                },
                "annotationId": {
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "description": "The ID for the annotation to update."
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "response": {
                "$ref": "Annotation"
              }
            }
          }
        },
        "readingpositions": {
          "methods": {
            "get": {
              "parameters": {
                "contentVersion": {
                  "type": "string",
                  "description": "Volume content version for which this reading position is requested.",
                  "location": "query"
                },
                "volumeId": {
                  "description": "ID of volume for which to retrieve a reading position.",
                  "location": "path",
                  "type": "string",
                  "required": true
                },
                "source": {
                  "location": "query",
                  "type": "string",
                  "description": "String to identify the originator of this request."
                }
              },
              "httpMethod": "GET",
              "flatPath": "books/v1/mylibrary/readingpositions/{volumeId}",
              "id": "books.mylibrary.readingpositions.get",
              "path": "books/v1/mylibrary/readingpositions/{volumeId}",
              "description": "Retrieves my reading position information for a volume.",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "parameterOrder": [
                "volumeId"
              ],
              "response": {
                "$ref": "ReadingPosition"
              }
            },
            "setPosition": {
              "description": "Sets my reading position information for a volume.",
              "response": {
                "$ref": "Empty"
              },
              "id": "books.mylibrary.readingpositions.setPosition",
              "parameters": {
                "deviceCookie": {
                  "location": "query",
                  "description": "Random persistent device cookie optional on set position.",
                  "type": "string"
                },
                "position": {
                  "description": "Position string for the new volume reading position.",
                  "type": "string",
                  "location": "query",
                  "required": true
                },
                "source": {
                  "description": "String to identify the originator of this request.",
                  "type": "string",
                  "location": "query"
                },
                "action": {
                  "type": "string",
                  "description": "Action that caused this reading position to be set.",
                  "enum": [
                    "ACTION_UNDEFINED",
                    "bookmark",
                    "chapter",
                    "next-page",
                    "prev-page",
                    "scroll",
                    "search"
                  ],
                  "enumDescriptions": [
                    "",
                    "User chose bookmark within volume.",
                    "User selected chapter from list.",
                    "Next page event.",
                    "Previous page event.",
                    "User navigated to page.",
                    "User chose search results within volume."
                  ],
                  "location": "query"
                },
                "volumeId": {
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "description": "ID of volume for which to update the reading position."
                },
                "timestamp": {
                  "required": true,
                  "type": "string",
                  "description": "RFC 3339 UTC format timestamp associated with this reading position.",
                  "location": "query"
                },
                "contentVersion": {
                  "location": "query",
                  "description": "Volume content version for which this reading position applies.",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "volumeId",
                "position",
                "timestamp"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "path": "books/v1/mylibrary/readingpositions/{volumeId}/setPosition",
              "httpMethod": "POST",
              "flatPath": "books/v1/mylibrary/readingpositions/{volumeId}/setPosition"
            }
          }
        },
        "bookshelves": {
          "resources": {
            "volumes": {
              "methods": {
                "list": {
                  "httpMethod": "GET",
                  "flatPath": "books/v1/mylibrary/bookshelves/{shelf}/volumes",
                  "path": "books/v1/mylibrary/bookshelves/{shelf}/volumes",
                  "scopes": [
                    "https://www.googleapis.com/auth/books"
                  ],
                  "parameters": {
                    "projection": {
                      "enum": [
                        "PROJECTION_UNDEFINED",
                        "FULL",
                        "LITE"
                      ],
                      "type": "string",
                      "enumDescriptions": [
                        "",
                        "Includes all volume data.",
                        "Includes a subset of fields in volumeInfo and accessInfo."
                      ],
                      "location": "query",
                      "description": "Restrict information returned to a set of selected fields."
                    },
                    "q": {
                      "description": "Full-text search query string in this bookshelf.",
                      "location": "query",
                      "type": "string"
                    },
                    "country": {
                      "type": "string",
                      "location": "query",
                      "description": "ISO-3166-1 code to override the IP-based location."
                    },
                    "source": {
                      "description": "String to identify the originator of this request.",
                      "type": "string",
                      "location": "query"
                    },
                    "startIndex": {
                      "type": "integer",
                      "format": "uint32",
                      "description": "Index of the first element to return (starts at 0)",
                      "location": "query",
                      "minimum": "0"
                    },
                    "shelf": {
                      "location": "path",
                      "description": "The bookshelf ID or name retrieve volumes for.",
                      "required": true,
                      "type": "string"
                    },
                    "showPreorders": {
                      "location": "query",
                      "type": "boolean",
                      "description": "Set to true to show pre-ordered books. Defaults to false."
                    },
                    "maxResults": {
                      "location": "query",
                      "description": "Maximum number of results to return",
                      "format": "uint32",
                      "minimum": "0",
                      "type": "integer"
                    }
                  },
                  "parameterOrder": [
                    "shelf"
                  ],
                  "id": "books.mylibrary.bookshelves.volumes.list",
                  "description": "Gets volume information for volumes on a bookshelf.",
                  "response": {
                    "$ref": "Volumes"
                  }
                }
              }
            }
          },
          "methods": {
            "clearVolumes": {
              "description": "Clears all volumes from a bookshelf.",
              "id": "books.mylibrary.bookshelves.clearVolumes",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "httpMethod": "POST",
              "parameters": {
                "source": {
                  "description": "String to identify the originator of this request.",
                  "type": "string",
                  "location": "query"
                },
                "shelf": {
                  "required": true,
                  "location": "path",
                  "description": "ID of bookshelf from which to remove a volume.",
                  "type": "string"
                }
              },
              "flatPath": "books/v1/mylibrary/bookshelves/{shelf}/clearVolumes",
              "parameterOrder": [
                "shelf"
              ],
              "path": "books/v1/mylibrary/bookshelves/{shelf}/clearVolumes",
              "response": {
                "$ref": "Empty"
              }
            },
            "get": {
              "path": "books/v1/mylibrary/bookshelves/{shelf}",
              "id": "books.mylibrary.bookshelves.get",
              "parameters": {
                "shelf": {
                  "location": "path",
                  "required": true,
                  "description": "ID of bookshelf to retrieve.",
                  "type": "string"
                },
                "source": {
                  "location": "query",
                  "description": "String to identify the originator of this request.",
                  "type": "string"
                }
              },
              "response": {
                "$ref": "Bookshelf"
              },
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "parameterOrder": [
                "shelf"
              ],
              "flatPath": "books/v1/mylibrary/bookshelves/{shelf}",
              "description": "Retrieves metadata for a specific bookshelf belonging to the authenticated user."
            },
            "removeVolume": {
              "httpMethod": "POST",
              "path": "books/v1/mylibrary/bookshelves/{shelf}/removeVolume",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "response": {
                "$ref": "Empty"
              },
              "description": "Removes a volume from a bookshelf.",
              "flatPath": "books/v1/mylibrary/bookshelves/{shelf}/removeVolume",
              "parameterOrder": [
                "shelf",
                "volumeId"
              ],
              "id": "books.mylibrary.bookshelves.removeVolume",
              "parameters": {
                "volumeId": {
                  "required": true,
                  "location": "query",
                  "type": "string",
                  "description": "ID of volume to remove."
                },
                "source": {
                  "type": "string",
                  "description": "String to identify the originator of this request.",
                  "location": "query"
                },
                "reason": {
                  "enum": [
                    "REASON_UNDEFINED",
                    "ONBOARDING"
                  ],
                  "description": "The reason for which the book is removed from the library.",
                  "enumDescriptions": [
                    "",
                    "Samples removed from the Onboarding flow."
                  ],
                  "location": "query",
                  "type": "string"
                },
                "shelf": {
                  "required": true,
                  "type": "string",
                  "description": "ID of bookshelf from which to remove a volume.",
                  "location": "path"
                }
              }
            },
            "addVolume": {
              "parameterOrder": [
                "shelf",
                "volumeId"
              ],
              "flatPath": "books/v1/mylibrary/bookshelves/{shelf}/addVolume",
              "parameters": {
                "reason": {
                  "type": "string",
                  "location": "query",
                  "enumDescriptions": [
                    "",
                    "Volumes added from the PREX flow on iOS.",
                    "Volumes added from the Search flow on iOS.",
                    "Volumes added from the Onboarding flow."
                  ],
                  "description": "The reason for which the book is added to the library.",
                  "enum": [
                    "REASON_UNDEFINED",
                    "IOS_PREX",
                    "IOS_SEARCH",
                    "ONBOARDING"
                  ]
                },
                "volumeId": {
                  "required": true,
                  "description": "ID of volume to add.",
                  "location": "query",
                  "type": "string"
                },
                "source": {
                  "location": "query",
                  "type": "string",
                  "description": "String to identify the originator of this request."
                },
                "shelf": {
                  "location": "path",
                  "type": "string",
                  "description": "ID of bookshelf to which to add a volume.",
                  "required": true
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "response": {
                "$ref": "Empty"
              },
              "id": "books.mylibrary.bookshelves.addVolume",
              "path": "books/v1/mylibrary/bookshelves/{shelf}/addVolume",
              "httpMethod": "POST",
              "description": "Adds a volume to a bookshelf."
            },
            "moveVolume": {
              "description": "Moves a volume within a bookshelf.",
              "id": "books.mylibrary.bookshelves.moveVolume",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "parameters": {
                "volumeId": {
                  "description": "ID of volume to move.",
                  "location": "query",
                  "type": "string",
                  "required": true
                },
                "volumePosition": {
                  "description": "Position on shelf to move the item (0 puts the item before the current first item, 1 puts it between the first and the second and so on.)",
                  "format": "int32",
                  "required": true,
                  "location": "query",
                  "type": "integer"
                },
                "source": {
                  "type": "string",
                  "description": "String to identify the originator of this request.",
                  "location": "query"
                },
                "shelf": {
                  "type": "string",
                  "location": "path",
                  "description": "ID of bookshelf with the volume.",
                  "required": true
                }
              },
              "path": "books/v1/mylibrary/bookshelves/{shelf}/moveVolume",
              "parameterOrder": [
                "shelf",
                "volumeId",
                "volumePosition"
              ],
              "httpMethod": "POST",
              "response": {
                "$ref": "Empty"
              },
              "flatPath": "books/v1/mylibrary/bookshelves/{shelf}/moveVolume"
            },
            "list": {
              "httpMethod": "GET",
              "id": "books.mylibrary.bookshelves.list",
              "parameterOrder": [],
              "flatPath": "books/v1/mylibrary/bookshelves",
              "response": {
                "$ref": "Bookshelves"
              },
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "description": "Retrieves a list of bookshelves belonging to the authenticated user.",
              "path": "books/v1/mylibrary/bookshelves",
              "parameters": {
                "source": {
                  "location": "query",
                  "description": "String to identify the originator of this request.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "cloudloading": {
      "methods": {
        "updateBook": {
          "path": "books/v1/cloudloading/updateBook",
          "flatPath": "books/v1/cloudloading/updateBook",
          "httpMethod": "POST",
          "response": {
            "$ref": "BooksCloudloadingResource"
          },
          "description": "Updates a user-upload volume.",
          "parameterOrder": [],
          "parameters": {},
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "id": "books.cloudloading.updateBook",
          "request": {
            "$ref": "BooksCloudloadingResource"
          }
        },
        "deleteBook": {
          "id": "books.cloudloading.deleteBook",
          "path": "books/v1/cloudloading/deleteBook",
          "flatPath": "books/v1/cloudloading/deleteBook",
          "description": "Remove the book and its contents",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "httpMethod": "POST",
          "parameters": {
            "volumeId": {
              "location": "query",
              "description": "The id of the book to be removed.",
              "required": true,
              "type": "string"
            }
          },
          "response": {
            "$ref": "Empty"
          },
          "parameterOrder": [
            "volumeId"
          ]
        },
        "addBook": {
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "parameters": {
            "drive_document_id": {
              "description": "A drive document id. The upload_client_token must not be set.",
              "type": "string",
              "location": "query"
            },
            "name": {
              "description": "The document name. It can be set only if the drive_document_id is set.",
              "location": "query",
              "type": "string"
            },
            "upload_client_token": {
              "location": "query",
              "type": "string",
              "description": "Scotty upload token."
            },
            "mime_type": {
              "description": "The document MIME type. It can be set only if the drive_document_id is set.",
              "type": "string",
              "location": "query"
            }
          },
          "description": "Add a user-upload volume and triggers processing.",
          "parameterOrder": [],
          "httpMethod": "POST",
          "flatPath": "books/v1/cloudloading/addBook",
          "response": {
            "$ref": "BooksCloudloadingResource"
          },
          "id": "books.cloudloading.addBook",
          "path": "books/v1/cloudloading/addBook"
        }
      }
    },
    "volumes": {
      "methods": {
        "list": {
          "id": "books.volumes.list",
          "parameterOrder": [
            "q"
          ],
          "description": "Performs a book search.",
          "parameters": {
            "langRestrict": {
              "type": "string",
              "description": "Restrict results to books with this language code.",
              "location": "query"
            },
            "download": {
              "description": "Restrict to volumes by download availability.",
              "location": "query",
              "type": "string",
              "enumDescriptions": [
                "",
                "All volumes with epub."
              ],
              "enum": [
                "DOWNLOAD_UNDEFINED",
                "EPUB"
              ]
            },
            "partner": {
              "type": "string",
              "location": "query",
              "description": "Restrict and brand results for partner ID."
            },
            "printType": {
              "type": "string",
              "enum": [
                "PRINT_TYPE_UNDEFINED",
                "ALL",
                "BOOKS",
                "MAGAZINES"
              ],
              "enumDescriptions": [
                "",
                "All volume content types.",
                "Just books.",
                "Just magazines."
              ],
              "description": "Restrict to books or magazines.",
              "location": "query"
            },
            "libraryRestrict": {
              "enum": [
                "LIBRARY_RESTRICT_UNDEFINED",
                "my-library",
                "no-restrict"
              ],
              "description": "Restrict search to this user's library.",
              "type": "string",
              "enumDescriptions": [
                "",
                "Restrict to the user's library, any shelf.",
                "Do not restrict based on user's library."
              ],
              "location": "query"
            },
            "filter": {
              "enumDescriptions": [
                "",
                "All Google eBooks.",
                "Google eBook with full volume text viewability.",
                "Public can view entire volume text.",
                "Google eBook with a price.",
                "Public able to see parts of text."
              ],
              "description": "Filter search results.",
              "enum": [
                "FILTER_UNDEFINED",
                "ebooks",
                "free-ebooks",
                "full",
                "paid-ebooks",
                "partial"
              ],
              "location": "query",
              "type": "string"
            },
            "startIndex": {
              "minimum": "0",
              "location": "query",
              "type": "integer",
              "format": "uint32",
              "description": "Index of the first result to return (starts at 0)"
            },
            "q": {
              "location": "query",
              "required": true,
              "type": "string",
              "description": "Full-text search query string."
            },
            "orderBy": {
              "type": "string",
              "enumDescriptions": [
                "",
                "Most recently published.",
                "Relevance to search terms."
              ],
              "enum": [
                "ORDER_BY_UNDEFINED",
                "newest",
                "relevance"
              ],
              "location": "query",
              "description": "Sort search results."
            },
            "maxResults": {
              "maximum": "40",
              "format": "uint32",
              "type": "integer",
              "minimum": "0",
              "description": "Maximum number of results to return.",
              "location": "query"
            },
            "maxAllowedMaturityRating": {
              "type": "string",
              "description": "The maximum allowed maturity rating of returned recommendations. Books with a higher maturity rating are filtered out.",
              "enum": [
                "MAX_ALLOWED_MATURITY_RATING_UNDEFINED",
                "MATURE",
                "not-mature"
              ],
              "enumDescriptions": [
                "",
                "Show books which are rated mature or lower.",
                "Show books which are rated not mature."
              ],
              "location": "query"
            },
            "source": {
              "location": "query",
              "type": "string",
              "description": "String to identify the originator of this request."
            },
            "projection": {
              "description": "Restrict information returned to a set of selected fields.",
              "enumDescriptions": [
                "",
                "Includes all volume data.",
                "Includes a subset of fields in volumeInfo and accessInfo."
              ],
              "location": "query",
              "enum": [
                "PROJECTION_UNDEFINED",
                "FULL",
                "LITE"
              ],
              "type": "string"
            },
            "showPreorders": {
              "location": "query",
              "description": "Set to true to show books available for preorder. Defaults to false.",
              "type": "boolean"
            }
          },
          "flatPath": "books/v1/volumes",
          "path": "books/v1/volumes",
          "response": {
            "$ref": "Volumes"
          },
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ]
        },
        "get": {
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "flatPath": "books/v1/volumes/{volumeId}",
          "description": "Gets volume information for a single volume.",
          "parameterOrder": [
            "volumeId"
          ],
          "id": "books.volumes.get",
          "path": "books/v1/volumes/{volumeId}",
          "response": {
            "$ref": "Volume"
          },
          "httpMethod": "GET",
          "parameters": {
            "includeNonComicsSeries": {
              "type": "boolean",
              "description": "Set to true to include non-comics series. Defaults to false.",
              "location": "query"
            },
            "user_library_consistent_read": {
              "location": "query",
              "type": "boolean"
            },
            "country": {
              "location": "query",
              "description": "ISO-3166-1 code to override the IP-based location.",
              "type": "string"
            },
            "volumeId": {
              "location": "path",
              "type": "string",
              "description": "ID of volume to retrieve.",
              "required": true
            },
            "projection": {
              "location": "query",
              "enum": [
                "PROJECTION_UNDEFINED",
                "FULL",
                "LITE"
              ],
              "type": "string",
              "description": "Restrict information returned to a set of selected fields.",
              "enumDescriptions": [
                "",
                "Includes all volume data.",
                "Includes a subset of fields in volumeInfo and accessInfo."
              ]
            },
            "source": {
              "location": "query",
              "description": "string to identify the originator of this request.",
              "type": "string"
            },
            "partner": {
              "description": "Brand results for partner ID.",
              "location": "query",
              "type": "string"
            }
          }
        }
      },
      "resources": {
        "recommended": {
          "methods": {
            "list": {
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "flatPath": "books/v1/volumes/recommended",
              "parameterOrder": [],
              "path": "books/v1/volumes/recommended",
              "description": "Return a list of recommended books for the current user.",
              "httpMethod": "GET",
              "parameters": {
                "source": {
                  "description": "String to identify the originator of this request.",
                  "type": "string",
                  "location": "query"
                },
                "locale": {
                  "description": "ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'. Used for generating recommendations.",
                  "type": "string",
                  "location": "query"
                },
                "maxAllowedMaturityRating": {
                  "location": "query",
                  "enum": [
                    "MAX_ALLOWED_MATURITY_RATING_UNDEFINED",
                    "MATURE",
                    "not-mature"
                  ],
                  "description": "The maximum allowed maturity rating of returned recommendations. Books with a higher maturity rating are filtered out.",
                  "type": "string",
                  "enumDescriptions": [
                    "",
                    "Show books which are rated mature or lower.",
                    "Show books which are rated not mature."
                  ]
                }
              },
              "id": "books.volumes.recommended.list",
              "response": {
                "$ref": "Volumes"
              }
            },
            "rate": {
              "path": "books/v1/volumes/recommended/rate",
              "parameterOrder": [
                "rating",
                "volumeId"
              ],
              "description": "Rate a recommended book for the current user.",
              "flatPath": "books/v1/volumes/recommended/rate",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "response": {
                "$ref": "BooksVolumesRecommendedRateResponse"
              },
              "parameters": {
                "volumeId": {
                  "description": "ID of the source volume.",
                  "type": "string",
                  "location": "query",
                  "required": true
                },
                "rating": {
                  "location": "query",
                  "enumDescriptions": [
                    "",
                    "Rating indicating a dismissal due to ownership.",
                    "Rating indicating a negative dismissal of a volume."
                  ],
                  "description": "Rating to be given to the volume.",
                  "enum": [
                    "RATING_UNDEFINED",
                    "HAVE_IT",
                    "NOT_INTERESTED"
                  ],
                  "type": "string",
                  "required": true
                },
                "locale": {
                  "description": "ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'. Used for generating recommendations.",
                  "type": "string",
                  "location": "query"
                },
                "source": {
                  "location": "query",
                  "type": "string",
                  "description": "String to identify the originator of this request."
                }
              },
              "httpMethod": "POST",
              "id": "books.volumes.recommended.rate"
            }
          }
        },
        "useruploaded": {
          "methods": {
            "list": {
              "parameterOrder": [],
              "path": "books/v1/volumes/useruploaded",
              "httpMethod": "GET",
              "response": {
                "$ref": "Volumes"
              },
              "flatPath": "books/v1/volumes/useruploaded",
              "id": "books.volumes.useruploaded.list",
              "description": "Return a list of books uploaded by the current user.",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "parameters": {
                "maxResults": {
                  "description": "Maximum number of results to return.",
                  "minimum": "0",
                  "type": "integer",
                  "format": "uint32",
                  "maximum": "40",
                  "location": "query"
                },
                "source": {
                  "location": "query",
                  "type": "string",
                  "description": "String to identify the originator of this request."
                },
                "processingState": {
                  "repeated": true,
                  "enum": [
                    "PROCESSING_STATE_UNDEFINED",
                    "COMPLETED_FAILED",
                    "COMPLETED_SUCCESS",
                    "RUNNING"
                  ],
                  "description": "The processing state of the user uploaded volumes to be returned.",
                  "location": "query",
                  "enumDescriptions": [
                    "",
                    "The volume processing hase failed.",
                    "The volume processing was completed.",
                    "The volume processing is not completed."
                  ],
                  "type": "string"
                },
                "volumeId": {
                  "repeated": true,
                  "description": "The ids of the volumes to be returned. If not specified all that match the processingState are returned.",
                  "type": "string",
                  "location": "query"
                },
                "startIndex": {
                  "description": "Index of the first result to return (starts at 0)",
                  "location": "query",
                  "format": "uint32",
                  "type": "integer",
                  "minimum": "0"
                },
                "locale": {
                  "description": "ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'. Used for generating recommendations.",
                  "location": "query",
                  "type": "string"
                }
              }
            }
          }
        },
        "mybooks": {
          "methods": {
            "list": {
              "id": "books.volumes.mybooks.list",
              "parameterOrder": [],
              "parameters": {
                "locale": {
                  "location": "query",
                  "type": "string",
                  "description": "ISO-639-1 language and ISO-3166-1 country code. Ex:'en_US'. Used for generating recommendations."
                },
                "maxResults": {
                  "minimum": "0",
                  "type": "integer",
                  "location": "query",
                  "maximum": "100",
                  "format": "uint32",
                  "description": "Maximum number of results to return."
                },
                "country": {
                  "type": "string",
                  "description": "ISO-3166-1 code to override the IP-based location.",
                  "location": "query"
                },
                "startIndex": {
                  "type": "integer",
                  "format": "uint32",
                  "location": "query",
                  "minimum": "0",
                  "description": "Index of the first result to return (starts at 0)"
                },
                "source": {
                  "location": "query",
                  "type": "string",
                  "description": "String to identify the originator of this request."
                },
                "acquireMethod": {
                  "enum": [
                    "ACQUIRE_METHOD_UNDEFINED",
                    "FAMILY_SHARED",
                    "PREORDERED",
                    "PREVIOUSLY_RENTED",
                    "PUBLIC_DOMAIN",
                    "PURCHASED",
                    "RENTED",
                    "SAMPLE",
                    "UPLOADED"
                  ],
                  "description": "How the book was acquired",
                  "location": "query",
                  "enumDescriptions": [
                    "",
                    "Books acquired via Family Sharing",
                    "Preordered books (not yet available)",
                    "User-rented books past their expiration time",
                    "Public domain books",
                    "Purchased books",
                    "User-rented books",
                    "Sample books",
                    "User uploaded books"
                  ],
                  "type": "string",
                  "repeated": true
                },
                "processingState": {
                  "description": "The processing state of the user uploaded volumes to be returned. Applicable only if the UPLOADED is specified in the acquireMethod.",
                  "enumDescriptions": [
                    "",
                    "The volume processing hase failed.",
                    "The volume processing was completed.",
                    "The volume processing is not completed."
                  ],
                  "enum": [
                    "PROCESSING_STATE_UNDEFINED",
                    "COMPLETED_FAILED",
                    "COMPLETED_SUCCESS",
                    "RUNNING"
                  ],
                  "type": "string",
                  "repeated": true,
                  "location": "query"
                }
              },
              "httpMethod": "GET",
              "flatPath": "books/v1/volumes/mybooks",
              "path": "books/v1/volumes/mybooks",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "description": "Return a list of books in My Library.",
              "response": {
                "$ref": "Volumes"
              }
            }
          }
        },
        "associated": {
          "methods": {
            "list": {
              "response": {
                "$ref": "Volumes"
              },
              "parameterOrder": [
                "volumeId"
              ],
              "description": "Return a list of associated books.",
              "parameters": {
                "volumeId": {
                  "location": "path",
                  "type": "string",
                  "description": "ID of the source volume.",
                  "required": true
                },
                "locale": {
                  "location": "query",
                  "description": "ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'. Used for generating recommendations.",
                  "type": "string"
                },
                "maxAllowedMaturityRating": {
                  "enum": [
                    "MAX_ALLOWED_MATURITY_RATING_UNDEFINED",
                    "MATURE",
                    "not-mature"
                  ],
                  "description": "The maximum allowed maturity rating of returned recommendations. Books with a higher maturity rating are filtered out.",
                  "location": "query",
                  "enumDescriptions": [
                    "",
                    "Show books which are rated mature or lower.",
                    "Show books which are rated not mature."
                  ],
                  "type": "string"
                },
                "source": {
                  "description": "String to identify the originator of this request.",
                  "location": "query",
                  "type": "string"
                },
                "association": {
                  "description": "Association type.",
                  "enum": [
                    "ASSOCIATION_UNDEFINED",
                    "end-of-sample",
                    "end-of-volume",
                    "related-for-play"
                  ],
                  "location": "query",
                  "type": "string",
                  "enumDescriptions": [
                    "",
                    "Recommendations for display end-of-sample.",
                    "Recommendations for display end-of-volume.",
                    "Related volumes for Play Store."
                  ]
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "path": "books/v1/volumes/{volumeId}/associated",
              "id": "books.volumes.associated.list",
              "httpMethod": "GET",
              "flatPath": "books/v1/volumes/{volumeId}/associated"
            }
          }
        }
      }
    },
    "promooffer": {
      "methods": {
        "accept": {
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "id": "books.promooffer.accept",
          "description": "Accepts the promo offer.",
          "path": "books/v1/promooffer/accept",
          "parameters": {
            "manufacturer": {
              "type": "string",
              "description": "device manufacturer",
              "location": "query"
            },
            "product": {
              "location": "query",
              "type": "string",
              "description": "device product"
            },
            "offerId": {
              "location": "query",
              "type": "string"
            },
            "model": {
              "type": "string",
              "description": "device model",
              "location": "query"
            },
            "androidId": {
              "location": "query",
              "type": "string",
              "description": "device android_id"
            },
            "volumeId": {
              "description": "Volume id to exercise the offer",
              "location": "query",
              "type": "string"
            },
            "serial": {
              "description": "device serial",
              "location": "query",
              "type": "string"
            },
            "device": {
              "type": "string",
              "location": "query",
              "description": "device device"
            }
          },
          "httpMethod": "POST",
          "parameterOrder": [],
          "flatPath": "books/v1/promooffer/accept",
          "response": {
            "$ref": "Empty"
          }
        },
        "dismiss": {
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "path": "books/v1/promooffer/dismiss",
          "description": "Marks the promo offer as dismissed.",
          "response": {
            "$ref": "Empty"
          },
          "parameters": {
            "offerId": {
              "location": "query",
              "description": "Offer to dimiss",
              "type": "string"
            },
            "model": {
              "type": "string",
              "location": "query",
              "description": "device model"
            },
            "manufacturer": {
              "location": "query",
              "type": "string",
              "description": "device manufacturer"
            },
            "androidId": {
              "description": "device android_id",
              "location": "query",
              "type": "string"
            },
            "product": {
              "type": "string",
              "location": "query",
              "description": "device product"
            },
            "serial": {
              "description": "device serial",
              "type": "string",
              "location": "query"
            },
            "device": {
              "location": "query",
              "type": "string",
              "description": "device device"
            }
          },
          "flatPath": "books/v1/promooffer/dismiss",
          "parameterOrder": [],
          "id": "books.promooffer.dismiss",
          "httpMethod": "POST"
        },
        "get": {
          "flatPath": "books/v1/promooffer/get",
          "description": "Returns a list of promo offers available to the user",
          "id": "books.promooffer.get",
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "path": "books/v1/promooffer/get",
          "parameterOrder": [],
          "parameters": {
            "manufacturer": {
              "description": "device manufacturer",
              "location": "query",
              "type": "string"
            },
            "model": {
              "description": "device model",
              "type": "string",
              "location": "query"
            },
            "device": {
              "description": "device device",
              "location": "query",
              "type": "string"
            },
            "androidId": {
              "location": "query",
              "description": "device android_id",
              "type": "string"
            },
            "serial": {
              "description": "device serial",
              "type": "string",
              "location": "query"
            },
            "product": {
              "location": "query",
              "description": "device product",
              "type": "string"
            }
          },
          "response": {
            "$ref": "Offers"
          }
        }
      }
    },
    "layers": {
      "methods": {
        "list": {
          "flatPath": "books/v1/volumes/{volumeId}/layersummary",
          "parameterOrder": [
            "volumeId"
          ],
          "parameters": {
            "volumeId": {
              "required": true,
              "location": "path",
              "description": "The volume to retrieve layers for.",
              "type": "string"
            },
            "pageToken": {
              "description": "The value of the nextToken from the previous page.",
              "location": "query",
              "type": "string"
            },
            "maxResults": {
              "location": "query",
              "maximum": "200",
              "type": "integer",
              "description": "Maximum number of results to return",
              "minimum": "0",
              "format": "uint32"
            },
            "contentVersion": {
              "description": "The content version for the requested volume.",
              "type": "string",
              "location": "query"
            },
            "source": {
              "description": "String to identify the originator of this request.",
              "location": "query",
              "type": "string"
            }
          },
          "description": "List the layer summaries for a volume.",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "httpMethod": "GET",
          "response": {
            "$ref": "Layersummaries"
          },
          "path": "books/v1/volumes/{volumeId}/layersummary",
          "id": "books.layers.list"
        },
        "get": {
          "description": "Gets the layer summary for a volume.",
          "parameterOrder": [
            "volumeId",
            "summaryId"
          ],
          "flatPath": "books/v1/volumes/{volumeId}/layersummary/{summaryId}",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "parameters": {
            "source": {
              "location": "query",
              "description": "String to identify the originator of this request.",
              "type": "string"
            },
            "contentVersion": {
              "description": "The content version for the requested volume.",
              "location": "query",
              "type": "string"
            },
            "summaryId": {
              "description": "The ID for the layer to get the summary for.",
              "required": true,
              "type": "string",
              "location": "path"
            },
            "volumeId": {
              "required": true,
              "description": "The volume to retrieve layers for.",
              "location": "path",
              "type": "string"
            }
          },
          "path": "books/v1/volumes/{volumeId}/layersummary/{summaryId}",
          "httpMethod": "GET",
          "response": {
            "$ref": "Layersummary"
          },
          "id": "books.layers.get"
        }
      },
      "resources": {
        "volumeAnnotations": {
          "methods": {
            "get": {
              "path": "books/v1/volumes/{volumeId}/layers/{layerId}/annotations/{annotationId}",
              "flatPath": "books/v1/volumes/{volumeId}/layers/{layerId}/annotations/{annotationId}",
              "id": "books.layers.volumeAnnotations.get",
              "response": {
                "$ref": "Volumeannotation"
              },
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "httpMethod": "GET",
              "parameters": {
                "layerId": {
                  "description": "The ID for the layer to get the annotations.",
                  "location": "path",
                  "type": "string",
                  "required": true
                },
                "annotationId": {
                  "required": true,
                  "description": "The ID of the volume annotation to retrieve.",
                  "location": "path",
                  "type": "string"
                },
                "source": {
                  "type": "string",
                  "description": "String to identify the originator of this request.",
                  "location": "query"
                },
                "volumeId": {
                  "type": "string",
                  "required": true,
                  "description": "The volume to retrieve annotations for.",
                  "location": "path"
                },
                "locale": {
                  "location": "query",
                  "description": "The locale information for the data. ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'.",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "volumeId",
                "layerId",
                "annotationId"
              ],
              "description": "Gets the volume annotation."
            },
            "list": {
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "description": "Gets the volume annotations for a volume and layer.",
              "flatPath": "books/v1/volumes/{volumeId}/layers/{layerId}",
              "response": {
                "$ref": "Volumeannotations"
              },
              "id": "books.layers.volumeAnnotations.list",
              "parameters": {
                "updatedMax": {
                  "type": "string",
                  "description": "RFC 3339 timestamp to restrict to items updated prior to this timestamp (exclusive).",
                  "location": "query"
                },
                "showDeleted": {
                  "type": "boolean",
                  "location": "query",
                  "description": "Set to true to return deleted annotations. updatedMin must be in the request to use this. Defaults to false."
                },
                "endPosition": {
                  "location": "query",
                  "type": "string",
                  "description": "The end position to end retrieving data from."
                },
                "startOffset": {
                  "type": "string",
                  "description": "The start offset to start retrieving data from.",
                  "location": "query"
                },
                "startPosition": {
                  "location": "query",
                  "description": "The start position to start retrieving data from.",
                  "type": "string"
                },
                "endOffset": {
                  "location": "query",
                  "type": "string",
                  "description": "The end offset to end retrieving data from."
                },
                "source": {
                  "location": "query",
                  "description": "String to identify the originator of this request.",
                  "type": "string"
                },
                "layerId": {
                  "required": true,
                  "location": "path",
                  "type": "string",
                  "description": "The ID for the layer to get the annotations."
                },
                "updatedMin": {
                  "type": "string",
                  "location": "query",
                  "description": "RFC 3339 timestamp to restrict to items updated since this timestamp (inclusive)."
                },
                "locale": {
                  "type": "string",
                  "description": "The locale information for the data. ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'.",
                  "location": "query"
                },
                "volumeId": {
                  "type": "string",
                  "location": "path",
                  "required": true,
                  "description": "The volume to retrieve annotations for."
                },
                "contentVersion": {
                  "location": "query",
                  "description": "The content version for the requested volume.",
                  "type": "string",
                  "required": true
                },
                "pageToken": {
                  "description": "The value of the nextToken from the previous page.",
                  "type": "string",
                  "location": "query"
                },
                "volumeAnnotationsVersion": {
                  "location": "query",
                  "type": "string",
                  "description": "The version of the volume annotations that you are requesting."
                },
                "maxResults": {
                  "location": "query",
                  "type": "integer",
                  "maximum": "200",
                  "format": "uint32",
                  "minimum": "0",
                  "description": "Maximum number of results to return"
                }
              },
              "parameterOrder": [
                "volumeId",
                "layerId",
                "contentVersion"
              ],
              "path": "books/v1/volumes/{volumeId}/layers/{layerId}",
              "httpMethod": "GET"
            }
          }
        },
        "annotationData": {
          "methods": {
            "get": {
              "response": {
                "$ref": "DictionaryAnnotationdata"
              },
              "httpMethod": "GET",
              "flatPath": "books/v1/volumes/{volumeId}/layers/{layerId}/data/{annotationDataId}",
              "id": "books.layers.annotationData.get",
              "path": "books/v1/volumes/{volumeId}/layers/{layerId}/data/{annotationDataId}",
              "description": "Gets the annotation data.",
              "parameterOrder": [
                "volumeId",
                "layerId",
                "annotationDataId",
                "contentVersion"
              ],
              "parameters": {
                "h": {
                  "location": "query",
                  "description": "The requested pixel height for any images. If height is provided width must also be provided.",
                  "format": "int32",
                  "type": "integer"
                },
                "locale": {
                  "type": "string",
                  "description": "The locale information for the data. ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'.",
                  "location": "query"
                },
                "annotationDataId": {
                  "type": "string",
                  "required": true,
                  "location": "path",
                  "description": "The ID of the annotation data to retrieve."
                },
                "allowWebDefinitions": {
                  "type": "boolean",
                  "location": "query",
                  "description": "For the dictionary layer. Whether or not to allow web definitions."
                },
                "scale": {
                  "location": "query",
                  "minimum": "0",
                  "description": "The requested scale for the image.",
                  "format": "int32",
                  "type": "integer"
                },
                "contentVersion": {
                  "description": "The content version for the volume you are trying to retrieve.",
                  "type": "string",
                  "location": "query",
                  "required": true
                },
                "w": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The requested pixel width for any images. If width is provided height must also be provided.",
                  "location": "query"
                },
                "volumeId": {
                  "location": "path",
                  "description": "The volume to retrieve annotations for.",
                  "type": "string",
                  "required": true
                },
                "source": {
                  "type": "string",
                  "location": "query",
                  "description": "String to identify the originator of this request."
                },
                "layerId": {
                  "type": "string",
                  "description": "The ID for the layer to get the annotations.",
                  "location": "path",
                  "required": true
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ]
            },
            "list": {
              "flatPath": "books/v1/volumes/{volumeId}/layers/{layerId}/data",
              "response": {
                "$ref": "Annotationsdata"
              },
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "parameters": {
                "updatedMax": {
                  "type": "string",
                  "location": "query",
                  "description": "RFC 3339 timestamp to restrict to items updated prior to this timestamp (exclusive)."
                },
                "h": {
                  "description": "The requested pixel height for any images. If height is provided width must also be provided.",
                  "type": "integer",
                  "location": "query",
                  "format": "int32"
                },
                "volumeId": {
                  "description": "The volume to retrieve annotation data for.",
                  "type": "string",
                  "required": true,
                  "location": "path"
                },
                "contentVersion": {
                  "description": "The content version for the requested volume.",
                  "location": "query",
                  "required": true,
                  "type": "string"
                },
                "w": {
                  "format": "int32",
                  "location": "query",
                  "description": "The requested pixel width for any images. If width is provided height must also be provided.",
                  "type": "integer"
                },
                "locale": {
                  "description": "The locale information for the data. ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'.",
                  "type": "string",
                  "location": "query"
                },
                "annotationDataId": {
                  "description": "The list of Annotation Data Ids to retrieve. Pagination is ignored if this is set.",
                  "repeated": true,
                  "type": "string",
                  "location": "query"
                },
                "source": {
                  "type": "string",
                  "location": "query",
                  "description": "String to identify the originator of this request."
                },
                "layerId": {
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "description": "The ID for the layer to get the annotation data."
                },
                "scale": {
                  "location": "query",
                  "format": "int32",
                  "minimum": "0",
                  "description": "The requested scale for the image.",
                  "type": "integer"
                },
                "updatedMin": {
                  "description": "RFC 3339 timestamp to restrict to items updated since this timestamp (inclusive).",
                  "type": "string",
                  "location": "query"
                },
                "maxResults": {
                  "maximum": "200",
                  "type": "integer",
                  "minimum": "0",
                  "format": "uint32",
                  "description": "Maximum number of results to return",
                  "location": "query"
                },
                "pageToken": {
                  "description": "The value of the nextToken from the previous page.",
                  "type": "string",
                  "location": "query"
                }
              },
              "parameterOrder": [
                "volumeId",
                "layerId",
                "contentVersion"
              ],
              "path": "books/v1/volumes/{volumeId}/layers/{layerId}/data",
              "httpMethod": "GET",
              "description": "Gets the annotation data for a volume and layer.",
              "id": "books.layers.annotationData.list"
            }
          }
        }
      }
    }
  },
  "id": "books:v1",
  "ownerDomain": "google.com",
  "schemas": {
    "Series": {
      "id": "Series",
      "type": "object",
      "properties": {
        "series": {
          "type": "array",
          "items": {
            "properties": {
              "imageUrl": {
                "type": "string"
              },
              "eligibleForSubscription": {
                "type": "boolean"
              },
              "isComplete": {
                "type": "boolean"
              },
              "title": {
                "type": "string"
              },
              "seriesId": {
                "type": "string"
              },
              "seriesFormatType": {
                "type": "string"
              },
              "subscriptionId": {
                "type": "string"
              },
              "seriesType": {
                "type": "string"
              },
              "bannerImageUrl": {
                "type": "string"
              },
              "seriesSubscriptionReleaseInfo": {
                "properties": {
                  "cancelTime": {
                    "type": "string"
                  },
                  "nextReleaseInfo": {
                    "type": "object",
                    "properties": {
                      "currencyCode": {
                        "type": "string"
                      },
                      "amountInMicros": {
                        "type": "number",
                        "format": "double"
                      },
                      "releaseNumber": {
                        "type": "string"
                      },
                      "releaseTime": {
                        "type": "string"
                      }
                    }
                  },
                  "seriesSubscriptionType": {
                    "type": "string"
                  },
                  "currentReleaseInfo": {
                    "properties": {
                      "releaseTime": {
                        "type": "string"
                      },
                      "releaseNumber": {
                        "type": "string"
                      },
                      "amountInMicros": {
                        "format": "double",
                        "type": "number"
                      },
                      "currencyCode": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "kind": {
          "type": "string",
          "description": "Resource type."
        }
      }
    },
    "Bookshelf": {
      "type": "object",
      "properties": {
        "created": {
          "type": "string",
          "description": "Created time for this bookshelf (formatted UTC timestamp with millisecond resolution)."
        },
        "volumeCount": {
          "type": "integer",
          "description": "Number of volumes in this bookshelf.",
          "format": "int32"
        },
        "id": {
          "description": "Id of this bookshelf, only unique by user.",
          "type": "integer",
          "format": "int32"
        },
        "volumesLastUpdated": {
          "type": "string",
          "description": "Last time a volume was added or removed from this bookshelf (formatted UTC timestamp with millisecond resolution)."
        },
        "updated": {
          "description": "Last modified time of this bookshelf (formatted UTC timestamp with millisecond resolution).",
          "type": "string"
        },
        "description": {
          "description": "Description of this bookshelf.",
          "type": "string"
        },
        "kind": {
          "type": "string",
          "description": "Resource type for bookshelf metadata."
        },
        "title": {
          "description": "Title of this bookshelf.",
          "type": "string"
        },
        "selfLink": {
          "description": "URL to this resource.",
          "type": "string"
        },
        "access": {
          "description": "Whether this bookshelf is PUBLIC or PRIVATE.",
          "type": "string"
        }
      },
      "id": "Bookshelf"
    },
    "Annotations": {
      "id": "Annotations",
      "type": "object",
      "properties": {
        "totalItems": {
          "description": "Total number of annotations found. This may be greater than the number of notes returned in this response if results have been paginated.",
          "format": "int32",
          "type": "integer"
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token to pass in for pagination for the next page. This will not be present if this request does not have more results."
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "Annotation"
          },
          "description": "A list of annotations."
        },
        "kind": {
          "type": "string",
          "description": "Resource type."
        }
      }
    },
    "Seriesmembership": {
      "properties": {
        "nextPageToken": {
          "type": "string"
        },
        "kind": {
          "description": "Resorce type.",
          "type": "string"
        },
        "member": {
          "items": {
            "$ref": "Volume"
          },
          "type": "array"
        }
      },
      "type": "object",
      "id": "Seriesmembership"
    },
    "Review": {
      "properties": {
        "source": {
          "type": "object",
          "description": "Information regarding the source of this review, when the review is not from a Google Books user.",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL of the source of the review."
            },
            "extraDescription": {
              "type": "string",
              "description": "Extra text about the source of the review."
            },
            "description": {
              "type": "string",
              "description": "Name of the source."
            }
          }
        },
        "volumeId": {
          "description": "Volume that this review is for.",
          "type": "string"
        },
        "date": {
          "description": "Date of this review.",
          "type": "string"
        },
        "content": {
          "description": "Review text.",
          "type": "string"
        },
        "type": {
          "type": "string",
          "description": "Source type for this review. Possible values are EDITORIAL, WEB_USER or GOOGLE_USER."
        },
        "fullTextUrl": {
          "description": "URL for the full review text, for reviews gathered from the web.",
          "type": "string"
        },
        "author": {
          "type": "object",
          "properties": {
            "displayName": {
              "description": "Name of this person.",
              "type": "string"
            }
          },
          "description": "Author of this review."
        },
        "title": {
          "description": "Title for this review.",
          "type": "string"
        },
        "rating": {
          "description": "Star rating for this review. Possible values are ONE, TWO, THREE, FOUR, FIVE or NOT_RATED.",
          "type": "string"
        },
        "kind": {
          "description": "Resource type for a review.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "Review"
    },
    "Dictlayerdata": {
      "id": "Dictlayerdata",
      "type": "object",
      "properties": {
        "common": {
          "type": "object",
          "properties": {
            "title": {
              "type": "string",
              "description": "The display title and localized canonical name to use when searching for this entity on Google search."
            }
          }
        },
        "kind": {
          "type": "string"
        },
        "dict": {
          "properties": {
            "source": {
              "properties": {
                "url": {
                  "type": "string"
                },
                "attribution": {
                  "type": "string"
                }
              },
              "description": "The source, url and attribution for this dictionary data.",
              "type": "object"
            },
            "words": {
              "items": {
                "properties": {
                  "examples": {
                    "type": "array",
                    "items": {
                      "properties": {
                        "text": {
                          "type": "string"
                        },
                        "source": {
                          "type": "object",
                          "properties": {
                            "attribution": {
                              "type": "string"
                            },
                            "url": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "type": "object"
                    }
                  },
                  "derivatives": {
                    "type": "array",
                    "items": {
                      "properties": {
                        "text": {
                          "type": "string"
                        },
                        "source": {
                          "properties": {
                            "url": {
                              "type": "string"
                            },
                            "attribution": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "source": {
                    "type": "object",
                    "description": "The words with different meanings but not related words, e.g. \"go\" (game) and \"go\" (verb).",
                    "properties": {
                      "attribution": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    }
                  },
                  "senses": {
                    "items": {
                      "properties": {
                        "partOfSpeech": {
                          "type": "string"
                        },
                        "syllabification": {
                          "type": "string"
                        },
                        "pronunciation": {
                          "type": "string"
                        },
                        "pronunciationUrl": {
                          "type": "string"
                        },
                        "source": {
                          "properties": {
                            "attribution": {
                              "type": "string"
                            },
                            "url": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "definitions": {
                          "items": {
                            "type": "object",
                            "properties": {
                              "examples": {
                                "type": "array",
                                "items": {
                                  "properties": {
                                    "source": {
                                      "properties": {
                                        "attribution": {
                                          "type": "string"
                                        },
                                        "url": {
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "text": {
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "definition": {
                                "type": "string"
                              }
                            }
                          },
                          "type": "array"
                        },
                        "synonyms": {
                          "type": "array",
                          "items": {
                            "properties": {
                              "text": {
                                "type": "string"
                              },
                              "source": {
                                "properties": {
                                  "url": {
                                    "type": "string"
                                  },
                                  "attribution": {
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "conjugations": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string"
                              },
                              "value": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              },
              "type": "array"
            }
          },
          "type": "object"
        }
      }
    },
    "Geolayerdata": {
      "properties": {
        "geo": {
          "properties": {
            "viewport": {
              "description": "The viewport for showing this location. This is a latitude, longitude rectangle.",
              "properties": {
                "lo": {
                  "type": "object",
                  "properties": {
                    "longitude": {
                      "type": "number",
                      "format": "double"
                    },
                    "latitude": {
                      "type": "number",
                      "format": "double"
                    }
                  }
                },
                "hi": {
                  "properties": {
                    "longitude": {
                      "type": "number",
                      "format": "double"
                    },
                    "latitude": {
                      "type": "number",
                      "format": "double"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "longitude": {
              "format": "double",
              "description": "The longitude of the location.",
              "type": "number"
            },
            "zoom": {
              "format": "int32",
              "type": "integer",
              "description": "The Zoom level to use for the map. Zoom levels between 0 (the lowest zoom level, in which the entire world can be seen on one map) to 21+ (down to individual buildings). See: https: //developers.google.com/maps/documentation/staticmaps/#Zoomlevels"
            },
            "countryCode": {
              "description": "The country code of the location.",
              "type": "string"
            },
            "cachePolicy": {
              "description": "The cache policy active for this data. EX: UNRESTRICTED, RESTRICTED, NEVER",
              "type": "string"
            },
            "boundary": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The boundary of the location as a set of loops containing pairs of latitude, longitude coordinates."
            },
            "latitude": {
              "type": "number",
              "format": "double",
              "description": "The latitude of the location."
            },
            "mapType": {
              "type": "string",
              "description": "The type of map that should be used for this location. EX: HYBRID, ROADMAP, SATELLITE, TERRAIN"
            }
          },
          "type": "object"
        },
        "common": {
          "properties": {
            "previewImageUrl": {
              "type": "string",
              "description": "The URL for the preview image information."
            },
            "title": {
              "type": "string",
              "description": "The display title and localized canonical name to use when searching for this entity on Google search."
            },
            "snippetUrl": {
              "type": "string",
              "description": "The URL for information for this location. Ex: wikipedia link."
            },
            "lang": {
              "description": "The language of the information url and description.",
              "type": "string"
            },
            "snippet": {
              "description": "The description for this location.",
              "type": "string"
            }
          },
          "type": "object"
        },
        "kind": {
          "type": "string"
        }
      },
      "id": "Geolayerdata",
      "type": "object"
    },
    "Layersummary": {
      "type": "object",
      "id": "Layersummary",
      "properties": {
        "id": {
          "description": "Unique id of this layer summary.",
          "type": "string"
        },
        "volumeId": {
          "description": "The volume id this resource is for.",
          "type": "string"
        },
        "kind": {
          "description": "Resource Type",
          "type": "string"
        },
        "annotationsLink": {
          "description": "The link to get the annotations for this layer.",
          "type": "string"
        },
        "annotationCount": {
          "type": "integer",
          "format": "int32",
          "description": "The number of annotations for this layer."
        },
        "layerId": {
          "description": "The layer id for this summary.",
          "type": "string"
        },
        "dataCount": {
          "type": "integer",
          "format": "int32",
          "description": "The number of data items for this layer."
        },
        "updated": {
          "type": "string",
          "description": "Timestamp for the last time an item in this layer was updated. (RFC 3339 UTC date-time format)."
        },
        "selfLink": {
          "type": "string",
          "description": "URL to this resource."
        },
        "contentVersion": {
          "type": "string",
          "description": "The content version this resource is for."
        },
        "annotationsDataLink": {
          "description": "Link to get data for this annotation.",
          "type": "string"
        },
        "annotationTypes": {
          "description": "The list of annotation types contained for this layer.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "volumeAnnotationsVersion": {
          "type": "string",
          "description": "The current version of this layer's volume annotations. Note that this version applies only to the data in the books.layers.volumeAnnotations.* responses. The actual annotation data is versioned separately."
        }
      }
    },
    "Volumeannotations": {
      "id": "Volumeannotations",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Resource type"
        },
        "items": {
          "items": {
            "$ref": "Volumeannotation"
          },
          "description": "A list of volume annotations.",
          "type": "array"
        },
        "version": {
          "description": "The version string for all of the volume annotations in this layer (not just the ones in this response). Note: the version string doesn't apply to the annotation data, just the information in this response (e.g. the location of annotations in the book).",
          "type": "string"
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token to pass in for pagination for the next page. This will not be present if this request does not have more results."
        },
        "totalItems": {
          "format": "int32",
          "description": "The total number of volume annotations found.",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "ReadingPosition": {
      "id": "ReadingPosition",
      "type": "object",
      "properties": {
        "updated": {
          "type": "string",
          "description": "Timestamp when this reading position was last updated (formatted UTC timestamp with millisecond resolution)."
        },
        "volumeId": {
          "description": "Volume id associated with this reading position.",
          "type": "string"
        },
        "pdfPosition": {
          "type": "string",
          "description": "Position in a PDF file."
        },
        "gbImagePosition": {
          "type": "string",
          "description": "Position in a volume for image-based content."
        },
        "kind": {
          "description": "Resource type for a reading position.",
          "type": "string"
        },
        "gbTextPosition": {
          "description": "Position in a volume for text-based content.",
          "type": "string"
        },
        "epubCfiPosition": {
          "description": "Position in an EPUB as a CFI.",
          "type": "string"
        }
      }
    },
    "Offers": {
      "type": "object",
      "id": "Offers",
      "properties": {
        "items": {
          "items": {
            "type": "object",
            "properties": {
              "artUrl": {
                "type": "string"
              },
              "id": {
                "type": "string"
              },
              "items": {
                "items": {
                  "properties": {
                    "volumeId": {
                      "type": "string"
                    },
                    "canonicalVolumeLink": {
                      "type": "string"
                    },
                    "author": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "coverUrl": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "gservicesKey": {
                "type": "string"
              }
            }
          },
          "type": "array",
          "description": "A list of offers."
        },
        "kind": {
          "type": "string",
          "description": "Resource type."
        }
      }
    },
    "DownloadAccesses": {
      "id": "DownloadAccesses",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Resource type."
        },
        "downloadAccessList": {
          "items": {
            "$ref": "DownloadAccessRestriction"
          },
          "type": "array",
          "description": "A list of download access responses."
        }
      },
      "type": "object"
    },
    "Empty": {
      "id": "Empty",
      "type": "object",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "properties": {}
    },
    "AnnotationsSummary": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string"
        },
        "layers": {
          "items": {
            "properties": {
              "updated": {
                "type": "string"
              },
              "limitType": {
                "type": "string"
              },
              "remainingCharacterCount": {
                "format": "int32",
                "type": "integer"
              },
              "allowedCharacterCount": {
                "format": "int32",
                "type": "integer"
              },
              "layerId": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "id": "AnnotationsSummary"
    },
    "BooksVolumesRecommendedRateResponse": {
      "type": "object",
      "properties": {
        "consistency_token": {
          "type": "string"
        }
      },
      "id": "BooksVolumesRecommendedRateResponse"
    },
    "FamilyInfo": {
      "type": "object",
      "properties": {
        "membership": {
          "properties": {
            "ageGroup": {
              "type": "string",
              "description": "The age group of the user."
            },
            "isInFamily": {
              "type": "boolean"
            },
            "acquirePermission": {
              "description": "Restrictions on user buying and acquiring content.",
              "type": "string"
            },
            "allowedMaturityRating": {
              "description": "The maximum allowed maturity rating for the user.",
              "type": "string"
            },
            "role": {
              "type": "string",
              "description": "The role of the user in the family."
            }
          },
          "type": "object",
          "description": "Family membership info of the user that made the request."
        },
        "kind": {
          "type": "string",
          "description": "Resource type."
        }
      },
      "id": "FamilyInfo"
    },
    "GeoAnnotationdata": {
      "id": "GeoAnnotationdata",
      "type": "object",
      "properties": {
        "selfLink": {
          "type": "string",
          "description": "URL for this resource. *"
        },
        "kind": {
          "description": "Resource Type",
          "type": "string"
        },
        "encodedData": {
          "type": "string",
          "description": "Base64 encoded data for this annotation data.",
          "format": "byte"
        },
        "annotationType": {
          "type": "string",
          "description": "The type of annotation this data is for."
        },
        "updated": {
          "type": "string",
          "description": "Timestamp for the last time this data was updated. (RFC 3339 UTC date-time format)."
        },
        "data": {
          "description": "JSON encoded data for this geo annotation data. Emitted with name 'data' in JSON output. Either this or dict_data will be populated.",
          "$ref": "Geolayerdata"
        },
        "layerId": {
          "description": "The Layer id for this data. *",
          "type": "string"
        },
        "id": {
          "description": "Unique id for this annotation data.",
          "type": "string"
        },
        "volumeId": {
          "type": "string",
          "description": "The volume id for this data. *"
        }
      }
    },
    "DownloadAccessRestriction": {
      "id": "DownloadAccessRestriction",
      "properties": {
        "signature": {
          "description": "Response signature.",
          "type": "string"
        },
        "downloadsAcquired": {
          "description": "If restricted, the number of content download licenses already acquired (including the requesting client, if licensed).",
          "format": "int32",
          "type": "integer"
        },
        "nonce": {
          "type": "string",
          "description": "Client nonce for verification. Download access and client-validation only."
        },
        "reasonCode": {
          "type": "string",
          "description": "Error/warning reason code. Additional codes may be added in the future. 0 OK 100 ACCESS_DENIED_PUBLISHER_LIMIT 101 ACCESS_DENIED_LIMIT 200 WARNING_USED_LAST_ACCESS"
        },
        "message": {
          "description": "Error/warning message.",
          "type": "string"
        },
        "maxDownloadDevices": {
          "type": "integer",
          "format": "int32",
          "description": "If restricted, the maximum number of content download licenses for this volume."
        },
        "kind": {
          "description": "Resource type.",
          "type": "string"
        },
        "restricted": {
          "description": "Whether this volume has any download access restrictions.",
          "type": "boolean"
        },
        "source": {
          "description": "Client app identifier for verification. Download access and client-validation only.",
          "type": "string"
        },
        "justAcquired": {
          "type": "boolean",
          "description": "If deviceAllowed, whether access was just acquired with this request."
        },
        "volumeId": {
          "type": "string",
          "description": "Identifies the volume for which this entry applies."
        },
        "deviceAllowed": {
          "description": "If restricted, whether access is granted for this (user, device, volume).",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "Volume": {
      "id": "Volume",
      "properties": {
        "searchInfo": {
          "description": "Search result information related to this volume.",
          "properties": {
            "textSnippet": {
              "type": "string",
              "description": "A text snippet containing the search query."
            }
          },
          "type": "object"
        },
        "id": {
          "description": "Unique identifier for a volume. (In LITE projection.)",
          "type": "string"
        },
        "volumeInfo": {
          "type": "object",
          "properties": {
            "description": {
              "description": "A synopsis of the volume. The text of the description is formatted in HTML and includes simple formatting elements, such as b, i, and br tags. (In LITE projection.)",
              "type": "string"
            },
            "maturityRating": {
              "type": "string"
            },
            "publisher": {
              "type": "string",
              "description": "Publisher of this volume. (In LITE projection.)"
            },
            "samplePageCount": {
              "description": "Total number of sample pages as per publisher metadata.",
              "type": "integer",
              "format": "int32"
            },
            "contentVersion": {
              "description": "An identifier for the version of the volume content (text & images). (In LITE projection)",
              "type": "string"
            },
            "readingModes": {
              "properties": {
                "text": {
                  "type": "boolean"
                },
                "image": {
                  "type": "boolean"
                }
              },
              "description": "The reading modes available for this volume.",
              "type": "object"
            },
            "previewLink": {
              "description": "URL to preview this volume on the Google Books site.",
              "type": "string"
            },
            "title": {
              "type": "string",
              "description": "Volume title. (In LITE projection.)"
            },
            "imageLinks": {
              "properties": {
                "smallThumbnail": {
                  "description": "Image link for small thumbnail size (width of ~80 pixels). (In LITE projection)",
                  "type": "string"
                },
                "medium": {
                  "type": "string",
                  "description": "Image link for medium size (width of ~575 pixels). (In LITE projection)"
                },
                "extraLarge": {
                  "type": "string",
                  "description": "Image link for extra large size (width of ~1280 pixels). (In LITE projection)"
                },
                "thumbnail": {
                  "description": "Image link for thumbnail size (width of ~128 pixels). (In LITE projection)",
                  "type": "string"
                },
                "large": {
                  "type": "string",
                  "description": "Image link for large size (width of ~800 pixels). (In LITE projection)"
                },
                "small": {
                  "type": "string",
                  "description": "Image link for small size (width of ~300 pixels). (In LITE projection)"
                }
              },
              "type": "object",
              "description": "A list of image links for all the sizes that are available. (In LITE projection.)"
            },
            "categories": {
              "description": "A list of subject categories, such as \"Fiction\", \"Suspense\", etc.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "infoLink": {
              "description": "URL to view information about this volume on the Google Books site. (In LITE projection)",
              "type": "string"
            },
            "averageRating": {
              "format": "double",
              "description": "The mean review rating for this volume. (min = 1.0, max = 5.0)",
              "type": "number"
            },
            "comicsContent": {
              "type": "boolean",
              "description": "Whether the volume has comics content."
            },
            "printedPageCount": {
              "description": "Total number of printed pages in generated pdf representation.",
              "format": "int32",
              "type": "integer"
            },
            "language": {
              "description": "Best language for this volume (based on content). It is the two-letter ISO 639-1 code such as 'fr', 'en', etc.",
              "type": "string"
            },
            "authors": {
              "description": "The names of the authors and/or editors for this volume. (In LITE projection)",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "panelizationSummary": {
              "description": "A top-level summary of the panelization info in this volume.",
              "type": "object",
              "properties": {
                "containsEpubBubbles": {
                  "type": "boolean"
                },
                "containsImageBubbles": {
                  "type": "boolean"
                },
                "imageBubbleVersion": {
                  "type": "string"
                },
                "epubBubbleVersion": {
                  "type": "string"
                }
              }
            },
            "ratingsCount": {
              "type": "integer",
              "format": "int32",
              "description": "The number of review ratings for this volume."
            },
            "seriesInfo": {
              "$ref": "Volumeseriesinfo"
            },
            "industryIdentifiers": {
              "items": {
                "type": "object",
                "properties": {
                  "identifier": {
                    "description": "Industry specific volume identifier.",
                    "type": "string"
                  },
                  "type": {
                    "description": "Identifier type. Possible values are ISBN_10, ISBN_13, ISSN and OTHER.",
                    "type": "string"
                  }
                }
              },
              "type": "array",
              "description": "Industry standard identifiers for this volume."
            },
            "publishedDate": {
              "type": "string",
              "description": "Date of publication. (In LITE projection.)"
            },
            "dimensions": {
              "type": "object",
              "properties": {
                "height": {
                  "type": "string",
                  "description": "Height or length of this volume (in cm)."
                },
                "width": {
                  "type": "string",
                  "description": "Width of this volume (in cm)."
                },
                "thickness": {
                  "description": "Thickness of this volume (in cm).",
                  "type": "string"
                }
              },
              "description": "Physical dimensions of this volume."
            },
            "subtitle": {
              "description": "Volume subtitle. (In LITE projection.)",
              "type": "string"
            },
            "printType": {
              "type": "string",
              "description": "Type of publication of this volume. Possible values are BOOK or MAGAZINE."
            },
            "mainCategory": {
              "type": "string",
              "description": "The main category to which this volume belongs. It will be the category from the categories list returned below that has the highest weight."
            },
            "canonicalVolumeLink": {
              "type": "string",
              "description": "Canonical URL for a volume. (In LITE projection.)"
            },
            "allowAnonLogging": {
              "type": "boolean",
              "description": "Whether anonymous logging should be allowed."
            },
            "pageCount": {
              "format": "int32",
              "description": "Total number of pages as per publisher metadata.",
              "type": "integer"
            }
          },
          "description": "General volume information."
        },
        "layerInfo": {
          "description": "What layers exist in this volume and high level information about them.",
          "properties": {
            "layers": {
              "type": "array",
              "items": {
                "properties": {
                  "volumeAnnotationsVersion": {
                    "description": "The current version of this layer's volume annotations. Note that this version applies only to the data in the books.layers.volumeAnnotations.* responses. The actual annotation data is versioned separately.",
                    "type": "string"
                  },
                  "layerId": {
                    "type": "string",
                    "description": "The layer id of this layer (e.g. \"geo\")."
                  }
                },
                "type": "object"
              },
              "description": "A layer should appear here if and only if the layer exists for this book."
            }
          },
          "type": "object"
        },
        "kind": {
          "type": "string",
          "description": "Resource type for a volume. (In LITE projection.)"
        },
        "recommendedInfo": {
          "description": "Recommendation related information for this volume.",
          "type": "object",
          "properties": {
            "explanation": {
              "description": "A text explaining why this volume is recommended.",
              "type": "string"
            }
          }
        },
        "saleInfo": {
          "properties": {
            "onSaleDate": {
              "type": "string",
              "description": "The date on which this book is available for sale."
            },
            "retailPrice": {
              "properties": {
                "amount": {
                  "format": "double",
                  "type": "number",
                  "description": "Amount in the currency listed below. (In LITE projection.)"
                },
                "currencyCode": {
                  "type": "string",
                  "description": "An ISO 4217, three-letter currency code. (In LITE projection.)"
                }
              },
              "type": "object",
              "description": "The actual selling price of the book. This is the same as the suggested retail or list price unless there are offers or discounts on this volume. (In LITE projection.)"
            },
            "buyLink": {
              "description": "URL to purchase this volume on the Google Books site. (In LITE projection)",
              "type": "string"
            },
            "saleability": {
              "type": "string",
              "description": "Whether or not this book is available for sale or offered for free in the Google eBookstore for the country listed above. Possible values are FOR_SALE, FOR_RENTAL_ONLY, FOR_SALE_AND_RENTAL, FREE, NOT_FOR_SALE, or FOR_PREORDER."
            },
            "country": {
              "description": "The two-letter ISO_3166-1 country code for which this sale information is valid. (In LITE projection.)",
              "type": "string"
            },
            "listPrice": {
              "description": "Suggested retail price. (In LITE projection.)",
              "properties": {
                "currencyCode": {
                  "description": "An ISO 4217, three-letter currency code. (In LITE projection.)",
                  "type": "string"
                },
                "amount": {
                  "format": "double",
                  "type": "number",
                  "description": "Amount in the currency listed below. (In LITE projection.)"
                }
              },
              "type": "object"
            },
            "isEbook": {
              "description": "Whether or not this volume is an eBook (can be added to the My eBooks shelf).",
              "type": "boolean"
            },
            "offers": {
              "description": "Offers available for this volume (sales and rentals).",
              "type": "array",
              "items": {
                "properties": {
                  "finskyOfferType": {
                    "format": "int32",
                    "type": "integer",
                    "description": "The finsky offer type (e.g., PURCHASE=0 RENTAL=3)"
                  },
                  "giftable": {
                    "description": "Indicates whether the offer is giftable.",
                    "type": "boolean"
                  },
                  "retailPrice": {
                    "type": "object",
                    "description": "Offer retail (=discounted) price in Micros",
                    "properties": {
                      "currencyCode": {
                        "type": "string"
                      },
                      "amountInMicros": {
                        "format": "double",
                        "type": "number"
                      }
                    }
                  },
                  "rentalDuration": {
                    "description": "The rental duration (for rental offers only).",
                    "type": "object",
                    "properties": {
                      "unit": {
                        "type": "string"
                      },
                      "count": {
                        "type": "number",
                        "format": "double"
                      }
                    }
                  },
                  "listPrice": {
                    "description": "Offer list (=undiscounted) price in Micros.",
                    "properties": {
                      "amountInMicros": {
                        "type": "number",
                        "format": "double"
                      },
                      "currencyCode": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Any information about a volume related to the eBookstore and/or purchaseability. This information can depend on the country where the request originates from (i.e. books may not be for sale in certain countries).",
          "type": "object"
        },
        "userInfo": {
          "type": "object",
          "properties": {
            "userUploadedVolumeInfo": {
              "type": "object",
              "properties": {
                "processingState": {
                  "type": "string"
                }
              }
            },
            "acquisitionType": {
              "description": "How this volume was acquired.",
              "format": "int32",
              "type": "integer"
            },
            "rentalPeriod": {
              "properties": {
                "startUtcSec": {
                  "type": "string",
                  "format": "int64"
                },
                "endUtcSec": {
                  "type": "string",
                  "format": "int64"
                }
              },
              "type": "object",
              "description": "Period during this book is/was a valid rental."
            },
            "isFamilySharedToUser": {
              "type": "boolean",
              "description": "Whether or not the user received this volume through family sharing."
            },
            "updated": {
              "type": "string",
              "description": "Timestamp when this volume was last modified by a user action, such as a reading position update, volume purchase or writing a review. (RFC 3339 UTC date-time format)."
            },
            "isFamilySharingDisabledByFop": {
              "description": "Deprecated: Replaced by familySharing.",
              "type": "boolean"
            },
            "copy": {
              "description": "Copy/Paste accounting information.",
              "properties": {
                "updated": {
                  "type": "string"
                },
                "limitType": {
                  "type": "string"
                },
                "remainingCharacterCount": {
                  "type": "integer",
                  "format": "int32"
                },
                "allowedCharacterCount": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "type": "object"
            },
            "rentalState": {
              "description": "Whether this book is an active or an expired rental.",
              "type": "string"
            },
            "isPreordered": {
              "type": "boolean",
              "description": "Whether or not this volume was pre-ordered by the authenticated user making the request. (In LITE projection.)"
            },
            "isUploaded": {
              "description": "Whether or not this volume was user uploaded.",
              "type": "boolean"
            },
            "isFamilySharingAllowed": {
              "description": "Deprecated: Replaced by familySharing.",
              "type": "boolean"
            },
            "review": {
              "$ref": "Review",
              "description": "This user's review of this volume, if one exists."
            },
            "entitlementType": {
              "type": "integer",
              "description": "Whether this volume is purchased, sample, pd download etc.",
              "format": "int32"
            },
            "acquiredTime": {
              "type": "string",
              "description": "Timestamp when this volume was acquired by the user. (RFC 3339 UTC date-time format) Acquiring includes purchase, user upload, receiving family sharing, etc."
            },
            "familySharing": {
              "properties": {
                "isSharingDisabledByFop": {
                  "description": "Whether or not sharing this volume is temporarily disabled due to issues with the Family Wallet.",
                  "type": "boolean"
                },
                "isSharingAllowed": {
                  "type": "boolean",
                  "description": "Whether or not this volume can be shared with the family by the user. This includes sharing eligibility of both the volume and the user. If the value is true, the user can initiate a family sharing action."
                },
                "familyRole": {
                  "description": "The role of the user in the family.",
                  "type": "string"
                }
              },
              "description": "Information on the ability to share with the family.",
              "type": "object"
            },
            "readingPosition": {
              "$ref": "ReadingPosition",
              "description": "The user's current reading position in the volume, if one is available. (In LITE projection.)"
            },
            "isPurchased": {
              "type": "boolean",
              "description": "Whether or not this volume was purchased by the authenticated user making the request. (In LITE projection.)"
            },
            "isInMyBooks": {
              "type": "boolean",
              "description": "Whether or not this volume is currently in \"my books.\""
            },
            "isFamilySharedFromUser": {
              "description": "Whether or not the user shared this volume with the family.",
              "type": "boolean"
            }
          },
          "description": "User specific information related to this volume. (e.g. page this user last read or whether they purchased this book)"
        },
        "selfLink": {
          "type": "string",
          "description": "URL to this resource. (In LITE projection.)"
        },
        "accessInfo": {
          "description": "Any information about a volume related to reading or obtaining that volume text. This information can depend on country (books may be public domain in one country but not in another, e.g.).",
          "properties": {
            "publicDomain": {
              "description": "Whether or not this book is public domain in the country listed above.",
              "type": "boolean"
            },
            "driveImportedContentLink": {
              "type": "string",
              "description": "URL to the Google Drive viewer if this volume is uploaded by the user by selecting the file from Google Drive."
            },
            "viewability": {
              "type": "string",
              "description": "The read access of a volume. Possible values are PARTIAL, ALL_PAGES, NO_PAGES or UNKNOWN. This value depends on the country listed above. A value of PARTIAL means that the publisher has allowed some portion of the volume to be viewed publicly, without purchase. This can apply to eBooks as well as non-eBooks. Public domain books will always have a value of ALL_PAGES."
            },
            "textToSpeechPermission": {
              "description": "Whether text-to-speech is permitted for this volume. Values can be ALLOWED, ALLOWED_FOR_ACCESSIBILITY, or NOT_ALLOWED.",
              "type": "string"
            },
            "embeddable": {
              "type": "boolean",
              "description": "Whether this volume can be embedded in a viewport using the Embedded Viewer API."
            },
            "viewOrderUrl": {
              "type": "string",
              "description": "For ordered but not yet processed orders, we give a URL that can be used to go to the appropriate Google Wallet page."
            },
            "epub": {
              "description": "Information about epub content. (In LITE projection.)",
              "type": "object",
              "properties": {
                "acsTokenLink": {
                  "description": "URL to retrieve ACS token for epub download. (In LITE projection.)",
                  "type": "string"
                },
                "downloadLink": {
                  "description": "URL to download epub. (In LITE projection.)",
                  "type": "string"
                },
                "isAvailable": {
                  "type": "boolean",
                  "description": "Is a flowing text epub available either as public domain or for purchase. (In LITE projection.)"
                }
              }
            },
            "accessViewStatus": {
              "type": "string",
              "description": "Combines the access and viewability of this volume into a single status field for this user. Values can be FULL_PURCHASED, FULL_PUBLIC_DOMAIN, SAMPLE or NONE. (In LITE projection.)"
            },
            "country": {
              "type": "string",
              "description": "The two-letter ISO_3166-1 country code for which this access information is valid. (In LITE projection.)"
            },
            "webReaderLink": {
              "type": "string",
              "description": "URL to read this volume on the Google Books site. Link will not allow users to read non-viewable volumes."
            },
            "pdf": {
              "type": "object",
              "description": "Information about pdf content. (In LITE projection.)",
              "properties": {
                "isAvailable": {
                  "description": "Is a scanned image pdf available either as public domain or for purchase. (In LITE projection.)",
                  "type": "boolean"
                },
                "downloadLink": {
                  "description": "URL to download pdf. (In LITE projection.)",
                  "type": "string"
                },
                "acsTokenLink": {
                  "type": "string",
                  "description": "URL to retrieve ACS token for pdf download. (In LITE projection.)"
                }
              }
            },
            "downloadAccess": {
              "$ref": "DownloadAccessRestriction",
              "description": "Information about a volume's download license access restrictions."
            },
            "quoteSharingAllowed": {
              "type": "boolean",
              "description": "Whether quote sharing is allowed for this volume."
            },
            "explicitOfflineLicenseManagement": {
              "description": "Whether this volume requires that the client explicitly request offline download license rather than have it done automatically when loading the content, if the client supports it.",
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "etag": {
          "type": "string",
          "description": "Opaque identifier for a specific version of a volume resource. (In LITE projection)"
        }
      },
      "type": "object"
    },
    "Volume2": {
      "id": "Volume2",
      "properties": {
        "items": {
          "description": "A list of volumes.",
          "type": "array",
          "items": {
            "$ref": "Volume"
          }
        },
        "kind": {
          "type": "string",
          "description": "Resource type."
        },
        "nextPageToken": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Discoveryclusters": {
      "type": "object",
      "properties": {
        "clusters": {
          "items": {
            "type": "object",
            "properties": {
              "uid": {
                "type": "string"
              },
              "totalVolumes": {
                "type": "integer",
                "format": "int32"
              },
              "title": {
                "type": "string"
              },
              "subTitle": {
                "type": "string"
              },
              "volumes": {
                "type": "array",
                "items": {
                  "$ref": "Volume"
                }
              },
              "banner_with_content_container": {
                "type": "object",
                "properties": {
                  "fillColorArgb": {
                    "type": "string"
                  },
                  "textColorArgb": {
                    "type": "string"
                  },
                  "maskColorArgb": {
                    "type": "string"
                  },
                  "moreButtonUrl": {
                    "type": "string"
                  },
                  "moreButtonText": {
                    "type": "string"
                  },
                  "imageUrl": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "type": "array"
        },
        "kind": {
          "description": "Resorce type.",
          "type": "string"
        },
        "totalClusters": {
          "format": "int32",
          "type": "integer"
        }
      },
      "id": "Discoveryclusters"
    },
    "DictionaryAnnotationdata": {
      "type": "object",
      "id": "DictionaryAnnotationdata",
      "properties": {
        "updated": {
          "type": "string",
          "description": "Timestamp for the last time this data was updated. (RFC 3339 UTC date-time format)."
        },
        "encodedData": {
          "format": "byte",
          "type": "string",
          "description": "Base64 encoded data for this annotation data."
        },
        "data": {
          "$ref": "Dictlayerdata",
          "description": "JSON encoded data for this dictionary annotation data. Emitted with name 'data' in JSON output. Either this or geo_data will be populated."
        },
        "annotationType": {
          "type": "string",
          "description": "The type of annotation this data is for."
        },
        "id": {
          "type": "string",
          "description": "Unique id for this annotation data."
        },
        "volumeId": {
          "type": "string",
          "description": "The volume id for this data. *"
        },
        "kind": {
          "description": "Resource Type",
          "type": "string"
        },
        "selfLink": {
          "description": "URL for this resource. *",
          "type": "string"
        },
        "layerId": {
          "description": "The Layer id for this data. *",
          "type": "string"
        }
      }
    },
    "Usersettings": {
      "properties": {
        "notesExport": {
          "type": "object",
          "properties": {
            "isEnabled": {
              "type": "boolean"
            },
            "folderName": {
              "type": "string"
            }
          },
          "description": "User settings in sub-objects, each for different purposes."
        },
        "kind": {
          "type": "string",
          "description": "Resource type."
        },
        "notification": {
          "type": "object",
          "properties": {
            "matchMyInterests": {
              "type": "object",
              "properties": {
                "opted_state": {
                  "type": "string"
                }
              }
            },
            "rewardExpirations": {
              "type": "object",
              "properties": {
                "opted_state": {
                  "type": "string"
                }
              }
            },
            "moreFromAuthors": {
              "type": "object",
              "properties": {
                "opted_state": {
                  "type": "string"
                }
              }
            },
            "moreFromSeries": {
              "type": "object",
              "properties": {
                "opted_state": {
                  "type": "string"
                }
              }
            },
            "priceDrop": {
              "properties": {
                "opted_state": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "id": "Usersettings",
      "type": "object"
    },
    "Annotation": {
      "id": "Annotation",
      "type": "object",
      "properties": {
        "afterSelectedText": {
          "type": "string",
          "description": "Anchor text after excerpt. For requests, if the user bookmarked a screen that has no flowing text on it, then this field should be empty."
        },
        "created": {
          "type": "string",
          "description": "Timestamp for the created time of this annotation."
        },
        "clientVersionRanges": {
          "description": "Selection ranges sent from the client.",
          "properties": {
            "gbImageRange": {
              "description": "Range in GB image format for this annotation sent by client.",
              "$ref": "BooksAnnotationsRange"
            },
            "cfiRange": {
              "description": "Range in CFI format for this annotation sent by client.",
              "$ref": "BooksAnnotationsRange"
            },
            "imageCfiRange": {
              "description": "Range in image CFI format for this annotation sent by client.",
              "$ref": "BooksAnnotationsRange"
            },
            "contentVersion": {
              "description": "Content version the client sent in.",
              "type": "string"
            },
            "gbTextRange": {
              "$ref": "BooksAnnotationsRange",
              "description": "Range in GB text format for this annotation sent by client."
            }
          },
          "type": "object"
        },
        "layerSummary": {
          "type": "object",
          "properties": {
            "allowedCharacterCount": {
              "description": "Maximum allowed characters on this layer, especially for the \"copy\" layer.",
              "format": "int32",
              "type": "integer"
            },
            "limitType": {
              "type": "string",
              "description": "Type of limitation on this layer. \"limited\" or \"unlimited\" for the \"copy\" layer."
            },
            "remainingCharacterCount": {
              "description": "Remaining allowed characters on this layer, especially for the \"copy\" layer.",
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "highlightStyle": {
          "description": "The highlight style for this annotation.",
          "type": "string"
        },
        "deleted": {
          "type": "boolean",
          "description": "Indicates that this annotation is deleted."
        },
        "updated": {
          "type": "string",
          "description": "Timestamp for the last time this annotation was modified."
        },
        "selectedText": {
          "type": "string",
          "description": "Excerpt from the volume."
        },
        "pageIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Pages that this annotation spans."
        },
        "kind": {
          "description": "Resource type.",
          "type": "string"
        },
        "volumeId": {
          "type": "string",
          "description": "The volume that this annotation belongs to."
        },
        "selfLink": {
          "type": "string",
          "description": "URL to this resource."
        },
        "id": {
          "type": "string",
          "description": "Id of this annotation, in the form of a GUID."
        },
        "layerId": {
          "description": "The layer this annotation is for.",
          "type": "string"
        },
        "data": {
          "type": "string",
          "description": "User-created data for this annotation."
        },
        "currentVersionRanges": {
          "type": "object",
          "description": "Selection ranges for the most recent content version.",
          "properties": {
            "cfiRange": {
              "description": "Range in CFI format for this annotation for version above.",
              "$ref": "BooksAnnotationsRange"
            },
            "contentVersion": {
              "type": "string",
              "description": "Content version applicable to ranges below."
            },
            "gbTextRange": {
              "$ref": "BooksAnnotationsRange",
              "description": "Range in GB text format for this annotation for version above."
            },
            "gbImageRange": {
              "$ref": "BooksAnnotationsRange",
              "description": "Range in GB image format for this annotation for version above."
            },
            "imageCfiRange": {
              "description": "Range in image CFI format for this annotation for version above.",
              "$ref": "BooksAnnotationsRange"
            }
          }
        },
        "beforeSelectedText": {
          "type": "string",
          "description": "Anchor text before excerpt. For requests, if the user bookmarked a screen that has no flowing text on it, then this field should be empty."
        }
      }
    },
    "Annotationsdata": {
      "properties": {
        "nextPageToken": {
          "description": "Token to pass in for pagination for the next page. This will not be present if this request does not have more results.",
          "type": "string"
        },
        "kind": {
          "type": "string",
          "description": "Resource type"
        },
        "items": {
          "description": "A list of Annotation Data.",
          "items": {
            "$ref": "GeoAnnotationdata"
          },
          "type": "array"
        },
        "totalItems": {
          "format": "int32",
          "type": "integer",
          "description": "The total number of volume annotations found."
        }
      },
      "type": "object",
      "id": "Annotationsdata"
    },
    "Volumeseriesinfo": {
      "type": "object",
      "properties": {
        "kind": {
          "description": "Resource type.",
          "type": "string"
        },
        "bookDisplayNumber": {
          "type": "string",
          "description": "The display number string. This should be used only for display purposes and the actual sequence should be inferred from the below orderNumber."
        },
        "shortSeriesBookTitle": {
          "type": "string",
          "description": "Short book title in the context of the series."
        },
        "volumeSeries": {
          "items": {
            "properties": {
              "issue": {
                "type": "array",
                "description": "List of issues. Applicable only for Collection Edition and Omnibus.",
                "items": {
                  "properties": {
                    "issueOrderNumber": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "issueDisplayNumber": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "orderNumber": {
                "type": "integer",
                "format": "int32",
                "description": "The book order number in the series."
              },
              "seriesId": {
                "description": "The series id.",
                "type": "string"
              },
              "seriesBookType": {
                "description": "The book type in the context of series. Examples - Single Issue, Collection Edition, etc.",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "id": "Volumeseriesinfo"
    },
    "Metadata": {
      "properties": {
        "kind": {
          "description": "Resource type.",
          "type": "string"
        },
        "items": {
          "items": {
            "type": "object",
            "properties": {
              "version": {
                "type": "string",
                "format": "int64"
              },
              "download_url": {
                "type": "string"
              },
              "encrypted_key": {
                "type": "string"
              },
              "language": {
                "type": "string"
              },
              "size": {
                "format": "int64",
                "type": "string"
              }
            }
          },
          "type": "array",
          "description": "A list of offline dictionary metadata."
        }
      },
      "id": "Metadata",
      "type": "object"
    },
    "BooksCloudloadingResource": {
      "id": "BooksCloudloadingResource",
      "properties": {
        "title": {
          "type": "string"
        },
        "volumeId": {
          "type": "string"
        },
        "processingState": {
          "type": "string"
        },
        "author": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "BooksAnnotationsRange": {
      "properties": {
        "startOffset": {
          "type": "string",
          "description": "The offset from the starting position."
        },
        "endOffset": {
          "description": "The offset from the ending position.",
          "type": "string"
        },
        "startPosition": {
          "type": "string",
          "description": "The starting position for the range."
        },
        "endPosition": {
          "description": "The ending position for the range.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "BooksAnnotationsRange"
    },
    "Volumes": {
      "type": "object",
      "properties": {
        "totalItems": {
          "type": "integer",
          "description": "Total number of volumes found. This might be greater than the number of volumes returned in this response if results have been paginated.",
          "format": "int32"
        },
        "kind": {
          "type": "string",
          "description": "Resource type."
        },
        "items": {
          "items": {
            "$ref": "Volume"
          },
          "type": "array",
          "description": "A list of volumes."
        }
      },
      "id": "Volumes"
    },
    "Category": {
      "id": "Category",
      "properties": {
        "items": {
          "type": "array",
          "description": "A list of onboarding categories.",
          "items": {
            "type": "object",
            "properties": {
              "badgeUrl": {
                "type": "string"
              },
              "categoryId": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          }
        },
        "kind": {
          "type": "string",
          "description": "Resource type."
        }
      },
      "type": "object"
    },
    "RequestAccessData": {
      "properties": {
        "concurrentAccess": {
          "$ref": "ConcurrentAccessRestriction",
          "description": "A concurrent access response."
        },
        "downloadAccess": {
          "$ref": "DownloadAccessRestriction",
          "description": "A download access response."
        },
        "kind": {
          "description": "Resource type.",
          "type": "string"
        }
      },
      "id": "RequestAccessData",
      "type": "object"
    },
    "Notification": {
      "type": "object",
      "properties": {
        "dont_show_notification": {
          "type": "boolean"
        },
        "iconUrl": {
          "type": "string"
        },
        "pcampaign_id": {
          "type": "string"
        },
        "timeToExpireMs": {
          "format": "int64",
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "doc_type": {
          "type": "string"
        },
        "crmExperimentIds": {
          "description": "The list of crm experiment ids.",
          "type": "array",
          "items": {
            "format": "int64",
            "type": "string"
          }
        },
        "show_notification_settings_action": {
          "type": "boolean"
        },
        "kind": {
          "type": "string",
          "description": "Resource type."
        },
        "notification_type": {
          "type": "string"
        },
        "is_document_mature": {
          "type": "boolean"
        },
        "notificationGroup": {
          "type": "string"
        },
        "body": {
          "type": "string"
        },
        "targetUrl": {
          "type": "string"
        },
        "doc_id": {
          "type": "string"
        }
      },
      "id": "Notification"
    },
    "Volumeannotation": {
      "type": "object",
      "id": "Volumeannotation",
      "properties": {
        "updated": {
          "type": "string",
          "description": "Timestamp for the last time this anntoation was updated. (RFC 3339 UTC date-time format)."
        },
        "kind": {
          "type": "string",
          "description": "Resource Type"
        },
        "id": {
          "description": "Unique id of this volume annotation.",
          "type": "string"
        },
        "annotationType": {
          "type": "string",
          "description": "The type of annotation this is."
        },
        "deleted": {
          "type": "boolean",
          "description": "Indicates that this annotation is deleted."
        },
        "contentRanges": {
          "properties": {
            "cfiRange": {
              "description": "Range in CFI format for this annotation for version above.",
              "$ref": "BooksAnnotationsRange"
            },
            "gbTextRange": {
              "description": "Range in GB text format for this annotation for version above.",
              "$ref": "BooksAnnotationsRange"
            },
            "contentVersion": {
              "type": "string",
              "description": "Content version applicable to ranges below."
            },
            "gbImageRange": {
              "description": "Range in GB image format for this annotation for version above.",
              "$ref": "BooksAnnotationsRange"
            }
          },
          "type": "object",
          "description": "The content ranges to identify the selected text."
        },
        "annotationDataId": {
          "description": "The annotation data id for this volume annotation.",
          "type": "string"
        },
        "selectedText": {
          "type": "string",
          "description": "Excerpt from the volume."
        },
        "data": {
          "type": "string",
          "description": "Data for this annotation."
        },
        "volumeId": {
          "type": "string",
          "description": "The Volume this annotation is for."
        },
        "annotationDataLink": {
          "description": "Link to get data for this annotation.",
          "type": "string"
        },
        "selfLink": {
          "description": "URL to this resource.",
          "type": "string"
        },
        "pageIds": {
          "description": "Pages the annotation spans.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "layerId": {
          "description": "The Layer this annotation is for.",
          "type": "string"
        }
      }
    },
    "Bookshelves": {
      "type": "object",
      "properties": {
        "items": {
          "description": "A list of bookshelves.",
          "items": {
            "$ref": "Bookshelf"
          },
          "type": "array"
        },
        "kind": {
          "type": "string",
          "description": "Resource type."
        }
      },
      "id": "Bookshelves"
    },
    "ConcurrentAccessRestriction": {
      "properties": {
        "volumeId": {
          "type": "string",
          "description": "Identifies the volume for which this entry applies."
        },
        "message": {
          "type": "string",
          "description": "Error/warning message."
        },
        "timeWindowSeconds": {
          "description": "Time in seconds for license auto-expiration.",
          "format": "int32",
          "type": "integer"
        },
        "kind": {
          "type": "string",
          "description": "Resource type."
        },
        "reasonCode": {
          "description": "Error/warning reason code.",
          "type": "string"
        },
        "nonce": {
          "description": "Client nonce for verification. Download access and client-validation only.",
          "type": "string"
        },
        "maxConcurrentDevices": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum number of concurrent access licenses for this volume."
        },
        "signature": {
          "description": "Response signature.",
          "type": "string"
        },
        "source": {
          "description": "Client app identifier for verification. Download access and client-validation only.",
          "type": "string"
        },
        "deviceAllowed": {
          "type": "boolean",
          "description": "Whether access is granted for this (user, device, volume)."
        },
        "restricted": {
          "description": "Whether this volume has any concurrent access restrictions.",
          "type": "boolean"
        }
      },
      "type": "object",
      "id": "ConcurrentAccessRestriction"
    },
    "Layersummaries": {
      "id": "Layersummaries",
      "properties": {
        "totalItems": {
          "format": "int32",
          "description": "The total number of layer summaries found.",
          "type": "integer"
        },
        "items": {
          "description": "A list of layer summary items.",
          "type": "array",
          "items": {
            "$ref": "Layersummary"
          }
        },
        "kind": {
          "type": "string",
          "description": "Resource type."
        }
      },
      "type": "object"
    }
  },
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "ownerName": "Google",
  "batchPath": "batch",
  "parameters": {
    "quotaUser": {
      "location": "query",
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
    },
    "fields": {
      "location": "query",
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response."
    },
    "callback": {
      "description": "JSONP",
      "type": "string",
      "location": "query"
    },
    "$.xgafv": {
      "location": "query",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "description": "V1 error format.",
      "type": "string",
      "enum": [
        "1",
        "2"
      ]
    },
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "upload_protocol": {
      "location": "query",
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
    },
    "prettyPrint": {
      "type": "boolean",
      "location": "query",
      "description": "Returns response with indentations and line breaks.",
      "default": "true"
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query",
      "type": "string"
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "type": "string",
      "location": "query"
    },
    "alt": {
      "description": "Data format for response.",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "type": "string",
      "default": "json",
      "location": "query",
      "enum": [
        "json",
        "media",
        "proto"
      ]
    },
    "uploadType": {
      "location": "query",
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
    }
  },
  "discoveryVersion": "v1",
  "documentationLink": "https://code.google.com/apis/books/docs/v1/getting_started.html",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/books": {
          "description": "Manage your books"
        }
      }
    }
  },
  "mtlsRootUrl": "https://books.mtls.googleapis.com/",
  "kind": "discovery#restDescription"
}
