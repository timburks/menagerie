{
  "version_module": true,
  "documentationLink": "https://code.google.com/apis/books/docs/v1/getting_started.html",
  "title": "Books API",
  "mtlsRootUrl": "https://books.mtls.googleapis.com/",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "protocol": "rest",
  "kind": "discovery#restDescription",
  "ownerDomain": "google.com",
  "id": "books:v1",
  "batchPath": "batch",
  "fullyEncodeReservedExpansion": true,
  "version": "v1",
  "revision": "20230221",
  "name": "books",
  "rootUrl": "https://books.googleapis.com/",
  "schemas": {
    "BooksCloudloadingResource": {
      "properties": {
        "author": {
          "type": "string"
        },
        "volumeId": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "processingState": {
          "type": "string"
        }
      },
      "id": "BooksCloudloadingResource",
      "type": "object"
    },
    "DictionaryAnnotationdata": {
      "type": "object",
      "id": "DictionaryAnnotationdata",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique id for this annotation data."
        },
        "volumeId": {
          "description": "The volume id for this data. *",
          "type": "string"
        },
        "annotationType": {
          "description": "The type of annotation this data is for.",
          "type": "string"
        },
        "selfLink": {
          "description": "URL for this resource. *",
          "type": "string"
        },
        "updated": {
          "description": "Timestamp for the last time this data was updated. (RFC 3339 UTC date-time format).",
          "type": "string"
        },
        "layerId": {
          "description": "The Layer id for this data. *",
          "type": "string"
        },
        "kind": {
          "description": "Resource Type",
          "type": "string"
        },
        "encodedData": {
          "format": "byte",
          "type": "string",
          "description": "Base64 encoded data for this annotation data."
        },
        "data": {
          "description": "JSON encoded data for this dictionary annotation data. Emitted with name 'data' in JSON output. Either this or geo_data will be populated.",
          "$ref": "Dictlayerdata"
        }
      }
    },
    "GeoAnnotationdata": {
      "type": "object",
      "id": "GeoAnnotationdata",
      "properties": {
        "encodedData": {
          "description": "Base64 encoded data for this annotation data.",
          "type": "string",
          "format": "byte"
        },
        "layerId": {
          "description": "The Layer id for this data. *",
          "type": "string"
        },
        "data": {
          "$ref": "Geolayerdata",
          "description": "JSON encoded data for this geo annotation data. Emitted with name 'data' in JSON output. Either this or dict_data will be populated."
        },
        "volumeId": {
          "description": "The volume id for this data. *",
          "type": "string"
        },
        "selfLink": {
          "description": "URL for this resource. *",
          "type": "string"
        },
        "updated": {
          "description": "Timestamp for the last time this data was updated. (RFC 3339 UTC date-time format).",
          "type": "string"
        },
        "annotationType": {
          "description": "The type of annotation this data is for.",
          "type": "string"
        },
        "kind": {
          "description": "Resource Type",
          "type": "string"
        },
        "id": {
          "description": "Unique id for this annotation data.",
          "type": "string"
        }
      }
    },
    "AnnotationsSummary": {
      "id": "AnnotationsSummary",
      "type": "object",
      "properties": {
        "kind": {
          "type": "string"
        },
        "layers": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "allowedCharacterCount": {
                "format": "int32",
                "type": "integer"
              },
              "remainingCharacterCount": {
                "type": "integer",
                "format": "int32"
              },
              "updated": {
                "type": "string"
              },
              "layerId": {
                "type": "string"
              },
              "limitType": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "Dictlayerdata": {
      "type": "object",
      "properties": {
        "common": {
          "type": "object",
          "properties": {
            "title": {
              "description": "The display title and localized canonical name to use when searching for this entity on Google search.",
              "type": "string"
            }
          }
        },
        "kind": {
          "type": "string"
        },
        "dict": {
          "properties": {
            "source": {
              "description": "The source, url and attribution for this dictionary data.",
              "type": "object",
              "properties": {
                "attribution": {
                  "type": "string"
                },
                "url": {
                  "type": "string"
                }
              }
            },
            "words": {
              "type": "array",
              "items": {
                "properties": {
                  "senses": {
                    "items": {
                      "type": "object",
                      "properties": {
                        "pronunciation": {
                          "type": "string"
                        },
                        "synonyms": {
                          "type": "array",
                          "items": {
                            "properties": {
                              "source": {
                                "properties": {
                                  "url": {
                                    "type": "string"
                                  },
                                  "attribution": {
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "text": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "pronunciationUrl": {
                          "type": "string"
                        },
                        "definitions": {
                          "items": {
                            "type": "object",
                            "properties": {
                              "examples": {
                                "type": "array",
                                "items": {
                                  "properties": {
                                    "text": {
                                      "type": "string"
                                    },
                                    "source": {
                                      "properties": {
                                        "url": {
                                          "type": "string"
                                        },
                                        "attribution": {
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "definition": {
                                "type": "string"
                              }
                            }
                          },
                          "type": "array"
                        },
                        "source": {
                          "properties": {
                            "attribution": {
                              "type": "string"
                            },
                            "url": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "conjugations": {
                          "items": {
                            "properties": {
                              "type": {
                                "type": "string"
                              },
                              "value": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "syllabification": {
                          "type": "string"
                        },
                        "partOfSpeech": {
                          "type": "string"
                        }
                      }
                    },
                    "type": "array"
                  },
                  "examples": {
                    "type": "array",
                    "items": {
                      "properties": {
                        "source": {
                          "properties": {
                            "attribution": {
                              "type": "string"
                            },
                            "url": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "text": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "source": {
                    "description": "The words with different meanings but not related words, e.g. \"go\" (game) and \"go\" (verb).",
                    "properties": {
                      "attribution": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "derivatives": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "text": {
                          "type": "string"
                        },
                        "source": {
                          "properties": {
                            "url": {
                              "type": "string"
                            },
                            "attribution": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      }
                    }
                  }
                },
                "type": "object"
              }
            }
          },
          "type": "object"
        }
      },
      "id": "Dictlayerdata"
    },
    "Offers": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Resource type."
        },
        "items": {
          "description": "A list of offers.",
          "items": {
            "properties": {
              "gservicesKey": {
                "type": "string"
              },
              "artUrl": {
                "type": "string"
              },
              "items": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "canonicalVolumeLink": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "author": {
                      "type": "string"
                    },
                    "coverUrl": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "volumeId": {
                      "type": "string"
                    }
                  }
                }
              },
              "id": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "id": "Offers"
    },
    "BooksAnnotationsRange": {
      "properties": {
        "endOffset": {
          "type": "string",
          "description": "The offset from the ending position."
        },
        "startOffset": {
          "description": "The offset from the starting position.",
          "type": "string"
        },
        "endPosition": {
          "description": "The ending position for the range.",
          "type": "string"
        },
        "startPosition": {
          "type": "string",
          "description": "The starting position for the range."
        }
      },
      "type": "object",
      "id": "BooksAnnotationsRange"
    },
    "Usersettings": {
      "type": "object",
      "properties": {
        "notesExport": {
          "type": "object",
          "properties": {
            "folderName": {
              "type": "string"
            },
            "isEnabled": {
              "type": "boolean"
            }
          },
          "description": "User settings in sub-objects, each for different purposes."
        },
        "kind": {
          "description": "Resource type.",
          "type": "string"
        },
        "notification": {
          "properties": {
            "matchMyInterests": {
              "properties": {
                "opted_state": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "priceDrop": {
              "type": "object",
              "properties": {
                "opted_state": {
                  "type": "string"
                }
              }
            },
            "moreFromAuthors": {
              "properties": {
                "opted_state": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "moreFromSeries": {
              "type": "object",
              "properties": {
                "opted_state": {
                  "type": "string"
                }
              }
            },
            "rewardExpirations": {
              "properties": {
                "opted_state": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "id": "Usersettings"
    },
    "ConcurrentAccessRestriction": {
      "id": "ConcurrentAccessRestriction",
      "type": "object",
      "properties": {
        "nonce": {
          "type": "string",
          "description": "Client nonce for verification. Download access and client-validation only."
        },
        "restricted": {
          "type": "boolean",
          "description": "Whether this volume has any concurrent access restrictions."
        },
        "deviceAllowed": {
          "type": "boolean",
          "description": "Whether access is granted for this (user, device, volume)."
        },
        "kind": {
          "type": "string",
          "description": "Resource type."
        },
        "source": {
          "description": "Client app identifier for verification. Download access and client-validation only.",
          "type": "string"
        },
        "message": {
          "type": "string",
          "description": "Error/warning message."
        },
        "reasonCode": {
          "type": "string",
          "description": "Error/warning reason code."
        },
        "timeWindowSeconds": {
          "format": "int32",
          "type": "integer",
          "description": "Time in seconds for license auto-expiration."
        },
        "maxConcurrentDevices": {
          "type": "integer",
          "description": "The maximum number of concurrent access licenses for this volume.",
          "format": "int32"
        },
        "signature": {
          "description": "Response signature.",
          "type": "string"
        },
        "volumeId": {
          "type": "string",
          "description": "Identifies the volume for which this entry applies."
        }
      }
    },
    "Layersummary": {
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique id of this layer summary."
        },
        "layerId": {
          "type": "string",
          "description": "The layer id for this summary."
        },
        "annotationTypes": {
          "description": "The list of annotation types contained for this layer.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "annotationsLink": {
          "type": "string",
          "description": "The link to get the annotations for this layer."
        },
        "selfLink": {
          "description": "URL to this resource.",
          "type": "string"
        },
        "annotationCount": {
          "description": "The number of annotations for this layer.",
          "format": "int32",
          "type": "integer"
        },
        "volumeId": {
          "type": "string",
          "description": "The volume id this resource is for."
        },
        "kind": {
          "type": "string",
          "description": "Resource Type"
        },
        "updated": {
          "description": "Timestamp for the last time an item in this layer was updated. (RFC 3339 UTC date-time format).",
          "type": "string"
        },
        "contentVersion": {
          "type": "string",
          "description": "The content version this resource is for."
        },
        "volumeAnnotationsVersion": {
          "description": "The current version of this layer's volume annotations. Note that this version applies only to the data in the books.layers.volumeAnnotations.* responses. The actual annotation data is versioned separately.",
          "type": "string"
        },
        "annotationsDataLink": {
          "description": "Link to get data for this annotation.",
          "type": "string"
        },
        "dataCount": {
          "description": "The number of data items for this layer.",
          "format": "int32",
          "type": "integer"
        }
      },
      "id": "Layersummary",
      "type": "object"
    },
    "Series": {
      "type": "object",
      "id": "Series",
      "properties": {
        "series": {
          "type": "array",
          "items": {
            "properties": {
              "bannerImageUrl": {
                "type": "string"
              },
              "seriesType": {
                "type": "string"
              },
              "seriesSubscriptionReleaseInfo": {
                "properties": {
                  "cancelTime": {
                    "type": "string"
                  },
                  "currentReleaseInfo": {
                    "properties": {
                      "currencyCode": {
                        "type": "string"
                      },
                      "releaseTime": {
                        "type": "string"
                      },
                      "amountInMicros": {
                        "format": "double",
                        "type": "number"
                      },
                      "releaseNumber": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "nextReleaseInfo": {
                    "properties": {
                      "releaseTime": {
                        "type": "string"
                      },
                      "amountInMicros": {
                        "type": "number",
                        "format": "double"
                      },
                      "releaseNumber": {
                        "type": "string"
                      },
                      "currencyCode": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "seriesSubscriptionType": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "imageUrl": {
                "type": "string"
              },
              "seriesFormatType": {
                "type": "string"
              },
              "seriesId": {
                "type": "string"
              },
              "subscriptionId": {
                "type": "string"
              },
              "eligibleForSubscription": {
                "type": "boolean"
              },
              "isComplete": {
                "type": "boolean"
              },
              "title": {
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "kind": {
          "description": "Resource type.",
          "type": "string"
        }
      }
    },
    "Discoveryclusters": {
      "id": "Discoveryclusters",
      "properties": {
        "clusters": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "uid": {
                "type": "string"
              },
              "volumes": {
                "type": "array",
                "items": {
                  "$ref": "Volume"
                }
              },
              "subTitle": {
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "totalVolumes": {
                "format": "int32",
                "type": "integer"
              },
              "banner_with_content_container": {
                "properties": {
                  "fillColorArgb": {
                    "type": "string"
                  },
                  "moreButtonUrl": {
                    "type": "string"
                  },
                  "maskColorArgb": {
                    "type": "string"
                  },
                  "moreButtonText": {
                    "type": "string"
                  },
                  "imageUrl": {
                    "type": "string"
                  },
                  "textColorArgb": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "totalClusters": {
          "type": "integer",
          "format": "int32"
        },
        "kind": {
          "type": "string",
          "description": "Resorce type."
        }
      },
      "type": "object"
    },
    "BooksVolumesRecommendedRateResponse": {
      "type": "object",
      "properties": {
        "consistency_token": {
          "type": "string"
        }
      },
      "id": "BooksVolumesRecommendedRateResponse"
    },
    "RequestAccessData": {
      "properties": {
        "kind": {
          "description": "Resource type.",
          "type": "string"
        },
        "downloadAccess": {
          "description": "A download access response.",
          "$ref": "DownloadAccessRestriction"
        },
        "concurrentAccess": {
          "$ref": "ConcurrentAccessRestriction",
          "description": "A concurrent access response."
        }
      },
      "type": "object",
      "id": "RequestAccessData"
    },
    "Volumes": {
      "type": "object",
      "id": "Volumes",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Resource type."
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "Volume"
          },
          "description": "A list of volumes."
        },
        "totalItems": {
          "format": "int32",
          "type": "integer",
          "description": "Total number of volumes found. This might be greater than the number of volumes returned in this response if results have been paginated."
        }
      }
    },
    "Volume2": {
      "type": "object",
      "properties": {
        "kind": {
          "description": "Resource type.",
          "type": "string"
        },
        "nextPageToken": {
          "type": "string"
        },
        "items": {
          "description": "A list of volumes.",
          "items": {
            "$ref": "Volume"
          },
          "type": "array"
        }
      },
      "id": "Volume2"
    },
    "Category": {
      "properties": {
        "items": {
          "items": {
            "properties": {
              "categoryId": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "badgeUrl": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array",
          "description": "A list of onboarding categories."
        },
        "kind": {
          "description": "Resource type.",
          "type": "string"
        }
      },
      "id": "Category",
      "type": "object"
    },
    "Notification": {
      "id": "Notification",
      "properties": {
        "timeToExpireMs": {
          "format": "int64",
          "type": "string"
        },
        "notificationGroup": {
          "type": "string"
        },
        "doc_type": {
          "type": "string"
        },
        "body": {
          "type": "string"
        },
        "crmExperimentIds": {
          "description": "The list of crm experiment ids.",
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "show_notification_settings_action": {
          "type": "boolean"
        },
        "dont_show_notification": {
          "type": "boolean"
        },
        "is_document_mature": {
          "type": "boolean"
        },
        "doc_id": {
          "type": "string"
        },
        "targetUrl": {
          "type": "string"
        },
        "pcampaign_id": {
          "type": "string"
        },
        "kind": {
          "type": "string",
          "description": "Resource type."
        },
        "iconUrl": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "notification_type": {
          "type": "string"
        },
        "title": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReadingPosition": {
      "properties": {
        "gbTextPosition": {
          "description": "Position in a volume for text-based content.",
          "type": "string"
        },
        "updated": {
          "description": "Timestamp when this reading position was last updated (formatted UTC timestamp with millisecond resolution).",
          "type": "string"
        },
        "gbImagePosition": {
          "type": "string",
          "description": "Position in a volume for image-based content."
        },
        "volumeId": {
          "description": "Volume id associated with this reading position.",
          "type": "string"
        },
        "epubCfiPosition": {
          "description": "Position in an EPUB as a CFI.",
          "type": "string"
        },
        "kind": {
          "type": "string",
          "description": "Resource type for a reading position."
        },
        "pdfPosition": {
          "description": "Position in a PDF file.",
          "type": "string"
        }
      },
      "id": "ReadingPosition",
      "type": "object"
    },
    "Volumeannotation": {
      "type": "object",
      "properties": {
        "pageIds": {
          "description": "Pages the annotation spans.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "contentRanges": {
          "description": "The content ranges to identify the selected text.",
          "type": "object",
          "properties": {
            "gbTextRange": {
              "description": "Range in GB text format for this annotation for version above.",
              "$ref": "BooksAnnotationsRange"
            },
            "contentVersion": {
              "description": "Content version applicable to ranges below.",
              "type": "string"
            },
            "cfiRange": {
              "description": "Range in CFI format for this annotation for version above.",
              "$ref": "BooksAnnotationsRange"
            },
            "gbImageRange": {
              "$ref": "BooksAnnotationsRange",
              "description": "Range in GB image format for this annotation for version above."
            }
          }
        },
        "volumeId": {
          "type": "string",
          "description": "The Volume this annotation is for."
        },
        "annotationType": {
          "type": "string",
          "description": "The type of annotation this is."
        },
        "selectedText": {
          "description": "Excerpt from the volume.",
          "type": "string"
        },
        "updated": {
          "description": "Timestamp for the last time this anntoation was updated. (RFC 3339 UTC date-time format).",
          "type": "string"
        },
        "layerId": {
          "description": "The Layer this annotation is for.",
          "type": "string"
        },
        "annotationDataId": {
          "type": "string",
          "description": "The annotation data id for this volume annotation."
        },
        "deleted": {
          "type": "boolean",
          "description": "Indicates that this annotation is deleted."
        },
        "annotationDataLink": {
          "type": "string",
          "description": "Link to get data for this annotation."
        },
        "data": {
          "type": "string",
          "description": "Data for this annotation."
        },
        "selfLink": {
          "type": "string",
          "description": "URL to this resource."
        },
        "kind": {
          "type": "string",
          "description": "Resource Type"
        },
        "id": {
          "type": "string",
          "description": "Unique id of this volume annotation."
        }
      },
      "id": "Volumeannotation"
    },
    "Geolayerdata": {
      "id": "Geolayerdata",
      "type": "object",
      "properties": {
        "geo": {
          "type": "object",
          "properties": {
            "longitude": {
              "description": "The longitude of the location.",
              "format": "double",
              "type": "number"
            },
            "cachePolicy": {
              "description": "The cache policy active for this data. EX: UNRESTRICTED, RESTRICTED, NEVER",
              "type": "string"
            },
            "zoom": {
              "type": "integer",
              "description": "The Zoom level to use for the map. Zoom levels between 0 (the lowest zoom level, in which the entire world can be seen on one map) to 21+ (down to individual buildings). See: https: //developers.google.com/maps/documentation/staticmaps/#Zoomlevels",
              "format": "int32"
            },
            "mapType": {
              "description": "The type of map that should be used for this location. EX: HYBRID, ROADMAP, SATELLITE, TERRAIN",
              "type": "string"
            },
            "latitude": {
              "type": "number",
              "description": "The latitude of the location.",
              "format": "double"
            },
            "viewport": {
              "description": "The viewport for showing this location. This is a latitude, longitude rectangle.",
              "type": "object",
              "properties": {
                "lo": {
                  "properties": {
                    "longitude": {
                      "type": "number",
                      "format": "double"
                    },
                    "latitude": {
                      "format": "double",
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "hi": {
                  "type": "object",
                  "properties": {
                    "latitude": {
                      "type": "number",
                      "format": "double"
                    },
                    "longitude": {
                      "type": "number",
                      "format": "double"
                    }
                  }
                }
              }
            },
            "boundary": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The boundary of the location as a set of loops containing pairs of latitude, longitude coordinates."
            },
            "countryCode": {
              "description": "The country code of the location.",
              "type": "string"
            }
          }
        },
        "kind": {
          "type": "string"
        },
        "common": {
          "properties": {
            "lang": {
              "description": "The language of the information url and description.",
              "type": "string"
            },
            "snippet": {
              "description": "The description for this location.",
              "type": "string"
            },
            "title": {
              "type": "string",
              "description": "The display title and localized canonical name to use when searching for this entity on Google search."
            },
            "snippetUrl": {
              "description": "The URL for information for this location. Ex: wikipedia link.",
              "type": "string"
            },
            "previewImageUrl": {
              "type": "string",
              "description": "The URL for the preview image information."
            }
          },
          "type": "object"
        }
      }
    },
    "Volumeannotations": {
      "id": "Volumeannotations",
      "properties": {
        "version": {
          "description": "The version string for all of the volume annotations in this layer (not just the ones in this response). Note: the version string doesn't apply to the annotation data, just the information in this response (e.g. the location of annotations in the book).",
          "type": "string"
        },
        "totalItems": {
          "description": "The total number of volume annotations found.",
          "format": "int32",
          "type": "integer"
        },
        "items": {
          "items": {
            "$ref": "Volumeannotation"
          },
          "description": "A list of volume annotations.",
          "type": "array"
        },
        "kind": {
          "type": "string",
          "description": "Resource type"
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token to pass in for pagination for the next page. This will not be present if this request does not have more results."
        }
      },
      "type": "object"
    },
    "Bookshelf": {
      "properties": {
        "volumeCount": {
          "description": "Number of volumes in this bookshelf.",
          "format": "int32",
          "type": "integer"
        },
        "description": {
          "description": "Description of this bookshelf.",
          "type": "string"
        },
        "selfLink": {
          "type": "string",
          "description": "URL to this resource."
        },
        "updated": {
          "type": "string",
          "description": "Last modified time of this bookshelf (formatted UTC timestamp with millisecond resolution)."
        },
        "created": {
          "type": "string",
          "description": "Created time for this bookshelf (formatted UTC timestamp with millisecond resolution)."
        },
        "kind": {
          "type": "string",
          "description": "Resource type for bookshelf metadata."
        },
        "volumesLastUpdated": {
          "description": "Last time a volume was added or removed from this bookshelf (formatted UTC timestamp with millisecond resolution).",
          "type": "string"
        },
        "id": {
          "type": "integer",
          "description": "Id of this bookshelf, only unique by user.",
          "format": "int32"
        },
        "access": {
          "description": "Whether this bookshelf is PUBLIC or PRIVATE.",
          "type": "string"
        },
        "title": {
          "description": "Title of this bookshelf.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "Bookshelf"
    },
    "Annotation": {
      "id": "Annotation",
      "properties": {
        "updated": {
          "type": "string",
          "description": "Timestamp for the last time this annotation was modified."
        },
        "currentVersionRanges": {
          "properties": {
            "gbImageRange": {
              "description": "Range in GB image format for this annotation for version above.",
              "$ref": "BooksAnnotationsRange"
            },
            "imageCfiRange": {
              "$ref": "BooksAnnotationsRange",
              "description": "Range in image CFI format for this annotation for version above."
            },
            "cfiRange": {
              "$ref": "BooksAnnotationsRange",
              "description": "Range in CFI format for this annotation for version above."
            },
            "gbTextRange": {
              "description": "Range in GB text format for this annotation for version above.",
              "$ref": "BooksAnnotationsRange"
            },
            "contentVersion": {
              "description": "Content version applicable to ranges below.",
              "type": "string"
            }
          },
          "description": "Selection ranges for the most recent content version.",
          "type": "object"
        },
        "id": {
          "type": "string",
          "description": "Id of this annotation, in the form of a GUID."
        },
        "layerSummary": {
          "type": "object",
          "properties": {
            "limitType": {
              "description": "Type of limitation on this layer. \"limited\" or \"unlimited\" for the \"copy\" layer.",
              "type": "string"
            },
            "allowedCharacterCount": {
              "description": "Maximum allowed characters on this layer, especially for the \"copy\" layer.",
              "type": "integer",
              "format": "int32"
            },
            "remainingCharacterCount": {
              "format": "int32",
              "type": "integer",
              "description": "Remaining allowed characters on this layer, especially for the \"copy\" layer."
            }
          }
        },
        "created": {
          "type": "string",
          "description": "Timestamp for the created time of this annotation."
        },
        "highlightStyle": {
          "type": "string",
          "description": "The highlight style for this annotation."
        },
        "selectedText": {
          "description": "Excerpt from the volume.",
          "type": "string"
        },
        "data": {
          "type": "string",
          "description": "User-created data for this annotation."
        },
        "afterSelectedText": {
          "type": "string",
          "description": "Anchor text after excerpt. For requests, if the user bookmarked a screen that has no flowing text on it, then this field should be empty."
        },
        "beforeSelectedText": {
          "type": "string",
          "description": "Anchor text before excerpt. For requests, if the user bookmarked a screen that has no flowing text on it, then this field should be empty."
        },
        "deleted": {
          "type": "boolean",
          "description": "Indicates that this annotation is deleted."
        },
        "layerId": {
          "description": "The layer this annotation is for.",
          "type": "string"
        },
        "pageIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Pages that this annotation spans."
        },
        "selfLink": {
          "type": "string",
          "description": "URL to this resource."
        },
        "clientVersionRanges": {
          "type": "object",
          "description": "Selection ranges sent from the client.",
          "properties": {
            "gbTextRange": {
              "description": "Range in GB text format for this annotation sent by client.",
              "$ref": "BooksAnnotationsRange"
            },
            "imageCfiRange": {
              "description": "Range in image CFI format for this annotation sent by client.",
              "$ref": "BooksAnnotationsRange"
            },
            "gbImageRange": {
              "$ref": "BooksAnnotationsRange",
              "description": "Range in GB image format for this annotation sent by client."
            },
            "cfiRange": {
              "description": "Range in CFI format for this annotation sent by client.",
              "$ref": "BooksAnnotationsRange"
            },
            "contentVersion": {
              "type": "string",
              "description": "Content version the client sent in."
            }
          }
        },
        "kind": {
          "description": "Resource type.",
          "type": "string"
        },
        "volumeId": {
          "type": "string",
          "description": "The volume that this annotation belongs to."
        }
      },
      "type": "object"
    },
    "FamilyInfo": {
      "id": "FamilyInfo",
      "type": "object",
      "properties": {
        "membership": {
          "description": "Family membership info of the user that made the request.",
          "properties": {
            "acquirePermission": {
              "description": "Restrictions on user buying and acquiring content.",
              "type": "string"
            },
            "ageGroup": {
              "type": "string",
              "description": "The age group of the user."
            },
            "allowedMaturityRating": {
              "description": "The maximum allowed maturity rating for the user.",
              "type": "string"
            },
            "role": {
              "description": "The role of the user in the family.",
              "type": "string"
            },
            "isInFamily": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "kind": {
          "description": "Resource type.",
          "type": "string"
        }
      }
    },
    "Volumeseriesinfo": {
      "id": "Volumeseriesinfo",
      "type": "object",
      "properties": {
        "shortSeriesBookTitle": {
          "type": "string",
          "description": "Short book title in the context of the series."
        },
        "volumeSeries": {
          "items": {
            "properties": {
              "seriesBookType": {
                "description": "The book type in the context of series. Examples - Single Issue, Collection Edition, etc.",
                "type": "string"
              },
              "issue": {
                "description": "List of issues. Applicable only for Collection Edition and Omnibus.",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "issueOrderNumber": {
                      "format": "int32",
                      "type": "integer"
                    },
                    "issueDisplayNumber": {
                      "type": "string"
                    }
                  }
                }
              },
              "orderNumber": {
                "description": "The book order number in the series.",
                "format": "int32",
                "type": "integer"
              },
              "seriesId": {
                "type": "string",
                "description": "The series id."
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "kind": {
          "type": "string",
          "description": "Resource type."
        },
        "bookDisplayNumber": {
          "description": "The display number string. This should be used only for display purposes and the actual sequence should be inferred from the below orderNumber.",
          "type": "string"
        }
      }
    },
    "Layersummaries": {
      "id": "Layersummaries",
      "properties": {
        "items": {
          "items": {
            "$ref": "Layersummary"
          },
          "description": "A list of layer summary items.",
          "type": "array"
        },
        "totalItems": {
          "type": "integer",
          "description": "The total number of layer summaries found.",
          "format": "int32"
        },
        "kind": {
          "type": "string",
          "description": "Resource type."
        }
      },
      "type": "object"
    },
    "Volume": {
      "type": "object",
      "id": "Volume",
      "properties": {
        "recommendedInfo": {
          "type": "object",
          "description": "Recommendation related information for this volume.",
          "properties": {
            "explanation": {
              "description": "A text explaining why this volume is recommended.",
              "type": "string"
            }
          }
        },
        "searchInfo": {
          "properties": {
            "textSnippet": {
              "description": "A text snippet containing the search query.",
              "type": "string"
            }
          },
          "description": "Search result information related to this volume.",
          "type": "object"
        },
        "accessInfo": {
          "type": "object",
          "properties": {
            "epub": {
              "type": "object",
              "description": "Information about epub content. (In LITE projection.)",
              "properties": {
                "downloadLink": {
                  "type": "string",
                  "description": "URL to download epub. (In LITE projection.)"
                },
                "isAvailable": {
                  "description": "Is a flowing text epub available either as public domain or for purchase. (In LITE projection.)",
                  "type": "boolean"
                },
                "acsTokenLink": {
                  "type": "string",
                  "description": "URL to retrieve ACS token for epub download. (In LITE projection.)"
                }
              }
            },
            "explicitOfflineLicenseManagement": {
              "description": "Whether this volume requires that the client explicitly request offline download license rather than have it done automatically when loading the content, if the client supports it.",
              "type": "boolean"
            },
            "downloadAccess": {
              "$ref": "DownloadAccessRestriction",
              "description": "Information about a volume's download license access restrictions."
            },
            "embeddable": {
              "type": "boolean",
              "description": "Whether this volume can be embedded in a viewport using the Embedded Viewer API."
            },
            "driveImportedContentLink": {
              "type": "string",
              "description": "URL to the Google Drive viewer if this volume is uploaded by the user by selecting the file from Google Drive."
            },
            "webReaderLink": {
              "type": "string",
              "description": "URL to read this volume on the Google Books site. Link will not allow users to read non-viewable volumes."
            },
            "quoteSharingAllowed": {
              "description": "Whether quote sharing is allowed for this volume.",
              "type": "boolean"
            },
            "textToSpeechPermission": {
              "description": "Whether text-to-speech is permitted for this volume. Values can be ALLOWED, ALLOWED_FOR_ACCESSIBILITY, or NOT_ALLOWED.",
              "type": "string"
            },
            "accessViewStatus": {
              "type": "string",
              "description": "Combines the access and viewability of this volume into a single status field for this user. Values can be FULL_PURCHASED, FULL_PUBLIC_DOMAIN, SAMPLE or NONE. (In LITE projection.)"
            },
            "country": {
              "description": "The two-letter ISO_3166-1 country code for which this access information is valid. (In LITE projection.)",
              "type": "string"
            },
            "pdf": {
              "type": "object",
              "properties": {
                "isAvailable": {
                  "type": "boolean",
                  "description": "Is a scanned image pdf available either as public domain or for purchase. (In LITE projection.)"
                },
                "acsTokenLink": {
                  "type": "string",
                  "description": "URL to retrieve ACS token for pdf download. (In LITE projection.)"
                },
                "downloadLink": {
                  "type": "string",
                  "description": "URL to download pdf. (In LITE projection.)"
                }
              },
              "description": "Information about pdf content. (In LITE projection.)"
            },
            "publicDomain": {
              "type": "boolean",
              "description": "Whether or not this book is public domain in the country listed above."
            },
            "viewOrderUrl": {
              "description": "For ordered but not yet processed orders, we give a URL that can be used to go to the appropriate Google Wallet page.",
              "type": "string"
            },
            "viewability": {
              "type": "string",
              "description": "The read access of a volume. Possible values are PARTIAL, ALL_PAGES, NO_PAGES or UNKNOWN. This value depends on the country listed above. A value of PARTIAL means that the publisher has allowed some portion of the volume to be viewed publicly, without purchase. This can apply to eBooks as well as non-eBooks. Public domain books will always have a value of ALL_PAGES."
            }
          },
          "description": "Any information about a volume related to reading or obtaining that volume text. This information can depend on country (books may be public domain in one country but not in another, e.g.)."
        },
        "userInfo": {
          "description": "User specific information related to this volume. (e.g. page this user last read or whether they purchased this book)",
          "type": "object",
          "properties": {
            "updated": {
              "type": "string",
              "description": "Timestamp when this volume was last modified by a user action, such as a reading position update, volume purchase or writing a review. (RFC 3339 UTC date-time format)."
            },
            "acquisitionType": {
              "format": "int32",
              "type": "integer",
              "description": "How this volume was acquired."
            },
            "familySharing": {
              "properties": {
                "isSharingDisabledByFop": {
                  "type": "boolean",
                  "description": "Whether or not sharing this volume is temporarily disabled due to issues with the Family Wallet."
                },
                "familyRole": {
                  "description": "The role of the user in the family.",
                  "type": "string"
                },
                "isSharingAllowed": {
                  "type": "boolean",
                  "description": "Whether or not this volume can be shared with the family by the user. This includes sharing eligibility of both the volume and the user. If the value is true, the user can initiate a family sharing action."
                }
              },
              "type": "object",
              "description": "Information on the ability to share with the family."
            },
            "isPreordered": {
              "type": "boolean",
              "description": "Whether or not this volume was pre-ordered by the authenticated user making the request. (In LITE projection.)"
            },
            "acquiredTime": {
              "type": "string",
              "description": "Timestamp when this volume was acquired by the user. (RFC 3339 UTC date-time format) Acquiring includes purchase, user upload, receiving family sharing, etc."
            },
            "copy": {
              "type": "object",
              "description": "Copy/Paste accounting information.",
              "properties": {
                "limitType": {
                  "type": "string"
                },
                "updated": {
                  "type": "string"
                },
                "allowedCharacterCount": {
                  "type": "integer",
                  "format": "int32"
                },
                "remainingCharacterCount": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "isFamilySharedToUser": {
              "type": "boolean",
              "description": "Whether or not the user received this volume through family sharing."
            },
            "isFamilySharedFromUser": {
              "description": "Whether or not the user shared this volume with the family.",
              "type": "boolean"
            },
            "isFamilySharingDisabledByFop": {
              "description": "Deprecated: Replaced by familySharing.",
              "type": "boolean"
            },
            "readingPosition": {
              "description": "The user's current reading position in the volume, if one is available. (In LITE projection.)",
              "$ref": "ReadingPosition"
            },
            "isPurchased": {
              "type": "boolean",
              "description": "Whether or not this volume was purchased by the authenticated user making the request. (In LITE projection.)"
            },
            "entitlementType": {
              "type": "integer",
              "description": "Whether this volume is purchased, sample, pd download etc.",
              "format": "int32"
            },
            "userUploadedVolumeInfo": {
              "properties": {
                "processingState": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "isUploaded": {
              "type": "boolean",
              "description": "Whether or not this volume was user uploaded."
            },
            "isInMyBooks": {
              "type": "boolean",
              "description": "Whether or not this volume is currently in \"my books.\""
            },
            "isFamilySharingAllowed": {
              "description": "Deprecated: Replaced by familySharing.",
              "type": "boolean"
            },
            "review": {
              "description": "This user's review of this volume, if one exists.",
              "$ref": "Review"
            },
            "rentalState": {
              "type": "string",
              "description": "Whether this book is an active or an expired rental."
            },
            "rentalPeriod": {
              "description": "Period during this book is/was a valid rental.",
              "properties": {
                "startUtcSec": {
                  "type": "string",
                  "format": "int64"
                },
                "endUtcSec": {
                  "type": "string",
                  "format": "int64"
                }
              },
              "type": "object"
            }
          }
        },
        "selfLink": {
          "type": "string",
          "description": "URL to this resource. (In LITE projection.)"
        },
        "layerInfo": {
          "properties": {
            "layers": {
              "description": "A layer should appear here if and only if the layer exists for this book.",
              "items": {
                "type": "object",
                "properties": {
                  "layerId": {
                    "description": "The layer id of this layer (e.g. \"geo\").",
                    "type": "string"
                  },
                  "volumeAnnotationsVersion": {
                    "description": "The current version of this layer's volume annotations. Note that this version applies only to the data in the books.layers.volumeAnnotations.* responses. The actual annotation data is versioned separately.",
                    "type": "string"
                  }
                }
              },
              "type": "array"
            }
          },
          "description": "What layers exist in this volume and high level information about them.",
          "type": "object"
        },
        "etag": {
          "type": "string",
          "description": "Opaque identifier for a specific version of a volume resource. (In LITE projection)"
        },
        "volumeInfo": {
          "description": "General volume information.",
          "type": "object",
          "properties": {
            "ratingsCount": {
              "description": "The number of review ratings for this volume.",
              "type": "integer",
              "format": "int32"
            },
            "printedPageCount": {
              "format": "int32",
              "type": "integer",
              "description": "Total number of printed pages in generated pdf representation."
            },
            "language": {
              "type": "string",
              "description": "Best language for this volume (based on content). It is the two-letter ISO 639-1 code such as 'fr', 'en', etc."
            },
            "imageLinks": {
              "properties": {
                "extraLarge": {
                  "type": "string",
                  "description": "Image link for extra large size (width of ~1280 pixels). (In LITE projection)"
                },
                "smallThumbnail": {
                  "type": "string",
                  "description": "Image link for small thumbnail size (width of ~80 pixels). (In LITE projection)"
                },
                "medium": {
                  "type": "string",
                  "description": "Image link for medium size (width of ~575 pixels). (In LITE projection)"
                },
                "thumbnail": {
                  "type": "string",
                  "description": "Image link for thumbnail size (width of ~128 pixels). (In LITE projection)"
                },
                "small": {
                  "type": "string",
                  "description": "Image link for small size (width of ~300 pixels). (In LITE projection)"
                },
                "large": {
                  "type": "string",
                  "description": "Image link for large size (width of ~800 pixels). (In LITE projection)"
                }
              },
              "type": "object",
              "description": "A list of image links for all the sizes that are available. (In LITE projection.)"
            },
            "authors": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The names of the authors and/or editors for this volume. (In LITE projection)"
            },
            "maturityRating": {
              "type": "string"
            },
            "contentVersion": {
              "description": "An identifier for the version of the volume content (text & images). (In LITE projection)",
              "type": "string"
            },
            "comicsContent": {
              "type": "boolean",
              "description": "Whether the volume has comics content."
            },
            "infoLink": {
              "type": "string",
              "description": "URL to view information about this volume on the Google Books site. (In LITE projection)"
            },
            "previewLink": {
              "type": "string",
              "description": "URL to preview this volume on the Google Books site."
            },
            "mainCategory": {
              "description": "The main category to which this volume belongs. It will be the category from the categories list returned below that has the highest weight.",
              "type": "string"
            },
            "publishedDate": {
              "type": "string",
              "description": "Date of publication. (In LITE projection.)"
            },
            "canonicalVolumeLink": {
              "description": "Canonical URL for a volume. (In LITE projection.)",
              "type": "string"
            },
            "categories": {
              "description": "A list of subject categories, such as \"Fiction\", \"Suspense\", etc.",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "title": {
              "type": "string",
              "description": "Volume title. (In LITE projection.)"
            },
            "industryIdentifiers": {
              "type": "array",
              "items": {
                "properties": {
                  "identifier": {
                    "description": "Industry specific volume identifier.",
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "description": "Identifier type. Possible values are ISBN_10, ISBN_13, ISSN and OTHER."
                  }
                },
                "type": "object"
              },
              "description": "Industry standard identifiers for this volume."
            },
            "description": {
              "type": "string",
              "description": "A synopsis of the volume. The text of the description is formatted in HTML and includes simple formatting elements, such as b, i, and br tags. (In LITE projection.)"
            },
            "readingModes": {
              "type": "object",
              "description": "The reading modes available for this volume.",
              "properties": {
                "image": {
                  "type": "boolean"
                },
                "text": {
                  "type": "boolean"
                }
              }
            },
            "dimensions": {
              "properties": {
                "thickness": {
                  "description": "Thickness of this volume (in cm).",
                  "type": "string"
                },
                "width": {
                  "type": "string",
                  "description": "Width of this volume (in cm)."
                },
                "height": {
                  "type": "string",
                  "description": "Height or length of this volume (in cm)."
                }
              },
              "type": "object",
              "description": "Physical dimensions of this volume."
            },
            "seriesInfo": {
              "$ref": "Volumeseriesinfo"
            },
            "allowAnonLogging": {
              "type": "boolean",
              "description": "Whether anonymous logging should be allowed."
            },
            "panelizationSummary": {
              "type": "object",
              "properties": {
                "containsImageBubbles": {
                  "type": "boolean"
                },
                "imageBubbleVersion": {
                  "type": "string"
                },
                "epubBubbleVersion": {
                  "type": "string"
                },
                "containsEpubBubbles": {
                  "type": "boolean"
                }
              },
              "description": "A top-level summary of the panelization info in this volume."
            },
            "subtitle": {
              "type": "string",
              "description": "Volume subtitle. (In LITE projection.)"
            },
            "printType": {
              "description": "Type of publication of this volume. Possible values are BOOK or MAGAZINE.",
              "type": "string"
            },
            "publisher": {
              "description": "Publisher of this volume. (In LITE projection.)",
              "type": "string"
            },
            "samplePageCount": {
              "description": "Total number of sample pages as per publisher metadata.",
              "format": "int32",
              "type": "integer"
            },
            "pageCount": {
              "format": "int32",
              "type": "integer",
              "description": "Total number of pages as per publisher metadata."
            },
            "averageRating": {
              "type": "number",
              "description": "The mean review rating for this volume. (min = 1.0, max = 5.0)",
              "format": "double"
            }
          }
        },
        "saleInfo": {
          "description": "Any information about a volume related to the eBookstore and/or purchaseability. This information can depend on the country where the request originates from (i.e. books may not be for sale in certain countries).",
          "type": "object",
          "properties": {
            "country": {
              "description": "The two-letter ISO_3166-1 country code for which this sale information is valid. (In LITE projection.)",
              "type": "string"
            },
            "onSaleDate": {
              "description": "The date on which this book is available for sale.",
              "type": "string"
            },
            "retailPrice": {
              "description": "The actual selling price of the book. This is the same as the suggested retail or list price unless there are offers or discounts on this volume. (In LITE projection.)",
              "properties": {
                "currencyCode": {
                  "description": "An ISO 4217, three-letter currency code. (In LITE projection.)",
                  "type": "string"
                },
                "amount": {
                  "format": "double",
                  "description": "Amount in the currency listed below. (In LITE projection.)",
                  "type": "number"
                }
              },
              "type": "object"
            },
            "offers": {
              "items": {
                "type": "object",
                "properties": {
                  "giftable": {
                    "description": "Indicates whether the offer is giftable.",
                    "type": "boolean"
                  },
                  "retailPrice": {
                    "description": "Offer retail (=discounted) price in Micros",
                    "type": "object",
                    "properties": {
                      "currencyCode": {
                        "type": "string"
                      },
                      "amountInMicros": {
                        "format": "double",
                        "type": "number"
                      }
                    }
                  },
                  "rentalDuration": {
                    "properties": {
                      "count": {
                        "type": "number",
                        "format": "double"
                      },
                      "unit": {
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "description": "The rental duration (for rental offers only)."
                  },
                  "listPrice": {
                    "description": "Offer list (=undiscounted) price in Micros.",
                    "properties": {
                      "currencyCode": {
                        "type": "string"
                      },
                      "amountInMicros": {
                        "type": "number",
                        "format": "double"
                      }
                    },
                    "type": "object"
                  },
                  "finskyOfferType": {
                    "format": "int32",
                    "description": "The finsky offer type (e.g., PURCHASE=0 RENTAL=3)",
                    "type": "integer"
                  }
                }
              },
              "description": "Offers available for this volume (sales and rentals).",
              "type": "array"
            },
            "saleability": {
              "type": "string",
              "description": "Whether or not this book is available for sale or offered for free in the Google eBookstore for the country listed above. Possible values are FOR_SALE, FOR_RENTAL_ONLY, FOR_SALE_AND_RENTAL, FREE, NOT_FOR_SALE, or FOR_PREORDER."
            },
            "isEbook": {
              "type": "boolean",
              "description": "Whether or not this volume is an eBook (can be added to the My eBooks shelf)."
            },
            "buyLink": {
              "type": "string",
              "description": "URL to purchase this volume on the Google Books site. (In LITE projection)"
            },
            "listPrice": {
              "description": "Suggested retail price. (In LITE projection.)",
              "properties": {
                "currencyCode": {
                  "type": "string",
                  "description": "An ISO 4217, three-letter currency code. (In LITE projection.)"
                },
                "amount": {
                  "format": "double",
                  "type": "number",
                  "description": "Amount in the currency listed below. (In LITE projection.)"
                }
              },
              "type": "object"
            }
          }
        },
        "kind": {
          "description": "Resource type for a volume. (In LITE projection.)",
          "type": "string"
        },
        "id": {
          "type": "string",
          "description": "Unique identifier for a volume. (In LITE projection.)"
        }
      }
    },
    "Annotationsdata": {
      "type": "object",
      "id": "Annotationsdata",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Resource type"
        },
        "items": {
          "items": {
            "$ref": "GeoAnnotationdata"
          },
          "description": "A list of Annotation Data.",
          "type": "array"
        },
        "nextPageToken": {
          "description": "Token to pass in for pagination for the next page. This will not be present if this request does not have more results.",
          "type": "string"
        },
        "totalItems": {
          "format": "int32",
          "description": "The total number of volume annotations found.",
          "type": "integer"
        }
      }
    },
    "DownloadAccesses": {
      "type": "object",
      "properties": {
        "downloadAccessList": {
          "description": "A list of download access responses.",
          "items": {
            "$ref": "DownloadAccessRestriction"
          },
          "type": "array"
        },
        "kind": {
          "type": "string",
          "description": "Resource type."
        }
      },
      "id": "DownloadAccesses"
    },
    "Seriesmembership": {
      "properties": {
        "member": {
          "items": {
            "$ref": "Volume"
          },
          "type": "array"
        },
        "nextPageToken": {
          "type": "string"
        },
        "kind": {
          "description": "Resorce type.",
          "type": "string"
        }
      },
      "id": "Seriesmembership",
      "type": "object"
    },
    "Metadata": {
      "type": "object",
      "properties": {
        "items": {
          "items": {
            "properties": {
              "download_url": {
                "type": "string"
              },
              "encrypted_key": {
                "type": "string"
              },
              "size": {
                "format": "int64",
                "type": "string"
              },
              "language": {
                "type": "string"
              },
              "version": {
                "type": "string",
                "format": "int64"
              }
            },
            "type": "object"
          },
          "type": "array",
          "description": "A list of offline dictionary metadata."
        },
        "kind": {
          "type": "string",
          "description": "Resource type."
        }
      },
      "id": "Metadata"
    },
    "Bookshelves": {
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "Bookshelf"
          },
          "description": "A list of bookshelves."
        },
        "kind": {
          "description": "Resource type.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "Bookshelves"
    },
    "DownloadAccessRestriction": {
      "type": "object",
      "id": "DownloadAccessRestriction",
      "properties": {
        "nonce": {
          "description": "Client nonce for verification. Download access and client-validation only.",
          "type": "string"
        },
        "downloadsAcquired": {
          "type": "integer",
          "format": "int32",
          "description": "If restricted, the number of content download licenses already acquired (including the requesting client, if licensed)."
        },
        "kind": {
          "type": "string",
          "description": "Resource type."
        },
        "maxDownloadDevices": {
          "type": "integer",
          "description": "If restricted, the maximum number of content download licenses for this volume.",
          "format": "int32"
        },
        "source": {
          "description": "Client app identifier for verification. Download access and client-validation only.",
          "type": "string"
        },
        "reasonCode": {
          "description": "Error/warning reason code. Additional codes may be added in the future. 0 OK 100 ACCESS_DENIED_PUBLISHER_LIMIT 101 ACCESS_DENIED_LIMIT 200 WARNING_USED_LAST_ACCESS",
          "type": "string"
        },
        "deviceAllowed": {
          "type": "boolean",
          "description": "If restricted, whether access is granted for this (user, device, volume)."
        },
        "restricted": {
          "description": "Whether this volume has any download access restrictions.",
          "type": "boolean"
        },
        "message": {
          "type": "string",
          "description": "Error/warning message."
        },
        "volumeId": {
          "type": "string",
          "description": "Identifies the volume for which this entry applies."
        },
        "signature": {
          "description": "Response signature.",
          "type": "string"
        },
        "justAcquired": {
          "type": "boolean",
          "description": "If deviceAllowed, whether access was just acquired with this request."
        }
      }
    },
    "Annotations": {
      "id": "Annotations",
      "properties": {
        "items": {
          "description": "A list of annotations.",
          "type": "array",
          "items": {
            "$ref": "Annotation"
          }
        },
        "kind": {
          "description": "Resource type.",
          "type": "string"
        },
        "totalItems": {
          "type": "integer",
          "description": "Total number of annotations found. This may be greater than the number of notes returned in this response if results have been paginated.",
          "format": "int32"
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token to pass in for pagination for the next page. This will not be present if this request does not have more results."
        }
      },
      "type": "object"
    },
    "Review": {
      "type": "object",
      "properties": {
        "date": {
          "description": "Date of this review.",
          "type": "string"
        },
        "fullTextUrl": {
          "description": "URL for the full review text, for reviews gathered from the web.",
          "type": "string"
        },
        "content": {
          "type": "string",
          "description": "Review text."
        },
        "source": {
          "description": "Information regarding the source of this review, when the review is not from a Google Books user.",
          "type": "object",
          "properties": {
            "extraDescription": {
              "description": "Extra text about the source of the review.",
              "type": "string"
            },
            "description": {
              "type": "string",
              "description": "Name of the source."
            },
            "url": {
              "description": "URL of the source of the review.",
              "type": "string"
            }
          }
        },
        "kind": {
          "description": "Resource type for a review.",
          "type": "string"
        },
        "rating": {
          "type": "string",
          "description": "Star rating for this review. Possible values are ONE, TWO, THREE, FOUR, FIVE or NOT_RATED."
        },
        "author": {
          "type": "object",
          "description": "Author of this review.",
          "properties": {
            "displayName": {
              "description": "Name of this person.",
              "type": "string"
            }
          }
        },
        "volumeId": {
          "description": "Volume that this review is for.",
          "type": "string"
        },
        "title": {
          "description": "Title for this review.",
          "type": "string"
        },
        "type": {
          "type": "string",
          "description": "Source type for this review. Possible values are EDITORIAL, WEB_USER or GOOGLE_USER."
        }
      },
      "id": "Review"
    },
    "Empty": {
      "id": "Empty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "properties": {},
      "type": "object"
    }
  },
  "baseUrl": "https://books.googleapis.com/",
  "resources": {
    "volumes": {
      "resources": {
        "mybooks": {
          "methods": {
            "list": {
              "path": "books/v1/volumes/mybooks",
              "response": {
                "$ref": "Volumes"
              },
              "flatPath": "books/v1/volumes/mybooks",
              "parameters": {
                "source": {
                  "type": "string",
                  "description": "String to identify the originator of this request.",
                  "location": "query"
                },
                "processingState": {
                  "repeated": true,
                  "enum": [
                    "PROCESSING_STATE_UNDEFINED",
                    "COMPLETED_FAILED",
                    "COMPLETED_SUCCESS",
                    "RUNNING"
                  ],
                  "type": "string",
                  "enumDescriptions": [
                    "",
                    "The volume processing hase failed.",
                    "The volume processing was completed.",
                    "The volume processing is not completed."
                  ],
                  "location": "query",
                  "description": "The processing state of the user uploaded volumes to be returned. Applicable only if the UPLOADED is specified in the acquireMethod."
                },
                "acquireMethod": {
                  "location": "query",
                  "enum": [
                    "ACQUIRE_METHOD_UNDEFINED",
                    "FAMILY_SHARED",
                    "PREORDERED",
                    "PREVIOUSLY_RENTED",
                    "PUBLIC_DOMAIN",
                    "PURCHASED",
                    "RENTED",
                    "SAMPLE",
                    "UPLOADED"
                  ],
                  "enumDescriptions": [
                    "",
                    "Books acquired via Family Sharing",
                    "Preordered books (not yet available)",
                    "User-rented books past their expiration time",
                    "Public domain books",
                    "Purchased books",
                    "User-rented books",
                    "Sample books",
                    "User uploaded books"
                  ],
                  "description": "How the book was acquired",
                  "type": "string",
                  "repeated": true
                },
                "startIndex": {
                  "minimum": "0",
                  "type": "integer",
                  "location": "query",
                  "format": "uint32",
                  "description": "Index of the first result to return (starts at 0)"
                },
                "country": {
                  "description": "ISO-3166-1 code to override the IP-based location.",
                  "location": "query",
                  "type": "string"
                },
                "maxResults": {
                  "maximum": "100",
                  "location": "query",
                  "minimum": "0",
                  "description": "Maximum number of results to return.",
                  "format": "uint32",
                  "type": "integer"
                },
                "locale": {
                  "type": "string",
                  "description": "ISO-639-1 language and ISO-3166-1 country code. Ex:'en_US'. Used for generating recommendations.",
                  "location": "query"
                }
              },
              "parameterOrder": [],
              "description": "Return a list of books in My Library.",
              "id": "books.volumes.mybooks.list",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "httpMethod": "GET"
            }
          }
        },
        "recommended": {
          "methods": {
            "list": {
              "response": {
                "$ref": "Volumes"
              },
              "parameterOrder": [],
              "parameters": {
                "locale": {
                  "location": "query",
                  "description": "ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'. Used for generating recommendations.",
                  "type": "string"
                },
                "maxAllowedMaturityRating": {
                  "location": "query",
                  "type": "string",
                  "enum": [
                    "MAX_ALLOWED_MATURITY_RATING_UNDEFINED",
                    "MATURE",
                    "not-mature"
                  ],
                  "enumDescriptions": [
                    "",
                    "Show books which are rated mature or lower.",
                    "Show books which are rated not mature."
                  ],
                  "description": "The maximum allowed maturity rating of returned recommendations. Books with a higher maturity rating are filtered out."
                },
                "source": {
                  "location": "query",
                  "type": "string",
                  "description": "String to identify the originator of this request."
                }
              },
              "path": "books/v1/volumes/recommended",
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "id": "books.volumes.recommended.list",
              "flatPath": "books/v1/volumes/recommended",
              "description": "Return a list of recommended books for the current user."
            },
            "rate": {
              "parameters": {
                "source": {
                  "type": "string",
                  "location": "query",
                  "description": "String to identify the originator of this request."
                },
                "volumeId": {
                  "description": "ID of the source volume.",
                  "required": true,
                  "type": "string",
                  "location": "query"
                },
                "rating": {
                  "enum": [
                    "RATING_UNDEFINED",
                    "HAVE_IT",
                    "NOT_INTERESTED"
                  ],
                  "enumDescriptions": [
                    "",
                    "Rating indicating a dismissal due to ownership.",
                    "Rating indicating a negative dismissal of a volume."
                  ],
                  "required": true,
                  "type": "string",
                  "description": "Rating to be given to the volume.",
                  "location": "query"
                },
                "locale": {
                  "description": "ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'. Used for generating recommendations.",
                  "type": "string",
                  "location": "query"
                }
              },
              "parameterOrder": [
                "rating",
                "volumeId"
              ],
              "description": "Rate a recommended book for the current user.",
              "flatPath": "books/v1/volumes/recommended/rate",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "path": "books/v1/volumes/recommended/rate",
              "httpMethod": "POST",
              "response": {
                "$ref": "BooksVolumesRecommendedRateResponse"
              },
              "id": "books.volumes.recommended.rate"
            }
          }
        },
        "useruploaded": {
          "methods": {
            "list": {
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "id": "books.volumes.useruploaded.list",
              "parameters": {
                "startIndex": {
                  "minimum": "0",
                  "type": "integer",
                  "description": "Index of the first result to return (starts at 0)",
                  "location": "query",
                  "format": "uint32"
                },
                "volumeId": {
                  "description": "The ids of the volumes to be returned. If not specified all that match the processingState are returned.",
                  "location": "query",
                  "repeated": true,
                  "type": "string"
                },
                "locale": {
                  "type": "string",
                  "location": "query",
                  "description": "ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'. Used for generating recommendations."
                },
                "source": {
                  "description": "String to identify the originator of this request.",
                  "location": "query",
                  "type": "string"
                },
                "processingState": {
                  "type": "string",
                  "repeated": true,
                  "enumDescriptions": [
                    "",
                    "The volume processing hase failed.",
                    "The volume processing was completed.",
                    "The volume processing is not completed."
                  ],
                  "location": "query",
                  "description": "The processing state of the user uploaded volumes to be returned.",
                  "enum": [
                    "PROCESSING_STATE_UNDEFINED",
                    "COMPLETED_FAILED",
                    "COMPLETED_SUCCESS",
                    "RUNNING"
                  ]
                },
                "maxResults": {
                  "location": "query",
                  "maximum": "40",
                  "type": "integer",
                  "minimum": "0",
                  "description": "Maximum number of results to return.",
                  "format": "uint32"
                }
              },
              "flatPath": "books/v1/volumes/useruploaded",
              "response": {
                "$ref": "Volumes"
              },
              "parameterOrder": [],
              "path": "books/v1/volumes/useruploaded",
              "httpMethod": "GET",
              "description": "Return a list of books uploaded by the current user."
            }
          }
        },
        "associated": {
          "methods": {
            "list": {
              "parameters": {
                "association": {
                  "type": "string",
                  "location": "query",
                  "enumDescriptions": [
                    "",
                    "Recommendations for display end-of-sample.",
                    "Recommendations for display end-of-volume.",
                    "Related volumes for Play Store."
                  ],
                  "description": "Association type.",
                  "enum": [
                    "ASSOCIATION_UNDEFINED",
                    "end-of-sample",
                    "end-of-volume",
                    "related-for-play"
                  ]
                },
                "volumeId": {
                  "location": "path",
                  "description": "ID of the source volume.",
                  "required": true,
                  "type": "string"
                },
                "maxAllowedMaturityRating": {
                  "description": "The maximum allowed maturity rating of returned recommendations. Books with a higher maturity rating are filtered out.",
                  "enumDescriptions": [
                    "",
                    "Show books which are rated mature or lower.",
                    "Show books which are rated not mature."
                  ],
                  "enum": [
                    "MAX_ALLOWED_MATURITY_RATING_UNDEFINED",
                    "MATURE",
                    "not-mature"
                  ],
                  "location": "query",
                  "type": "string"
                },
                "locale": {
                  "description": "ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'. Used for generating recommendations.",
                  "location": "query",
                  "type": "string"
                },
                "source": {
                  "description": "String to identify the originator of this request.",
                  "type": "string",
                  "location": "query"
                }
              },
              "id": "books.volumes.associated.list",
              "httpMethod": "GET",
              "flatPath": "books/v1/volumes/{volumeId}/associated",
              "parameterOrder": [
                "volumeId"
              ],
              "path": "books/v1/volumes/{volumeId}/associated",
              "description": "Return a list of associated books.",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "response": {
                "$ref": "Volumes"
              }
            }
          }
        }
      },
      "methods": {
        "get": {
          "flatPath": "books/v1/volumes/{volumeId}",
          "httpMethod": "GET",
          "path": "books/v1/volumes/{volumeId}",
          "parameters": {
            "user_library_consistent_read": {
              "type": "boolean",
              "location": "query"
            },
            "projection": {
              "enumDescriptions": [
                "",
                "Includes all volume data.",
                "Includes a subset of fields in volumeInfo and accessInfo."
              ],
              "type": "string",
              "description": "Restrict information returned to a set of selected fields.",
              "enum": [
                "PROJECTION_UNDEFINED",
                "FULL",
                "LITE"
              ],
              "location": "query"
            },
            "country": {
              "description": "ISO-3166-1 code to override the IP-based location.",
              "type": "string",
              "location": "query"
            },
            "partner": {
              "description": "Brand results for partner ID.",
              "location": "query",
              "type": "string"
            },
            "source": {
              "description": "string to identify the originator of this request.",
              "type": "string",
              "location": "query"
            },
            "volumeId": {
              "type": "string",
              "description": "ID of volume to retrieve.",
              "required": true,
              "location": "path"
            },
            "includeNonComicsSeries": {
              "type": "boolean",
              "description": "Set to true to include non-comics series. Defaults to false.",
              "location": "query"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "description": "Gets volume information for a single volume.",
          "response": {
            "$ref": "Volume"
          },
          "id": "books.volumes.get",
          "parameterOrder": [
            "volumeId"
          ]
        },
        "list": {
          "path": "books/v1/volumes",
          "description": "Performs a book search.",
          "parameterOrder": [
            "q"
          ],
          "parameters": {
            "download": {
              "description": "Restrict to volumes by download availability.",
              "location": "query",
              "type": "string",
              "enum": [
                "DOWNLOAD_UNDEFINED",
                "EPUB"
              ],
              "enumDescriptions": [
                "",
                "All volumes with epub."
              ]
            },
            "libraryRestrict": {
              "enum": [
                "LIBRARY_RESTRICT_UNDEFINED",
                "my-library",
                "no-restrict"
              ],
              "type": "string",
              "location": "query",
              "enumDescriptions": [
                "",
                "Restrict to the user's library, any shelf.",
                "Do not restrict based on user's library."
              ],
              "description": "Restrict search to this user's library."
            },
            "maxResults": {
              "maximum": "40",
              "format": "uint32",
              "minimum": "0",
              "location": "query",
              "type": "integer",
              "description": "Maximum number of results to return."
            },
            "projection": {
              "enum": [
                "PROJECTION_UNDEFINED",
                "FULL",
                "LITE"
              ],
              "type": "string",
              "location": "query",
              "enumDescriptions": [
                "",
                "Includes all volume data.",
                "Includes a subset of fields in volumeInfo and accessInfo."
              ],
              "description": "Restrict information returned to a set of selected fields."
            },
            "orderBy": {
              "description": "Sort search results.",
              "type": "string",
              "enumDescriptions": [
                "",
                "Most recently published.",
                "Relevance to search terms."
              ],
              "location": "query",
              "enum": [
                "ORDER_BY_UNDEFINED",
                "newest",
                "relevance"
              ]
            },
            "maxAllowedMaturityRating": {
              "location": "query",
              "description": "The maximum allowed maturity rating of returned recommendations. Books with a higher maturity rating are filtered out.",
              "enum": [
                "MAX_ALLOWED_MATURITY_RATING_UNDEFINED",
                "MATURE",
                "not-mature"
              ],
              "enumDescriptions": [
                "",
                "Show books which are rated mature or lower.",
                "Show books which are rated not mature."
              ],
              "type": "string"
            },
            "filter": {
              "enum": [
                "FILTER_UNDEFINED",
                "ebooks",
                "free-ebooks",
                "full",
                "paid-ebooks",
                "partial"
              ],
              "enumDescriptions": [
                "",
                "All Google eBooks.",
                "Google eBook with full volume text viewability.",
                "Public can view entire volume text.",
                "Google eBook with a price.",
                "Public able to see parts of text."
              ],
              "description": "Filter search results.",
              "location": "query",
              "type": "string"
            },
            "source": {
              "type": "string",
              "location": "query",
              "description": "String to identify the originator of this request."
            },
            "printType": {
              "description": "Restrict to books or magazines.",
              "enum": [
                "PRINT_TYPE_UNDEFINED",
                "ALL",
                "BOOKS",
                "MAGAZINES"
              ],
              "location": "query",
              "enumDescriptions": [
                "",
                "All volume content types.",
                "Just books.",
                "Just magazines."
              ],
              "type": "string"
            },
            "showPreorders": {
              "location": "query",
              "description": "Set to true to show books available for preorder. Defaults to false.",
              "type": "boolean"
            },
            "q": {
              "type": "string",
              "description": "Full-text search query string.",
              "required": true,
              "location": "query"
            },
            "startIndex": {
              "format": "uint32",
              "location": "query",
              "type": "integer",
              "description": "Index of the first result to return (starts at 0)",
              "minimum": "0"
            },
            "partner": {
              "type": "string",
              "location": "query",
              "description": "Restrict and brand results for partner ID."
            },
            "langRestrict": {
              "location": "query",
              "description": "Restrict results to books with this language code.",
              "type": "string"
            }
          },
          "id": "books.volumes.list",
          "response": {
            "$ref": "Volumes"
          },
          "httpMethod": "GET",
          "flatPath": "books/v1/volumes",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ]
        }
      }
    },
    "notification": {
      "methods": {
        "get": {
          "response": {
            "$ref": "Notification"
          },
          "parameters": {
            "locale": {
              "description": "ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'. Used for generating notification title and body.",
              "type": "string",
              "location": "query"
            },
            "source": {
              "location": "query",
              "type": "string",
              "description": "String to identify the originator of this request."
            },
            "notification_id": {
              "required": true,
              "description": "String to identify the notification.",
              "type": "string",
              "location": "query"
            }
          },
          "parameterOrder": [
            "notification_id"
          ],
          "id": "books.notification.get",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "path": "books/v1/notification/get",
          "httpMethod": "GET",
          "description": "Returns notification details for a given notification id.",
          "flatPath": "books/v1/notification/get"
        }
      }
    },
    "cloudloading": {
      "methods": {
        "updateBook": {
          "path": "books/v1/cloudloading/updateBook",
          "parameters": {},
          "httpMethod": "POST",
          "parameterOrder": [],
          "request": {
            "$ref": "BooksCloudloadingResource"
          },
          "id": "books.cloudloading.updateBook",
          "description": "Updates a user-upload volume.",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "flatPath": "books/v1/cloudloading/updateBook",
          "response": {
            "$ref": "BooksCloudloadingResource"
          }
        },
        "deleteBook": {
          "flatPath": "books/v1/cloudloading/deleteBook",
          "id": "books.cloudloading.deleteBook",
          "httpMethod": "POST",
          "path": "books/v1/cloudloading/deleteBook",
          "parameterOrder": [
            "volumeId"
          ],
          "parameters": {
            "volumeId": {
              "description": "The id of the book to be removed.",
              "type": "string",
              "location": "query",
              "required": true
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "description": "Remove the book and its contents",
          "response": {
            "$ref": "Empty"
          }
        },
        "addBook": {
          "parameters": {
            "upload_client_token": {
              "location": "query",
              "description": "Scotty upload token.",
              "type": "string"
            },
            "mime_type": {
              "description": "The document MIME type. It can be set only if the drive_document_id is set.",
              "location": "query",
              "type": "string"
            },
            "drive_document_id": {
              "type": "string",
              "description": "A drive document id. The upload_client_token must not be set.",
              "location": "query"
            },
            "name": {
              "location": "query",
              "type": "string",
              "description": "The document name. It can be set only if the drive_document_id is set."
            }
          },
          "path": "books/v1/cloudloading/addBook",
          "id": "books.cloudloading.addBook",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "response": {
            "$ref": "BooksCloudloadingResource"
          },
          "parameterOrder": [],
          "flatPath": "books/v1/cloudloading/addBook",
          "description": "Add a user-upload volume and triggers processing.",
          "httpMethod": "POST"
        }
      }
    },
    "bookshelves": {
      "resources": {
        "volumes": {
          "methods": {
            "list": {
              "path": "books/v1/users/{userId}/bookshelves/{shelf}/volumes",
              "response": {
                "$ref": "Volumes"
              },
              "flatPath": "books/v1/users/{userId}/bookshelves/{shelf}/volumes",
              "description": "Retrieves volumes in a specific bookshelf for the specified user.",
              "parameters": {
                "source": {
                  "description": "String to identify the originator of this request.",
                  "location": "query",
                  "type": "string"
                },
                "startIndex": {
                  "minimum": "0",
                  "location": "query",
                  "type": "integer",
                  "description": "Index of the first element to return (starts at 0)",
                  "format": "uint32"
                },
                "maxResults": {
                  "location": "query",
                  "description": "Maximum number of results to return",
                  "minimum": "0",
                  "type": "integer",
                  "format": "uint32"
                },
                "shelf": {
                  "required": true,
                  "type": "string",
                  "description": "ID of bookshelf to retrieve volumes.",
                  "location": "path"
                },
                "showPreorders": {
                  "location": "query",
                  "type": "boolean",
                  "description": "Set to true to show pre-ordered books. Defaults to false."
                },
                "userId": {
                  "description": "ID of user for whom to retrieve bookshelf volumes.",
                  "type": "string",
                  "required": true,
                  "location": "path"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "parameterOrder": [
                "userId",
                "shelf"
              ],
              "id": "books.bookshelves.volumes.list",
              "httpMethod": "GET"
            }
          }
        }
      },
      "methods": {
        "list": {
          "httpMethod": "GET",
          "id": "books.bookshelves.list",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "description": "Retrieves a list of public bookshelves for the specified user.",
          "response": {
            "$ref": "Bookshelves"
          },
          "parameterOrder": [
            "userId"
          ],
          "path": "books/v1/users/{userId}/bookshelves",
          "flatPath": "books/v1/users/{userId}/bookshelves",
          "parameters": {
            "source": {
              "description": "String to identify the originator of this request.",
              "location": "query",
              "type": "string"
            },
            "userId": {
              "required": true,
              "type": "string",
              "location": "path",
              "description": "ID of user for whom to retrieve bookshelves."
            }
          }
        },
        "get": {
          "parameterOrder": [
            "userId",
            "shelf"
          ],
          "parameters": {
            "shelf": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "ID of bookshelf to retrieve."
            },
            "userId": {
              "type": "string",
              "description": "ID of user for whom to retrieve bookshelves.",
              "location": "path",
              "required": true
            },
            "source": {
              "location": "query",
              "description": "String to identify the originator of this request.",
              "type": "string"
            }
          },
          "description": "Retrieves metadata for a specific bookshelf for the specified user.",
          "flatPath": "books/v1/users/{userId}/bookshelves/{shelf}",
          "path": "books/v1/users/{userId}/bookshelves/{shelf}",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "id": "books.bookshelves.get",
          "response": {
            "$ref": "Bookshelf"
          },
          "httpMethod": "GET"
        }
      }
    },
    "familysharing": {
      "methods": {
        "getFamilyInfo": {
          "response": {
            "$ref": "FamilyInfo"
          },
          "parameterOrder": [],
          "parameters": {
            "source": {
              "description": "String to identify the originator of this request.",
              "location": "query",
              "type": "string"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "id": "books.familysharing.getFamilyInfo",
          "path": "books/v1/familysharing/getFamilyInfo",
          "description": "Gets information regarding the family that the user is part of.",
          "httpMethod": "GET",
          "flatPath": "books/v1/familysharing/getFamilyInfo"
        },
        "unshare": {
          "path": "books/v1/familysharing/unshare",
          "response": {
            "$ref": "Empty"
          },
          "flatPath": "books/v1/familysharing/unshare",
          "parameters": {
            "docId": {
              "type": "string",
              "description": "The docid to unshare.",
              "location": "query"
            },
            "source": {
              "type": "string",
              "description": "String to identify the originator of this request.",
              "location": "query"
            },
            "volumeId": {
              "description": "The volume to unshare.",
              "location": "query",
              "type": "string"
            }
          },
          "httpMethod": "POST",
          "id": "books.familysharing.unshare",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "description": "Initiates revoking content that has already been shared with the user's family. Empty response indicates success.",
          "parameterOrder": []
        },
        "share": {
          "id": "books.familysharing.share",
          "description": "Initiates sharing of the content with the user's family. Empty response indicates success.",
          "parameters": {
            "docId": {
              "description": "The docid to share.",
              "type": "string",
              "location": "query"
            },
            "source": {
              "description": "String to identify the originator of this request.",
              "location": "query",
              "type": "string"
            },
            "volumeId": {
              "description": "The volume to share.",
              "location": "query",
              "type": "string"
            }
          },
          "path": "books/v1/familysharing/share",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "parameterOrder": [],
          "httpMethod": "POST",
          "flatPath": "books/v1/familysharing/share",
          "response": {
            "$ref": "Empty"
          }
        }
      }
    },
    "dictionary": {
      "methods": {
        "listOfflineMetadata": {
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "parameterOrder": [
            "cpksver"
          ],
          "description": "Returns a list of offline dictionary metadata available",
          "flatPath": "books/v1/dictionary/listOfflineMetadata",
          "response": {
            "$ref": "Metadata"
          },
          "path": "books/v1/dictionary/listOfflineMetadata",
          "id": "books.dictionary.listOfflineMetadata",
          "parameters": {
            "cpksver": {
              "description": "The device/version ID from which to request the data.",
              "required": true,
              "type": "string",
              "location": "query"
            }
          }
        }
      }
    },
    "mylibrary": {
      "resources": {
        "readingpositions": {
          "methods": {
            "get": {
              "httpMethod": "GET",
              "flatPath": "books/v1/mylibrary/readingpositions/{volumeId}",
              "description": "Retrieves my reading position information for a volume.",
              "parameterOrder": [
                "volumeId"
              ],
              "parameters": {
                "source": {
                  "description": "String to identify the originator of this request.",
                  "type": "string",
                  "location": "query"
                },
                "contentVersion": {
                  "description": "Volume content version for which this reading position is requested.",
                  "type": "string",
                  "location": "query"
                },
                "volumeId": {
                  "type": "string",
                  "description": "ID of volume for which to retrieve a reading position.",
                  "location": "path",
                  "required": true
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "response": {
                "$ref": "ReadingPosition"
              },
              "id": "books.mylibrary.readingpositions.get",
              "path": "books/v1/mylibrary/readingpositions/{volumeId}"
            },
            "setPosition": {
              "httpMethod": "POST",
              "response": {
                "$ref": "Empty"
              },
              "description": "Sets my reading position information for a volume.",
              "path": "books/v1/mylibrary/readingpositions/{volumeId}/setPosition",
              "parameters": {
                "volumeId": {
                  "required": true,
                  "description": "ID of volume for which to update the reading position.",
                  "location": "path",
                  "type": "string"
                },
                "timestamp": {
                  "type": "string",
                  "location": "query",
                  "required": true,
                  "description": "RFC 3339 UTC format timestamp associated with this reading position."
                },
                "action": {
                  "enumDescriptions": [
                    "",
                    "User chose bookmark within volume.",
                    "User selected chapter from list.",
                    "Next page event.",
                    "Previous page event.",
                    "User navigated to page.",
                    "User chose search results within volume."
                  ],
                  "enum": [
                    "ACTION_UNDEFINED",
                    "bookmark",
                    "chapter",
                    "next-page",
                    "prev-page",
                    "scroll",
                    "search"
                  ],
                  "description": "Action that caused this reading position to be set.",
                  "location": "query",
                  "type": "string"
                },
                "position": {
                  "required": true,
                  "location": "query",
                  "type": "string",
                  "description": "Position string for the new volume reading position."
                },
                "contentVersion": {
                  "location": "query",
                  "type": "string",
                  "description": "Volume content version for which this reading position applies."
                },
                "source": {
                  "location": "query",
                  "type": "string",
                  "description": "String to identify the originator of this request."
                },
                "deviceCookie": {
                  "location": "query",
                  "description": "Random persistent device cookie optional on set position.",
                  "type": "string"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "parameterOrder": [
                "volumeId",
                "position",
                "timestamp"
              ],
              "flatPath": "books/v1/mylibrary/readingpositions/{volumeId}/setPosition",
              "id": "books.mylibrary.readingpositions.setPosition"
            }
          }
        },
        "bookshelves": {
          "methods": {
            "clearVolumes": {
              "response": {
                "$ref": "Empty"
              },
              "parameterOrder": [
                "shelf"
              ],
              "flatPath": "books/v1/mylibrary/bookshelves/{shelf}/clearVolumes",
              "path": "books/v1/mylibrary/bookshelves/{shelf}/clearVolumes",
              "id": "books.mylibrary.bookshelves.clearVolumes",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "parameters": {
                "shelf": {
                  "description": "ID of bookshelf from which to remove a volume.",
                  "required": true,
                  "type": "string",
                  "location": "path"
                },
                "source": {
                  "location": "query",
                  "type": "string",
                  "description": "String to identify the originator of this request."
                }
              },
              "httpMethod": "POST",
              "description": "Clears all volumes from a bookshelf."
            },
            "get": {
              "flatPath": "books/v1/mylibrary/bookshelves/{shelf}",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "parameters": {
                "shelf": {
                  "location": "path",
                  "type": "string",
                  "required": true,
                  "description": "ID of bookshelf to retrieve."
                },
                "source": {
                  "description": "String to identify the originator of this request.",
                  "type": "string",
                  "location": "query"
                }
              },
              "parameterOrder": [
                "shelf"
              ],
              "response": {
                "$ref": "Bookshelf"
              },
              "path": "books/v1/mylibrary/bookshelves/{shelf}",
              "httpMethod": "GET",
              "description": "Retrieves metadata for a specific bookshelf belonging to the authenticated user.",
              "id": "books.mylibrary.bookshelves.get"
            },
            "moveVolume": {
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "parameterOrder": [
                "shelf",
                "volumeId",
                "volumePosition"
              ],
              "description": "Moves a volume within a bookshelf.",
              "parameters": {
                "volumePosition": {
                  "format": "int32",
                  "location": "query",
                  "required": true,
                  "description": "Position on shelf to move the item (0 puts the item before the current first item, 1 puts it between the first and the second and so on.)",
                  "type": "integer"
                },
                "source": {
                  "location": "query",
                  "description": "String to identify the originator of this request.",
                  "type": "string"
                },
                "shelf": {
                  "description": "ID of bookshelf with the volume.",
                  "location": "path",
                  "type": "string",
                  "required": true
                },
                "volumeId": {
                  "location": "query",
                  "type": "string",
                  "description": "ID of volume to move.",
                  "required": true
                }
              },
              "flatPath": "books/v1/mylibrary/bookshelves/{shelf}/moveVolume",
              "response": {
                "$ref": "Empty"
              },
              "id": "books.mylibrary.bookshelves.moveVolume",
              "path": "books/v1/mylibrary/bookshelves/{shelf}/moveVolume"
            },
            "addVolume": {
              "description": "Adds a volume to a bookshelf.",
              "path": "books/v1/mylibrary/bookshelves/{shelf}/addVolume",
              "parameterOrder": [
                "shelf",
                "volumeId"
              ],
              "response": {
                "$ref": "Empty"
              },
              "flatPath": "books/v1/mylibrary/bookshelves/{shelf}/addVolume",
              "httpMethod": "POST",
              "parameters": {
                "reason": {
                  "enumDescriptions": [
                    "",
                    "Volumes added from the PREX flow on iOS.",
                    "Volumes added from the Search flow on iOS.",
                    "Volumes added from the Onboarding flow."
                  ],
                  "description": "The reason for which the book is added to the library.",
                  "location": "query",
                  "enum": [
                    "REASON_UNDEFINED",
                    "IOS_PREX",
                    "IOS_SEARCH",
                    "ONBOARDING"
                  ],
                  "type": "string"
                },
                "source": {
                  "location": "query",
                  "description": "String to identify the originator of this request.",
                  "type": "string"
                },
                "shelf": {
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "description": "ID of bookshelf to which to add a volume."
                },
                "volumeId": {
                  "required": true,
                  "type": "string",
                  "description": "ID of volume to add.",
                  "location": "query"
                }
              },
              "id": "books.mylibrary.bookshelves.addVolume",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ]
            },
            "list": {
              "response": {
                "$ref": "Bookshelves"
              },
              "description": "Retrieves a list of bookshelves belonging to the authenticated user.",
              "parameterOrder": [],
              "path": "books/v1/mylibrary/bookshelves",
              "parameters": {
                "source": {
                  "description": "String to identify the originator of this request.",
                  "location": "query",
                  "type": "string"
                }
              },
              "flatPath": "books/v1/mylibrary/bookshelves",
              "id": "books.mylibrary.bookshelves.list",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "httpMethod": "GET"
            },
            "removeVolume": {
              "parameters": {
                "reason": {
                  "description": "The reason for which the book is removed from the library.",
                  "type": "string",
                  "location": "query",
                  "enumDescriptions": [
                    "",
                    "Samples removed from the Onboarding flow."
                  ],
                  "enum": [
                    "REASON_UNDEFINED",
                    "ONBOARDING"
                  ]
                },
                "volumeId": {
                  "location": "query",
                  "required": true,
                  "description": "ID of volume to remove.",
                  "type": "string"
                },
                "source": {
                  "location": "query",
                  "description": "String to identify the originator of this request.",
                  "type": "string"
                },
                "shelf": {
                  "location": "path",
                  "type": "string",
                  "required": true,
                  "description": "ID of bookshelf from which to remove a volume."
                }
              },
              "description": "Removes a volume from a bookshelf.",
              "flatPath": "books/v1/mylibrary/bookshelves/{shelf}/removeVolume",
              "id": "books.mylibrary.bookshelves.removeVolume",
              "parameterOrder": [
                "shelf",
                "volumeId"
              ],
              "path": "books/v1/mylibrary/bookshelves/{shelf}/removeVolume",
              "httpMethod": "POST",
              "response": {
                "$ref": "Empty"
              },
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ]
            }
          },
          "resources": {
            "volumes": {
              "methods": {
                "list": {
                  "description": "Gets volume information for volumes on a bookshelf.",
                  "parameterOrder": [
                    "shelf"
                  ],
                  "flatPath": "books/v1/mylibrary/bookshelves/{shelf}/volumes",
                  "httpMethod": "GET",
                  "path": "books/v1/mylibrary/bookshelves/{shelf}/volumes",
                  "scopes": [
                    "https://www.googleapis.com/auth/books"
                  ],
                  "id": "books.mylibrary.bookshelves.volumes.list",
                  "parameters": {
                    "shelf": {
                      "location": "path",
                      "description": "The bookshelf ID or name retrieve volumes for.",
                      "type": "string",
                      "required": true
                    },
                    "q": {
                      "type": "string",
                      "description": "Full-text search query string in this bookshelf.",
                      "location": "query"
                    },
                    "source": {
                      "type": "string",
                      "location": "query",
                      "description": "String to identify the originator of this request."
                    },
                    "showPreorders": {
                      "location": "query",
                      "description": "Set to true to show pre-ordered books. Defaults to false.",
                      "type": "boolean"
                    },
                    "startIndex": {
                      "description": "Index of the first element to return (starts at 0)",
                      "location": "query",
                      "format": "uint32",
                      "minimum": "0",
                      "type": "integer"
                    },
                    "country": {
                      "location": "query",
                      "description": "ISO-3166-1 code to override the IP-based location.",
                      "type": "string"
                    },
                    "maxResults": {
                      "minimum": "0",
                      "format": "uint32",
                      "type": "integer",
                      "location": "query",
                      "description": "Maximum number of results to return"
                    },
                    "projection": {
                      "location": "query",
                      "enumDescriptions": [
                        "",
                        "Includes all volume data.",
                        "Includes a subset of fields in volumeInfo and accessInfo."
                      ],
                      "description": "Restrict information returned to a set of selected fields.",
                      "enum": [
                        "PROJECTION_UNDEFINED",
                        "FULL",
                        "LITE"
                      ],
                      "type": "string"
                    }
                  },
                  "response": {
                    "$ref": "Volumes"
                  }
                }
              }
            }
          }
        },
        "annotations": {
          "methods": {
            "summary": {
              "path": "books/v1/mylibrary/annotations/summary",
              "parameters": {
                "volumeId": {
                  "location": "query",
                  "type": "string",
                  "required": true,
                  "description": "Volume id to get the summary for."
                },
                "layerIds": {
                  "type": "string",
                  "repeated": true,
                  "location": "query",
                  "description": "Array of layer IDs to get the summary for.",
                  "required": true
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "flatPath": "books/v1/mylibrary/annotations/summary",
              "response": {
                "$ref": "AnnotationsSummary"
              },
              "description": "Gets the summary of specified layers.",
              "id": "books.mylibrary.annotations.summary",
              "parameterOrder": [
                "layerIds",
                "volumeId"
              ],
              "httpMethod": "POST"
            },
            "update": {
              "description": "Updates an existing annotation.",
              "request": {
                "$ref": "Annotation"
              },
              "parameters": {
                "annotationId": {
                  "description": "The ID for the annotation to update.",
                  "location": "path",
                  "type": "string",
                  "required": true
                },
                "source": {
                  "type": "string",
                  "description": "String to identify the originator of this request.",
                  "location": "query"
                }
              },
              "response": {
                "$ref": "Annotation"
              },
              "parameterOrder": [
                "annotationId"
              ],
              "httpMethod": "PUT",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "id": "books.mylibrary.annotations.update",
              "path": "books/v1/mylibrary/annotations/{annotationId}",
              "flatPath": "books/v1/mylibrary/annotations/{annotationId}"
            },
            "insert": {
              "description": "Inserts a new annotation.",
              "request": {
                "$ref": "Annotation"
              },
              "path": "books/v1/mylibrary/annotations",
              "id": "books.mylibrary.annotations.insert",
              "httpMethod": "POST",
              "flatPath": "books/v1/mylibrary/annotations",
              "parameterOrder": [],
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "parameters": {
                "source": {
                  "type": "string",
                  "location": "query",
                  "description": "String to identify the originator of this request."
                },
                "country": {
                  "location": "query",
                  "description": "ISO-3166-1 code to override the IP-based location.",
                  "type": "string"
                },
                "annotationId": {
                  "type": "string",
                  "description": "The ID for the annotation to insert.",
                  "location": "query"
                },
                "showOnlySummaryInResponse": {
                  "location": "query",
                  "type": "boolean",
                  "description": "Requests that only the summary of the specified layer be provided in the response."
                }
              },
              "response": {
                "$ref": "Annotation"
              }
            },
            "list": {
              "parameters": {
                "showDeleted": {
                  "type": "boolean",
                  "description": "Set to true to return deleted annotations. updatedMin must be in the request to use this. Defaults to false.",
                  "location": "query"
                },
                "contentVersion": {
                  "type": "string",
                  "location": "query",
                  "description": "The content version for the requested volume."
                },
                "layerIds": {
                  "type": "string",
                  "repeated": true,
                  "location": "query",
                  "description": "The layer ID(s) to limit annotation by."
                },
                "updatedMin": {
                  "type": "string",
                  "description": "RFC 3339 timestamp to restrict to items updated since this timestamp (inclusive).",
                  "location": "query"
                },
                "source": {
                  "type": "string",
                  "location": "query",
                  "description": "String to identify the originator of this request."
                },
                "updatedMax": {
                  "location": "query",
                  "description": "RFC 3339 timestamp to restrict to items updated prior to this timestamp (exclusive).",
                  "type": "string"
                },
                "volumeId": {
                  "location": "query",
                  "type": "string",
                  "description": "The volume to restrict annotations to."
                },
                "layerId": {
                  "type": "string",
                  "location": "query",
                  "description": "The layer ID to limit annotation by."
                },
                "maxResults": {
                  "type": "integer",
                  "location": "query",
                  "maximum": "40",
                  "format": "uint32",
                  "description": "Maximum number of results to return",
                  "minimum": "0"
                },
                "pageToken": {
                  "type": "string",
                  "description": "The value of the nextToken from the previous page.",
                  "location": "query"
                }
              },
              "id": "books.mylibrary.annotations.list",
              "httpMethod": "GET",
              "response": {
                "$ref": "Annotations"
              },
              "description": "Retrieves a list of annotations, possibly filtered.",
              "flatPath": "books/v1/mylibrary/annotations",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "path": "books/v1/mylibrary/annotations",
              "parameterOrder": []
            },
            "delete": {
              "response": {
                "$ref": "Empty"
              },
              "parameters": {
                "source": {
                  "type": "string",
                  "location": "query",
                  "description": "String to identify the originator of this request."
                },
                "annotationId": {
                  "type": "string",
                  "location": "path",
                  "required": true,
                  "description": "The ID for the annotation to delete."
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "httpMethod": "DELETE",
              "path": "books/v1/mylibrary/annotations/{annotationId}",
              "flatPath": "books/v1/mylibrary/annotations/{annotationId}",
              "description": "Deletes an annotation.",
              "id": "books.mylibrary.annotations.delete",
              "parameterOrder": [
                "annotationId"
              ]
            }
          }
        }
      }
    },
    "myconfig": {
      "methods": {
        "getUserSettings": {
          "id": "books.myconfig.getUserSettings",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "description": "Gets the current settings for the user.",
          "parameterOrder": [],
          "path": "books/v1/myconfig/getUserSettings",
          "httpMethod": "GET",
          "parameters": {
            "country": {
              "description": "Unused. Added only to workaround TEX mandatory request template requirement",
              "type": "string",
              "location": "query"
            }
          },
          "response": {
            "$ref": "Usersettings"
          },
          "flatPath": "books/v1/myconfig/getUserSettings"
        },
        "syncVolumeLicenses": {
          "path": "books/v1/myconfig/syncVolumeLicenses",
          "response": {
            "$ref": "Volumes"
          },
          "parameterOrder": [
            "cpksver",
            "nonce",
            "source"
          ],
          "description": "Request downloaded content access for specified volumes on the My eBooks shelf.",
          "parameters": {
            "cpksver": {
              "required": true,
              "type": "string",
              "description": "The device/version ID from which to release the restriction.",
              "location": "query"
            },
            "nonce": {
              "type": "string",
              "location": "query",
              "description": "The client nonce value.",
              "required": true
            },
            "source": {
              "required": true,
              "location": "query",
              "type": "string",
              "description": "String to identify the originator of this request."
            },
            "locale": {
              "location": "query",
              "type": "string",
              "description": "ISO-639-1, ISO-3166-1 codes for message localization, i.e. en_US."
            },
            "features": {
              "location": "query",
              "enum": [
                "FEATURES_UNDEFINED",
                "RENTALS"
              ],
              "type": "string",
              "repeated": true,
              "description": "List of features supported by the client, i.e., 'RENTALS'",
              "enumDescriptions": [
                "",
                "Client supports rentals."
              ]
            },
            "volumeIds": {
              "location": "query",
              "description": "The volume(s) to request download restrictions for.",
              "repeated": true,
              "type": "string"
            },
            "showPreorders": {
              "location": "query",
              "description": "Set to true to show pre-ordered books. Defaults to false.",
              "type": "boolean"
            },
            "includeNonComicsSeries": {
              "location": "query",
              "description": "Set to true to include non-comics series. Defaults to false.",
              "type": "boolean"
            }
          },
          "id": "books.myconfig.syncVolumeLicenses",
          "httpMethod": "POST",
          "flatPath": "books/v1/myconfig/syncVolumeLicenses",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ]
        },
        "updateUserSettings": {
          "response": {
            "$ref": "Usersettings"
          },
          "parameterOrder": [],
          "httpMethod": "POST",
          "flatPath": "books/v1/myconfig/updateUserSettings",
          "description": "Sets the settings for the user. If a sub-object is specified, it will overwrite the existing sub-object stored in the server. Unspecified sub-objects will retain the existing value.",
          "parameters": {},
          "request": {
            "$ref": "Usersettings"
          },
          "id": "books.myconfig.updateUserSettings",
          "path": "books/v1/myconfig/updateUserSettings",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ]
        },
        "releaseDownloadAccess": {
          "flatPath": "books/v1/myconfig/releaseDownloadAccess",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "id": "books.myconfig.releaseDownloadAccess",
          "parameters": {
            "source": {
              "location": "query",
              "type": "string",
              "description": "String to identify the originator of this request."
            },
            "locale": {
              "type": "string",
              "description": "ISO-639-1, ISO-3166-1 codes for message localization, i.e. en_US.",
              "location": "query"
            },
            "cpksver": {
              "location": "query",
              "description": "The device/version ID from which to release the restriction.",
              "type": "string",
              "required": true
            },
            "volumeIds": {
              "type": "string",
              "repeated": true,
              "required": true,
              "description": "The volume(s) to release restrictions for.",
              "location": "query"
            }
          },
          "description": "Release downloaded content access restriction.",
          "path": "books/v1/myconfig/releaseDownloadAccess",
          "response": {
            "$ref": "DownloadAccesses"
          },
          "httpMethod": "POST",
          "parameterOrder": [
            "cpksver",
            "volumeIds"
          ]
        },
        "requestAccess": {
          "flatPath": "books/v1/myconfig/requestAccess",
          "response": {
            "$ref": "RequestAccessData"
          },
          "path": "books/v1/myconfig/requestAccess",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "httpMethod": "POST",
          "parameterOrder": [
            "cpksver",
            "nonce",
            "source",
            "volumeId"
          ],
          "description": "Request concurrent and download access restrictions.",
          "id": "books.myconfig.requestAccess",
          "parameters": {
            "volumeId": {
              "type": "string",
              "required": true,
              "location": "query",
              "description": "The volume to request concurrent/download restrictions for."
            },
            "nonce": {
              "required": true,
              "location": "query",
              "description": "The client nonce value.",
              "type": "string"
            },
            "source": {
              "description": "String to identify the originator of this request.",
              "location": "query",
              "required": true,
              "type": "string"
            },
            "cpksver": {
              "location": "query",
              "type": "string",
              "description": "The device/version ID from which to request the restrictions.",
              "required": true
            },
            "locale": {
              "type": "string",
              "description": "ISO-639-1, ISO-3166-1 codes for message localization, i.e. en_US.",
              "location": "query"
            },
            "licenseTypes": {
              "location": "query",
              "enumDescriptions": [
                "",
                "Both concurrent and download licenses.",
                "Concurrent access license.",
                "Offline download access license."
              ],
              "enum": [
                "LICENSE_TYPES_UNDEFINED",
                "BOTH",
                "CONCURRENT",
                "DOWNLOAD"
              ],
              "description": "The type of access license to request. If not specified, the default is BOTH.",
              "type": "string"
            }
          }
        }
      }
    },
    "onboarding": {
      "methods": {
        "listCategoryVolumes": {
          "id": "books.onboarding.listCategoryVolumes",
          "parameters": {
            "locale": {
              "location": "query",
              "description": "ISO-639-1 language and ISO-3166-1 country code. Default is en-US if unset.",
              "type": "string"
            },
            "maxAllowedMaturityRating": {
              "location": "query",
              "enumDescriptions": [
                "",
                "Show books which are rated mature or lower.",
                "Show books which are rated not mature."
              ],
              "description": "The maximum allowed maturity rating of returned volumes. Books with a higher maturity rating are filtered out.",
              "enum": [
                "MAX_ALLOWED_MATURITY_RATING_UNDEFINED",
                "MATURE",
                "not-mature"
              ],
              "type": "string"
            },
            "pageSize": {
              "type": "integer",
              "format": "uint32",
              "description": "Number of maximum results per page to be included in the response.",
              "location": "query"
            },
            "pageToken": {
              "type": "string",
              "description": "The value of the nextToken from the previous page.",
              "location": "query"
            },
            "categoryId": {
              "repeated": true,
              "description": "List of category ids requested.",
              "type": "string",
              "location": "query"
            }
          },
          "response": {
            "$ref": "Volume2"
          },
          "flatPath": "books/v1/onboarding/listCategoryVolumes",
          "path": "books/v1/onboarding/listCategoryVolumes",
          "description": "List available volumes under categories for onboarding experience.",
          "httpMethod": "GET",
          "parameterOrder": [],
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ]
        },
        "listCategories": {
          "flatPath": "books/v1/onboarding/listCategories",
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "path": "books/v1/onboarding/listCategories",
          "parameterOrder": [],
          "id": "books.onboarding.listCategories",
          "response": {
            "$ref": "Category"
          },
          "parameters": {
            "locale": {
              "type": "string",
              "location": "query",
              "description": "ISO-639-1 language and ISO-3166-1 country code. Default is en-US if unset."
            }
          },
          "description": "List categories for onboarding experience."
        }
      }
    },
    "series": {
      "resources": {
        "membership": {
          "methods": {
            "get": {
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "path": "books/v1/series/membership/get",
              "parameterOrder": [
                "series_id"
              ],
              "id": "books.series.membership.get",
              "parameters": {
                "series_id": {
                  "description": "String that identifies the series",
                  "location": "query",
                  "type": "string",
                  "required": true
                },
                "page_token": {
                  "description": "The value of the nextToken from the previous page.",
                  "location": "query",
                  "type": "string"
                },
                "page_size": {
                  "format": "uint32",
                  "type": "integer",
                  "location": "query",
                  "description": "Number of maximum results per page to be included in the response."
                }
              },
              "flatPath": "books/v1/series/membership/get",
              "httpMethod": "GET",
              "response": {
                "$ref": "Seriesmembership"
              },
              "description": "Returns Series membership data given the series id."
            }
          }
        }
      },
      "methods": {
        "get": {
          "parameterOrder": [
            "series_id"
          ],
          "response": {
            "$ref": "Series"
          },
          "id": "books.series.get",
          "flatPath": "books/v1/series/get",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "parameters": {
            "series_id": {
              "repeated": true,
              "description": "String that identifies the series",
              "required": true,
              "type": "string",
              "location": "query"
            }
          },
          "httpMethod": "GET",
          "description": "Returns Series metadata for the given series ids.",
          "path": "books/v1/series/get"
        }
      }
    },
    "personalizedstream": {
      "methods": {
        "get": {
          "path": "books/v1/personalizedstream/get",
          "flatPath": "books/v1/personalizedstream/get",
          "response": {
            "$ref": "Discoveryclusters"
          },
          "parameterOrder": [],
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "parameters": {
            "locale": {
              "location": "query",
              "description": "ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'. Used for generating recommendations.",
              "type": "string"
            },
            "maxAllowedMaturityRating": {
              "type": "string",
              "enum": [
                "MAX_ALLOWED_MATURITY_RATING_UNDEFINED",
                "MATURE",
                "not-mature"
              ],
              "description": "The maximum allowed maturity rating of returned recommendations. Books with a higher maturity rating are filtered out.",
              "enumDescriptions": [
                "",
                "Show books which are rated mature or lower.",
                "Show books which are rated not mature."
              ],
              "location": "query"
            },
            "source": {
              "location": "query",
              "type": "string",
              "description": "String to identify the originator of this request."
            }
          },
          "id": "books.personalizedstream.get",
          "httpMethod": "GET",
          "description": "Returns a stream of personalized book clusters"
        }
      }
    },
    "layers": {
      "methods": {
        "list": {
          "parameters": {
            "pageToken": {
              "location": "query",
              "type": "string",
              "description": "The value of the nextToken from the previous page."
            },
            "contentVersion": {
              "location": "query",
              "type": "string",
              "description": "The content version for the requested volume."
            },
            "volumeId": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "The volume to retrieve layers for."
            },
            "source": {
              "description": "String to identify the originator of this request.",
              "location": "query",
              "type": "string"
            },
            "maxResults": {
              "description": "Maximum number of results to return",
              "minimum": "0",
              "maximum": "200",
              "format": "uint32",
              "type": "integer",
              "location": "query"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "path": "books/v1/volumes/{volumeId}/layersummary",
          "description": "List the layer summaries for a volume.",
          "response": {
            "$ref": "Layersummaries"
          },
          "parameterOrder": [
            "volumeId"
          ],
          "id": "books.layers.list",
          "flatPath": "books/v1/volumes/{volumeId}/layersummary",
          "httpMethod": "GET"
        },
        "get": {
          "parameters": {
            "summaryId": {
              "required": true,
              "description": "The ID for the layer to get the summary for.",
              "type": "string",
              "location": "path"
            },
            "volumeId": {
              "location": "path",
              "required": true,
              "description": "The volume to retrieve layers for.",
              "type": "string"
            },
            "contentVersion": {
              "location": "query",
              "description": "The content version for the requested volume.",
              "type": "string"
            },
            "source": {
              "description": "String to identify the originator of this request.",
              "location": "query",
              "type": "string"
            }
          },
          "id": "books.layers.get",
          "parameterOrder": [
            "volumeId",
            "summaryId"
          ],
          "flatPath": "books/v1/volumes/{volumeId}/layersummary/{summaryId}",
          "path": "books/v1/volumes/{volumeId}/layersummary/{summaryId}",
          "httpMethod": "GET",
          "description": "Gets the layer summary for a volume.",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "response": {
            "$ref": "Layersummary"
          }
        }
      },
      "resources": {
        "volumeAnnotations": {
          "methods": {
            "get": {
              "httpMethod": "GET",
              "response": {
                "$ref": "Volumeannotation"
              },
              "parameterOrder": [
                "volumeId",
                "layerId",
                "annotationId"
              ],
              "description": "Gets the volume annotation.",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "id": "books.layers.volumeAnnotations.get",
              "flatPath": "books/v1/volumes/{volumeId}/layers/{layerId}/annotations/{annotationId}",
              "path": "books/v1/volumes/{volumeId}/layers/{layerId}/annotations/{annotationId}",
              "parameters": {
                "layerId": {
                  "description": "The ID for the layer to get the annotations.",
                  "required": true,
                  "type": "string",
                  "location": "path"
                },
                "source": {
                  "type": "string",
                  "description": "String to identify the originator of this request.",
                  "location": "query"
                },
                "locale": {
                  "type": "string",
                  "location": "query",
                  "description": "The locale information for the data. ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'."
                },
                "volumeId": {
                  "description": "The volume to retrieve annotations for.",
                  "location": "path",
                  "required": true,
                  "type": "string"
                },
                "annotationId": {
                  "type": "string",
                  "location": "path",
                  "description": "The ID of the volume annotation to retrieve.",
                  "required": true
                }
              }
            },
            "list": {
              "id": "books.layers.volumeAnnotations.list",
              "flatPath": "books/v1/volumes/{volumeId}/layers/{layerId}",
              "parameters": {
                "showDeleted": {
                  "location": "query",
                  "type": "boolean",
                  "description": "Set to true to return deleted annotations. updatedMin must be in the request to use this. Defaults to false."
                },
                "startOffset": {
                  "type": "string",
                  "description": "The start offset to start retrieving data from.",
                  "location": "query"
                },
                "locale": {
                  "location": "query",
                  "type": "string",
                  "description": "The locale information for the data. ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'."
                },
                "source": {
                  "location": "query",
                  "description": "String to identify the originator of this request.",
                  "type": "string"
                },
                "volumeId": {
                  "location": "path",
                  "description": "The volume to retrieve annotations for.",
                  "type": "string",
                  "required": true
                },
                "endOffset": {
                  "type": "string",
                  "location": "query",
                  "description": "The end offset to end retrieving data from."
                },
                "endPosition": {
                  "description": "The end position to end retrieving data from.",
                  "location": "query",
                  "type": "string"
                },
                "layerId": {
                  "required": true,
                  "location": "path",
                  "type": "string",
                  "description": "The ID for the layer to get the annotations."
                },
                "volumeAnnotationsVersion": {
                  "location": "query",
                  "type": "string",
                  "description": "The version of the volume annotations that you are requesting."
                },
                "startPosition": {
                  "location": "query",
                  "description": "The start position to start retrieving data from.",
                  "type": "string"
                },
                "maxResults": {
                  "location": "query",
                  "maximum": "200",
                  "format": "uint32",
                  "type": "integer",
                  "description": "Maximum number of results to return",
                  "minimum": "0"
                },
                "contentVersion": {
                  "type": "string",
                  "location": "query",
                  "required": true,
                  "description": "The content version for the requested volume."
                },
                "updatedMin": {
                  "description": "RFC 3339 timestamp to restrict to items updated since this timestamp (inclusive).",
                  "location": "query",
                  "type": "string"
                },
                "updatedMax": {
                  "location": "query",
                  "description": "RFC 3339 timestamp to restrict to items updated prior to this timestamp (exclusive).",
                  "type": "string"
                },
                "pageToken": {
                  "type": "string",
                  "location": "query",
                  "description": "The value of the nextToken from the previous page."
                }
              },
              "parameterOrder": [
                "volumeId",
                "layerId",
                "contentVersion"
              ],
              "description": "Gets the volume annotations for a volume and layer.",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "httpMethod": "GET",
              "path": "books/v1/volumes/{volumeId}/layers/{layerId}",
              "response": {
                "$ref": "Volumeannotations"
              }
            }
          }
        },
        "annotationData": {
          "methods": {
            "get": {
              "httpMethod": "GET",
              "path": "books/v1/volumes/{volumeId}/layers/{layerId}/data/{annotationDataId}",
              "description": "Gets the annotation data.",
              "id": "books.layers.annotationData.get",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "parameters": {
                "allowWebDefinitions": {
                  "description": "For the dictionary layer. Whether or not to allow web definitions.",
                  "type": "boolean",
                  "location": "query"
                },
                "w": {
                  "location": "query",
                  "type": "integer",
                  "description": "The requested pixel width for any images. If width is provided height must also be provided.",
                  "format": "int32"
                },
                "source": {
                  "description": "String to identify the originator of this request.",
                  "location": "query",
                  "type": "string"
                },
                "contentVersion": {
                  "location": "query",
                  "required": true,
                  "description": "The content version for the volume you are trying to retrieve.",
                  "type": "string"
                },
                "volumeId": {
                  "type": "string",
                  "location": "path",
                  "description": "The volume to retrieve annotations for.",
                  "required": true
                },
                "layerId": {
                  "type": "string",
                  "location": "path",
                  "description": "The ID for the layer to get the annotations.",
                  "required": true
                },
                "annotationDataId": {
                  "description": "The ID of the annotation data to retrieve.",
                  "required": true,
                  "type": "string",
                  "location": "path"
                },
                "locale": {
                  "location": "query",
                  "type": "string",
                  "description": "The locale information for the data. ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'."
                },
                "scale": {
                  "format": "int32",
                  "description": "The requested scale for the image.",
                  "location": "query",
                  "type": "integer",
                  "minimum": "0"
                },
                "h": {
                  "location": "query",
                  "type": "integer",
                  "description": "The requested pixel height for any images. If height is provided width must also be provided.",
                  "format": "int32"
                }
              },
              "flatPath": "books/v1/volumes/{volumeId}/layers/{layerId}/data/{annotationDataId}",
              "response": {
                "$ref": "DictionaryAnnotationdata"
              },
              "parameterOrder": [
                "volumeId",
                "layerId",
                "annotationDataId",
                "contentVersion"
              ]
            },
            "list": {
              "parameterOrder": [
                "volumeId",
                "layerId",
                "contentVersion"
              ],
              "description": "Gets the annotation data for a volume and layer.",
              "response": {
                "$ref": "Annotationsdata"
              },
              "id": "books.layers.annotationData.list",
              "flatPath": "books/v1/volumes/{volumeId}/layers/{layerId}/data",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "httpMethod": "GET",
              "path": "books/v1/volumes/{volumeId}/layers/{layerId}/data",
              "parameters": {
                "w": {
                  "format": "int32",
                  "type": "integer",
                  "description": "The requested pixel width for any images. If width is provided height must also be provided.",
                  "location": "query"
                },
                "source": {
                  "type": "string",
                  "location": "query",
                  "description": "String to identify the originator of this request."
                },
                "maxResults": {
                  "location": "query",
                  "description": "Maximum number of results to return",
                  "type": "integer",
                  "maximum": "200",
                  "format": "uint32",
                  "minimum": "0"
                },
                "locale": {
                  "description": "The locale information for the data. ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'.",
                  "type": "string",
                  "location": "query"
                },
                "h": {
                  "location": "query",
                  "format": "int32",
                  "type": "integer",
                  "description": "The requested pixel height for any images. If height is provided width must also be provided."
                },
                "annotationDataId": {
                  "location": "query",
                  "repeated": true,
                  "description": "The list of Annotation Data Ids to retrieve. Pagination is ignored if this is set.",
                  "type": "string"
                },
                "scale": {
                  "description": "The requested scale for the image.",
                  "type": "integer",
                  "format": "int32",
                  "minimum": "0",
                  "location": "query"
                },
                "contentVersion": {
                  "description": "The content version for the requested volume.",
                  "type": "string",
                  "location": "query",
                  "required": true
                },
                "volumeId": {
                  "description": "The volume to retrieve annotation data for.",
                  "type": "string",
                  "required": true,
                  "location": "path"
                },
                "layerId": {
                  "required": true,
                  "location": "path",
                  "type": "string",
                  "description": "The ID for the layer to get the annotation data."
                },
                "updatedMax": {
                  "description": "RFC 3339 timestamp to restrict to items updated prior to this timestamp (exclusive).",
                  "type": "string",
                  "location": "query"
                },
                "updatedMin": {
                  "description": "RFC 3339 timestamp to restrict to items updated since this timestamp (inclusive).",
                  "location": "query",
                  "type": "string"
                },
                "pageToken": {
                  "location": "query",
                  "type": "string",
                  "description": "The value of the nextToken from the previous page."
                }
              }
            }
          }
        }
      }
    },
    "promooffer": {
      "methods": {
        "dismiss": {
          "parameters": {
            "model": {
              "location": "query",
              "description": "device model",
              "type": "string"
            },
            "serial": {
              "description": "device serial",
              "type": "string",
              "location": "query"
            },
            "product": {
              "description": "device product",
              "location": "query",
              "type": "string"
            },
            "androidId": {
              "description": "device android_id",
              "location": "query",
              "type": "string"
            },
            "manufacturer": {
              "description": "device manufacturer",
              "location": "query",
              "type": "string"
            },
            "device": {
              "description": "device device",
              "location": "query",
              "type": "string"
            },
            "offerId": {
              "location": "query",
              "type": "string",
              "description": "Offer to dimiss"
            }
          },
          "path": "books/v1/promooffer/dismiss",
          "parameterOrder": [],
          "response": {
            "$ref": "Empty"
          },
          "description": "Marks the promo offer as dismissed.",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "httpMethod": "POST",
          "flatPath": "books/v1/promooffer/dismiss",
          "id": "books.promooffer.dismiss"
        },
        "get": {
          "response": {
            "$ref": "Offers"
          },
          "flatPath": "books/v1/promooffer/get",
          "description": "Returns a list of promo offers available to the user",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "path": "books/v1/promooffer/get",
          "httpMethod": "GET",
          "id": "books.promooffer.get",
          "parameters": {
            "device": {
              "description": "device device",
              "location": "query",
              "type": "string"
            },
            "androidId": {
              "location": "query",
              "description": "device android_id",
              "type": "string"
            },
            "serial": {
              "type": "string",
              "description": "device serial",
              "location": "query"
            },
            "manufacturer": {
              "location": "query",
              "description": "device manufacturer",
              "type": "string"
            },
            "product": {
              "type": "string",
              "location": "query",
              "description": "device product"
            },
            "model": {
              "type": "string",
              "location": "query",
              "description": "device model"
            }
          },
          "parameterOrder": []
        },
        "accept": {
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "httpMethod": "POST",
          "flatPath": "books/v1/promooffer/accept",
          "response": {
            "$ref": "Empty"
          },
          "path": "books/v1/promooffer/accept",
          "parameters": {
            "androidId": {
              "description": "device android_id",
              "location": "query",
              "type": "string"
            },
            "device": {
              "description": "device device",
              "location": "query",
              "type": "string"
            },
            "serial": {
              "description": "device serial",
              "type": "string",
              "location": "query"
            },
            "offerId": {
              "location": "query",
              "type": "string"
            },
            "volumeId": {
              "type": "string",
              "location": "query",
              "description": "Volume id to exercise the offer"
            },
            "product": {
              "location": "query",
              "type": "string",
              "description": "device product"
            },
            "model": {
              "description": "device model",
              "type": "string",
              "location": "query"
            },
            "manufacturer": {
              "location": "query",
              "description": "device manufacturer",
              "type": "string"
            }
          },
          "description": "Accepts the promo offer.",
          "parameterOrder": [],
          "id": "books.promooffer.accept"
        }
      }
    }
  },
  "basePath": "",
  "description": "The Google Books API allows clients to access the Google Books repository.",
  "ownerName": "Google",
  "servicePath": "",
  "parameters": {
    "alt": {
      "default": "json",
      "location": "query",
      "type": "string",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "description": "Data format for response."
    },
    "uploadType": {
      "location": "query",
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
    },
    "oauth_token": {
      "location": "query",
      "type": "string",
      "description": "OAuth 2.0 token for the current user."
    },
    "access_token": {
      "description": "OAuth access token.",
      "location": "query",
      "type": "string"
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "prettyPrint": {
      "default": "true",
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean",
      "location": "query"
    },
    "fields": {
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string"
    },
    "key": {
      "location": "query",
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
    },
    "$.xgafv": {
      "description": "V1 error format.",
      "location": "query",
      "type": "string",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "enum": [
        "1",
        "2"
      ]
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query",
      "type": "string"
    },
    "quotaUser": {
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string"
    }
  },
  "discoveryVersion": "v1",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/books": {
          "description": "Manage your books"
        }
      }
    }
  }
}
