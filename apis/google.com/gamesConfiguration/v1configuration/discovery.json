{
  "discoveryVersion": "v1",
  "canonicalName": "Games Configuration",
  "rootUrl": "https://gamesconfiguration.googleapis.com/",
  "ownerName": "Google",
  "id": "gamesConfiguration:v1configuration",
  "basePath": "",
  "revision": "20230221",
  "documentationLink": "https://developers.google.com/games/",
  "version": "v1configuration",
  "name": "gamesConfiguration",
  "title": "Google Play Game Services Publishing API",
  "baseUrl": "https://gamesconfiguration.googleapis.com/",
  "kind": "discovery#restDescription",
  "ownerDomain": "google.com",
  "description": "The Google Play Game Services Publishing API allows developers to configure their games in Game Services.",
  "schemas": {
    "AchievementConfiguration": {
      "type": "object",
      "properties": {
        "draft": {
          "$ref": "AchievementConfigurationDetail",
          "description": "The draft data of the achievement."
        },
        "stepsToUnlock": {
          "format": "int32",
          "type": "integer",
          "description": "Steps to unlock. Only applicable to incremental achievements."
        },
        "token": {
          "description": "The token for this resource.",
          "type": "string"
        },
        "kind": {
          "type": "string",
          "description": "Uniquely identifies the type of this resource. Value is always the fixed string `gamesConfiguration#achievementConfiguration`."
        },
        "id": {
          "type": "string",
          "description": "The ID of the achievement."
        },
        "initialState": {
          "enum": [
            "INITIAL_STATE_UNSPECIFIED",
            "HIDDEN",
            "REVEALED"
          ],
          "enumDescriptions": [
            "Default value. This value is unused.",
            "Achievement is hidden.",
            "Achievement is revealed."
          ],
          "type": "string",
          "description": "The initial state of the achievement."
        },
        "published": {
          "description": "The read-only published data of the achievement.",
          "$ref": "AchievementConfigurationDetail"
        },
        "achievementType": {
          "enumDescriptions": [
            "Default value. This value is unused.",
            "Achievement is either locked or unlocked.",
            "Achievement is incremental."
          ],
          "enum": [
            "ACHIEVEMENT_TYPE_UNSPECIFIED",
            "STANDARD",
            "INCREMENTAL"
          ],
          "description": "The type of the achievement.",
          "type": "string"
        }
      },
      "id": "AchievementConfiguration",
      "description": "An achievement configuration resource."
    },
    "AchievementConfigurationDetail": {
      "id": "AchievementConfigurationDetail",
      "description": "An achievement configuration detail.",
      "properties": {
        "iconUrl": {
          "description": "The icon url of this achievement. Writes to this field are ignored.",
          "type": "string"
        },
        "description": {
          "$ref": "LocalizedStringBundle",
          "description": "Localized strings for the achievement description."
        },
        "pointValue": {
          "description": "Point value for the achievement.",
          "format": "int32",
          "type": "integer"
        },
        "kind": {
          "type": "string",
          "description": "Uniquely identifies the type of this resource. Value is always the fixed string `gamesConfiguration#achievementConfigurationDetail`."
        },
        "sortRank": {
          "format": "int32",
          "type": "integer",
          "description": "The sort rank of this achievement. Writes to this field are ignored."
        },
        "name": {
          "description": "Localized strings for the achievement name.",
          "$ref": "LocalizedStringBundle"
        }
      },
      "type": "object"
    },
    "AchievementConfigurationListResponse": {
      "id": "AchievementConfigurationListResponse",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Uniquely identifies the type of this resource. Value is always the fixed string `gamesConfiguration#achievementConfigurationListResponse`."
        },
        "items": {
          "description": "The achievement configurations.",
          "type": "array",
          "items": {
            "$ref": "AchievementConfiguration"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "The pagination token for the next page of results."
        }
      },
      "type": "object",
      "description": "A ListConfigurations response."
    },
    "LocalizedStringBundle": {
      "type": "object",
      "description": "A localized string bundle resource.",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Uniquely identifies the type of this resource. Value is always the fixed string `gamesConfiguration#localizedStringBundle`."
        },
        "translations": {
          "description": "The locale strings.",
          "type": "array",
          "items": {
            "$ref": "LocalizedString"
          }
        }
      },
      "id": "LocalizedStringBundle"
    },
    "GamesNumberFormatConfiguration": {
      "id": "GamesNumberFormatConfiguration",
      "properties": {
        "numberFormatType": {
          "description": "The formatting for the number.",
          "enumDescriptions": [
            "Default value. This value is unused.",
            "Numbers are formatted to have no digits or fixed number of digits after the decimal point according to locale. An optional custom unit can be added.",
            "Numbers are formatted to hours, minutes and seconds.",
            "Numbers are formatted to currency according to locale."
          ],
          "type": "string",
          "enum": [
            "NUMBER_FORMAT_TYPE_UNSPECIFIED",
            "NUMERIC",
            "TIME_DURATION",
            "CURRENCY"
          ]
        },
        "suffix": {
          "description": "An optional suffix for the NUMERIC format type. These strings follow the same plural rules as all Android string resources.",
          "$ref": "GamesNumberAffixConfiguration"
        },
        "numDecimalPlaces": {
          "type": "integer",
          "description": "The number of decimal places for number. Only used for NUMERIC format type.",
          "format": "int32"
        },
        "currencyCode": {
          "type": "string",
          "description": "The curreny code string. Only used for CURRENCY format type."
        }
      },
      "description": "A number format resource.",
      "type": "object"
    },
    "LocalizedString": {
      "description": "A localized string resource.",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Uniquely identifies the type of this resource. Value is always the fixed string `gamesConfiguration#localizedString`."
        },
        "value": {
          "type": "string",
          "description": "The string value."
        },
        "locale": {
          "type": "string",
          "description": "The locale string."
        }
      },
      "id": "LocalizedString",
      "type": "object"
    },
    "GamesNumberAffixConfiguration": {
      "type": "object",
      "id": "GamesNumberAffixConfiguration",
      "properties": {
        "two": {
          "$ref": "LocalizedStringBundle",
          "description": "When the language requires special treatment of numbers like two (as with 2 in Welsh, or 102 in Slovenian)."
        },
        "many": {
          "$ref": "LocalizedStringBundle",
          "description": "When the language requires special treatment of \"large\" numbers (as with numbers ending 11-99 in Maltese)."
        },
        "zero": {
          "$ref": "LocalizedStringBundle",
          "description": "When the language requires special treatment of the number 0 (as in Arabic)."
        },
        "few": {
          "description": "When the language requires special treatment of \"small\" numbers (as with 2, 3, and 4 in Czech; or numbers ending 2, 3, or 4 but not 12, 13, or 14 in Polish).",
          "$ref": "LocalizedStringBundle"
        },
        "one": {
          "description": "When the language requires special treatment of numbers like one (as with the number 1 in English and most other languages; in Russian, any number ending in 1 but not ending in 11 is in this class).",
          "$ref": "LocalizedStringBundle"
        },
        "other": {
          "$ref": "LocalizedStringBundle",
          "description": "When the language does not require special treatment of the given quantity (as with all numbers in Chinese, or 42 in English)."
        }
      },
      "description": "A number affix resource."
    },
    "LeaderboardConfigurationDetail": {
      "description": "A leaderboard configuration detail.",
      "id": "LeaderboardConfigurationDetail",
      "type": "object",
      "properties": {
        "kind": {
          "description": "Uniquely identifies the type of this resource. Value is always the fixed string `gamesConfiguration#leaderboardConfigurationDetail`.",
          "type": "string"
        },
        "name": {
          "description": "Localized strings for the leaderboard name.",
          "$ref": "LocalizedStringBundle"
        },
        "iconUrl": {
          "description": "The icon url of this leaderboard. Writes to this field are ignored.",
          "type": "string"
        },
        "scoreFormat": {
          "description": "The score formatting for the leaderboard.",
          "$ref": "GamesNumberFormatConfiguration"
        },
        "sortRank": {
          "type": "integer",
          "format": "int32",
          "description": "The sort rank of this leaderboard. Writes to this field are ignored."
        }
      }
    },
    "LeaderboardConfigurationListResponse": {
      "properties": {
        "kind": {
          "type": "string",
          "description": "Uniquely identifies the type of this resource. Value is always the fixed string `gamesConfiguration#leaderboardConfigurationListResponse`."
        },
        "nextPageToken": {
          "description": "The pagination token for the next page of results.",
          "type": "string"
        },
        "items": {
          "items": {
            "$ref": "LeaderboardConfiguration"
          },
          "description": "The leaderboard configurations.",
          "type": "array"
        }
      },
      "type": "object",
      "id": "LeaderboardConfigurationListResponse",
      "description": "A ListConfigurations response."
    },
    "LeaderboardConfiguration": {
      "properties": {
        "kind": {
          "type": "string",
          "description": "Uniquely identifies the type of this resource. Value is always the fixed string `gamesConfiguration#leaderboardConfiguration`."
        },
        "published": {
          "$ref": "LeaderboardConfigurationDetail",
          "description": "The read-only published data of the leaderboard."
        },
        "token": {
          "description": "The token for this resource.",
          "type": "string"
        },
        "scoreMin": {
          "type": "string",
          "format": "int64",
          "description": "Minimum score that can be posted to this leaderboard."
        },
        "scoreOrder": {
          "enum": [
            "SCORE_ORDER_UNSPECIFIED",
            "LARGER_IS_BETTER",
            "SMALLER_IS_BETTER"
          ],
          "enumDescriptions": [
            "Default value. This value is unused.",
            "Larger scores posted are ranked higher.",
            "Smaller scores posted are ranked higher."
          ],
          "type": "string"
        },
        "draft": {
          "$ref": "LeaderboardConfigurationDetail",
          "description": "The draft data of the leaderboard."
        },
        "id": {
          "type": "string",
          "description": "The ID of the leaderboard."
        },
        "scoreMax": {
          "format": "int64",
          "type": "string",
          "description": "Maximum score that can be posted to this leaderboard."
        }
      },
      "description": "An leaderboard configuration resource.",
      "type": "object",
      "id": "LeaderboardConfiguration"
    }
  },
  "batchPath": "batch",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/androidpublisher": {
          "description": "View and manage your Google Play Developer account"
        }
      }
    }
  },
  "parameters": {
    "prettyPrint": {
      "location": "query",
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "type": "boolean"
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string",
      "location": "query"
    },
    "quotaUser": {
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string"
    },
    "alt": {
      "description": "Data format for response.",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "type": "string"
    },
    "access_token": {
      "description": "OAuth access token.",
      "location": "query",
      "type": "string"
    },
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "callback": {
      "type": "string",
      "location": "query",
      "description": "JSONP"
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string",
      "location": "query"
    },
    "oauth_token": {
      "location": "query",
      "description": "OAuth 2.0 token for the current user.",
      "type": "string"
    },
    "$.xgafv": {
      "description": "V1 error format.",
      "type": "string",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query",
      "enum": [
        "1",
        "2"
      ]
    }
  },
  "resources": {
    "achievementConfigurations": {
      "methods": {
        "list": {
          "flatPath": "games/v1configuration/applications/{applicationId}/achievements",
          "parameterOrder": [
            "applicationId"
          ],
          "httpMethod": "GET",
          "id": "gamesConfiguration.achievementConfigurations.list",
          "scopes": [
            "https://www.googleapis.com/auth/androidpublisher"
          ],
          "response": {
            "$ref": "AchievementConfigurationListResponse"
          },
          "description": "Returns a list of the achievement configurations in this application.",
          "parameters": {
            "pageToken": {
              "location": "query",
              "description": "The token returned by the previous request.",
              "type": "string"
            },
            "maxResults": {
              "type": "integer",
              "format": "int32",
              "description": "The maximum number of resource configurations to return in the response, used for paging. For any response, the actual number of resources returned may be less than the specified `maxResults`.",
              "location": "query"
            },
            "applicationId": {
              "description": "The application ID from the Google Play developer console.",
              "type": "string",
              "location": "path",
              "required": true
            }
          },
          "path": "games/v1configuration/applications/{applicationId}/achievements"
        },
        "update": {
          "scopes": [
            "https://www.googleapis.com/auth/androidpublisher"
          ],
          "parameters": {
            "achievementId": {
              "required": true,
              "description": "The ID of the achievement used by this method.",
              "type": "string",
              "location": "path"
            }
          },
          "description": "Update the metadata of the achievement configuration with the given ID.",
          "httpMethod": "PUT",
          "id": "gamesConfiguration.achievementConfigurations.update",
          "path": "games/v1configuration/achievements/{achievementId}",
          "response": {
            "$ref": "AchievementConfiguration"
          },
          "parameterOrder": [
            "achievementId"
          ],
          "flatPath": "games/v1configuration/achievements/{achievementId}",
          "request": {
            "$ref": "AchievementConfiguration"
          }
        },
        "insert": {
          "httpMethod": "POST",
          "request": {
            "$ref": "AchievementConfiguration"
          },
          "scopes": [
            "https://www.googleapis.com/auth/androidpublisher"
          ],
          "id": "gamesConfiguration.achievementConfigurations.insert",
          "parameters": {
            "applicationId": {
              "type": "string",
              "description": "The application ID from the Google Play developer console.",
              "required": true,
              "location": "path"
            }
          },
          "description": "Insert a new achievement configuration in this application.",
          "path": "games/v1configuration/applications/{applicationId}/achievements",
          "parameterOrder": [
            "applicationId"
          ],
          "response": {
            "$ref": "AchievementConfiguration"
          },
          "flatPath": "games/v1configuration/applications/{applicationId}/achievements"
        },
        "get": {
          "parameterOrder": [
            "achievementId"
          ],
          "httpMethod": "GET",
          "response": {
            "$ref": "AchievementConfiguration"
          },
          "id": "gamesConfiguration.achievementConfigurations.get",
          "description": "Retrieves the metadata of the achievement configuration with the given ID.",
          "parameters": {
            "achievementId": {
              "location": "path",
              "type": "string",
              "description": "The ID of the achievement used by this method.",
              "required": true
            }
          },
          "flatPath": "games/v1configuration/achievements/{achievementId}",
          "path": "games/v1configuration/achievements/{achievementId}",
          "scopes": [
            "https://www.googleapis.com/auth/androidpublisher"
          ]
        },
        "delete": {
          "flatPath": "games/v1configuration/achievements/{achievementId}",
          "id": "gamesConfiguration.achievementConfigurations.delete",
          "scopes": [
            "https://www.googleapis.com/auth/androidpublisher"
          ],
          "parameters": {
            "achievementId": {
              "type": "string",
              "required": true,
              "location": "path",
              "description": "The ID of the achievement used by this method."
            }
          },
          "path": "games/v1configuration/achievements/{achievementId}",
          "description": "Delete the achievement configuration with the given ID.",
          "parameterOrder": [
            "achievementId"
          ],
          "httpMethod": "DELETE"
        }
      }
    },
    "leaderboardConfigurations": {
      "methods": {
        "get": {
          "flatPath": "games/v1configuration/leaderboards/{leaderboardId}",
          "scopes": [
            "https://www.googleapis.com/auth/androidpublisher"
          ],
          "id": "gamesConfiguration.leaderboardConfigurations.get",
          "httpMethod": "GET",
          "description": "Retrieves the metadata of the leaderboard configuration with the given ID.",
          "path": "games/v1configuration/leaderboards/{leaderboardId}",
          "parameters": {
            "leaderboardId": {
              "type": "string",
              "description": "The ID of the leaderboard.",
              "location": "path",
              "required": true
            }
          },
          "parameterOrder": [
            "leaderboardId"
          ],
          "response": {
            "$ref": "LeaderboardConfiguration"
          }
        },
        "list": {
          "description": "Returns a list of the leaderboard configurations in this application.",
          "scopes": [
            "https://www.googleapis.com/auth/androidpublisher"
          ],
          "httpMethod": "GET",
          "response": {
            "$ref": "LeaderboardConfigurationListResponse"
          },
          "path": "games/v1configuration/applications/{applicationId}/leaderboards",
          "id": "gamesConfiguration.leaderboardConfigurations.list",
          "parameterOrder": [
            "applicationId"
          ],
          "flatPath": "games/v1configuration/applications/{applicationId}/leaderboards",
          "parameters": {
            "pageToken": {
              "description": "The token returned by the previous request.",
              "location": "query",
              "type": "string"
            },
            "applicationId": {
              "required": true,
              "description": "The application ID from the Google Play developer console.",
              "type": "string",
              "location": "path"
            },
            "maxResults": {
              "type": "integer",
              "location": "query",
              "description": "The maximum number of resource configurations to return in the response, used for paging. For any response, the actual number of resources returned may be less than the specified `maxResults`.",
              "format": "int32"
            }
          }
        },
        "insert": {
          "flatPath": "games/v1configuration/applications/{applicationId}/leaderboards",
          "httpMethod": "POST",
          "parameterOrder": [
            "applicationId"
          ],
          "parameters": {
            "applicationId": {
              "location": "path",
              "description": "The application ID from the Google Play developer console.",
              "type": "string",
              "required": true
            }
          },
          "request": {
            "$ref": "LeaderboardConfiguration"
          },
          "id": "gamesConfiguration.leaderboardConfigurations.insert",
          "description": "Insert a new leaderboard configuration in this application.",
          "path": "games/v1configuration/applications/{applicationId}/leaderboards",
          "scopes": [
            "https://www.googleapis.com/auth/androidpublisher"
          ],
          "response": {
            "$ref": "LeaderboardConfiguration"
          }
        },
        "update": {
          "httpMethod": "PUT",
          "parameters": {
            "leaderboardId": {
              "type": "string",
              "required": true,
              "location": "path",
              "description": "The ID of the leaderboard."
            }
          },
          "parameterOrder": [
            "leaderboardId"
          ],
          "request": {
            "$ref": "LeaderboardConfiguration"
          },
          "id": "gamesConfiguration.leaderboardConfigurations.update",
          "scopes": [
            "https://www.googleapis.com/auth/androidpublisher"
          ],
          "path": "games/v1configuration/leaderboards/{leaderboardId}",
          "flatPath": "games/v1configuration/leaderboards/{leaderboardId}",
          "response": {
            "$ref": "LeaderboardConfiguration"
          },
          "description": "Update the metadata of the leaderboard configuration with the given ID."
        },
        "delete": {
          "scopes": [
            "https://www.googleapis.com/auth/androidpublisher"
          ],
          "path": "games/v1configuration/leaderboards/{leaderboardId}",
          "parameters": {
            "leaderboardId": {
              "type": "string",
              "required": true,
              "description": "The ID of the leaderboard.",
              "location": "path"
            }
          },
          "httpMethod": "DELETE",
          "flatPath": "games/v1configuration/leaderboards/{leaderboardId}",
          "description": "Delete the leaderboard configuration with the given ID.",
          "parameterOrder": [
            "leaderboardId"
          ],
          "id": "gamesConfiguration.leaderboardConfigurations.delete"
        }
      }
    }
  },
  "servicePath": "",
  "mtlsRootUrl": "https://gamesconfiguration.mtls.googleapis.com/",
  "protocol": "rest",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  }
}
