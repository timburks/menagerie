{
  "protocol": "rest",
  "id": "datastream:v1",
  "mtlsRootUrl": "https://datastream.mtls.googleapis.com/",
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "resources": {
            "connectionProfiles": {
              "methods": {
                "discover": {
                  "httpMethod": "POST",
                  "path": "v1/{+parent}/connectionProfiles:discover",
                  "request": {
                    "$ref": "DiscoverConnectionProfileRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "DiscoverConnectionProfileResponse"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connectionProfiles:discover",
                  "id": "datastream.projects.locations.connectionProfiles.discover",
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "description": "Required. The parent resource of the connection profile type. Must be in the format `projects/*/locations/*`.",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Use this method to discover a connection profile. The discover API call exposes the data objects and metadata belonging to the profile. Typically, a request returns children data objects of a parent data object that's optionally supplied in the request."
                },
                "patch": {
                  "description": "Use this method to update the parameters of a connection profile.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connectionProfiles/{connectionProfilesId}",
                  "request": {
                    "$ref": "ConnectionProfile"
                  },
                  "id": "datastream.projects.locations.connectionProfiles.patch",
                  "path": "v1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "PATCH",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "updateMask": {
                      "format": "google-fieldmask",
                      "type": "string",
                      "description": "Optional. Field mask is used to specify the fields to be overwritten in the ConnectionProfile resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.",
                      "location": "query"
                    },
                    "requestId": {
                      "location": "query",
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "type": "string"
                    },
                    "name": {
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/connectionProfiles/[^/]+$",
                      "description": "Output only. The resource's name."
                    },
                    "validateOnly": {
                      "location": "query",
                      "type": "boolean",
                      "description": "Optional. Only validate the connection profile, but don't update any resources. The default is false."
                    },
                    "force": {
                      "type": "boolean",
                      "description": "Optional. Update the connection profile without validating it.",
                      "location": "query"
                    }
                  }
                },
                "get": {
                  "id": "datastream.projects.locations.connectionProfiles.get",
                  "path": "v1/{+name}",
                  "parameters": {
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/connectionProfiles/[^/]+$",
                      "location": "path",
                      "description": "Required. The name of the connection profile resource to get.",
                      "type": "string"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connectionProfiles/{connectionProfilesId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "ConnectionProfile"
                  },
                  "description": "Use this method to get details about a connection profile.",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "delete": {
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "DELETE",
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Use this method to delete a connection profile.",
                  "id": "datastream.projects.locations.connectionProfiles.delete",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "description": "Required. The name of the connection profile resource to delete.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/connectionProfiles/[^/]+$"
                    },
                    "requestId": {
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connectionProfiles/{connectionProfilesId}",
                  "path": "v1/{+name}"
                },
                "create": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "ConnectionProfile"
                  },
                  "path": "v1/{+parent}/connectionProfiles",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connectionProfiles",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "requestId": {
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    },
                    "force": {
                      "type": "boolean",
                      "description": "Optional. Create the connection profile without validating it.",
                      "location": "query"
                    },
                    "validateOnly": {
                      "location": "query",
                      "description": "Optional. Only validate the connection profile, but don't create any resources. The default is false.",
                      "type": "boolean"
                    },
                    "parent": {
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "description": "Required. The parent that owns the collection of ConnectionProfiles.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "connectionProfileId": {
                      "description": "Required. The connection profile identifier.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "description": "Use this method to create a connection profile in a project and location.",
                  "id": "datastream.projects.locations.connectionProfiles.create"
                },
                "list": {
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "ListConnectionProfilesResponse"
                  },
                  "path": "v1/{+parent}/connectionProfiles",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connectionProfiles",
                  "id": "datastream.projects.locations.connectionProfiles.list",
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The parent that owns the collection of connection profiles."
                    },
                    "filter": {
                      "description": "Filter request.",
                      "location": "query",
                      "type": "string"
                    },
                    "pageToken": {
                      "type": "string",
                      "description": "Page token received from a previous `ListConnectionProfiles` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListConnectionProfiles` must match the call that provided the page token.",
                      "location": "query"
                    },
                    "orderBy": {
                      "type": "string",
                      "location": "query",
                      "description": "Order by fields for the result."
                    },
                    "pageSize": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Maximum number of connection profiles to return. If unspecified, at most 50 connection profiles will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                      "location": "query"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Use this method to list connection profiles created in a project and location.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                }
              }
            },
            "streams": {
              "resources": {
                "objects": {
                  "methods": {
                    "list": {
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/streams/{streamsId}/objects",
                      "id": "datastream.projects.locations.streams.objects.list",
                      "path": "v1/{+parent}/objects",
                      "httpMethod": "GET",
                      "description": "Use this method to list the objects of a specific stream.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "parent"
                      ],
                      "parameters": {
                        "pageToken": {
                          "location": "query",
                          "description": "Page token received from a previous `ListStreamObjectsRequest` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListStreamObjectsRequest` must match the call that provided the page token.",
                          "type": "string"
                        },
                        "parent": {
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/streams/[^/]+$",
                          "location": "path",
                          "required": true,
                          "description": "Required. The parent stream that owns the collection of objects."
                        },
                        "pageSize": {
                          "type": "integer",
                          "location": "query",
                          "description": "Maximum number of objects to return. Default is 50. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                          "format": "int32"
                        }
                      },
                      "response": {
                        "$ref": "ListStreamObjectsResponse"
                      }
                    },
                    "get": {
                      "parameterOrder": [
                        "name"
                      ],
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "datastream.projects.locations.streams.objects.get",
                      "response": {
                        "$ref": "StreamObject"
                      },
                      "parameters": {
                        "name": {
                          "description": "Required. The name of the stream object resource to get.",
                          "type": "string",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/streams/[^/]+/objects/[^/]+$",
                          "required": true
                        }
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/streams/{streamsId}/objects/{objectsId}",
                      "description": "Use this method to get details about a stream object.",
                      "path": "v1/{+name}"
                    },
                    "startBackfillJob": {
                      "parameterOrder": [
                        "object"
                      ],
                      "parameters": {
                        "object": {
                          "required": true,
                          "description": "Required. The name of the stream object resource to start a backfill job for.",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/streams/[^/]+/objects/[^/]+$",
                          "type": "string"
                        }
                      },
                      "description": "Use this method to start a backfill job for the specified stream object.",
                      "id": "datastream.projects.locations.streams.objects.startBackfillJob",
                      "request": {
                        "$ref": "StartBackfillJobRequest"
                      },
                      "response": {
                        "$ref": "StartBackfillJobResponse"
                      },
                      "path": "v1/{+object}:startBackfillJob",
                      "httpMethod": "POST",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/streams/{streamsId}/objects/{objectsId}:startBackfillJob",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "lookup": {
                      "path": "v1/{+parent}/objects:lookup",
                      "httpMethod": "POST",
                      "description": "Use this method to look up a stream object by its source object identifier.",
                      "response": {
                        "$ref": "StreamObject"
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/streams/{streamsId}/objects:lookup",
                      "request": {
                        "$ref": "LookupStreamObjectRequest"
                      },
                      "parameters": {
                        "parent": {
                          "type": "string",
                          "location": "path",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/streams/[^/]+$",
                          "description": "Required. The parent stream that owns the collection of objects."
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "datastream.projects.locations.streams.objects.lookup",
                      "parameterOrder": [
                        "parent"
                      ]
                    },
                    "stopBackfillJob": {
                      "request": {
                        "$ref": "StopBackfillJobRequest"
                      },
                      "path": "v1/{+object}:stopBackfillJob",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/streams/{streamsId}/objects/{objectsId}:stopBackfillJob",
                      "response": {
                        "$ref": "StopBackfillJobResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "object": {
                          "description": "Required. The name of the stream object resource to stop the backfill job for.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/streams/[^/]+/objects/[^/]+$",
                          "location": "path",
                          "type": "string",
                          "required": true
                        }
                      },
                      "id": "datastream.projects.locations.streams.objects.stopBackfillJob",
                      "parameterOrder": [
                        "object"
                      ],
                      "httpMethod": "POST",
                      "description": "Use this method to stop a backfill job for the specified stream object."
                    }
                  }
                }
              },
              "methods": {
                "patch": {
                  "id": "datastream.projects.locations.streams.patch",
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Use this method to update the configuration of a stream.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/streams/{streamsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "Stream"
                  },
                  "httpMethod": "PATCH",
                  "path": "v1/{+name}",
                  "parameters": {
                    "force": {
                      "description": "Optional. Update the stream without validating it.",
                      "type": "boolean",
                      "location": "query"
                    },
                    "updateMask": {
                      "type": "string",
                      "description": "Optional. Field mask is used to specify the fields to be overwritten in the stream resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.",
                      "location": "query",
                      "format": "google-fieldmask"
                    },
                    "validateOnly": {
                      "location": "query",
                      "description": "Optional. Only validate the stream with the changes, without actually updating it. The default is false.",
                      "type": "boolean"
                    },
                    "requestId": {
                      "location": "query",
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "type": "string"
                    },
                    "name": {
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/streams/[^/]+$",
                      "description": "Output only. The stream's name."
                    }
                  },
                  "response": {
                    "$ref": "Operation"
                  }
                },
                "create": {
                  "id": "datastream.projects.locations.streams.create",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/streams",
                  "request": {
                    "$ref": "Stream"
                  },
                  "httpMethod": "POST",
                  "parameters": {
                    "force": {
                      "description": "Optional. Create the stream without validating it.",
                      "type": "boolean",
                      "location": "query"
                    },
                    "parent": {
                      "required": true,
                      "type": "string",
                      "description": "Required. The parent that owns the collection of streams.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "requestId": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    },
                    "validateOnly": {
                      "description": "Optional. Only validate the stream, but don't create any resources. The default is false.",
                      "location": "query",
                      "type": "boolean"
                    },
                    "streamId": {
                      "location": "query",
                      "type": "string",
                      "description": "Required. The stream identifier."
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Use this method to create a stream.",
                  "path": "v1/{+parent}/streams",
                  "parameterOrder": [
                    "parent"
                  ]
                },
                "get": {
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Stream"
                  },
                  "path": "v1/{+name}",
                  "httpMethod": "GET",
                  "id": "datastream.projects.locations.streams.get",
                  "description": "Use this method to get details about a stream.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/streams/{streamsId}",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "description": "Required. The name of the stream resource to get.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/streams/[^/]+$",
                      "required": true
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "delete": {
                  "path": "v1/{+name}",
                  "id": "datastream.projects.locations.streams.delete",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "type": "string",
                      "description": "Required. The name of the stream resource to delete.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/streams/[^/]+$",
                      "required": true
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "DELETE",
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/streams/{streamsId}",
                  "description": "Use this method to delete a stream.",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "list": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "datastream.projects.locations.streams.list",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/streams",
                  "response": {
                    "$ref": "ListStreamsResponse"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "GET",
                  "parameters": {
                    "pageToken": {
                      "type": "string",
                      "description": "Page token received from a previous `ListStreams` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListStreams` must match the call that provided the page token.",
                      "location": "query"
                    },
                    "parent": {
                      "required": true,
                      "type": "string",
                      "description": "Required. The parent that owns the collection of streams.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path"
                    },
                    "filter": {
                      "type": "string",
                      "location": "query",
                      "description": "Filter request."
                    },
                    "pageSize": {
                      "type": "integer",
                      "location": "query",
                      "format": "int32",
                      "description": "Maximum number of streams to return. If unspecified, at most 50 streams will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000."
                    },
                    "orderBy": {
                      "location": "query",
                      "type": "string",
                      "description": "Order by fields for the result."
                    }
                  },
                  "description": "Use this method to list streams in a project and location.",
                  "path": "v1/{+parent}/streams"
                }
              }
            },
            "privateConnections": {
              "methods": {
                "create": {
                  "parameters": {
                    "privateConnectionId": {
                      "location": "query",
                      "description": "Required. The private connectivity identifier.",
                      "type": "string"
                    },
                    "parent": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "description": "Required. The parent that owns the collection of PrivateConnections.",
                      "location": "path"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query"
                    },
                    "force": {
                      "description": "Optional. If set to true, will skip validations.",
                      "location": "query",
                      "type": "boolean"
                    }
                  },
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "datastream.projects.locations.privateConnections.create",
                  "request": {
                    "$ref": "PrivateConnection"
                  },
                  "description": "Use this method to create a private connectivity configuration.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/privateConnections",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+parent}/privateConnections"
                },
                "get": {
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/privateConnections/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "description": "Required. The name of the private connectivity configuration to get."
                    }
                  },
                  "description": "Use this method to get details about a private connectivity configuration.",
                  "id": "datastream.projects.locations.privateConnections.get",
                  "path": "v1/{+name}",
                  "response": {
                    "$ref": "PrivateConnection"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/privateConnections/{privateConnectionsId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET"
                },
                "delete": {
                  "parameters": {
                    "force": {
                      "description": "Optional. If set to true, any child routes that belong to this PrivateConnection will also be deleted.",
                      "type": "boolean",
                      "location": "query"
                    },
                    "requestId": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    },
                    "name": {
                      "description": "Required. The name of the private connectivity configuration to delete.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/privateConnections/[^/]+$",
                      "required": true,
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "httpMethod": "DELETE",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Use this method to delete a private connectivity configuration.",
                  "id": "datastream.projects.locations.privateConnections.delete",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/privateConnections/{privateConnectionsId}",
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v1/{+name}"
                },
                "list": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "parameters": {
                    "filter": {
                      "type": "string",
                      "location": "query",
                      "description": "Filter request."
                    },
                    "orderBy": {
                      "description": "Order by fields for the result.",
                      "type": "string",
                      "location": "query"
                    },
                    "pageToken": {
                      "location": "query",
                      "description": "Page token received from a previous `ListPrivateConnections` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListPrivateConnections` must match the call that provided the page token.",
                      "type": "string"
                    },
                    "parent": {
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "description": "Required. The parent that owns the collection of private connectivity configurations.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "pageSize": {
                      "description": "Maximum number of private connectivity configurations to return. If unspecified, at most 50 private connectivity configurations that will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                      "type": "integer",
                      "format": "int32",
                      "location": "query"
                    }
                  },
                  "description": "Use this method to list private connectivity configurations in a project and location.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/privateConnections",
                  "path": "v1/{+parent}/privateConnections",
                  "response": {
                    "$ref": "ListPrivateConnectionsResponse"
                  },
                  "id": "datastream.projects.locations.privateConnections.list",
                  "parameterOrder": [
                    "parent"
                  ]
                }
              },
              "resources": {
                "routes": {
                  "methods": {
                    "delete": {
                      "parameters": {
                        "requestId": {
                          "type": "string",
                          "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                          "location": "query"
                        },
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/privateConnections/[^/]+/routes/[^/]+$",
                          "required": true,
                          "type": "string",
                          "description": "Required. The name of the Route resource to delete.",
                          "location": "path"
                        }
                      },
                      "path": "v1/{+name}",
                      "httpMethod": "DELETE",
                      "description": "Use this method to delete a route.",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/privateConnections/{privateConnectionsId}/routes/{routesId}",
                      "id": "datastream.projects.locations.privateConnections.routes.delete",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "Operation"
                      },
                      "parameterOrder": [
                        "name"
                      ]
                    },
                    "get": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "name": {
                          "description": "Required. The name of the Route resource to get.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/privateConnections/[^/]+/routes/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "description": "Use this method to get details about a route.",
                      "httpMethod": "GET",
                      "path": "v1/{+name}",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/privateConnections/{privateConnectionsId}/routes/{routesId}",
                      "response": {
                        "$ref": "Route"
                      },
                      "id": "datastream.projects.locations.privateConnections.routes.get",
                      "parameterOrder": [
                        "name"
                      ]
                    },
                    "create": {
                      "response": {
                        "$ref": "Operation"
                      },
                      "request": {
                        "$ref": "Route"
                      },
                      "httpMethod": "POST",
                      "parameters": {
                        "parent": {
                          "description": "Required. The parent that owns the collection of Routes.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/privateConnections/[^/]+$",
                          "required": true,
                          "location": "path",
                          "type": "string"
                        },
                        "requestId": {
                          "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                          "location": "query",
                          "type": "string"
                        },
                        "routeId": {
                          "type": "string",
                          "description": "Required. The Route identifier.",
                          "location": "query"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "path": "v1/{+parent}/routes",
                      "id": "datastream.projects.locations.privateConnections.routes.create",
                      "description": "Use this method to create a route for a private connectivity configuration in a project and location.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/privateConnections/{privateConnectionsId}/routes"
                    },
                    "list": {
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/privateConnections/{privateConnectionsId}/routes",
                      "response": {
                        "$ref": "ListRoutesResponse"
                      },
                      "description": "Use this method to list routes created for a private connectivity configuration in a project and location.",
                      "id": "datastream.projects.locations.privateConnections.routes.list",
                      "parameters": {
                        "parent": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/privateConnections/[^/]+$",
                          "type": "string",
                          "description": "Required. The parent that owns the collection of Routess.",
                          "location": "path",
                          "required": true
                        },
                        "pageSize": {
                          "location": "query",
                          "description": "Maximum number of Routes to return. The service may return fewer than this value. If unspecified, at most 50 Routes will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "pageToken": {
                          "description": "Page token received from a previous `ListRoutes` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListRoutes` must match the call that provided the page token.",
                          "location": "query",
                          "type": "string"
                        },
                        "orderBy": {
                          "type": "string",
                          "description": "Order by fields for the result.",
                          "location": "query"
                        },
                        "filter": {
                          "location": "query",
                          "type": "string",
                          "description": "Filter request."
                        }
                      },
                      "path": "v1/{+parent}/routes",
                      "parameterOrder": [
                        "parent"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "GET"
                    }
                  }
                }
              }
            },
            "operations": {
              "methods": {
                "list": {
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations",
                  "path": "v1/{+name}/operations",
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `\"/v1/{name=users/*}/operations\"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.",
                  "id": "datastream.projects.locations.operations.list",
                  "httpMethod": "GET",
                  "parameters": {
                    "filter": {
                      "location": "query",
                      "description": "The standard list filter.",
                      "type": "string"
                    },
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "The standard list page token."
                    },
                    "name": {
                      "type": "string",
                      "required": true,
                      "description": "The name of the operation's parent resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path"
                    },
                    "pageSize": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The standard list page size.",
                      "location": "query"
                    }
                  },
                  "response": {
                    "$ref": "ListOperationsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "cancel": {
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource to be cancelled.",
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$"
                    }
                  },
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Empty"
                  },
                  "request": {
                    "$ref": "CancelOperationRequest"
                  },
                  "httpMethod": "POST",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel",
                  "path": "v1/{+name}:cancel",
                  "id": "datastream.projects.locations.operations.cancel"
                },
                "delete": {
                  "response": {
                    "$ref": "Empty"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "datastream.projects.locations.operations.delete",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
                  "httpMethod": "DELETE",
                  "path": "v1/{+name}",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "required": true,
                      "description": "The name of the operation resource to be deleted.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "location": "path"
                    }
                  }
                },
                "get": {
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "description": "The name of the operation resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "datastream.projects.locations.operations.get",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "response": {
                    "$ref": "Operation"
                  }
                }
              }
            }
          },
          "methods": {
            "get": {
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Gets information about a location.",
              "httpMethod": "GET",
              "path": "v1/{+name}",
              "response": {
                "$ref": "Location"
              },
              "id": "datastream.projects.locations.get",
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "description": "Resource name for the location.",
                  "type": "string",
                  "location": "path",
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "required": true
                }
              }
            },
            "fetchStaticIps": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "The FetchStaticIps API call exposes the static IP addresses used by Datastream.",
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "pageSize": {
                  "description": "Maximum number of Ips to return, will likely not be specified.",
                  "type": "integer",
                  "format": "int32",
                  "location": "query"
                },
                "name": {
                  "location": "path",
                  "required": true,
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "description": "Required. The resource name for the location for which static IPs should be returned. Must be in the format `projects/*/locations/*`.",
                  "type": "string"
                },
                "pageToken": {
                  "location": "query",
                  "description": "A page token, received from a previous `ListStaticIps` call. will likely not be specified.",
                  "type": "string"
                }
              },
              "path": "v1/{+name}:fetchStaticIps",
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}:fetchStaticIps",
              "httpMethod": "GET",
              "response": {
                "$ref": "FetchStaticIpsResponse"
              },
              "id": "datastream.projects.locations.fetchStaticIps"
            },
            "list": {
              "httpMethod": "GET",
              "parameters": {
                "pageToken": {
                  "type": "string",
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.",
                  "location": "query"
                },
                "pageSize": {
                  "format": "int32",
                  "description": "The maximum number of results to return. If not set, the service selects a default.",
                  "location": "query",
                  "type": "integer"
                },
                "filter": {
                  "location": "query",
                  "type": "string",
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like `\"displayName=tokyo\"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160)."
                },
                "name": {
                  "required": true,
                  "description": "The resource that owns the locations collection, if applicable.",
                  "type": "string",
                  "pattern": "^projects/[^/]+$",
                  "location": "path"
                }
              },
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "id": "datastream.projects.locations.list",
              "flatPath": "v1/projects/{projectsId}/locations",
              "description": "Lists information about the supported locations for this service.",
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "path": "v1/{+name}/locations"
            }
          }
        }
      }
    }
  },
  "baseUrl": "https://datastream.googleapis.com/",
  "version_module": true,
  "description": "",
  "parameters": {
    "prettyPrint": {
      "location": "query",
      "type": "boolean",
      "default": "true",
      "description": "Returns response with indentations and line breaks."
    },
    "$.xgafv": {
      "type": "string",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query",
      "enum": [
        "1",
        "2"
      ],
      "description": "V1 error format."
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "location": "query",
      "type": "string"
    },
    "callback": {
      "description": "JSONP",
      "type": "string",
      "location": "query"
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query",
      "type": "string"
    },
    "access_token": {
      "description": "OAuth access token.",
      "type": "string",
      "location": "query"
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query",
      "type": "string"
    },
    "upload_protocol": {
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string"
    },
    "quotaUser": {
      "location": "query",
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "alt": {
      "type": "string",
      "location": "query",
      "description": "Data format for response.",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "default": "json"
    }
  },
  "fullyEncodeReservedExpansion": true,
  "version": "v1",
  "name": "datastream",
  "rootUrl": "https://datastream.googleapis.com/",
  "documentationLink": "https://cloud.google.com/datastream/",
  "batchPath": "batch",
  "discoveryVersion": "v1",
  "ownerDomain": "google.com",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "title": "Datastream API",
  "kind": "discovery#restDescription",
  "canonicalName": "Datastream",
  "revision": "20230215",
  "ownerName": "Google",
  "schemas": {
    "PrivateConnectivity": {
      "description": "Private Connectivity",
      "type": "object",
      "id": "PrivateConnectivity",
      "properties": {
        "privateConnection": {
          "type": "string",
          "description": "Required. A reference to a private connection resource. Format: `projects/{project}/locations/{location}/privateConnections/{name}`"
        }
      }
    },
    "ListRoutesResponse": {
      "id": "ListRoutesResponse",
      "description": "Route list response.",
      "properties": {
        "routes": {
          "items": {
            "$ref": "Route"
          },
          "type": "array",
          "description": "List of Routes."
        },
        "unreachable": {
          "type": "array",
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          }
        },
        "nextPageToken": {
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MysqlRdbms": {
      "id": "MysqlRdbms",
      "properties": {
        "mysqlDatabases": {
          "items": {
            "$ref": "MysqlDatabase"
          },
          "description": "Mysql databases on the server",
          "type": "array"
        }
      },
      "description": "MySQL database structure",
      "type": "object"
    },
    "Empty": {
      "type": "object",
      "id": "Empty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "properties": {}
    },
    "JsonFileFormat": {
      "type": "object",
      "id": "JsonFileFormat",
      "description": "JSON file format configuration.",
      "properties": {
        "schemaFileFormat": {
          "enum": [
            "SCHEMA_FILE_FORMAT_UNSPECIFIED",
            "NO_SCHEMA_FILE",
            "AVRO_SCHEMA_FILE"
          ],
          "type": "string",
          "description": "The schema file format along JSON data files.",
          "enumDescriptions": [
            "Unspecified schema file format.",
            "Do not attach schema file.",
            "Avro schema format."
          ]
        },
        "compression": {
          "enumDescriptions": [
            "Unspecified json file compression.",
            "Do not compress JSON file.",
            "Gzip compression."
          ],
          "enum": [
            "JSON_COMPRESSION_UNSPECIFIED",
            "NO_COMPRESSION",
            "GZIP"
          ],
          "description": "Compression of the loaded JSON file.",
          "type": "string"
        }
      }
    },
    "BigQueryDestinationConfig": {
      "properties": {
        "dataFreshness": {
          "type": "string",
          "format": "google-duration",
          "description": "The guaranteed data freshness (in seconds) when querying tables created by the stream. Editing this field will only affect new tables created in the future, but existing tables will not be impacted. Lower values mean that queries will return fresher data, but may result in higher cost."
        },
        "singleTargetDataset": {
          "$ref": "SingleTargetDataset",
          "description": "Single destination dataset."
        },
        "sourceHierarchyDatasets": {
          "$ref": "SourceHierarchyDatasets",
          "description": "Source hierarchy datasets."
        }
      },
      "id": "BigQueryDestinationConfig",
      "type": "object"
    },
    "ForwardSshTunnelConnectivity": {
      "description": "Forward SSH Tunnel connectivity.",
      "type": "object",
      "id": "ForwardSshTunnelConnectivity",
      "properties": {
        "hostname": {
          "description": "Required. Hostname for the SSH tunnel.",
          "type": "string"
        },
        "port": {
          "type": "integer",
          "description": "Port for the SSH tunnel, default value is 22.",
          "format": "int32"
        },
        "privateKey": {
          "description": "Input only. SSH private key.",
          "type": "string"
        },
        "username": {
          "type": "string",
          "description": "Required. Username for the SSH tunnel."
        },
        "password": {
          "description": "Input only. SSH password.",
          "type": "string"
        }
      }
    },
    "MysqlObjectIdentifier": {
      "properties": {
        "database": {
          "description": "Required. The database name.",
          "type": "string"
        },
        "table": {
          "description": "Required. The table name.",
          "type": "string"
        }
      },
      "description": "Mysql data source object identifier.",
      "id": "MysqlObjectIdentifier",
      "type": "object"
    },
    "OracleSourceConfig": {
      "description": "Oracle data source configuration",
      "type": "object",
      "id": "OracleSourceConfig",
      "properties": {
        "dropLargeObjects": {
          "$ref": "DropLargeObjects",
          "description": "Drop large object values."
        },
        "includeObjects": {
          "description": "Oracle objects to include in the stream.",
          "$ref": "OracleRdbms"
        },
        "streamLargeObjects": {
          "$ref": "StreamLargeObjects",
          "description": "Stream large object values. NOTE: This feature is currently experimental."
        },
        "excludeObjects": {
          "$ref": "OracleRdbms",
          "description": "Oracle objects to exclude from the stream."
        },
        "maxConcurrentCdcTasks": {
          "description": "Maximum number of concurrent CDC tasks. The number should be non negative. If not set (or set to 0), the system's default value will be used.",
          "format": "int32",
          "type": "integer"
        },
        "maxConcurrentBackfillTasks": {
          "format": "int32",
          "description": "Maximum number of concurrent backfill tasks. The number should be non negative. If not set (or set to 0), the system's default value will be used.",
          "type": "integer"
        }
      }
    },
    "SourceConfig": {
      "properties": {
        "sourceConnectionProfile": {
          "type": "string",
          "description": "Required. Source connection profile resoource. Format: `projects/{project}/locations/{location}/connectionProfiles/{name}`"
        },
        "mysqlSourceConfig": {
          "description": "MySQL data source configuration.",
          "$ref": "MysqlSourceConfig"
        },
        "oracleSourceConfig": {
          "$ref": "OracleSourceConfig",
          "description": "Oracle data source configuration."
        },
        "postgresqlSourceConfig": {
          "description": "PostgreSQL data source configuration.",
          "$ref": "PostgresqlSourceConfig"
        }
      },
      "id": "SourceConfig",
      "type": "object",
      "description": "The configuration of the stream source."
    },
    "DestinationConfig": {
      "properties": {
        "bigqueryDestinationConfig": {
          "$ref": "BigQueryDestinationConfig",
          "description": "BigQuery destination configuration."
        },
        "destinationConnectionProfile": {
          "type": "string",
          "description": "Required. Destination connection profile resource. Format: `projects/{project}/locations/{location}/connectionProfiles/{name}`"
        },
        "gcsDestinationConfig": {
          "description": "A configuration for how data should be loaded to Cloud Storage.",
          "$ref": "GcsDestinationConfig"
        }
      },
      "id": "DestinationConfig",
      "type": "object",
      "description": "The configuration of the stream destination."
    },
    "Validation": {
      "type": "object",
      "properties": {
        "code": {
          "description": "A custom code identifying this validation.",
          "type": "string"
        },
        "description": {
          "description": "A short description of the validation.",
          "type": "string"
        },
        "state": {
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "NOT_EXECUTED",
            "FAILED",
            "PASSED"
          ],
          "enumDescriptions": [
            "Unspecified state.",
            "Validation did not execute.",
            "Validation failed.",
            "Validation passed."
          ],
          "description": "Validation execution status."
        },
        "message": {
          "items": {
            "$ref": "ValidationMessage"
          },
          "type": "array",
          "description": "Messages reflecting the validation results."
        }
      },
      "description": "A validation to perform on a stream.",
      "id": "Validation"
    },
    "PostgresqlSourceConfig": {
      "properties": {
        "excludeObjects": {
          "$ref": "PostgresqlRdbms",
          "description": "PostgreSQL objects to exclude from the stream."
        },
        "publication": {
          "description": "Required. The name of the publication that includes the set of all tables that are defined in the stream's include_objects.",
          "type": "string"
        },
        "includeObjects": {
          "$ref": "PostgresqlRdbms",
          "description": "PostgreSQL objects to include in the stream."
        },
        "maxConcurrentBackfillTasks": {
          "format": "int32",
          "description": "Maximum number of concurrent backfill tasks. The number should be non negative. If not set (or set to 0), the system's default value will be used.",
          "type": "integer"
        },
        "replicationSlot": {
          "description": "Required. Immutable. The name of the logical replication slot that's configured with the pgoutput plugin.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "PostgreSQL data source configuration",
      "id": "PostgresqlSourceConfig"
    },
    "Error": {
      "description": "Represent a user-facing Error.",
      "id": "Error",
      "type": "object",
      "properties": {
        "details": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Additional information about the error."
        },
        "reason": {
          "type": "string",
          "description": "A title that explains the reason for the error."
        },
        "message": {
          "type": "string",
          "description": "A message containing more information about the error that occurred."
        },
        "errorTime": {
          "description": "The time when the error occurred.",
          "format": "google-datetime",
          "type": "string"
        },
        "errorUuid": {
          "type": "string",
          "description": "A unique identifier for this specific error, allowing it to be traced throughout the system in logs and API responses."
        }
      }
    },
    "MysqlSslConfig": {
      "id": "MysqlSslConfig",
      "type": "object",
      "description": "MySQL SSL configuration information.",
      "properties": {
        "clientCertificate": {
          "description": "Input only. PEM-encoded certificate that will be used by the replica to authenticate against the source database server. If this field is used then the 'client_key' and the 'ca_certificate' fields are mandatory.",
          "type": "string"
        },
        "caCertificate": {
          "type": "string",
          "description": "Input only. PEM-encoded certificate of the CA that signed the source database server's certificate."
        },
        "clientKey": {
          "description": "Input only. PEM-encoded private key associated with the Client Certificate. If this field is used then the 'client_certificate' and the 'ca_certificate' fields are mandatory.",
          "type": "string"
        },
        "caCertificateSet": {
          "readOnly": true,
          "type": "boolean",
          "description": "Output only. Indicates whether the ca_certificate field is set."
        },
        "clientCertificateSet": {
          "readOnly": true,
          "type": "boolean",
          "description": "Output only. Indicates whether the client_certificate field is set."
        },
        "clientKeySet": {
          "type": "boolean",
          "readOnly": true,
          "description": "Output only. Indicates whether the client_key field is set."
        }
      }
    },
    "ListStreamObjectsResponse": {
      "id": "ListStreamObjectsResponse",
      "description": "Response containing the objects for a stream.",
      "type": "object",
      "properties": {
        "streamObjects": {
          "description": "List of stream objects.",
          "type": "array",
          "items": {
            "$ref": "StreamObject"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token, which can be sent as `page_token` to retrieve the next page."
        }
      }
    },
    "BigQueryProfile": {
      "type": "object",
      "description": "BigQuery warehouse profile.",
      "id": "BigQueryProfile",
      "properties": {}
    },
    "MysqlTable": {
      "type": "object",
      "properties": {
        "mysqlColumns": {
          "description": "MySQL columns in the database. When unspecified as part of include/exclude objects, includes/excludes everything.",
          "items": {
            "$ref": "MysqlColumn"
          },
          "type": "array"
        },
        "table": {
          "type": "string",
          "description": "Table name."
        }
      },
      "id": "MysqlTable",
      "description": "MySQL table."
    },
    "BackfillNoneStrategy": {
      "description": "Backfill strategy to disable automatic backfill for the Stream's objects.",
      "id": "BackfillNoneStrategy",
      "properties": {},
      "type": "object"
    },
    "SourceObjectIdentifier": {
      "properties": {
        "mysqlIdentifier": {
          "description": "Mysql data source object identifier.",
          "$ref": "MysqlObjectIdentifier"
        },
        "postgresqlIdentifier": {
          "description": "PostgreSQL data source object identifier.",
          "$ref": "PostgresqlObjectIdentifier"
        },
        "oracleIdentifier": {
          "$ref": "OracleObjectIdentifier",
          "description": "Oracle data source object identifier."
        }
      },
      "type": "object",
      "id": "SourceObjectIdentifier",
      "description": "Represents an identifier of an object in the data source."
    },
    "MysqlProfile": {
      "id": "MysqlProfile",
      "type": "object",
      "properties": {
        "username": {
          "description": "Required. Username for the MySQL connection.",
          "type": "string"
        },
        "password": {
          "description": "Required. Input only. Password for the MySQL connection.",
          "type": "string"
        },
        "port": {
          "format": "int32",
          "type": "integer",
          "description": "Port for the MySQL connection, default value is 3306."
        },
        "hostname": {
          "description": "Required. Hostname for the MySQL connection.",
          "type": "string"
        },
        "sslConfig": {
          "$ref": "MysqlSslConfig",
          "description": "SSL configuration for the MySQL connection."
        }
      },
      "description": "MySQL database profile."
    },
    "Status": {
      "type": "object",
      "id": "Status",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "properties": {
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "The status code, which should be an enum value of google.rpc.Code."
        },
        "details": {
          "type": "array",
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "items": {
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            },
            "type": "object"
          }
        }
      }
    },
    "PostgresqlProfile": {
      "properties": {
        "port": {
          "format": "int32",
          "type": "integer",
          "description": "Port for the PostgreSQL connection, default value is 5432."
        },
        "hostname": {
          "type": "string",
          "description": "Required. Hostname for the PostgreSQL connection."
        },
        "database": {
          "type": "string",
          "description": "Required. Database for the PostgreSQL connection."
        },
        "password": {
          "description": "Required. Password for the PostgreSQL connection.",
          "type": "string"
        },
        "username": {
          "description": "Required. Username for the PostgreSQL connection.",
          "type": "string"
        }
      },
      "id": "PostgresqlProfile",
      "description": "PostgreSQL database profile.",
      "type": "object"
    },
    "Stream": {
      "properties": {
        "sourceConfig": {
          "description": "Required. Source connection profile configuration.",
          "$ref": "SourceConfig"
        },
        "destinationConfig": {
          "description": "Required. Destination connection profile configuration.",
          "$ref": "DestinationConfig"
        },
        "backfillNone": {
          "description": "Do not automatically backfill any objects.",
          "$ref": "BackfillNoneStrategy"
        },
        "displayName": {
          "description": "Required. Display name.",
          "type": "string"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Labels.",
          "type": "object"
        },
        "updateTime": {
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The last update time of the stream.",
          "type": "string"
        },
        "customerManagedEncryptionKey": {
          "description": "Immutable. A reference to a KMS encryption key. If provided, it will be used to encrypt the data. If left blank, data will be encrypted using an internal Stream-specific encryption key provisioned through KMS.",
          "type": "string"
        },
        "errors": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "Error"
          },
          "description": "Output only. Errors on the Stream."
        },
        "backfillAll": {
          "$ref": "BackfillAllStrategy",
          "description": "Automatically backfill objects included in the stream source configuration. Specific objects can be excluded."
        },
        "state": {
          "description": "The state of the stream.",
          "enum": [
            "STATE_UNSPECIFIED",
            "NOT_STARTED",
            "RUNNING",
            "PAUSED",
            "MAINTENANCE",
            "FAILED",
            "FAILED_PERMANENTLY",
            "STARTING",
            "DRAINING"
          ],
          "type": "string",
          "enumDescriptions": [
            "Unspecified stream state.",
            "The stream has been created but has not yet started streaming data.",
            "The stream is running.",
            "The stream is paused.",
            "The stream is in maintenance mode. Updates are rejected on the resource in this state.",
            "The stream is experiencing an error that is preventing data from being streamed.",
            "The stream has experienced a terminal failure.",
            "The stream is starting, but not yet running.",
            "The Stream is no longer reading new events, but still writing events in the buffer."
          ]
        },
        "name": {
          "description": "Output only. The stream's name.",
          "type": "string",
          "readOnly": true
        },
        "createTime": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The creation time of the stream.",
          "format": "google-datetime"
        }
      },
      "type": "object",
      "id": "Stream",
      "description": "A resource representing streaming data from a source to a destination."
    },
    "Location": {
      "properties": {
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}",
          "type": "object"
        },
        "displayName": {
          "type": "string",
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\"."
        },
        "metadata": {
          "description": "Service-specific metadata. For example the available capacity at the given location.",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "type": "object"
        },
        "name": {
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`",
          "type": "string"
        },
        "locationId": {
          "type": "string",
          "description": "The canonical id for this location. For example: `\"us-east1\"`."
        }
      },
      "description": "A resource that represents Google Cloud Platform location.",
      "type": "object",
      "id": "Location"
    },
    "OracleColumn": {
      "type": "object",
      "id": "OracleColumn",
      "properties": {
        "ordinalPosition": {
          "description": "The ordinal position of the column in the table.",
          "format": "int32",
          "type": "integer"
        },
        "nullable": {
          "type": "boolean",
          "description": "Whether or not the column can accept a null value."
        },
        "encoding": {
          "type": "string",
          "description": "Column encoding."
        },
        "column": {
          "type": "string",
          "description": "Column name."
        },
        "precision": {
          "description": "Column precision.",
          "format": "int32",
          "type": "integer"
        },
        "dataType": {
          "type": "string",
          "description": "The Oracle data type."
        },
        "length": {
          "format": "int32",
          "type": "integer",
          "description": "Column length."
        },
        "primaryKey": {
          "description": "Whether or not the column represents a primary key.",
          "type": "boolean"
        },
        "scale": {
          "format": "int32",
          "type": "integer",
          "description": "Column scale."
        }
      },
      "description": "Oracle Column."
    },
    "ListPrivateConnectionsResponse": {
      "properties": {
        "privateConnections": {
          "items": {
            "$ref": "PrivateConnection"
          },
          "type": "array",
          "description": "List of private connectivity configurations."
        },
        "nextPageToken": {
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        },
        "unreachable": {
          "type": "array",
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "Response containing a list of private connection configurations.",
      "type": "object",
      "id": "ListPrivateConnectionsResponse"
    },
    "PrivateConnection": {
      "description": "The PrivateConnection resource is used to establish private connectivity between Datastream and a customer's network.",
      "id": "PrivateConnection",
      "type": "object",
      "properties": {
        "updateTime": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The update time of the resource.",
          "format": "google-datetime"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The resource's name."
        },
        "createTime": {
          "readOnly": true,
          "description": "Output only. The create time of the resource.",
          "type": "string",
          "format": "google-datetime"
        },
        "labels": {
          "description": "Labels.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "state": {
          "enumDescriptions": [
            "Unspecified state.",
            "The private connection is in creation state - creating resources.",
            "The private connection has been created with all of its resources.",
            "The private connection creation has failed.",
            "The private connection is being deleted.",
            "Delete request has failed, resource is in invalid state."
          ],
          "description": "Output only. The state of the Private Connection.",
          "readOnly": true,
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "CREATED",
            "FAILED",
            "DELETING",
            "FAILED_TO_DELETE"
          ],
          "type": "string"
        },
        "error": {
          "description": "Output only. In case of error, the details of the error in a user-friendly format.",
          "readOnly": true,
          "$ref": "Error"
        },
        "displayName": {
          "type": "string",
          "description": "Required. Display name."
        },
        "vpcPeeringConfig": {
          "$ref": "VpcPeeringConfig",
          "description": "VPC Peering Config."
        }
      }
    },
    "CancelOperationRequest": {
      "properties": {},
      "description": "The request message for Operations.CancelOperation.",
      "type": "object",
      "id": "CancelOperationRequest"
    },
    "OperationMetadata": {
      "description": "Represents the metadata of the long-running operation.",
      "properties": {
        "verb": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Name of the verb executed by the operation."
        },
        "apiVersion": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. API version used to start the operation."
        },
        "statusMessage": {
          "description": "Output only. Human-readable status of the operation, if any.",
          "readOnly": true,
          "type": "string"
        },
        "requestedCancellation": {
          "description": "Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
          "type": "boolean",
          "readOnly": true
        },
        "target": {
          "readOnly": true,
          "description": "Output only. Server-defined resource path for the target of the operation.",
          "type": "string"
        },
        "validationResult": {
          "description": "Output only. Results of executed validations if there are any.",
          "readOnly": true,
          "$ref": "ValidationResult"
        },
        "createTime": {
          "readOnly": true,
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The time the operation was created."
        },
        "endTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The time the operation finished running.",
          "readOnly": true
        }
      },
      "type": "object",
      "id": "OperationMetadata"
    },
    "OracleSchema": {
      "id": "OracleSchema",
      "description": "Oracle schema.",
      "type": "object",
      "properties": {
        "schema": {
          "description": "Schema name.",
          "type": "string"
        },
        "oracleTables": {
          "items": {
            "$ref": "OracleTable"
          },
          "description": "Tables in the schema.",
          "type": "array"
        }
      }
    },
    "LookupStreamObjectRequest": {
      "properties": {
        "sourceObjectIdentifier": {
          "description": "Required. The source object identifier which maps to the stream object.",
          "$ref": "SourceObjectIdentifier"
        }
      },
      "type": "object",
      "id": "LookupStreamObjectRequest",
      "description": "Request for looking up a specific stream object by its source object identifier."
    },
    "ListConnectionProfilesResponse": {
      "id": "ListConnectionProfilesResponse",
      "description": "Response message for listing connection profiles.",
      "type": "object",
      "properties": {
        "connectionProfiles": {
          "description": "List of connection profiles.",
          "items": {
            "$ref": "ConnectionProfile"
          },
          "type": "array"
        },
        "unreachable": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached."
        },
        "nextPageToken": {
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        }
      }
    },
    "PostgresqlColumn": {
      "type": "object",
      "id": "PostgresqlColumn",
      "properties": {
        "scale": {
          "description": "Column scale.",
          "format": "int32",
          "type": "integer"
        },
        "precision": {
          "format": "int32",
          "type": "integer",
          "description": "Column precision."
        },
        "dataType": {
          "description": "The PostgreSQL data type.",
          "type": "string"
        },
        "primaryKey": {
          "type": "boolean",
          "description": "Whether or not the column represents a primary key."
        },
        "ordinalPosition": {
          "type": "integer",
          "description": "The ordinal position of the column in the table.",
          "format": "int32"
        },
        "length": {
          "description": "Column length.",
          "format": "int32",
          "type": "integer"
        },
        "column": {
          "description": "Column name.",
          "type": "string"
        },
        "nullable": {
          "type": "boolean",
          "description": "Whether or not the column can accept a null value."
        }
      },
      "description": "PostgreSQL Column."
    },
    "ListStreamsResponse": {
      "description": "Response message for listing streams.",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages."
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "streams": {
          "type": "array",
          "items": {
            "$ref": "Stream"
          },
          "description": "List of streams"
        }
      },
      "type": "object",
      "id": "ListStreamsResponse"
    },
    "BackfillJob": {
      "id": "BackfillJob",
      "properties": {
        "lastStartTime": {
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. Backfill job's start time.",
          "type": "string"
        },
        "lastEndTime": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Backfill job's end time.",
          "format": "google-datetime"
        },
        "state": {
          "type": "string",
          "description": "Backfill job state.",
          "enum": [
            "STATE_UNSPECIFIED",
            "NOT_STARTED",
            "PENDING",
            "ACTIVE",
            "STOPPED",
            "FAILED",
            "COMPLETED",
            "UNSUPPORTED"
          ],
          "enumDescriptions": [
            "Default value.",
            "Backfill job was never started for the stream object (stream has backfill strategy defined as manual or object was explicitly excluded from automatic backfill).",
            "Backfill job will start pending available resources.",
            "Backfill job is running.",
            "Backfill job stopped (next job run will start from beginning).",
            "Backfill job failed (due to an error).",
            "Backfill completed successfully.",
            "Backfill job failed since the table structure is currently unsupported for backfill."
          ]
        },
        "trigger": {
          "enumDescriptions": [
            "Default value.",
            "Object backfill job was triggered automatically according to the stream's backfill strategy.",
            "Object backfill job was triggered manually using the dedicated API."
          ],
          "description": "Backfill job's triggering reason.",
          "enum": [
            "TRIGGER_UNSPECIFIED",
            "AUTOMATIC",
            "MANUAL"
          ],
          "type": "string"
        },
        "errors": {
          "description": "Output only. Errors which caused the backfill job to fail.",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "Error"
          }
        }
      },
      "type": "object",
      "description": "Represents a backfill job on a specific stream object."
    },
    "PostgresqlSchema": {
      "description": "PostgreSQL schema.",
      "id": "PostgresqlSchema",
      "type": "object",
      "properties": {
        "postgresqlTables": {
          "description": "Tables in the schema.",
          "type": "array",
          "items": {
            "$ref": "PostgresqlTable"
          }
        },
        "schema": {
          "type": "string",
          "description": "Schema name."
        }
      }
    },
    "ListOperationsResponse": {
      "id": "ListOperationsResponse",
      "type": "object",
      "description": "The response message for Operations.ListOperations.",
      "properties": {
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        },
        "operations": {
          "type": "array",
          "items": {
            "$ref": "Operation"
          },
          "description": "A list of operations that matches the specified filter in the request."
        }
      }
    },
    "StaticServiceIpConnectivity": {
      "properties": {},
      "id": "StaticServiceIpConnectivity",
      "description": "Static IP address connectivity.",
      "type": "object"
    },
    "ValidationMessage": {
      "id": "ValidationMessage",
      "properties": {
        "level": {
          "type": "string",
          "enum": [
            "LEVEL_UNSPECIFIED",
            "WARNING",
            "ERROR"
          ],
          "description": "Message severity level (warning or error).",
          "enumDescriptions": [
            "Unspecified level.",
            "Potentially cause issues with the Stream.",
            "Definitely cause issues with the Stream."
          ]
        },
        "metadata": {
          "type": "object",
          "description": "Additional metadata related to the result.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "message": {
          "type": "string",
          "description": "The result of the validation."
        },
        "code": {
          "type": "string",
          "description": "A custom code identifying this specific message."
        }
      },
      "description": "Represent user-facing validation result message.",
      "type": "object"
    },
    "GcsDestinationConfig": {
      "type": "object",
      "description": "Google Cloud Storage destination configuration",
      "properties": {
        "fileRotationInterval": {
          "description": "The maximum duration for which new events are added before a file is closed and a new file is created.",
          "type": "string",
          "format": "google-duration"
        },
        "avroFileFormat": {
          "description": "AVRO file format configuration.",
          "$ref": "AvroFileFormat"
        },
        "fileRotationMb": {
          "description": "The maximum file size to be saved in the bucket.",
          "format": "int32",
          "type": "integer"
        },
        "jsonFileFormat": {
          "$ref": "JsonFileFormat",
          "description": "JSON file format configuration."
        },
        "path": {
          "description": "Path inside the Cloud Storage bucket to write data to.",
          "type": "string"
        }
      },
      "id": "GcsDestinationConfig"
    },
    "VpcPeeringConfig": {
      "properties": {
        "subnet": {
          "description": "Required. A free subnet for peering. (CIDR of /29)",
          "type": "string"
        },
        "vpc": {
          "type": "string",
          "description": "Required. Fully qualified name of the VPC that Datastream will peer to. Format: `projects/{project}/global/{networks}/{name}`"
        }
      },
      "type": "object",
      "id": "VpcPeeringConfig",
      "description": "The VPC Peering configuration is used to create VPC peering between Datastream and the consumer's VPC."
    },
    "DropLargeObjects": {
      "id": "DropLargeObjects",
      "properties": {},
      "type": "object",
      "description": "Configuration to drop large object values."
    },
    "StopBackfillJobRequest": {
      "properties": {},
      "id": "StopBackfillJobRequest",
      "description": "Request for manually stopping a running backfill job for a specific stream object.",
      "type": "object"
    },
    "Route": {
      "type": "object",
      "description": "The route resource is the child of the private connection resource, used for defining a route for a private connection.",
      "properties": {
        "displayName": {
          "description": "Required. Display name.",
          "type": "string"
        },
        "destinationPort": {
          "format": "int32",
          "type": "integer",
          "description": "Destination port for connection"
        },
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "readOnly": true,
          "description": "Output only. The create time of the resource."
        },
        "updateTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The update time of the resource.",
          "readOnly": true
        },
        "destinationAddress": {
          "type": "string",
          "description": "Required. Destination address for connection"
        },
        "name": {
          "type": "string",
          "description": "Output only. The resource's name.",
          "readOnly": true
        },
        "labels": {
          "type": "object",
          "description": "Labels.",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "id": "Route"
    },
    "StartBackfillJobResponse": {
      "properties": {
        "object": {
          "description": "The stream object resource a backfill job was started for.",
          "$ref": "StreamObject"
        }
      },
      "id": "StartBackfillJobResponse",
      "description": "Response for manually initiating a backfill job for a specific stream object.",
      "type": "object"
    },
    "MysqlDatabase": {
      "id": "MysqlDatabase",
      "properties": {
        "database": {
          "description": "Database name.",
          "type": "string"
        },
        "mysqlTables": {
          "type": "array",
          "description": "Tables in the database.",
          "items": {
            "$ref": "MysqlTable"
          }
        }
      },
      "type": "object",
      "description": "MySQL database."
    },
    "ConnectionProfile": {
      "type": "object",
      "description": "A set of reusable connection configurations to be used as a source or destination for a stream.",
      "properties": {
        "postgresqlProfile": {
          "description": "PostgreSQL Connection Profile configuration.",
          "$ref": "PostgresqlProfile"
        },
        "labels": {
          "description": "Labels.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "gcsProfile": {
          "$ref": "GcsProfile",
          "description": "Cloud Storage ConnectionProfile configuration."
        },
        "bigqueryProfile": {
          "description": "BigQuery Connection Profile configuration.",
          "$ref": "BigQueryProfile"
        },
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The create time of the resource."
        },
        "oracleProfile": {
          "description": "Oracle ConnectionProfile configuration.",
          "$ref": "OracleProfile"
        },
        "displayName": {
          "type": "string",
          "description": "Required. Display name."
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The resource's name."
        },
        "forwardSshConnectivity": {
          "$ref": "ForwardSshTunnelConnectivity",
          "description": "Forward SSH tunnel connectivity."
        },
        "privateConnectivity": {
          "description": "Private connectivity.",
          "$ref": "PrivateConnectivity"
        },
        "mysqlProfile": {
          "$ref": "MysqlProfile",
          "description": "MySQL ConnectionProfile configuration."
        },
        "updateTime": {
          "description": "Output only. The update time of the resource.",
          "type": "string",
          "readOnly": true,
          "format": "google-datetime"
        },
        "staticServiceIpConnectivity": {
          "$ref": "StaticServiceIpConnectivity",
          "description": "Static Service IP connectivity."
        }
      },
      "id": "ConnectionProfile"
    },
    "OracleObjectIdentifier": {
      "description": "Oracle data source object identifier.",
      "type": "object",
      "id": "OracleObjectIdentifier",
      "properties": {
        "table": {
          "description": "Required. The table name.",
          "type": "string"
        },
        "schema": {
          "type": "string",
          "description": "Required. The schema name."
        }
      }
    },
    "MysqlSourceConfig": {
      "id": "MysqlSourceConfig",
      "type": "object",
      "description": "MySQL source configuration",
      "properties": {
        "maxConcurrentCdcTasks": {
          "format": "int32",
          "description": "Maximum number of concurrent CDC tasks. The number should be non negative. If not set (or set to 0), the system's default value will be used.",
          "type": "integer"
        },
        "excludeObjects": {
          "description": "MySQL objects to exclude from the stream.",
          "$ref": "MysqlRdbms"
        },
        "maxConcurrentBackfillTasks": {
          "type": "integer",
          "description": "Maximum number of concurrent backfill tasks. The number should be non negative. If not set (or set to 0), the system's default value will be used.",
          "format": "int32"
        },
        "includeObjects": {
          "description": "MySQL objects to retrieve from the source.",
          "$ref": "MysqlRdbms"
        }
      }
    },
    "GcsProfile": {
      "id": "GcsProfile",
      "properties": {
        "bucket": {
          "type": "string",
          "description": "Required. The Cloud Storage bucket name."
        },
        "rootPath": {
          "description": "The root path inside the Cloud Storage bucket.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Cloud Storage bucket profile."
    },
    "OracleTable": {
      "type": "object",
      "description": "Oracle table.",
      "properties": {
        "oracleColumns": {
          "items": {
            "$ref": "OracleColumn"
          },
          "description": "Oracle columns in the schema. When unspecified as part of include/exclude objects, includes/excludes everything.",
          "type": "array"
        },
        "table": {
          "description": "Table name.",
          "type": "string"
        }
      },
      "id": "OracleTable"
    },
    "DatasetTemplate": {
      "id": "DatasetTemplate",
      "description": "Dataset template used for dynamic dataset creation.",
      "properties": {
        "datasetIdPrefix": {
          "type": "string",
          "description": "If supplied, every created dataset will have its name prefixed by the provided value. The prefix and name will be separated by an underscore. i.e. _."
        },
        "kmsKeyName": {
          "description": "Describes the Cloud KMS encryption key that will be used to protect destination BigQuery table. The BigQuery Service Account associated with your project requires access to this encryption key. i.e. projects/{project}/locations/{location}/keyRings/{key_ring}/cryptoKeys/{cryptoKey}. See https://cloud.google.com/bigquery/docs/customer-managed-encryption for more information.",
          "type": "string"
        },
        "location": {
          "type": "string",
          "description": "Required. The geographic location where the dataset should reside. See https://cloud.google.com/bigquery/docs/locations for supported locations."
        }
      },
      "type": "object"
    },
    "ValidationResult": {
      "description": "Contains the current validation results.",
      "type": "object",
      "id": "ValidationResult",
      "properties": {
        "validations": {
          "description": "A list of validations (includes both executed as well as not executed validations).",
          "items": {
            "$ref": "Validation"
          },
          "type": "array"
        }
      }
    },
    "FetchStaticIpsResponse": {
      "type": "object",
      "description": "Response message for a 'FetchStaticIps' response.",
      "id": "FetchStaticIpsResponse",
      "properties": {
        "staticIps": {
          "description": "list of static ips by account",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "nextPageToken": {
          "description": "A token that can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        }
      }
    },
    "StopBackfillJobResponse": {
      "id": "StopBackfillJobResponse",
      "description": "Response for manually stop a backfill job for a specific stream object.",
      "properties": {
        "object": {
          "$ref": "StreamObject",
          "description": "The stream object resource the backfill job was stopped for."
        }
      },
      "type": "object"
    },
    "AvroFileFormat": {
      "id": "AvroFileFormat",
      "properties": {},
      "type": "object",
      "description": "AVRO file format configuration."
    },
    "StreamLargeObjects": {
      "type": "object",
      "id": "StreamLargeObjects",
      "properties": {},
      "description": "Configuration to stream large object values."
    },
    "BackfillAllStrategy": {
      "description": "Backfill strategy to automatically backfill the Stream's objects. Specific objects can be excluded.",
      "type": "object",
      "id": "BackfillAllStrategy",
      "properties": {
        "oracleExcludedObjects": {
          "description": "Oracle data source objects to avoid backfilling.",
          "$ref": "OracleRdbms"
        },
        "postgresqlExcludedObjects": {
          "description": "PostgreSQL data source objects to avoid backfilling.",
          "$ref": "PostgresqlRdbms"
        },
        "mysqlExcludedObjects": {
          "$ref": "MysqlRdbms",
          "description": "MySQL data source objects to avoid backfilling."
        }
      }
    },
    "Operation": {
      "properties": {
        "done": {
          "type": "boolean",
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "Status"
        },
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
          "type": "string"
        },
        "metadata": {
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "type": "object"
        },
        "response": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "type": "object",
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`."
        }
      },
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "type": "object",
      "id": "Operation"
    },
    "OracleProfile": {
      "id": "OracleProfile",
      "properties": {
        "databaseService": {
          "description": "Required. Database for the Oracle connection.",
          "type": "string"
        },
        "connectionAttributes": {
          "type": "object",
          "description": "Connection string attributes",
          "additionalProperties": {
            "type": "string"
          }
        },
        "password": {
          "description": "Required. Password for the Oracle connection.",
          "type": "string"
        },
        "hostname": {
          "type": "string",
          "description": "Required. Hostname for the Oracle connection."
        },
        "username": {
          "type": "string",
          "description": "Required. Username for the Oracle connection."
        },
        "port": {
          "format": "int32",
          "type": "integer",
          "description": "Port for the Oracle connection, default value is 1521."
        }
      },
      "description": "Oracle database profile.",
      "type": "object"
    },
    "PostgresqlRdbms": {
      "type": "object",
      "properties": {
        "postgresqlSchemas": {
          "description": "PostgreSQL schemas in the database server.",
          "type": "array",
          "items": {
            "$ref": "PostgresqlSchema"
          }
        }
      },
      "id": "PostgresqlRdbms",
      "description": "PostgreSQL database structure."
    },
    "MysqlColumn": {
      "id": "MysqlColumn",
      "properties": {
        "column": {
          "description": "Column name.",
          "type": "string"
        },
        "nullable": {
          "description": "Whether or not the column can accept a null value.",
          "type": "boolean"
        },
        "collation": {
          "type": "string",
          "description": "Column collation."
        },
        "primaryKey": {
          "type": "boolean",
          "description": "Whether or not the column represents a primary key."
        },
        "dataType": {
          "description": "The MySQL data type. Full data types list can be found here: https://dev.mysql.com/doc/refman/8.0/en/data-types.html",
          "type": "string"
        },
        "length": {
          "type": "integer",
          "format": "int32",
          "description": "Column length."
        },
        "ordinalPosition": {
          "format": "int32",
          "description": "The ordinal position of the column in the table.",
          "type": "integer"
        }
      },
      "type": "object",
      "description": "MySQL Column."
    },
    "SourceHierarchyDatasets": {
      "type": "object",
      "description": "Destination datasets are created so that hierarchy of the destination data objects matches the source hierarchy.",
      "id": "SourceHierarchyDatasets",
      "properties": {
        "datasetTemplate": {
          "$ref": "DatasetTemplate"
        }
      }
    },
    "DiscoverConnectionProfileRequest": {
      "id": "DiscoverConnectionProfileRequest",
      "description": "Request message for 'discover' ConnectionProfile request.",
      "type": "object",
      "properties": {
        "connectionProfileName": {
          "type": "string",
          "description": "A reference to an existing connection profile."
        },
        "oracleRdbms": {
          "description": "Oracle RDBMS to enrich with child data objects and metadata.",
          "$ref": "OracleRdbms"
        },
        "hierarchyDepth": {
          "format": "int32",
          "description": "The number of hierarchy levels below the current level to be retrieved.",
          "type": "integer"
        },
        "connectionProfile": {
          "$ref": "ConnectionProfile",
          "description": "An ad-hoc connection profile configuration."
        },
        "mysqlRdbms": {
          "$ref": "MysqlRdbms",
          "description": "MySQL RDBMS to enrich with child data objects and metadata."
        },
        "postgresqlRdbms": {
          "description": "PostgreSQL RDBMS to enrich with child data objects and metadata.",
          "$ref": "PostgresqlRdbms"
        },
        "fullHierarchy": {
          "description": "Whether to retrieve the full hierarchy of data objects (TRUE) or only the current level (FALSE).",
          "type": "boolean"
        }
      }
    },
    "OracleRdbms": {
      "description": "Oracle database structure.",
      "type": "object",
      "id": "OracleRdbms",
      "properties": {
        "oracleSchemas": {
          "description": "Oracle schemas/databases in the database server.",
          "items": {
            "$ref": "OracleSchema"
          },
          "type": "array"
        }
      }
    },
    "StartBackfillJobRequest": {
      "id": "StartBackfillJobRequest",
      "description": "Request for manually initiating a backfill job for a specific stream object.",
      "properties": {},
      "type": "object"
    },
    "PostgresqlTable": {
      "type": "object",
      "properties": {
        "postgresqlColumns": {
          "items": {
            "$ref": "PostgresqlColumn"
          },
          "type": "array",
          "description": "PostgreSQL columns in the schema. When unspecified as part of include/exclude objects, includes/excludes everything."
        },
        "table": {
          "description": "Table name.",
          "type": "string"
        }
      },
      "description": "PostgreSQL table.",
      "id": "PostgresqlTable"
    },
    "SingleTargetDataset": {
      "type": "object",
      "description": "A single target dataset to which all data will be streamed.",
      "id": "SingleTargetDataset",
      "properties": {
        "datasetId": {
          "description": "The dataset ID of the target dataset.",
          "type": "string"
        }
      }
    },
    "ListLocationsResponse": {
      "id": "ListLocationsResponse",
      "type": "object",
      "description": "The response message for Locations.ListLocations.",
      "properties": {
        "locations": {
          "items": {
            "$ref": "Location"
          },
          "type": "array",
          "description": "A list of locations that matches the specified filter in the request."
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      }
    },
    "PostgresqlObjectIdentifier": {
      "id": "PostgresqlObjectIdentifier",
      "type": "object",
      "description": "PostgreSQL data source object identifier.",
      "properties": {
        "schema": {
          "type": "string",
          "description": "Required. The schema name."
        },
        "table": {
          "type": "string",
          "description": "Required. The table name."
        }
      }
    },
    "DiscoverConnectionProfileResponse": {
      "type": "object",
      "description": "Response from a discover request.",
      "properties": {
        "postgresqlRdbms": {
          "$ref": "PostgresqlRdbms",
          "description": "Enriched PostgreSQL RDBMS object."
        },
        "mysqlRdbms": {
          "description": "Enriched MySQL RDBMS object.",
          "$ref": "MysqlRdbms"
        },
        "oracleRdbms": {
          "$ref": "OracleRdbms",
          "description": "Enriched Oracle RDBMS object."
        }
      },
      "id": "DiscoverConnectionProfileResponse"
    },
    "StreamObject": {
      "properties": {
        "errors": {
          "items": {
            "$ref": "Error"
          },
          "readOnly": true,
          "description": "Output only. Active errors on the object.",
          "type": "array"
        },
        "sourceObject": {
          "description": "The object identifier in the data source.",
          "$ref": "SourceObjectIdentifier"
        },
        "displayName": {
          "description": "Required. Display name.",
          "type": "string"
        },
        "name": {
          "readOnly": true,
          "description": "Output only. The object resource's name.",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. The creation time of the object.",
          "readOnly": true,
          "format": "google-datetime",
          "type": "string"
        },
        "backfillJob": {
          "description": "The latest backfill job that was initiated for the stream object.",
          "$ref": "BackfillJob"
        },
        "updateTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The last update time of the object.",
          "readOnly": true
        }
      },
      "id": "StreamObject",
      "description": "A specific stream object (e.g a specific DB table).",
      "type": "object"
    }
  },
  "basePath": "",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "servicePath": ""
}
