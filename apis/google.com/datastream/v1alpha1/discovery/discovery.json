{
  "revision": "20230215",
  "baseUrl": "https://datastream.googleapis.com/",
  "parameters": {
    "prettyPrint": {
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "type": "boolean",
      "location": "query"
    },
    "$.xgafv": {
      "location": "query",
      "description": "V1 error format.",
      "type": "string",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ]
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "oauth_token": {
      "location": "query",
      "type": "string",
      "description": "OAuth 2.0 token for the current user."
    },
    "key": {
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string"
    },
    "uploadType": {
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string"
    },
    "access_token": {
      "location": "query",
      "type": "string",
      "description": "OAuth access token."
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query",
      "type": "string"
    },
    "alt": {
      "location": "query",
      "type": "string",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "description": "Data format for response.",
      "default": "json"
    },
    "callback": {
      "description": "JSONP",
      "location": "query",
      "type": "string"
    }
  },
  "schemas": {
    "AvroFileFormat": {
      "properties": {},
      "id": "AvroFileFormat",
      "description": "AVRO file format configuration.",
      "type": "object"
    },
    "FetchErrorsRequest": {
      "type": "object",
      "properties": {},
      "description": "Request message for 'FetchErrors' request.",
      "id": "FetchErrorsRequest"
    },
    "MysqlColumn": {
      "type": "object",
      "properties": {
        "ordinalPosition": {
          "format": "int32",
          "description": "The ordinal position of the column in the table.",
          "type": "integer"
        },
        "columnName": {
          "description": "Column name.",
          "type": "string"
        },
        "length": {
          "description": "Column length.",
          "type": "integer",
          "format": "int32"
        },
        "primaryKey": {
          "type": "boolean",
          "description": "Whether or not the column represents a primary key."
        },
        "dataType": {
          "description": "The MySQL data type. Full data types list can be found here: https://dev.mysql.com/doc/refman/8.0/en/data-types.html",
          "type": "string"
        },
        "nullable": {
          "description": "Whether or not the column can accept a null value.",
          "type": "boolean"
        },
        "collation": {
          "description": "Column collation.",
          "type": "string"
        }
      },
      "description": "MySQL Column.",
      "id": "MysqlColumn"
    },
    "StopBackfillJobResponse": {
      "type": "object",
      "properties": {
        "object": {
          "$ref": "StreamObject",
          "description": "The stream object resource the backfill job was stopped for."
        }
      },
      "id": "StopBackfillJobResponse",
      "description": "Response for manually stop a backfill job for a specific stream object."
    },
    "PrivateConnection": {
      "id": "PrivateConnection",
      "properties": {
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "CREATED",
            "FAILED",
            "DELETING",
            "FAILED_TO_DELETE"
          ],
          "description": "Output only. The state of the Private Connection.",
          "type": "string",
          "readOnly": true,
          "enumDescriptions": [
            "",
            "The private connection is in creation state - creating resources.",
            "The private connection has been created with all of its resources.",
            "The private connection creation has failed.",
            "The private connection is being deleted.",
            "Delete request has failed, resource is in invalid state."
          ]
        },
        "displayName": {
          "type": "string",
          "description": "Required. Display name."
        },
        "error": {
          "description": "Output only. In case of error, the details of the error in a user-friendly format.",
          "$ref": "Error",
          "readOnly": true
        },
        "vpcPeeringConfig": {
          "$ref": "VpcPeeringConfig",
          "description": "VPC Peering Config"
        },
        "updateTime": {
          "description": "Output only. The update time of the resource.",
          "type": "string",
          "readOnly": true,
          "format": "google-datetime"
        },
        "name": {
          "description": "Output only. The resource's name.",
          "type": "string",
          "readOnly": true
        },
        "createTime": {
          "description": "Output only. The create time of the resource.",
          "readOnly": true,
          "format": "google-datetime",
          "type": "string"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Labels.",
          "type": "object"
        }
      },
      "type": "object",
      "description": "The PrivateConnection resource is used to establish private connectivity between Datastream and a customer's network."
    },
    "OracleSourceConfig": {
      "description": "Oracle data source configuration",
      "type": "object",
      "id": "OracleSourceConfig",
      "properties": {
        "allowlist": {
          "$ref": "OracleRdbms",
          "description": "Oracle objects to include in the stream."
        },
        "dropLargeObjects": {
          "description": "Drop large object values.",
          "$ref": "DropLargeObjects"
        },
        "rejectlist": {
          "$ref": "OracleRdbms",
          "description": "Oracle objects to exclude from the stream."
        }
      }
    },
    "BackfillJob": {
      "description": "Represents a backfill job on a specific stream object.",
      "properties": {
        "lastStartTime": {
          "readOnly": true,
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. Backfill job's start time."
        },
        "state": {
          "enumDescriptions": [
            "Default value.",
            "Backfill job was never started for the stream object (stream has backfill strategy defined as manual or object was explicitly excluded from automatic backfill).",
            "Backfill job will start pending available resources.",
            "Backfill job is running.",
            "Backfill job stopped (next job run will start from beginning).",
            "Backfill job failed (due to an error).",
            "Backfill completed successfully.",
            "Backfill job failed since the table structure is currently unsupported for backfill."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "NOT_STARTED",
            "PENDING",
            "ACTIVE",
            "STOPPED",
            "FAILED",
            "COMPLETED",
            "UNSUPPORTED"
          ],
          "description": "Backfill job state.",
          "type": "string"
        },
        "errors": {
          "readOnly": true,
          "items": {
            "$ref": "Error"
          },
          "description": "Output only. Errors which caused the backfill job to fail.",
          "type": "array"
        },
        "lastEndTime": {
          "format": "google-datetime",
          "description": "Output only. Backfill job's end time.",
          "type": "string",
          "readOnly": true
        },
        "trigger": {
          "enumDescriptions": [
            "Default value.",
            "Object backfill job was triggered automatically according to the stream's backfill strategy.",
            "Object backfill job was triggered manually using the dedicated API."
          ],
          "description": "Backfill job's triggering reason.",
          "type": "string",
          "enum": [
            "TRIGGER_UNSPECIFIED",
            "AUTOMATIC",
            "MANUAL"
          ]
        }
      },
      "id": "BackfillJob",
      "type": "object"
    },
    "ListPrivateConnectionsResponse": {
      "type": "object",
      "id": "ListPrivateConnectionsResponse",
      "properties": {
        "unreachable": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Locations that could not be reached."
        },
        "privateConnections": {
          "items": {
            "$ref": "PrivateConnection"
          },
          "description": "List of private connectivity configurations.",
          "type": "array"
        },
        "nextPageToken": {
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        }
      }
    },
    "GcsProfile": {
      "properties": {
        "bucketName": {
          "description": "Required. The full project and resource path for Cloud Storage bucket including the name.",
          "type": "string"
        },
        "rootPath": {
          "type": "string",
          "description": "The root path inside the Cloud Storage bucket."
        }
      },
      "description": "Cloud Storage bucket profile.",
      "id": "GcsProfile",
      "type": "object"
    },
    "Location": {
      "properties": {
        "locationId": {
          "type": "string",
          "description": "The canonical id for this location. For example: `\"us-east1\"`."
        },
        "displayName": {
          "type": "string",
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\"."
        },
        "metadata": {
          "description": "Service-specific metadata. For example the available capacity at the given location.",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "type": "object"
        },
        "name": {
          "type": "string",
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`"
        },
        "labels": {
          "type": "object",
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "description": "A resource that represents Google Cloud Platform location.",
      "type": "object",
      "id": "Location"
    },
    "GcsDestinationConfig": {
      "type": "object",
      "id": "GcsDestinationConfig",
      "properties": {
        "path": {
          "description": "Path inside the Cloud Storage bucket to write data to.",
          "type": "string"
        },
        "jsonFileFormat": {
          "description": "JSON file format configuration.",
          "$ref": "JsonFileFormat"
        },
        "gcsFileFormat": {
          "enumDescriptions": [
            "Unspecified Cloud Storage file format.",
            "Avro file format"
          ],
          "description": "File format that data should be written in. Deprecated field (b/169501737) - use file_format instead.",
          "enum": [
            "GCS_FILE_FORMAT_UNSPECIFIED",
            "AVRO"
          ],
          "type": "string"
        },
        "avroFileFormat": {
          "description": "AVRO file format configuration.",
          "$ref": "AvroFileFormat"
        },
        "fileRotationMb": {
          "description": "The maximum file size to be saved in the bucket.",
          "format": "int32",
          "type": "integer"
        },
        "fileRotationInterval": {
          "type": "string",
          "format": "google-duration",
          "description": "The maximum duration for which new events are added before a file is closed and a new file is created."
        }
      },
      "description": "Google Cloud Storage destination configuration"
    },
    "OracleColumn": {
      "description": "Oracle Column.",
      "id": "OracleColumn",
      "properties": {
        "precision": {
          "type": "integer",
          "description": "Column precision.",
          "format": "int32"
        },
        "scale": {
          "description": "Column scale.",
          "type": "integer",
          "format": "int32"
        },
        "ordinalPosition": {
          "description": "The ordinal position of the column in the table.",
          "type": "integer",
          "format": "int32"
        },
        "dataType": {
          "description": "The Oracle data type.",
          "type": "string"
        },
        "columnName": {
          "description": "Column name.",
          "type": "string"
        },
        "nullable": {
          "description": "Whether or not the column can accept a null value.",
          "type": "boolean"
        },
        "encoding": {
          "type": "string",
          "description": "Column encoding."
        },
        "primaryKey": {
          "description": "Whether or not the column represents a primary key.",
          "type": "boolean"
        },
        "length": {
          "type": "integer",
          "description": "Column length.",
          "format": "int32"
        }
      },
      "type": "object"
    },
    "Route": {
      "type": "object",
      "id": "Route",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Required. Display name."
        },
        "updateTime": {
          "description": "Output only. The update time of the resource.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "destinationAddress": {
          "description": "Required. Destination address for connection",
          "type": "string"
        },
        "labels": {
          "description": "Labels.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The resource's name."
        },
        "destinationPort": {
          "description": "Destination port for connection",
          "format": "int32",
          "type": "integer"
        },
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The create time of the resource.",
          "readOnly": true
        }
      },
      "description": "The Route resource is the child of the PrivateConnection resource. It used to define a route for a PrivateConnection setup."
    },
    "DropLargeObjects": {
      "type": "object",
      "properties": {},
      "id": "DropLargeObjects",
      "description": "Configuration to drop large object values."
    },
    "MysqlObjectIdentifier": {
      "id": "MysqlObjectIdentifier",
      "description": "Mysql data source object identifier.",
      "type": "object",
      "properties": {
        "database": {
          "description": "Required. The database name.",
          "type": "string"
        },
        "table": {
          "description": "Required. The table name.",
          "type": "string"
        }
      }
    },
    "ListStreamObjectsResponse": {
      "type": "object",
      "description": "Response containing the objects for a stream.",
      "properties": {
        "nextPageToken": {
          "description": "A token, which can be sent as `page_token` to retrieve the next page.",
          "type": "string"
        },
        "streamObjects": {
          "description": "List of stream objects.",
          "items": {
            "$ref": "StreamObject"
          },
          "type": "array"
        }
      },
      "id": "ListStreamObjectsResponse"
    },
    "StaticServiceIpConnectivity": {
      "properties": {},
      "description": "Static IP address connectivity.",
      "type": "object",
      "id": "StaticServiceIpConnectivity"
    },
    "MysqlDatabase": {
      "properties": {
        "databaseName": {
          "type": "string",
          "description": "Database name."
        },
        "mysqlTables": {
          "description": "Tables in the database.",
          "items": {
            "$ref": "MysqlTable"
          },
          "type": "array"
        }
      },
      "id": "MysqlDatabase",
      "description": "MySQL database.",
      "type": "object"
    },
    "ForwardSshTunnelConnectivity": {
      "type": "object",
      "description": "Forward SSH Tunnel connectivity.",
      "properties": {
        "hostname": {
          "type": "string",
          "description": "Required. Hostname for the SSH tunnel."
        },
        "password": {
          "description": "Input only. SSH password.",
          "type": "string"
        },
        "username": {
          "type": "string",
          "description": "Required. Username for the SSH tunnel."
        },
        "port": {
          "description": "Port for the SSH tunnel, default value is 22.",
          "format": "int32",
          "type": "integer"
        },
        "privateKey": {
          "description": "Input only. SSH private key.",
          "type": "string"
        }
      },
      "id": "ForwardSshTunnelConnectivity"
    },
    "MysqlTable": {
      "type": "object",
      "id": "MysqlTable",
      "description": "MySQL table.",
      "properties": {
        "tableName": {
          "description": "Table name.",
          "type": "string"
        },
        "mysqlColumns": {
          "items": {
            "$ref": "MysqlColumn"
          },
          "type": "array",
          "description": "MySQL columns in the database. When unspecified as part of include/exclude lists, includes/excludes everything."
        }
      }
    },
    "CancelOperationRequest": {
      "id": "CancelOperationRequest",
      "type": "object",
      "description": "The request message for Operations.CancelOperation.",
      "properties": {}
    },
    "Status": {
      "type": "object",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "properties": {
        "code": {
          "format": "int32",
          "type": "integer",
          "description": "The status code, which should be an enum value of google.rpc.Code."
        },
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            }
          },
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
        }
      },
      "id": "Status"
    },
    "BackfillAllStrategy": {
      "properties": {
        "oracleExcludedObjects": {
          "description": "Oracle data source objects to avoid backfilling.",
          "$ref": "OracleRdbms"
        },
        "mysqlExcludedObjects": {
          "$ref": "MysqlRdbms",
          "description": "MySQL data source objects to avoid backfilling."
        }
      },
      "type": "object",
      "id": "BackfillAllStrategy",
      "description": "Backfill strategy to automatically backfill the Stream's objects. Specific objects can be excluded."
    },
    "SourceObjectIdentifier": {
      "description": "Represents an identifier of an object in the data source.",
      "properties": {
        "mysqlIdentifier": {
          "$ref": "MysqlObjectIdentifier",
          "description": "Mysql data source object identifier."
        },
        "oracleIdentifier": {
          "$ref": "OracleObjectIdentifier",
          "description": "Oracle data source object identifier."
        }
      },
      "type": "object",
      "id": "SourceObjectIdentifier"
    },
    "PrivateConnectivity": {
      "properties": {
        "privateConnectionName": {
          "type": "string"
        }
      },
      "description": "Private Connectivity",
      "id": "PrivateConnectivity",
      "type": "object"
    },
    "MysqlSourceConfig": {
      "type": "object",
      "description": "MySQL source configuration",
      "properties": {
        "rejectlist": {
          "$ref": "MysqlRdbms",
          "description": "MySQL objects to exclude from the stream."
        },
        "allowlist": {
          "$ref": "MysqlRdbms",
          "description": "MySQL objects to retrieve from the source."
        }
      },
      "id": "MysqlSourceConfig"
    },
    "OracleTable": {
      "properties": {
        "oracleColumns": {
          "items": {
            "$ref": "OracleColumn"
          },
          "type": "array",
          "description": "Oracle columns in the schema. When unspecified as part of inclue/exclude lists, includes/excludes everything."
        },
        "tableName": {
          "type": "string",
          "description": "Table name."
        }
      },
      "id": "OracleTable",
      "description": "Oracle table.",
      "type": "object"
    },
    "MysqlSslConfig": {
      "properties": {
        "clientKeySet": {
          "description": "Output only. Indicates whether the client_key field is set.",
          "type": "boolean",
          "readOnly": true
        },
        "clientCertificateSet": {
          "type": "boolean",
          "description": "Output only. Indicates whether the client_certificate field is set.",
          "readOnly": true
        },
        "caCertificate": {
          "description": "Input only. PEM-encoded certificate of the CA that signed the source database server's certificate.",
          "type": "string"
        },
        "clientKey": {
          "description": "Input only. PEM-encoded private key associated with the Client Certificate. If this field is used then the 'client_certificate' and the 'ca_certificate' fields are mandatory.",
          "type": "string"
        },
        "caCertificateSet": {
          "description": "Output only. Indicates whether the ca_certificate field is set.",
          "readOnly": true,
          "type": "boolean"
        },
        "clientCertificate": {
          "type": "string",
          "description": "Input only. PEM-encoded certificate that will be used by the replica to authenticate against the source database server. If this field is used then the 'client_key' and the 'ca_certificate' fields are mandatory."
        }
      },
      "id": "MysqlSslConfig",
      "description": "MySQL SSL configuration information.",
      "type": "object"
    },
    "OracleProfile": {
      "id": "OracleProfile",
      "properties": {
        "port": {
          "description": "Port for the Oracle connection, default value is 1521.",
          "format": "int32",
          "type": "integer"
        },
        "password": {
          "type": "string",
          "description": "Required. Password for the Oracle connection."
        },
        "hostname": {
          "description": "Required. Hostname for the Oracle connection.",
          "type": "string"
        },
        "connectionAttributes": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Connection string attributes"
        },
        "username": {
          "type": "string",
          "description": "Required. Username for the Oracle connection."
        },
        "databaseService": {
          "description": "Required. Database for the Oracle connection.",
          "type": "string"
        }
      },
      "description": "Oracle database profile.",
      "type": "object"
    },
    "StreamObject": {
      "type": "object",
      "properties": {
        "updateTime": {
          "readOnly": true,
          "description": "Output only. The last update time of the object.",
          "format": "google-datetime",
          "type": "string"
        },
        "displayName": {
          "type": "string",
          "description": "Required. Display name."
        },
        "createTime": {
          "type": "string",
          "description": "Output only. The creation time of the object.",
          "readOnly": true,
          "format": "google-datetime"
        },
        "name": {
          "type": "string",
          "description": "Output only. The object's name.",
          "readOnly": true
        },
        "errors": {
          "readOnly": true,
          "description": "Output only. Active errors on the object.",
          "type": "array",
          "items": {
            "$ref": "Error"
          }
        },
        "sourceObject": {
          "$ref": "SourceObjectIdentifier",
          "description": "The object identifier in the data source."
        },
        "backfillJob": {
          "$ref": "BackfillJob",
          "description": "The latest backfill job that was initiated for the stream object."
        }
      },
      "description": "A specific stream object (e.g a specific DB table).",
      "id": "StreamObject"
    },
    "DiscoverConnectionProfileRequest": {
      "id": "DiscoverConnectionProfileRequest",
      "properties": {
        "oracleRdbms": {
          "$ref": "OracleRdbms",
          "description": "Oracle RDBMS to enrich with child data objects and metadata."
        },
        "connectionProfileName": {
          "description": "A reference to an existing ConnectionProfile.",
          "type": "string"
        },
        "recursionDepth": {
          "type": "integer",
          "description": "The number of hierarchy levels below the current level to be retrieved.",
          "format": "int32"
        },
        "recursive": {
          "description": "Whether to retrieve the full hierarchy of data objects (TRUE) or only the current level (FALSE).",
          "type": "boolean"
        },
        "connectionProfile": {
          "$ref": "ConnectionProfile",
          "description": "An ad-hoc ConnectionProfile configuration."
        },
        "mysqlRdbms": {
          "$ref": "MysqlRdbms",
          "description": "MySQL RDBMS to enrich with child data objects and metadata."
        }
      },
      "description": "Request message for 'discover' ConnectionProfile request.",
      "type": "object"
    },
    "OracleRdbms": {
      "id": "OracleRdbms",
      "type": "object",
      "properties": {
        "oracleSchemas": {
          "description": "Oracle schemas/databases in the database server.",
          "type": "array",
          "items": {
            "$ref": "OracleSchema"
          }
        }
      },
      "description": "Oracle database structure."
    },
    "Operation": {
      "type": "object",
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
        },
        "error": {
          "$ref": "Status",
          "description": "The error result of the operation in case of failure or cancellation."
        },
        "response": {
          "type": "object",
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        },
        "metadata": {
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "type": "object"
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
          "type": "boolean"
        }
      },
      "id": "Operation"
    },
    "ValidationResult": {
      "type": "object",
      "properties": {
        "validations": {
          "description": "A list of validations (includes both executed as well as not executed validations).",
          "type": "array",
          "items": {
            "$ref": "Validation"
          }
        }
      },
      "id": "ValidationResult",
      "description": "Contains the current validation results."
    },
    "VpcPeeringConfig": {
      "id": "VpcPeeringConfig",
      "type": "object",
      "properties": {
        "vpcName": {
          "description": "Required. fully qualified name of the VPC Datastream will peer to.",
          "type": "string"
        },
        "subnet": {
          "description": "Required. A free subnet for peering. (CIDR of /29)",
          "type": "string"
        }
      },
      "description": "The VPC Peering configuration is used to create VPC peering between Datastream and the consumer's VPC."
    },
    "FetchStaticIpsResponse": {
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token that can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages."
        },
        "staticIps": {
          "items": {
            "type": "string"
          },
          "description": "list of static ips by account",
          "type": "array"
        }
      },
      "type": "object",
      "description": "Response message for a 'FetchStaticIps' response.",
      "id": "FetchStaticIpsResponse"
    },
    "Error": {
      "type": "object",
      "description": "Represent a user-facing Error.",
      "id": "Error",
      "properties": {
        "errorUuid": {
          "description": "A unique identifier for this specific error, allowing it to be traced throughout the system in logs and API responses.",
          "type": "string"
        },
        "message": {
          "description": "A message containing more information about the error that occurred.",
          "type": "string"
        },
        "errorTime": {
          "format": "google-datetime",
          "description": "The time when the error occurred.",
          "type": "string"
        },
        "details": {
          "type": "object",
          "description": "Additional information about the error.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "reason": {
          "description": "A title that explains the reason for the error.",
          "type": "string"
        }
      }
    },
    "ListConnectionProfilesResponse": {
      "properties": {
        "connectionProfiles": {
          "description": "List of connection profiles.",
          "type": "array",
          "items": {
            "$ref": "ConnectionProfile"
          }
        },
        "nextPageToken": {
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        },
        "unreachable": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached."
        }
      },
      "id": "ListConnectionProfilesResponse",
      "type": "object"
    },
    "ConnectionProfile": {
      "properties": {
        "gcsProfile": {
          "$ref": "GcsProfile",
          "description": "Cloud Storage ConnectionProfile configuration."
        },
        "forwardSshConnectivity": {
          "description": "Forward SSH tunnel connectivity.",
          "$ref": "ForwardSshTunnelConnectivity"
        },
        "createTime": {
          "readOnly": true,
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The create time of the resource."
        },
        "labels": {
          "description": "Labels.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "name": {
          "description": "Output only. The resource's name.",
          "readOnly": true,
          "type": "string"
        },
        "oracleProfile": {
          "description": "Oracle ConnectionProfile configuration.",
          "$ref": "OracleProfile"
        },
        "privateConnectivity": {
          "$ref": "PrivateConnectivity",
          "description": "Private connectivity."
        },
        "updateTime": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The update time of the resource.",
          "format": "google-datetime"
        },
        "noConnectivity": {
          "description": "No connectivity option chosen.",
          "$ref": "NoConnectivitySettings"
        },
        "staticServiceIpConnectivity": {
          "description": "Static Service IP connectivity.",
          "$ref": "StaticServiceIpConnectivity"
        },
        "displayName": {
          "description": "Required. Display name.",
          "type": "string"
        },
        "mysqlProfile": {
          "$ref": "MysqlProfile",
          "description": "MySQL ConnectionProfile configuration."
        }
      },
      "id": "ConnectionProfile",
      "type": "object"
    },
    "SourceConfig": {
      "description": "The configuration of the stream source.",
      "id": "SourceConfig",
      "type": "object",
      "properties": {
        "sourceConnectionProfileName": {
          "type": "string",
          "description": "Required. Source connection profile identifier."
        },
        "oracleSourceConfig": {
          "description": "Oracle data source configuration",
          "$ref": "OracleSourceConfig"
        },
        "mysqlSourceConfig": {
          "description": "MySQL data source configuration",
          "$ref": "MysqlSourceConfig"
        }
      }
    },
    "MysqlProfile": {
      "description": "MySQL database profile.",
      "type": "object",
      "id": "MysqlProfile",
      "properties": {
        "password": {
          "description": "Required. Input only. Password for the MySQL connection.",
          "type": "string"
        },
        "username": {
          "type": "string",
          "description": "Required. Username for the MySQL connection."
        },
        "port": {
          "format": "int32",
          "description": "Port for the MySQL connection, default value is 3306.",
          "type": "integer"
        },
        "sslConfig": {
          "description": "SSL configuration for the MySQL connection.",
          "$ref": "MysqlSslConfig"
        },
        "hostname": {
          "type": "string",
          "description": "Required. Hostname for the MySQL connection."
        }
      }
    },
    "ListStreamsResponse": {
      "id": "ListStreamsResponse",
      "properties": {
        "streams": {
          "items": {
            "$ref": "Stream"
          },
          "description": "List of streams",
          "type": "array"
        },
        "nextPageToken": {
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        },
        "unreachable": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Locations that could not be reached."
        }
      },
      "type": "object"
    },
    "OperationMetadata": {
      "type": "object",
      "properties": {
        "endTime": {
          "type": "string",
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The time the operation finished running."
        },
        "createTime": {
          "readOnly": true,
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The time the operation was created."
        },
        "validationResult": {
          "description": "Output only. Results of executed validations if there are any.",
          "readOnly": true,
          "$ref": "ValidationResult"
        },
        "target": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Server-defined resource path for the target of the operation."
        },
        "statusMessage": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Human-readable status of the operation, if any."
        },
        "requestedCancellation": {
          "readOnly": true,
          "description": "Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
          "type": "boolean"
        },
        "apiVersion": {
          "description": "Output only. API version used to start the operation.",
          "type": "string",
          "readOnly": true
        },
        "verb": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Name of the verb executed by the operation."
        }
      },
      "id": "OperationMetadata",
      "description": "Represents the metadata of the long-running operation."
    },
    "Stream": {
      "type": "object",
      "id": "Stream",
      "properties": {
        "state": {
          "enumDescriptions": [
            "Unspecified stream state.",
            "The stream has been created.",
            "The stream is running.",
            "The stream is paused.",
            "The stream is in maintenance mode. Updates are rejected on the resource in this state.",
            "The stream is experiencing an error that is preventing data from being streamed.",
            "The stream has experienced a terminal failure.",
            "The stream is starting, but not yet running.",
            "The Stream is no longer reading new events, but still writing events in the buffer."
          ],
          "description": "The state of the stream.",
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATED",
            "RUNNING",
            "PAUSED",
            "MAINTENANCE",
            "FAILED",
            "FAILED_PERMANENTLY",
            "STARTING",
            "DRAINING"
          ]
        },
        "customerManagedEncryptionKey": {
          "type": "string",
          "description": "Immutable. A reference to a KMS encryption key. If provided, it will be used to encrypt the data. If left blank, data will be encrypted using an internal Stream-specific encryption key provisioned through KMS."
        },
        "backfillAll": {
          "description": "Automatically backfill objects included in the stream source configuration. Specific objects can be excluded.",
          "$ref": "BackfillAllStrategy"
        },
        "createTime": {
          "type": "string",
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The creation time of the stream."
        },
        "backfillNone": {
          "description": "Do not automatically backfill any objects.",
          "$ref": "BackfillNoneStrategy"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Labels."
        },
        "sourceConfig": {
          "description": "Required. Source connection profile configuration.",
          "$ref": "SourceConfig"
        },
        "errors": {
          "items": {
            "$ref": "Error"
          },
          "readOnly": true,
          "description": "Output only. Errors on the Stream.",
          "type": "array"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The stream's name."
        },
        "displayName": {
          "type": "string",
          "description": "Required. Display name."
        },
        "destinationConfig": {
          "$ref": "DestinationConfig",
          "description": "Required. Destination connection profile configuration."
        },
        "updateTime": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The last update time of the stream.",
          "format": "google-datetime"
        }
      }
    },
    "Empty": {
      "type": "object",
      "properties": {},
      "id": "Empty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }"
    },
    "OracleObjectIdentifier": {
      "type": "object",
      "id": "OracleObjectIdentifier",
      "properties": {
        "table": {
          "description": "Required. The table name.",
          "type": "string"
        },
        "schema": {
          "description": "Required. The schema name.",
          "type": "string"
        }
      },
      "description": "Oracle data source object identifier."
    },
    "OracleSchema": {
      "properties": {
        "oracleTables": {
          "type": "array",
          "description": "Tables in the schema.",
          "items": {
            "$ref": "OracleTable"
          }
        },
        "schemaName": {
          "type": "string",
          "description": "Schema name."
        }
      },
      "id": "OracleSchema",
      "description": "Oracle schema.",
      "type": "object"
    },
    "BackfillNoneStrategy": {
      "properties": {},
      "description": "Backfill strategy to disable automatic backfill for the Stream's objects.",
      "id": "BackfillNoneStrategy",
      "type": "object"
    },
    "ListOperationsResponse": {
      "description": "The response message for Operations.ListOperations.",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        },
        "operations": {
          "items": {
            "$ref": "Operation"
          },
          "type": "array",
          "description": "A list of operations that matches the specified filter in the request."
        }
      },
      "id": "ListOperationsResponse"
    },
    "DiscoverConnectionProfileResponse": {
      "type": "object",
      "id": "DiscoverConnectionProfileResponse",
      "properties": {
        "oracleRdbms": {
          "$ref": "OracleRdbms",
          "description": "Enriched Oracle RDBMS object."
        },
        "mysqlRdbms": {
          "description": "Enriched MySQL RDBMS object.",
          "$ref": "MysqlRdbms"
        }
      }
    },
    "JsonFileFormat": {
      "description": "JSON file format configuration.",
      "type": "object",
      "id": "JsonFileFormat",
      "properties": {
        "schemaFileFormat": {
          "enum": [
            "SCHEMA_FILE_FORMAT_UNSPECIFIED",
            "NO_SCHEMA_FILE",
            "AVRO_SCHEMA_FILE"
          ],
          "type": "string",
          "enumDescriptions": [
            "Unspecified schema file format.",
            "Do not attach schema file.",
            "Avro schema format."
          ],
          "description": "The schema file format along JSON data files."
        },
        "compression": {
          "enumDescriptions": [
            "Unspecified json file compression.",
            "Do not compress JSON file.",
            "Gzip compression."
          ],
          "description": "Compression of the loaded JSON file.",
          "type": "string",
          "enum": [
            "JSON_COMPRESSION_UNSPECIFIED",
            "NO_COMPRESSION",
            "GZIP"
          ]
        }
      }
    },
    "FetchErrorsResponse": {
      "id": "FetchErrorsResponse",
      "description": "Response message for a 'FetchErrors' response.",
      "properties": {
        "errors": {
          "description": "The list of errors on the Stream.",
          "items": {
            "$ref": "Error"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ValidationMessage": {
      "properties": {
        "code": {
          "description": "A custom code identifying this specific message.",
          "type": "string"
        },
        "message": {
          "description": "The result of the validation.",
          "type": "string"
        },
        "level": {
          "description": "Message severity level (warning or error).",
          "type": "string",
          "enumDescriptions": [
            "Unspecified level.",
            "Potentially cause issues with the Stream.",
            "Definitely cause issues with the Stream."
          ],
          "enum": [
            "LEVEL_UNSPECIFIED",
            "WARNING",
            "ERROR"
          ]
        },
        "metadata": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Additional metadata related to the result.",
          "type": "object"
        }
      },
      "description": "Represent user-facing validation result message.",
      "id": "ValidationMessage",
      "type": "object"
    },
    "ListLocationsResponse": {
      "type": "object",
      "id": "ListLocationsResponse",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        },
        "locations": {
          "description": "A list of locations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "Location"
          }
        }
      },
      "description": "The response message for Locations.ListLocations."
    },
    "StartBackfillJobResponse": {
      "description": "Response for manually initiating a backfill job for a specific stream object.",
      "id": "StartBackfillJobResponse",
      "type": "object",
      "properties": {
        "object": {
          "description": "The stream object resource a backfill job was started for.",
          "$ref": "StreamObject"
        }
      }
    },
    "DestinationConfig": {
      "properties": {
        "gcsDestinationConfig": {
          "description": "GCS destination configuration.",
          "$ref": "GcsDestinationConfig"
        },
        "destinationConnectionProfileName": {
          "description": "Required. Destination connection profile identifier.",
          "type": "string"
        }
      },
      "description": "The configuration of the stream destination.",
      "id": "DestinationConfig",
      "type": "object"
    },
    "Validation": {
      "properties": {
        "description": {
          "description": "A short description of the validation.",
          "type": "string"
        },
        "code": {
          "type": "string",
          "description": "A custom code identifying this validation."
        },
        "status": {
          "enum": [
            "STATUS_UNSPECIFIED",
            "NOT_EXECUTED",
            "FAILED",
            "PASSED"
          ],
          "type": "string",
          "description": "Validation execution status.",
          "enumDescriptions": [
            "Unspecified status.",
            "Validation did not execute.",
            "Validation failed.",
            "Validation passed."
          ]
        },
        "message": {
          "items": {
            "$ref": "ValidationMessage"
          },
          "description": "Messages reflecting the validation results.",
          "type": "array"
        }
      },
      "type": "object",
      "id": "Validation"
    },
    "ListRoutesResponse": {
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        },
        "routes": {
          "type": "array",
          "description": "List of Routes.",
          "items": {
            "$ref": "Route"
          }
        },
        "unreachable": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached."
        }
      },
      "description": "route list response",
      "id": "ListRoutesResponse"
    },
    "MysqlRdbms": {
      "type": "object",
      "description": "MySQL database structure",
      "id": "MysqlRdbms",
      "properties": {
        "mysqlDatabases": {
          "type": "array",
          "items": {
            "$ref": "MysqlDatabase"
          },
          "description": "Mysql databases on the server"
        }
      }
    },
    "NoConnectivitySettings": {
      "properties": {},
      "type": "object",
      "id": "NoConnectivitySettings",
      "description": "No connectivity settings."
    }
  },
  "protocol": "rest",
  "fullyEncodeReservedExpansion": true,
  "version_module": true,
  "version": "v1alpha1",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "mtlsRootUrl": "https://datastream.mtls.googleapis.com/",
  "basePath": "",
  "title": "Datastream API",
  "ownerName": "Google",
  "description": "",
  "documentationLink": "https://cloud.google.com/datastream/",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "rootUrl": "https://datastream.googleapis.com/",
  "canonicalName": "Datastream",
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "resources": {
            "privateConnections": {
              "methods": {
                "get": {
                  "response": {
                    "$ref": "PrivateConnection"
                  },
                  "parameters": {
                    "name": {
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "description": "Required. The name of the private connectivity configuration to get.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/privateConnections/[^/]+$"
                    }
                  },
                  "description": "Use this method to get details about a private connectivity configuration.",
                  "path": "v1alpha1/{+name}",
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/privateConnections/{privateConnectionsId}",
                  "id": "datastream.projects.locations.privateConnections.get"
                },
                "list": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListPrivateConnectionsResponse"
                  },
                  "id": "datastream.projects.locations.privateConnections.list",
                  "httpMethod": "GET",
                  "path": "v1alpha1/{+parent}/privateConnections",
                  "description": "Use this method to list private connectivity configurations in a project and location.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "filter": {
                      "location": "query",
                      "type": "string",
                      "description": "Filter request."
                    },
                    "parent": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "description": "Required. The parent that owns the collection of private connectivity configurations.",
                      "location": "path"
                    },
                    "pageSize": {
                      "description": "Maximum number of private connectivity configurations to return. If unspecified, at most 50 private connectivity configurations that will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                      "type": "integer",
                      "format": "int32",
                      "location": "query"
                    },
                    "pageToken": {
                      "description": "Page token received from a previous `ListPrivateConnections` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListPrivateConnections` must match the call that provided the page token.",
                      "type": "string",
                      "location": "query"
                    },
                    "orderBy": {
                      "description": "Order by fields for the result.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/privateConnections"
                },
                "delete": {
                  "httpMethod": "DELETE",
                  "id": "datastream.projects.locations.privateConnections.delete",
                  "description": "Use this method to delete a private connectivity configuration.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "requestId": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    },
                    "name": {
                      "description": "Required. The name of the private connectivity configuration to delete.",
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/privateConnections/[^/]+$"
                    },
                    "force": {
                      "location": "query",
                      "type": "boolean",
                      "description": "Optional. If set to true, any child routes that belong to this PrivateConnection will also be deleted."
                    }
                  },
                  "path": "v1alpha1/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/privateConnections/{privateConnectionsId}",
                  "response": {
                    "$ref": "Operation"
                  }
                },
                "create": {
                  "parameters": {
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "description": "Required. The parent that owns the collection of PrivateConnections.",
                      "location": "path",
                      "type": "string"
                    },
                    "privateConnectionId": {
                      "location": "query",
                      "type": "string",
                      "description": "Required. The private connectivity identifier."
                    },
                    "requestId": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    }
                  },
                  "request": {
                    "$ref": "PrivateConnection"
                  },
                  "path": "v1alpha1/{+parent}/privateConnections",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/privateConnections",
                  "response": {
                    "$ref": "Operation"
                  },
                  "httpMethod": "POST",
                  "id": "datastream.projects.locations.privateConnections.create",
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Use this method to create a private connectivity configuration.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                }
              },
              "resources": {
                "routes": {
                  "methods": {
                    "create": {
                      "response": {
                        "$ref": "Operation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/privateConnections/{privateConnectionsId}/routes",
                      "parameters": {
                        "routeId": {
                          "location": "query",
                          "description": "Required. The Route identifier.",
                          "type": "string"
                        },
                        "requestId": {
                          "location": "query",
                          "type": "string",
                          "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                        },
                        "parent": {
                          "type": "string",
                          "location": "path",
                          "description": "Required. The parent that owns the collection of Routes.",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/privateConnections/[^/]+$"
                        }
                      },
                      "id": "datastream.projects.locations.privateConnections.routes.create",
                      "description": "Use this method to create a route for a private connectivity in a project and location.",
                      "path": "v1alpha1/{+parent}/routes",
                      "parameterOrder": [
                        "parent"
                      ],
                      "httpMethod": "POST",
                      "request": {
                        "$ref": "Route"
                      }
                    },
                    "delete": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "datastream.projects.locations.privateConnections.routes.delete",
                      "path": "v1alpha1/{+name}",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/privateConnections/{privateConnectionsId}/routes/{routesId}",
                      "response": {
                        "$ref": "Operation"
                      },
                      "description": "Use this method to delete a route.",
                      "parameterOrder": [
                        "name"
                      ],
                      "parameters": {
                        "name": {
                          "description": "Required. The name of the Route resource to delete.",
                          "type": "string",
                          "location": "path",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/privateConnections/[^/]+/routes/[^/]+$"
                        },
                        "requestId": {
                          "location": "query",
                          "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                          "type": "string"
                        }
                      },
                      "httpMethod": "DELETE"
                    },
                    "list": {
                      "parameters": {
                        "pageSize": {
                          "description": "Maximum number of Routes to return. The service may return fewer than this value. If unspecified, at most 50 Routes will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                          "type": "integer",
                          "format": "int32",
                          "location": "query"
                        },
                        "parent": {
                          "type": "string",
                          "location": "path",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/privateConnections/[^/]+$",
                          "description": "Required. The parent that owns the collection of Routess."
                        },
                        "orderBy": {
                          "type": "string",
                          "location": "query",
                          "description": "Order by fields for the result."
                        },
                        "pageToken": {
                          "description": "Page token received from a previous `ListRoutes` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListRoutes` must match the call that provided the page token.",
                          "location": "query",
                          "type": "string"
                        },
                        "filter": {
                          "description": "Filter request.",
                          "location": "query",
                          "type": "string"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "ListRoutesResponse"
                      },
                      "path": "v1alpha1/{+parent}/routes",
                      "id": "datastream.projects.locations.privateConnections.routes.list",
                      "description": "Use this method to list routes created for a private connectivity in a project and location.",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/privateConnections/{privateConnectionsId}/routes",
                      "parameterOrder": [
                        "parent"
                      ],
                      "httpMethod": "GET"
                    },
                    "get": {
                      "id": "datastream.projects.locations.privateConnections.routes.get",
                      "parameterOrder": [
                        "name"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "GET",
                      "response": {
                        "$ref": "Route"
                      },
                      "parameters": {
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/privateConnections/[^/]+/routes/[^/]+$",
                          "description": "Required. The name of the Route resource to get.",
                          "type": "string",
                          "required": true,
                          "location": "path"
                        }
                      },
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/privateConnections/{privateConnectionsId}/routes/{routesId}",
                      "description": "Use this method to get details about a route.",
                      "path": "v1alpha1/{+name}"
                    }
                  }
                }
              }
            },
            "streams": {
              "methods": {
                "fetchErrors": {
                  "description": "Use this method to fetch any errors associated with a stream.",
                  "parameterOrder": [
                    "stream"
                  ],
                  "request": {
                    "$ref": "FetchErrorsRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/streams/{streamsId}:fetchErrors",
                  "path": "v1alpha1/{+stream}:fetchErrors",
                  "httpMethod": "POST",
                  "id": "datastream.projects.locations.streams.fetchErrors",
                  "parameters": {
                    "stream": {
                      "description": "Name of the Stream resource for which to fetch any errors.",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/streams/[^/]+$",
                      "type": "string"
                    }
                  }
                },
                "get": {
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/streams/{streamsId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/streams/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "description": "Required. The name of the stream resource to get."
                    }
                  },
                  "httpMethod": "GET",
                  "description": "Use this method to get details about a stream.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1alpha1/{+name}",
                  "id": "datastream.projects.locations.streams.get",
                  "response": {
                    "$ref": "Stream"
                  }
                },
                "create": {
                  "description": "Use this method to create a stream.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "Stream"
                  },
                  "id": "datastream.projects.locations.streams.create",
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1alpha1/{+parent}/streams",
                  "parameters": {
                    "validateOnly": {
                      "type": "boolean",
                      "location": "query",
                      "description": "Optional. Only validate the stream, but do not create any resources. The default is false."
                    },
                    "force": {
                      "description": "Optional. Create the stream without validating it.",
                      "location": "query",
                      "type": "boolean"
                    },
                    "parent": {
                      "description": "Required. The parent that owns the collection of streams.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "required": true
                    },
                    "streamId": {
                      "location": "query",
                      "type": "string",
                      "description": "Required. The stream identifier."
                    },
                    "requestId": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    }
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/streams",
                  "httpMethod": "POST"
                },
                "patch": {
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "Stream"
                  },
                  "httpMethod": "PATCH",
                  "description": "Use this method to update the configuration of a stream.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "datastream.projects.locations.streams.patch",
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/streams/{streamsId}",
                  "parameters": {
                    "force": {
                      "description": "Optional. Execute the update without validating it.",
                      "type": "boolean",
                      "location": "query"
                    },
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/streams/[^/]+$",
                      "type": "string",
                      "required": true,
                      "description": "Output only. The stream's name.",
                      "location": "path"
                    },
                    "updateMask": {
                      "description": "Optional. Field mask is used to specify the fields to be overwritten in the stream resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.",
                      "type": "string",
                      "location": "query",
                      "format": "google-fieldmask"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query"
                    },
                    "validateOnly": {
                      "location": "query",
                      "type": "boolean",
                      "description": "Optional. Only validate the stream with the changes, without actually updating it. The default is false."
                    }
                  }
                },
                "list": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/streams",
                  "description": "Use this method to list streams in a project and location.",
                  "response": {
                    "$ref": "ListStreamsResponse"
                  },
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "required": true,
                      "description": "Required. The parent that owns the collection of streams.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "pageToken": {
                      "type": "string",
                      "description": "Page token received from a previous `ListStreams` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListStreams` must match the call that provided the page token.",
                      "location": "query"
                    },
                    "pageSize": {
                      "location": "query",
                      "format": "int32",
                      "type": "integer",
                      "description": "Maximum number of streams to return. If unspecified, at most 50 streams will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000."
                    },
                    "orderBy": {
                      "type": "string",
                      "description": "Order by fields for the result.",
                      "location": "query"
                    },
                    "filter": {
                      "location": "query",
                      "type": "string",
                      "description": "Filter request."
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1alpha1/{+parent}/streams",
                  "httpMethod": "GET",
                  "id": "datastream.projects.locations.streams.list"
                },
                "delete": {
                  "path": "v1alpha1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "DELETE",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/streams/{streamsId}",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "description": "Required. The name of the stream resource to delete.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/streams/[^/]+$",
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Use this method to delete a stream.",
                  "id": "datastream.projects.locations.streams.delete"
                }
              },
              "resources": {
                "objects": {
                  "methods": {
                    "startBackfillJob": {
                      "parameters": {
                        "object": {
                          "type": "string",
                          "location": "path",
                          "required": true,
                          "description": "Required. The name of the stream object resource to start a backfill job for.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/streams/[^/]+/objects/[^/]+$"
                        }
                      },
                      "id": "datastream.projects.locations.streams.objects.startBackfillJob",
                      "response": {
                        "$ref": "StartBackfillJobResponse"
                      },
                      "path": "v1alpha1/{+object}:startBackfillJob",
                      "description": "Starts backfill job for the specified stream object.",
                      "parameterOrder": [
                        "object"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "POST",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/streams/{streamsId}/objects/{objectsId}:startBackfillJob"
                    },
                    "get": {
                      "path": "v1alpha1/{+name}",
                      "parameterOrder": [
                        "name"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Use this method to get details about a stream object.",
                      "httpMethod": "GET",
                      "id": "datastream.projects.locations.streams.objects.get",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/streams/{streamsId}/objects/{objectsId}",
                      "response": {
                        "$ref": "StreamObject"
                      },
                      "parameters": {
                        "name": {
                          "location": "path",
                          "type": "string",
                          "description": "Required. The name of the stream object resource to get.",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/streams/[^/]+/objects/[^/]+$"
                        }
                      }
                    },
                    "stopBackfillJob": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Stops the backfill job for the specified stream object.",
                      "parameters": {
                        "object": {
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/streams/[^/]+/objects/[^/]+$",
                          "location": "path",
                          "description": "Required. The name of the stream object resource to stop the backfill job for.",
                          "required": true
                        }
                      },
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/streams/{streamsId}/objects/{objectsId}:stopBackfillJob",
                      "path": "v1alpha1/{+object}:stopBackfillJob",
                      "response": {
                        "$ref": "StopBackfillJobResponse"
                      },
                      "id": "datastream.projects.locations.streams.objects.stopBackfillJob",
                      "httpMethod": "POST",
                      "parameterOrder": [
                        "object"
                      ]
                    },
                    "list": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/streams/{streamsId}/objects",
                      "id": "datastream.projects.locations.streams.objects.list",
                      "httpMethod": "GET",
                      "description": "Use this method to list the objects of a specific stream.",
                      "path": "v1alpha1/{+parent}/objects",
                      "parameterOrder": [
                        "parent"
                      ],
                      "parameters": {
                        "parent": {
                          "location": "path",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/streams/[^/]+$",
                          "description": "Required. The parent stream that owns the collection of objects.",
                          "type": "string"
                        },
                        "pageSize": {
                          "format": "int32",
                          "location": "query",
                          "description": "Maximum number of objects to return. Default is 50. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                          "type": "integer"
                        },
                        "pageToken": {
                          "description": "Page token received from a previous `ListStreamObjectsRequest` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListStreamObjectsRequest` must match the call that provided the page token.",
                          "type": "string",
                          "location": "query"
                        }
                      },
                      "response": {
                        "$ref": "ListStreamObjectsResponse"
                      }
                    }
                  }
                }
              }
            },
            "operations": {
              "methods": {
                "delete": {
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
                  "httpMethod": "DELETE",
                  "path": "v1alpha1/{+name}",
                  "id": "datastream.projects.locations.operations.delete",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Empty"
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "required": true,
                      "description": "The name of the operation resource to be deleted.",
                      "type": "string"
                    }
                  }
                },
                "cancel": {
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "description": "The name of the operation resource to be cancelled."
                    }
                  },
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "datastream.projects.locations.operations.cancel",
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "CancelOperationRequest"
                  },
                  "response": {
                    "$ref": "Empty"
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel",
                  "path": "v1alpha1/{+name}:cancel"
                },
                "get": {
                  "id": "datastream.projects.locations.operations.get",
                  "path": "v1alpha1/{+name}",
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "type": "string",
                      "required": true,
                      "description": "The name of the operation resource."
                    }
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ]
                },
                "list": {
                  "httpMethod": "GET",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "The name of the operation's parent resource.",
                      "type": "string",
                      "required": true
                    },
                    "pageSize": {
                      "description": "The standard list page size.",
                      "type": "integer",
                      "format": "int32",
                      "location": "query"
                    },
                    "filter": {
                      "type": "string",
                      "location": "query",
                      "description": "The standard list filter."
                    },
                    "pageToken": {
                      "description": "The standard list page token.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "response": {
                    "$ref": "ListOperationsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1alpha1/{+name}/operations",
                  "id": "datastream.projects.locations.operations.list",
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `\"/v1/{name=users/*}/operations\"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id."
                }
              }
            },
            "connectionProfiles": {
              "methods": {
                "get": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "required": true,
                      "location": "path",
                      "description": "Required. The name of the connection profile resource to get.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/connectionProfiles/[^/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Use this method to get details about a connection profile.",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/connectionProfiles/{connectionProfilesId}",
                  "id": "datastream.projects.locations.connectionProfiles.get",
                  "response": {
                    "$ref": "ConnectionProfile"
                  }
                },
                "list": {
                  "parameters": {
                    "filter": {
                      "location": "query",
                      "description": "Filter request.",
                      "type": "string"
                    },
                    "orderBy": {
                      "location": "query",
                      "description": "Order by fields for the result.",
                      "type": "string"
                    },
                    "pageToken": {
                      "type": "string",
                      "description": "Page token received from a previous `ListConnectionProfiles` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListConnectionProfiles` must match the call that provided the page token.",
                      "location": "query"
                    },
                    "parent": {
                      "description": "Required. The parent that owns the collection of connection profiles.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "type": "string"
                    },
                    "pageSize": {
                      "type": "integer",
                      "format": "int32",
                      "location": "query",
                      "description": "Maximum number of connection profiles to return. If unspecified, at most 50 connection profiles will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000."
                    }
                  },
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "ListConnectionProfilesResponse"
                  },
                  "path": "v1alpha1/{+parent}/connectionProfiles",
                  "description": "Use this method to list connection profiles created in a project and location.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "datastream.projects.locations.connectionProfiles.list",
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/connectionProfiles"
                },
                "delete": {
                  "description": "Use this method to delete a connection profile..",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "requestId": {
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    },
                    "name": {
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/connectionProfiles/[^/]+$",
                      "description": "Required. The name of the connection profile resource to delete.",
                      "location": "path"
                    }
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v1alpha1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "DELETE",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/connectionProfiles/{connectionProfilesId}",
                  "id": "datastream.projects.locations.connectionProfiles.delete"
                },
                "discover": {
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/connectionProfiles:discover",
                  "httpMethod": "POST",
                  "description": "Use this method to discover a connection profile. The discover API call exposes the data objects and metadata belonging to the profile. Typically, a request returns children data objects under a parent data object that's optionally supplied in the request.",
                  "request": {
                    "$ref": "DiscoverConnectionProfileRequest"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v1alpha1/{+parent}/connectionProfiles:discover",
                  "response": {
                    "$ref": "DiscoverConnectionProfileResponse"
                  },
                  "id": "datastream.projects.locations.connectionProfiles.discover",
                  "parameters": {
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The parent resource of the ConnectionProfile type. Must be in the format `projects/*/locations/*`.",
                      "type": "string",
                      "location": "path",
                      "required": true
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "patch": {
                  "httpMethod": "PATCH",
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v1alpha1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/connectionProfiles/{connectionProfilesId}",
                  "parameters": {
                    "name": {
                      "required": true,
                      "type": "string",
                      "description": "Output only. The resource's name.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/connectionProfiles/[^/]+$"
                    },
                    "validateOnly": {
                      "location": "query",
                      "description": "Optional. Only validate the connection profile, but do not update any resources. The default is false.",
                      "type": "boolean"
                    },
                    "requestId": {
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    },
                    "updateMask": {
                      "description": "Optional. Field mask is used to specify the fields to be overwritten in the ConnectionProfile resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.",
                      "format": "google-fieldmask",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "ConnectionProfile"
                  },
                  "description": "Use this method to update the parameters of a connection profile.",
                  "id": "datastream.projects.locations.connectionProfiles.patch"
                },
                "create": {
                  "parameters": {
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "type": "string",
                      "description": "Required. The parent that owns the collection of ConnectionProfiles.",
                      "location": "path"
                    },
                    "connectionProfileId": {
                      "description": "Required. The connection profile identifier.",
                      "type": "string",
                      "location": "query"
                    },
                    "requestId": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    }
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/connectionProfiles",
                  "path": "v1alpha1/{+parent}/connectionProfiles",
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Use this method to create a connection profile in a project and location.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "ConnectionProfile"
                  },
                  "id": "datastream.projects.locations.connectionProfiles.create"
                }
              }
            }
          },
          "methods": {
            "fetchStaticIps": {
              "description": "The FetchStaticIps API call exposes the static IP addresses used by Datastream.",
              "path": "v1alpha1/{+name}:fetchStaticIps",
              "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}:fetchStaticIps",
              "parameters": {
                "name": {
                  "location": "path",
                  "type": "string",
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "description": "Required. The name resource of the Response type. Must be in the format `projects/*/locations/*`.",
                  "required": true
                },
                "pageToken": {
                  "type": "string",
                  "location": "query",
                  "description": "A page token, received from a previous `ListStaticIps` call. will likely not be specified."
                },
                "pageSize": {
                  "description": "Maximum number of Ips to return, will likely not be specified.",
                  "type": "integer",
                  "format": "int32",
                  "location": "query"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "id": "datastream.projects.locations.fetchStaticIps",
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET",
              "response": {
                "$ref": "FetchStaticIpsResponse"
              }
            },
            "get": {
              "description": "Gets information about a location.",
              "path": "v1alpha1/{+name}",
              "parameters": {
                "name": {
                  "location": "path",
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "description": "Resource name for the location.",
                  "required": true,
                  "type": "string"
                }
              },
              "response": {
                "$ref": "Location"
              },
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "name"
              ],
              "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}",
              "id": "datastream.projects.locations.get"
            },
            "list": {
              "path": "v1alpha1/{+name}/locations",
              "httpMethod": "GET",
              "flatPath": "v1alpha1/projects/{projectsId}/locations",
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "id": "datastream.projects.locations.list",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Lists information about the supported locations for this service.",
              "parameters": {
                "pageSize": {
                  "type": "integer",
                  "description": "The maximum number of results to return. If not set, the service selects a default.",
                  "format": "int32",
                  "location": "query"
                },
                "pageToken": {
                  "location": "query",
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.",
                  "type": "string"
                },
                "filter": {
                  "type": "string",
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like `\"displayName=tokyo\"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160).",
                  "location": "query"
                },
                "name": {
                  "location": "path",
                  "type": "string",
                  "description": "The resource that owns the locations collection, if applicable.",
                  "pattern": "^projects/[^/]+$",
                  "required": true
                }
              },
              "parameterOrder": [
                "name"
              ]
            }
          }
        }
      }
    }
  },
  "servicePath": "",
  "id": "datastream:v1alpha1",
  "discoveryVersion": "v1",
  "ownerDomain": "google.com",
  "kind": "discovery#restDescription",
  "batchPath": "batch",
  "name": "datastream"
}
