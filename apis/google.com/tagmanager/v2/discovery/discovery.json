{
  "description": "This API allows clients to access and modify container and tag configuration.",
  "ownerDomain": "google.com",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/tagmanager.manage.accounts": {
          "description": "View and manage your Google Tag Manager accounts"
        },
        "https://www.googleapis.com/auth/tagmanager.readonly": {
          "description": "View your Google Tag Manager container and its subcomponents"
        },
        "https://www.googleapis.com/auth/tagmanager.manage.users": {
          "description": "Manage user permissions of your Google Tag Manager account and container"
        },
        "https://www.googleapis.com/auth/tagmanager.edit.containerversions": {
          "description": "Manage your Google Tag Manager container versions"
        },
        "https://www.googleapis.com/auth/tagmanager.delete.containers": {
          "description": "Delete your Google Tag Manager containers"
        },
        "https://www.googleapis.com/auth/tagmanager.publish": {
          "description": "Publish your Google Tag Manager container versions"
        },
        "https://www.googleapis.com/auth/tagmanager.edit.containers": {
          "description": "Manage your Google Tag Manager container and its subcomponents, excluding versioning and publishing"
        }
      }
    }
  },
  "baseUrl": "https://tagmanager.googleapis.com/",
  "basePath": "",
  "servicePath": "",
  "version": "v2",
  "name": "tagmanager",
  "schemas": {
    "Trigger": {
      "description": "Represents a Google Tag Manager Trigger",
      "type": "object",
      "id": "Trigger",
      "properties": {
        "filter": {
          "type": "array",
          "items": {
            "$ref": "Condition"
          },
          "description": "The trigger will only fire iff all Conditions are true. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update"
        },
        "notes": {
          "type": "string",
          "description": "User notes on how to apply this trigger in the container. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update"
        },
        "waitForTags": {
          "$ref": "Parameter",
          "description": "Whether or not we should delay the form submissions or link opening until all of the tags have fired (by preventing the default action and later simulating the default action). Only valid for Form Submission and Link Click triggers. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update"
        },
        "containerId": {
          "description": "GTM Container ID.",
          "type": "string"
        },
        "maxTimerLengthSeconds": {
          "$ref": "Parameter",
          "description": "Max time to fire Timer Events (in seconds). Only valid for AMP Timer trigger. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update"
        },
        "customEventFilter": {
          "type": "array",
          "items": {
            "$ref": "Condition"
          },
          "description": "Used in the case of custom event, which is fired iff all Conditions are true. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update"
        },
        "verticalScrollPercentageList": {
          "$ref": "Parameter",
          "description": "List of integer percentage values for scroll triggers. The trigger will fire when each percentage is reached when the view is scrolled vertically. Only valid for AMP scroll triggers. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update"
        },
        "visibilitySelector": {
          "description": "A visibility trigger CSS selector (i.e. \"#id\"). Only valid for AMP Visibility trigger. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "$ref": "Parameter"
        },
        "selector": {
          "description": "A click trigger CSS selector (i.e. \"a\", \"button\" etc.). Only valid for AMP Click trigger. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "$ref": "Parameter"
        },
        "visiblePercentageMin": {
          "$ref": "Parameter",
          "description": "A visibility trigger minimum percent visibility. Only valid for AMP Visibility trigger. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update"
        },
        "type": {
          "enum": [
            "eventTypeUnspecified",
            "pageview",
            "domReady",
            "windowLoaded",
            "customEvent",
            "triggerGroup",
            "init",
            "consentInit",
            "serverPageview",
            "always",
            "firebaseAppException",
            "firebaseAppUpdate",
            "firebaseCampaign",
            "firebaseFirstOpen",
            "firebaseInAppPurchase",
            "firebaseNotificationDismiss",
            "firebaseNotificationForeground",
            "firebaseNotificationOpen",
            "firebaseNotificationReceive",
            "firebaseOsUpdate",
            "firebaseSessionStart",
            "firebaseUserEngagement",
            "formSubmission",
            "click",
            "linkClick",
            "jsError",
            "historyChange",
            "timer",
            "ampClick",
            "ampTimer",
            "ampScroll",
            "ampVisibility",
            "youTubeVideo",
            "scrollDepth",
            "elementVisibility"
          ],
          "type": "string",
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
          ],
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.workspaces.triggers.create"
            ]
          },
          "description": "Defines the data layer event that causes this trigger. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update"
        },
        "waitForTagsTimeout": {
          "description": "How long to wait (in milliseconds) for tags to fire when 'waits_for_tags' above evaluates to true. Only valid for Form Submission and Link Click triggers. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "$ref": "Parameter"
        },
        "autoEventFilter": {
          "items": {
            "$ref": "Condition"
          },
          "description": "Used in the case of auto event tracking. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "type": "array"
        },
        "checkValidation": {
          "$ref": "Parameter",
          "description": "Whether or not we should only fire tags if the form submit or link click event is not cancelled by some other event handler (e.g. because of validation). Only valid for Form Submission and Link Click triggers. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update"
        },
        "limit": {
          "$ref": "Parameter",
          "description": "Limit of the number of GTM events this Timer Trigger will fire. If no limit is set, we will continue to fire GTM events until the user leaves the page. Only valid for Timer triggers. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update"
        },
        "horizontalScrollPercentageList": {
          "$ref": "Parameter",
          "description": "List of integer percentage values for scroll triggers. The trigger will fire when each percentage is reached when the view is scrolled horizontally. Only valid for AMP scroll triggers. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update"
        },
        "uniqueTriggerId": {
          "$ref": "Parameter",
          "description": "Globally unique id of the trigger that auto-generates this (a Form Submit, Link Click or Timer listener) if any. Used to make incompatible auto-events work together with trigger filtering based on trigger ids. This value is populated during output generation since the tags implied by triggers don't exist until then. Only valid for Form Submit, Link Click and Timer triggers. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update"
        },
        "tagManagerUrl": {
          "type": "string",
          "description": "Auto generated link to the tag manager UI"
        },
        "visiblePercentageMax": {
          "description": "A visibility trigger maximum percent visibility. Only valid for AMP Visibility trigger. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "$ref": "Parameter"
        },
        "parentFolderId": {
          "description": "Parent folder id.",
          "type": "string"
        },
        "path": {
          "type": "string",
          "description": "GTM Trigger's API relative path."
        },
        "accountId": {
          "type": "string",
          "description": "GTM Account ID."
        },
        "continuousTimeMinMilliseconds": {
          "description": "A visibility trigger minimum continuous visible time (in milliseconds). Only valid for AMP Visibility trigger. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "$ref": "Parameter"
        },
        "triggerId": {
          "type": "string",
          "description": "The Trigger ID uniquely identifies the GTM Trigger."
        },
        "fingerprint": {
          "description": "The fingerprint of the GTM Trigger as computed at storage time. This value is recomputed whenever the trigger is modified.",
          "type": "string"
        },
        "totalTimeMinMilliseconds": {
          "description": "A visibility trigger minimum total visible time (in milliseconds). Only valid for AMP Visibility trigger. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "$ref": "Parameter"
        },
        "workspaceId": {
          "type": "string",
          "description": "GTM Workspace ID."
        },
        "interval": {
          "$ref": "Parameter",
          "description": "Time between triggering recurring Timer Events (in milliseconds). Only valid for Timer triggers. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update"
        },
        "parameter": {
          "description": "Additional parameters. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "type": "array",
          "items": {
            "$ref": "Parameter"
          }
        },
        "eventName": {
          "$ref": "Parameter",
          "description": "Name of the GTM event that is fired. Only valid for Timer triggers. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update"
        },
        "name": {
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.workspaces.triggers.create",
              "tagmanager.accounts.containers.workspaces.triggers.update"
            ]
          },
          "description": "Trigger display name. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "type": "string"
        },
        "intervalSeconds": {
          "description": "Time between Timer Events to fire (in seconds). Only valid for AMP Timer trigger. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "$ref": "Parameter"
        }
      }
    },
    "QuickPreviewResponse": {
      "type": "object",
      "properties": {
        "containerVersion": {
          "description": "The quick previewed container version.",
          "$ref": "ContainerVersion"
        },
        "compilerError": {
          "description": "Were there compiler errors or not.",
          "type": "boolean"
        },
        "syncStatus": {
          "$ref": "SyncStatus",
          "description": "Whether quick previewing failed when syncing the workspace to the latest container version."
        }
      },
      "description": "Response to quick previewing a workspace.",
      "id": "QuickPreviewResponse"
    },
    "RevertTemplateResponse": {
      "id": "RevertTemplateResponse",
      "description": "The result of reverting a template in a workspace.",
      "properties": {
        "template": {
          "$ref": "CustomTemplate",
          "description": "Template as it appears in the latest container version since the last workspace synchronization operation. If no template is present, that means the template was deleted in the latest container version."
        }
      },
      "type": "object"
    },
    "ListWorkspacesResponse": {
      "properties": {
        "nextPageToken": {
          "description": "Continuation token for fetching the next page of results.",
          "type": "string"
        },
        "workspace": {
          "description": "All Workspaces of a GTM Container.",
          "items": {
            "$ref": "Workspace"
          },
          "type": "array"
        }
      },
      "description": "A list of workspaces in a container.",
      "id": "ListWorkspacesResponse",
      "type": "object"
    },
    "ListAccountsResponse": {
      "description": "List Accounts Response.",
      "type": "object",
      "id": "ListAccountsResponse",
      "properties": {
        "account": {
          "items": {
            "$ref": "Account"
          },
          "description": "List of GTM Accounts that a user has access to.",
          "type": "array"
        },
        "nextPageToken": {
          "description": "Continuation token for fetching the next page of results.",
          "type": "string"
        }
      }
    },
    "TagConsentSetting": {
      "id": "TagConsentSetting",
      "type": "object",
      "properties": {
        "consentType": {
          "description": "The type of consents to check for during tag firing if in the consent NEEDED state. This parameter must be of type LIST where each list item is of type STRING.",
          "$ref": "Parameter"
        },
        "consentStatus": {
          "type": "string",
          "enum": [
            "notSet",
            "notNeeded",
            "needed"
          ],
          "enumDescriptions": [
            "Default value where user has not specified any setting on it.",
            "Tag doesn't require any additional consent settings.",
            "Tag requires additional consent settings."
          ],
          "description": "The tag's consent status. If set to NEEDED, the runtime will check that the consent types specified by the consent_type field have been granted."
        }
      }
    },
    "GetContainerSnippetResponse": {
      "type": "object",
      "id": "GetContainerSnippetResponse",
      "properties": {
        "snippet": {
          "description": "Tagging snippet for a Container.",
          "type": "string"
        }
      }
    },
    "ContainerVersionHeader": {
      "description": "Represents a Google Tag Manager Container Version Header.",
      "id": "ContainerVersionHeader",
      "type": "object",
      "properties": {
        "numTags": {
          "description": "Number of tags in the container version.",
          "type": "string"
        },
        "containerVersionId": {
          "type": "string",
          "description": "The Container Version ID uniquely identifies the GTM Container Version."
        },
        "deleted": {
          "description": "A value of true indicates this container version has been deleted.",
          "type": "boolean"
        },
        "numMacros": {
          "type": "string",
          "description": "Number of macros in the container version."
        },
        "numZones": {
          "type": "string",
          "description": "Number of zones in the container version."
        },
        "numCustomTemplates": {
          "description": "Number of custom templates in the container version.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Container version display name."
        },
        "path": {
          "type": "string",
          "description": "GTM Container Version's API relative path."
        },
        "numRules": {
          "description": "Number of rules in the container version.",
          "type": "string"
        },
        "accountId": {
          "type": "string",
          "description": "GTM Account ID."
        },
        "numClients": {
          "description": "Number of clients in the container version.",
          "type": "string"
        },
        "containerId": {
          "description": "GTM Container ID.",
          "type": "string"
        },
        "numTriggers": {
          "description": "Number of triggers in the container version.",
          "type": "string"
        },
        "numVariables": {
          "type": "string",
          "description": "Number of variables in the container version."
        },
        "numGtagConfigs": {
          "description": "Number of Google tag configs in the container version.",
          "type": "string"
        }
      }
    },
    "Client": {
      "type": "object",
      "id": "Client",
      "properties": {
        "priority": {
          "format": "int32",
          "description": "Priority determines relative firing order. @mutable tagmanager.accounts.containers.workspaces.clients.create @mutable tagmanager.accounts.containers.workspaces.clients.update",
          "type": "integer"
        },
        "clientId": {
          "type": "string",
          "description": "The Client ID uniquely identifies the GTM client."
        },
        "containerId": {
          "type": "string",
          "description": "GTM Container ID."
        },
        "tagManagerUrl": {
          "type": "string",
          "description": "Auto generated link to the tag manager UI"
        },
        "notes": {
          "type": "string",
          "description": "User notes on how to apply this tag in the container. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update"
        },
        "name": {
          "type": "string",
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.workspaces.clients.create",
              "tagmanager.accounts.containers.workspaces.clients.update"
            ]
          },
          "description": "Client display name. @mutable tagmanager.accounts.containers.workspaces.clients.create @mutable tagmanager.accounts.containers.workspaces.clients.update"
        },
        "parameter": {
          "description": "The client's parameters. @mutable tagmanager.accounts.containers.workspaces.clients.create @mutable tagmanager.accounts.containers.workspaces.clients.update",
          "type": "array",
          "items": {
            "$ref": "Parameter"
          }
        },
        "workspaceId": {
          "type": "string",
          "description": "GTM Workspace ID."
        },
        "accountId": {
          "type": "string",
          "description": "GTM Account ID."
        },
        "parentFolderId": {
          "description": "Parent folder id.",
          "type": "string"
        },
        "type": {
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.workspaces.clients.create",
              "tagmanager.accounts.containers.workspaces.clients.update"
            ]
          },
          "type": "string",
          "description": "Client type. @mutable tagmanager.accounts.containers.workspaces.clients.create @mutable tagmanager.accounts.containers.workspaces.clients.update"
        },
        "path": {
          "type": "string",
          "description": "GTM client's API relative path."
        },
        "fingerprint": {
          "description": "The fingerprint of the GTM Client as computed at storage time. This value is recomputed whenever the client is modified.",
          "type": "string"
        }
      }
    },
    "Zone": {
      "id": "Zone",
      "description": "Represents a Google Tag Manager Zone's contents.",
      "properties": {
        "tagManagerUrl": {
          "description": "Auto generated link to the tag manager UI",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Zone display name."
        },
        "childContainer": {
          "type": "array",
          "description": "Containers that are children of this Zone.",
          "items": {
            "$ref": "ZoneChildContainer"
          }
        },
        "containerId": {
          "type": "string",
          "description": "GTM Container ID."
        },
        "workspaceId": {
          "type": "string",
          "description": "GTM Workspace ID."
        },
        "notes": {
          "type": "string",
          "description": "User notes on how to apply this zone in the container."
        },
        "boundary": {
          "$ref": "ZoneBoundary",
          "description": "This Zone's boundary."
        },
        "fingerprint": {
          "description": "The fingerprint of the GTM Zone as computed at storage time. This value is recomputed whenever the zone is modified.",
          "type": "string"
        },
        "path": {
          "type": "string",
          "description": "GTM Zone's API relative path."
        },
        "typeRestriction": {
          "description": "This Zone's type restrictions.",
          "$ref": "ZoneTypeRestriction"
        },
        "accountId": {
          "description": "GTM Account ID.",
          "type": "string"
        },
        "zoneId": {
          "description": "The Zone ID uniquely identifies the GTM Zone.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "FolderEntities": {
      "properties": {
        "trigger": {
          "items": {
            "$ref": "Trigger"
          },
          "type": "array",
          "description": "The list of triggers inside the folder."
        },
        "nextPageToken": {
          "description": "Continuation token for fetching the next page of results.",
          "type": "string"
        },
        "variable": {
          "type": "array",
          "description": "The list of variables inside the folder.",
          "items": {
            "$ref": "Variable"
          }
        },
        "tag": {
          "description": "The list of tags inside the folder.",
          "type": "array",
          "items": {
            "$ref": "Tag"
          }
        }
      },
      "description": "Represents a Google Tag Manager Folder's contents.",
      "id": "FolderEntities",
      "type": "object"
    },
    "ContainerVersion": {
      "description": "Represents a Google Tag Manager Container Version.",
      "type": "object",
      "id": "ContainerVersion",
      "properties": {
        "builtInVariable": {
          "description": "The built-in variables in the container that this version was taken from.",
          "type": "array",
          "items": {
            "$ref": "BuiltInVariable"
          }
        },
        "zone": {
          "type": "array",
          "description": "The zones in the container that this version was taken from.",
          "items": {
            "$ref": "Zone"
          }
        },
        "tagManagerUrl": {
          "type": "string",
          "description": "Auto generated link to the tag manager UI"
        },
        "accountId": {
          "type": "string",
          "description": "GTM Account ID."
        },
        "customTemplate": {
          "description": "The custom templates in the container that this version was taken from.",
          "items": {
            "$ref": "CustomTemplate"
          },
          "type": "array"
        },
        "path": {
          "type": "string",
          "description": "GTM Container Version's API relative path."
        },
        "name": {
          "type": "string",
          "description": "Container version display name. @mutable tagmanager.accounts.containers.versions.update"
        },
        "container": {
          "$ref": "Container",
          "description": "The container that this version was taken from."
        },
        "containerId": {
          "type": "string",
          "description": "GTM Container ID."
        },
        "folder": {
          "type": "array",
          "items": {
            "$ref": "Folder"
          },
          "description": "The folders in the container that this version was taken from."
        },
        "description": {
          "type": "string",
          "description": "Container version description. @mutable tagmanager.accounts.containers.versions.update"
        },
        "gtagConfig": {
          "description": "The Google tag configs in the container that this version was taken from.",
          "items": {
            "$ref": "GtagConfig"
          },
          "type": "array"
        },
        "trigger": {
          "description": "The triggers in the container that this version was taken from.",
          "type": "array",
          "items": {
            "$ref": "Trigger"
          }
        },
        "deleted": {
          "type": "boolean",
          "description": "A value of true indicates this container version has been deleted."
        },
        "tag": {
          "type": "array",
          "items": {
            "$ref": "Tag"
          },
          "description": "The tags in the container that this version was taken from."
        },
        "fingerprint": {
          "description": "The fingerprint of the GTM Container Version as computed at storage time. This value is recomputed whenever the container version is modified.",
          "type": "string"
        },
        "variable": {
          "items": {
            "$ref": "Variable"
          },
          "type": "array",
          "description": "The variables in the container that this version was taken from."
        },
        "containerVersionId": {
          "type": "string",
          "description": "The Container Version ID uniquely identifies the GTM Container Version."
        },
        "client": {
          "items": {
            "$ref": "Client"
          },
          "description": "The clients in the container that this version was taken from.",
          "type": "array"
        }
      }
    },
    "AccountFeatures": {
      "type": "object",
      "id": "AccountFeatures",
      "properties": {
        "supportUserPermissions": {
          "type": "boolean",
          "description": "Whether this Account supports user permissions managed by GTM."
        },
        "supportMultipleContainers": {
          "description": "Whether this Account supports multiple Containers.",
          "type": "boolean"
        }
      }
    },
    "Account": {
      "id": "Account",
      "type": "object",
      "properties": {
        "shareData": {
          "description": "Whether the account shares data anonymously with Google and others. This flag enables benchmarking by sharing your data in an anonymous form. Google will remove all identifiable information about your website, combine the data with hundreds of other anonymous sites and report aggregate trends in the benchmarking service. @mutable tagmanager.accounts.create @mutable tagmanager.accounts.update",
          "type": "boolean"
        },
        "path": {
          "description": "GTM Account's API relative path.",
          "type": "string"
        },
        "features": {
          "description": "Read-only Account feature set",
          "$ref": "AccountFeatures"
        },
        "tagManagerUrl": {
          "description": "Auto generated link to the tag manager UI",
          "type": "string"
        },
        "name": {
          "description": "Account display name. @mutable tagmanager.accounts.create @mutable tagmanager.accounts.update",
          "type": "string"
        },
        "accountId": {
          "type": "string",
          "description": "The Account ID uniquely identifies the GTM Account."
        },
        "fingerprint": {
          "description": "The fingerprint of the GTM Account as computed at storage time. This value is recomputed whenever the account is modified.",
          "type": "string"
        }
      },
      "description": "Represents a Google Tag Manager Account."
    },
    "Variable": {
      "id": "Variable",
      "type": "object",
      "description": "Represents a Google Tag Manager Variable.",
      "properties": {
        "enablingTriggerId": {
          "type": "array",
          "description": "For mobile containers only: A list of trigger IDs for enabling conditional variables; the variable is enabled if one of the enabling triggers is true while all the disabling triggers are false. Treated as an unordered set. @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "type": "string",
          "description": "Variable display name. @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update",
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.workspaces.variables.create",
              "tagmanager.accounts.containers.workspaces.variables.update"
            ]
          }
        },
        "path": {
          "description": "GTM Variable's API relative path.",
          "type": "string"
        },
        "workspaceId": {
          "type": "string",
          "description": "GTM Workspace ID."
        },
        "formatValue": {
          "description": "Option to convert a variable value to other value.",
          "$ref": "VariableFormatValue"
        },
        "type": {
          "description": "GTM Variable Type. @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update",
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.workspaces.variables.create",
              "tagmanager.accounts.containers.workspaces.variables.update"
            ]
          },
          "type": "string"
        },
        "parentFolderId": {
          "description": "Parent folder id.",
          "type": "string"
        },
        "fingerprint": {
          "description": "The fingerprint of the GTM Variable as computed at storage time. This value is recomputed whenever the variable is modified.",
          "type": "string"
        },
        "disablingTriggerId": {
          "type": "array",
          "description": "For mobile containers only: A list of trigger IDs for disabling conditional variables; the variable is enabled if one of the enabling trigger is true while all the disabling trigger are false. Treated as an unordered set. @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update",
          "items": {
            "type": "string"
          }
        },
        "notes": {
          "type": "string",
          "description": "User notes on how to apply this variable in the container. @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update"
        },
        "scheduleEndMs": {
          "format": "int64",
          "description": "The end timestamp in milliseconds to schedule a variable. @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update",
          "type": "string"
        },
        "scheduleStartMs": {
          "description": "The start timestamp in milliseconds to schedule a variable. @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update",
          "type": "string",
          "format": "int64"
        },
        "accountId": {
          "description": "GTM Account ID.",
          "type": "string"
        },
        "variableId": {
          "type": "string",
          "description": "The Variable ID uniquely identifies the GTM Variable."
        },
        "parameter": {
          "items": {
            "$ref": "Parameter"
          },
          "description": "The variable's parameters. @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update",
          "type": "array"
        },
        "containerId": {
          "type": "string",
          "description": "GTM Container ID."
        },
        "tagManagerUrl": {
          "description": "Auto generated link to the tag manager UI",
          "type": "string"
        }
      }
    },
    "ZoneChildContainer": {
      "properties": {
        "publicId": {
          "description": "The child container's public id.",
          "type": "string"
        },
        "nickname": {
          "description": "The zone's nickname for the child container.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Represents a child container of a Zone.",
      "id": "ZoneChildContainer"
    },
    "SetupTag": {
      "id": "SetupTag",
      "type": "object",
      "properties": {
        "tagName": {
          "description": "The name of the setup tag.",
          "type": "string"
        },
        "stopOnSetupFailure": {
          "description": "If true, fire the main tag if and only if the setup tag fires successfully. If false, fire the main tag regardless of setup tag firing status.",
          "type": "boolean"
        }
      },
      "description": "Represents a reference to atag that fires before another tag in order to set up dependencies."
    },
    "ListFoldersResponse": {
      "type": "object",
      "id": "ListFoldersResponse",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Continuation token for fetching the next page of results."
        },
        "folder": {
          "type": "array",
          "description": "All GTM Folders of a GTM Container.",
          "items": {
            "$ref": "Folder"
          }
        }
      },
      "description": "List Folders Response."
    },
    "ListTriggersResponse": {
      "properties": {
        "nextPageToken": {
          "description": "Continuation token for fetching the next page of results.",
          "type": "string"
        },
        "trigger": {
          "items": {
            "$ref": "Trigger"
          },
          "type": "array",
          "description": "All GTM Triggers of a GTM Container."
        }
      },
      "id": "ListTriggersResponse",
      "type": "object",
      "description": "List triggers response."
    },
    "SyncStatus": {
      "type": "object",
      "id": "SyncStatus",
      "description": "The status of a workspace after synchronization.",
      "properties": {
        "mergeConflict": {
          "type": "boolean",
          "description": "Synchornization operation detected a merge conflict."
        },
        "syncError": {
          "type": "boolean",
          "description": "An error occurred during the synchronization operation."
        }
      }
    },
    "MergeConflict": {
      "description": "Represents a merge conflict.",
      "id": "MergeConflict",
      "properties": {
        "entityInBaseVersion": {
          "$ref": "Entity",
          "description": "The base version entity (since the latest sync operation) that has conflicting changes compared to the workspace. If this field is missing, it means the workspace entity is deleted from the base version."
        },
        "entityInWorkspace": {
          "description": "The workspace entity that has conflicting changes compared to the base version. If an entity is deleted in a workspace, it will still appear with a deleted change status.",
          "$ref": "Entity"
        }
      },
      "type": "object"
    },
    "PublishContainerVersionResponse": {
      "type": "object",
      "properties": {
        "compilerError": {
          "description": "Compiler errors or not.",
          "type": "boolean"
        },
        "containerVersion": {
          "$ref": "ContainerVersion",
          "description": "The container version created."
        }
      },
      "description": "Publish container version response.",
      "id": "PublishContainerVersionResponse"
    },
    "Entity": {
      "type": "object",
      "description": "A workspace entity that may represent a tag, trigger, variable, or folder in addition to its status in the workspace.",
      "id": "Entity",
      "properties": {
        "tag": {
          "$ref": "Tag",
          "description": "The tag being represented by the entity."
        },
        "variable": {
          "description": "The variable being represented by the entity.",
          "$ref": "Variable"
        },
        "folder": {
          "$ref": "Folder",
          "description": "The folder being represented by the entity."
        },
        "client": {
          "description": "The client being represented by the entity.",
          "$ref": "Client"
        },
        "trigger": {
          "description": "The trigger being represented by the entity.",
          "$ref": "Trigger"
        },
        "changeStatus": {
          "description": "Represents how the entity has been changed in the workspace.",
          "type": "string",
          "enum": [
            "changeStatusUnspecified",
            "none",
            "added",
            "deleted",
            "updated"
          ],
          "enumDescriptions": [
            "",
            "The entity has never been changed.",
            "The entity is added to the workspace.",
            "The entity is deleted from the workspace.",
            "The entity has been updated in the workspace."
          ]
        }
      }
    },
    "ListEnabledBuiltInVariablesResponse": {
      "description": "A list of enabled built-in variables.",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Continuation token for fetching the next page of results."
        },
        "builtInVariable": {
          "items": {
            "$ref": "BuiltInVariable"
          },
          "description": "All GTM BuiltInVariables of a GTM container.",
          "type": "array"
        }
      },
      "id": "ListEnabledBuiltInVariablesResponse",
      "type": "object"
    },
    "CreateBuiltInVariableResponse": {
      "id": "CreateBuiltInVariableResponse",
      "type": "object",
      "properties": {
        "builtInVariable": {
          "type": "array",
          "description": "List of created built-in variables.",
          "items": {
            "$ref": "BuiltInVariable"
          }
        }
      }
    },
    "TeardownTag": {
      "type": "object",
      "properties": {
        "stopTeardownOnFailure": {
          "description": "If true, fire the teardown tag if and only if the main tag fires successfully. If false, fire the teardown tag regardless of main tag firing status.",
          "type": "boolean"
        },
        "tagName": {
          "description": "The name of the teardown tag.",
          "type": "string"
        }
      },
      "id": "TeardownTag",
      "description": "Represents a tag that fires after another tag in order to tear down dependencies."
    },
    "ListGtagConfigResponse": {
      "type": "object",
      "id": "ListGtagConfigResponse",
      "properties": {
        "gtagConfig": {
          "type": "array",
          "items": {
            "$ref": "GtagConfig"
          },
          "description": "All Google tag configs in a Container."
        },
        "nextPageToken": {
          "description": "Continuation token for fetching the next page of results.",
          "type": "string"
        }
      }
    },
    "ListEnvironmentsResponse": {
      "properties": {
        "environment": {
          "type": "array",
          "items": {
            "$ref": "Environment"
          },
          "description": "All Environments of a GTM Container."
        },
        "nextPageToken": {
          "type": "string",
          "description": "Continuation token for fetching the next page of results."
        }
      },
      "description": "List Environments Response.",
      "type": "object",
      "id": "ListEnvironmentsResponse"
    },
    "RevertVariableResponse": {
      "description": "The result of reverting a variable in a workspace.",
      "id": "RevertVariableResponse",
      "type": "object",
      "properties": {
        "variable": {
          "$ref": "Variable",
          "description": "Variable as it appears in the latest container version since the last workspace synchronization operation. If no variable is present, that means the variable was deleted in the latest container version."
        }
      }
    },
    "SyncWorkspaceResponse": {
      "properties": {
        "mergeConflict": {
          "type": "array",
          "description": "The merge conflict after sync. If this field is not empty, the sync is still treated as successful. But a version cannot be created until all conflicts are resolved.",
          "items": {
            "$ref": "MergeConflict"
          }
        },
        "syncStatus": {
          "description": "Indicates whether synchronization caused a merge conflict or sync error.",
          "$ref": "SyncStatus"
        }
      },
      "id": "SyncWorkspaceResponse",
      "description": "A response after synchronizing the workspace to the latest container version.",
      "type": "object"
    },
    "ListDestinationsResponse": {
      "id": "ListDestinationsResponse",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "Continuation token for fetching the next page of results.",
          "type": "string"
        },
        "destination": {
          "description": "All Destinations linked to a GTM Container.",
          "items": {
            "$ref": "Destination"
          },
          "type": "array"
        }
      }
    },
    "ZoneBoundary": {
      "id": "ZoneBoundary",
      "description": "Represents a Zone's boundaries.",
      "properties": {
        "customEvaluationTriggerId": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Custom evaluation trigger IDs. A zone will evaluate its boundary conditions when any of the listed triggers are true."
        },
        "condition": {
          "items": {
            "$ref": "Condition"
          },
          "description": "The conditions that, when conjoined, make up the boundary.",
          "type": "array"
        }
      },
      "type": "object"
    },
    "ContainerFeatures": {
      "properties": {
        "supportUserPermissions": {
          "type": "boolean",
          "description": "Whether this Container supports user permissions managed by GTM."
        },
        "supportEnvironments": {
          "description": "Whether this Container supports environments.",
          "type": "boolean"
        },
        "supportFolders": {
          "type": "boolean",
          "description": "Whether this Container supports folders."
        },
        "supportWorkspaces": {
          "description": "Whether this Container supports workspaces.",
          "type": "boolean"
        },
        "supportVersions": {
          "description": "Whether this Container supports Container versions.",
          "type": "boolean"
        },
        "supportVariables": {
          "type": "boolean",
          "description": "Whether this Container supports variables."
        },
        "supportTemplates": {
          "type": "boolean",
          "description": "Whether this Container supports templates."
        },
        "supportBuiltInVariables": {
          "description": "Whether this Container supports built-in variables",
          "type": "boolean"
        },
        "supportGtagConfigs": {
          "description": "Whether this Container supports Google tag config.",
          "type": "boolean"
        },
        "supportTriggers": {
          "description": "Whether this Container supports triggers.",
          "type": "boolean"
        },
        "supportClients": {
          "description": "Whether this Container supports clients.",
          "type": "boolean"
        },
        "supportZones": {
          "type": "boolean",
          "description": "Whether this Container supports zones."
        },
        "supportTags": {
          "type": "boolean",
          "description": "Whether this Container supports tags."
        }
      },
      "id": "ContainerFeatures",
      "type": "object"
    },
    "AccountAccess": {
      "description": "Defines the Google Tag Manager Account access permissions.",
      "properties": {
        "permission": {
          "type": "string",
          "enumDescriptions": [
            "",
            "",
            "",
            ""
          ],
          "enum": [
            "accountPermissionUnspecified",
            "noAccess",
            "user",
            "admin"
          ],
          "description": "Whether the user has no access, user access, or admin access to an account. @mutable tagmanager.accounts.permissions.create @mutable tagmanager.accounts.permissions.update"
        }
      },
      "id": "AccountAccess",
      "type": "object"
    },
    "ListTagsResponse": {
      "description": "List Tags Response.",
      "id": "ListTagsResponse",
      "properties": {
        "tag": {
          "description": "All GTM Tags of a GTM Container.",
          "items": {
            "$ref": "Tag"
          },
          "type": "array"
        },
        "nextPageToken": {
          "description": "Continuation token for fetching the next page of results.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Parameter": {
      "id": "Parameter",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "typeUnspecified",
            "template",
            "integer",
            "boolean",
            "list",
            "map",
            "triggerReference",
            "tagReference"
          ],
          "description": "The parameter type. Valid values are: - boolean: The value represents a boolean, represented as 'true' or 'false' - integer: The value represents a 64-bit signed integer value, in base 10 - list: A list of parameters should be specified - map: A map of parameters should be specified - template: The value represents any text; this can include variable references (even variable references that might return non-string types) - trigger_reference: The value represents a trigger, represented as the trigger id - tag_reference: The value represents a tag, represented as the tag name @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update",
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.workspaces.tags.create",
              "tagmanager.accounts.containers.workspaces.tags.update",
              "tagmanager.accounts.containers.workspaces.triggers.create",
              "tagmanager.accounts.containers.workspaces.triggers.update",
              "tagmanager.accounts.containers.workspaces.variables.create",
              "tagmanager.accounts.containers.workspaces.variables.update"
            ]
          },
          "enumDescriptions": [
            "",
            "May include variable references (such as \"{{myVariable}}\").",
            "",
            "",
            "",
            "",
            "",
            ""
          ]
        },
        "key": {
          "type": "string",
          "description": "The named key that uniquely identifies a parameter. Required for top-level parameters, as well as map values. Ignored for list values. @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update"
        },
        "map": {
          "type": "array",
          "description": "This map parameter's parameters (must have keys; keys must be unique). @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update",
          "items": {
            "$ref": "Parameter"
          }
        },
        "value": {
          "description": "A parameter's value (may contain variable references such as \"{{myVariable}}\") as appropriate to the specified type. @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update",
          "type": "string"
        },
        "list": {
          "type": "array",
          "description": "This list parameter's parameters (keys will be ignored). @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update",
          "items": {
            "$ref": "Parameter"
          }
        }
      },
      "description": "Represents a Google Tag Manager Parameter."
    },
    "GtagConfig": {
      "type": "object",
      "properties": {
        "fingerprint": {
          "type": "string",
          "description": "The fingerprint of the Google tag config as computed at storage time. This value is recomputed whenever the config is modified."
        },
        "path": {
          "description": "Google tag config's API relative path.",
          "type": "string"
        },
        "workspaceId": {
          "description": "Google tag workspace ID. Only used by GTM containers. Set to 0 otherwise.",
          "type": "string"
        },
        "parameter": {
          "type": "array",
          "items": {
            "$ref": "Parameter"
          },
          "description": "The Google tag config's parameters. @mutable tagmanager.accounts.containers.workspaces.gtag_config.create @mutable tagmanager.accounts.containers.workspaces.gtag_config.update"
        },
        "gtagConfigId": {
          "type": "string",
          "description": "The ID uniquely identifies the Google tag config."
        },
        "containerId": {
          "description": "Google tag container ID.",
          "type": "string"
        },
        "tagManagerUrl": {
          "type": "string",
          "description": "Auto generated link to the tag manager UI"
        },
        "accountId": {
          "type": "string",
          "description": "Google tag account ID."
        },
        "type": {
          "description": "Google tag config type. @required tagmanager.accounts.containers.workspaces.gtag_config.create @required tagmanager.accounts.containers.workspaces.gtag_config.update @mutable tagmanager.accounts.containers.workspaces.gtag_config.create @mutable tagmanager.accounts.containers.workspaces.gtag_config.update",
          "type": "string"
        }
      },
      "description": "Represents a Google tag configuration.",
      "id": "GtagConfig"
    },
    "UserPermission": {
      "id": "UserPermission",
      "type": "object",
      "description": "Represents a user's permissions to an account and its container.",
      "properties": {
        "accountId": {
          "type": "string",
          "description": "The Account ID uniquely identifies the GTM Account."
        },
        "accountAccess": {
          "description": "GTM Account access permissions. @mutable tagmanager.accounts.permissions.create @mutable tagmanager.accounts.permissions.update",
          "$ref": "AccountAccess"
        },
        "emailAddress": {
          "description": "User's email address. @mutable tagmanager.accounts.permissions.create",
          "type": "string"
        },
        "containerAccess": {
          "description": "GTM Container access permissions. @mutable tagmanager.accounts.permissions.create @mutable tagmanager.accounts.permissions.update",
          "items": {
            "$ref": "ContainerAccess"
          },
          "type": "array"
        },
        "path": {
          "description": "GTM UserPermission's API relative path.",
          "type": "string"
        }
      }
    },
    "RevertFolderResponse": {
      "description": "The result of reverting folder changes in a workspace.",
      "type": "object",
      "properties": {
        "folder": {
          "description": "Folder as it appears in the latest container version since the last workspace synchronization operation. If no folder is present, that means the folder was deleted in the latest container version.",
          "$ref": "Folder"
        }
      },
      "id": "RevertFolderResponse"
    },
    "CreateContainerVersionRequestVersionOptions": {
      "properties": {
        "notes": {
          "type": "string",
          "description": "The notes of the container version to be created."
        },
        "name": {
          "description": "The name of the container version to be created.",
          "type": "string"
        }
      },
      "id": "CreateContainerVersionRequestVersionOptions",
      "description": "Options for new container versions.",
      "type": "object"
    },
    "ListContainersResponse": {
      "description": "List Containers Response.",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Continuation token for fetching the next page of results."
        },
        "container": {
          "description": "All Containers of a GTM Account.",
          "items": {
            "$ref": "Container"
          },
          "type": "array"
        }
      },
      "id": "ListContainersResponse",
      "type": "object"
    },
    "ListClientsResponse": {
      "id": "ListClientsResponse",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Continuation token for fetching the next page of results."
        },
        "client": {
          "type": "array",
          "description": "All GTM Clients of a GTM Container.",
          "items": {
            "$ref": "Client"
          }
        }
      },
      "type": "object"
    },
    "ListZonesResponse": {
      "id": "ListZonesResponse",
      "properties": {
        "nextPageToken": {
          "description": "Continuation token for fetching the next page of results.",
          "type": "string"
        },
        "zone": {
          "type": "array",
          "description": "All GTM Zones of a GTM Container.",
          "items": {
            "$ref": "Zone"
          }
        }
      },
      "type": "object"
    },
    "Workspace": {
      "description": "Represents a Google Tag Manager Container Workspace.",
      "id": "Workspace",
      "properties": {
        "path": {
          "type": "string",
          "description": "GTM Workspace's API relative path."
        },
        "description": {
          "description": "Workspace description. @mutable tagmanager.accounts.containers.workspaces.create @mutable tagmanager.accounts.containers.workspaces.update",
          "type": "string"
        },
        "tagManagerUrl": {
          "description": "Auto generated link to the tag manager UI",
          "type": "string"
        },
        "containerId": {
          "type": "string",
          "description": "GTM Container ID."
        },
        "workspaceId": {
          "type": "string",
          "description": "The Workspace ID uniquely identifies the GTM Workspace."
        },
        "name": {
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.workspaces.create",
              "tagmanager.accounts.containers.workspaces.update"
            ]
          },
          "type": "string",
          "description": "Workspace display name. @mutable tagmanager.accounts.containers.workspaces.create @mutable tagmanager.accounts.containers.workspaces.update"
        },
        "fingerprint": {
          "type": "string",
          "description": "The fingerprint of the GTM Workspace as computed at storage time. This value is recomputed whenever the workspace is modified."
        },
        "accountId": {
          "description": "GTM Account ID.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ListVariablesResponse": {
      "properties": {
        "nextPageToken": {
          "description": "Continuation token for fetching the next page of results.",
          "type": "string"
        },
        "variable": {
          "items": {
            "$ref": "Variable"
          },
          "description": "All GTM Variables of a GTM Container.",
          "type": "array"
        }
      },
      "id": "ListVariablesResponse",
      "description": "List Variables Response.",
      "type": "object"
    },
    "RevertTriggerResponse": {
      "description": "The result of reverting a trigger in a workspace.",
      "type": "object",
      "id": "RevertTriggerResponse",
      "properties": {
        "trigger": {
          "description": "Trigger as it appears in the latest container version since the last workspace synchronization operation. If no trigger is present, that means the trigger was deleted in the latest container version.",
          "$ref": "Trigger"
        }
      }
    },
    "CustomTemplate": {
      "description": "Represents a Google Tag Manager Custom Template's contents.",
      "type": "object",
      "id": "CustomTemplate",
      "properties": {
        "fingerprint": {
          "type": "string",
          "description": "The fingerprint of the GTM Custom Template as computed at storage time. This value is recomputed whenever the template is modified."
        },
        "path": {
          "description": "GTM Custom Template's API relative path.",
          "type": "string"
        },
        "accountId": {
          "description": "GTM Account ID.",
          "type": "string"
        },
        "containerId": {
          "description": "GTM Container ID.",
          "type": "string"
        },
        "templateId": {
          "type": "string",
          "description": "The Custom Template ID uniquely identifies the GTM custom template."
        },
        "templateData": {
          "description": "The custom template in text format.",
          "type": "string"
        },
        "galleryReference": {
          "description": "A reference to the Community Template Gallery entry.",
          "$ref": "GalleryReference"
        },
        "tagManagerUrl": {
          "description": "Auto generated link to the tag manager UI",
          "type": "string"
        },
        "workspaceId": {
          "description": "GTM Workspace ID.",
          "type": "string"
        },
        "name": {
          "description": "Custom Template display name.",
          "type": "string"
        }
      }
    },
    "RevertTagResponse": {
      "properties": {
        "tag": {
          "$ref": "Tag",
          "description": "Tag as it appears in the latest container version since the last workspace synchronization operation. If no tag is present, that means the tag was deleted in the latest container version."
        }
      },
      "type": "object",
      "id": "RevertTagResponse",
      "description": "The result of reverting a tag in a workspace."
    },
    "ZoneTypeRestriction": {
      "description": "Represents a Zone's type restrictions.",
      "id": "ZoneTypeRestriction",
      "properties": {
        "whitelistedTypeId": {
          "description": "List of type public ids that have been whitelisted for use in this Zone.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "enable": {
          "description": "True if type restrictions have been enabled for this Zone.",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "BuiltInVariable": {
      "properties": {
        "containerId": {
          "description": "GTM Container ID.",
          "type": "string"
        },
        "path": {
          "type": "string",
          "description": "GTM BuiltInVariable's API relative path."
        },
        "name": {
          "description": "Name of the built-in variable to be used to refer to the built-in variable.",
          "type": "string"
        },
        "type": {
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            "",
            "For web or mobile.",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "For web or mobile.",
            "",
            "For web or mobile.",
            "For web or mobile.",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
          ],
          "enum": [
            "builtInVariableTypeUnspecified",
            "pageUrl",
            "pageHostname",
            "pagePath",
            "referrer",
            "event",
            "clickElement",
            "clickClasses",
            "clickId",
            "clickTarget",
            "clickUrl",
            "clickText",
            "firstPartyServingUrl",
            "formElement",
            "formClasses",
            "formId",
            "formTarget",
            "formUrl",
            "formText",
            "errorMessage",
            "errorUrl",
            "errorLine",
            "newHistoryUrl",
            "oldHistoryUrl",
            "newHistoryFragment",
            "oldHistoryFragment",
            "newHistoryState",
            "oldHistoryState",
            "historySource",
            "containerVersion",
            "debugMode",
            "randomNumber",
            "containerId",
            "appId",
            "appName",
            "appVersionCode",
            "appVersionName",
            "language",
            "osVersion",
            "platform",
            "sdkVersion",
            "deviceName",
            "resolution",
            "advertiserId",
            "advertisingTrackingEnabled",
            "htmlId",
            "environmentName",
            "ampBrowserLanguage",
            "ampCanonicalPath",
            "ampCanonicalUrl",
            "ampCanonicalHost",
            "ampReferrer",
            "ampTitle",
            "ampClientId",
            "ampClientTimezone",
            "ampClientTimestamp",
            "ampClientScreenWidth",
            "ampClientScreenHeight",
            "ampClientScrollX",
            "ampClientScrollY",
            "ampClientMaxScrollX",
            "ampClientMaxScrollY",
            "ampTotalEngagedTime",
            "ampPageViewId",
            "ampPageLoadTime",
            "ampPageDownloadTime",
            "ampGtmEvent",
            "eventName",
            "firebaseEventParameterCampaign",
            "firebaseEventParameterCampaignAclid",
            "firebaseEventParameterCampaignAnid",
            "firebaseEventParameterCampaignClickTimestamp",
            "firebaseEventParameterCampaignContent",
            "firebaseEventParameterCampaignCp1",
            "firebaseEventParameterCampaignGclid",
            "firebaseEventParameterCampaignSource",
            "firebaseEventParameterCampaignTerm",
            "firebaseEventParameterCurrency",
            "firebaseEventParameterDynamicLinkAcceptTime",
            "firebaseEventParameterDynamicLinkLinkid",
            "firebaseEventParameterNotificationMessageDeviceTime",
            "firebaseEventParameterNotificationMessageId",
            "firebaseEventParameterNotificationMessageName",
            "firebaseEventParameterNotificationMessageTime",
            "firebaseEventParameterNotificationTopic",
            "firebaseEventParameterPreviousAppVersion",
            "firebaseEventParameterPreviousOsVersion",
            "firebaseEventParameterPrice",
            "firebaseEventParameterProductId",
            "firebaseEventParameterQuantity",
            "firebaseEventParameterValue",
            "videoProvider",
            "videoUrl",
            "videoTitle",
            "videoDuration",
            "videoPercent",
            "videoVisible",
            "videoStatus",
            "videoCurrentTime",
            "scrollDepthThreshold",
            "scrollDepthUnits",
            "scrollDepthDirection",
            "elementVisibilityRatio",
            "elementVisibilityTime",
            "elementVisibilityFirstTime",
            "elementVisibilityRecentTime",
            "requestPath",
            "requestMethod",
            "clientName",
            "queryString",
            "serverPageLocationUrl",
            "serverPageLocationPath",
            "serverPageLocationHostname",
            "visitorRegion"
          ],
          "type": "string",
          "description": "Type of built-in variable. @required.tagmanager.accounts.containers.workspaces.built_in_variable.update @mutable tagmanager.accounts.containers.workspaces.built_in_variable.update"
        },
        "accountId": {
          "type": "string",
          "description": "GTM Account ID."
        },
        "workspaceId": {
          "description": "GTM Workspace ID.",
          "type": "string"
        }
      },
      "description": "Built-in variables are a special category of variables that are pre-created and non-customizable. They provide common functionality like accessing properties of the gtm data layer, monitoring clicks, or accessing elements of a page URL.",
      "id": "BuiltInVariable",
      "type": "object"
    },
    "GetWorkspaceStatusResponse": {
      "id": "GetWorkspaceStatusResponse",
      "type": "object",
      "description": "The changes that have occurred in the workspace since the base container version.",
      "properties": {
        "workspaceChange": {
          "items": {
            "$ref": "Entity"
          },
          "description": "Entities that have been changed in the workspace.",
          "type": "array"
        },
        "mergeConflict": {
          "items": {
            "$ref": "MergeConflict"
          },
          "description": "The merge conflict after sync.",
          "type": "array"
        }
      }
    },
    "Container": {
      "type": "object",
      "description": "Represents a Google Tag Manager Container, which specifies the platform tags will run on, manages workspaces, and retains container versions.",
      "properties": {
        "publicId": {
          "description": "Container Public ID.",
          "type": "string"
        },
        "domainName": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "List of domain names associated with the Container. @mutable tagmanager.accounts.containers.create @mutable tagmanager.accounts.containers.update"
        },
        "containerId": {
          "description": "The Container ID uniquely identifies the GTM Container.",
          "type": "string"
        },
        "notes": {
          "type": "string",
          "description": "Container Notes. @mutable tagmanager.accounts.containers.create @mutable tagmanager.accounts.containers.update"
        },
        "taggingServerUrls": {
          "description": "List of server-side container URLs for the Container. If multiple URLs are provided, all URL paths must match. @mutable tagmanager.accounts.containers.create @mutable tagmanager.accounts.containers.update",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "tagManagerUrl": {
          "description": "Auto generated link to the tag manager UI",
          "type": "string"
        },
        "fingerprint": {
          "description": "The fingerprint of the GTM Container as computed at storage time. This value is recomputed whenever the account is modified.",
          "type": "string"
        },
        "path": {
          "description": "GTM Container's API relative path.",
          "type": "string"
        },
        "accountId": {
          "type": "string",
          "description": "GTM Account ID."
        },
        "tagIds": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "All Tag IDs that refer to this Container."
        },
        "name": {
          "description": "Container display name. @mutable tagmanager.accounts.containers.create @mutable tagmanager.accounts.containers.update",
          "type": "string",
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.create",
              "tagmanager.accounts.containers.update"
            ]
          }
        },
        "usageContext": {
          "items": {
            "enumDescriptions": [
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              ""
            ],
            "type": "string",
            "enum": [
              "usageContextUnspecified",
              "web",
              "android",
              "ios",
              "androidSdk5",
              "iosSdk5",
              "amp",
              "server"
            ]
          },
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.create",
              "tagmanager.accounts.containers.update"
            ]
          },
          "description": "List of Usage Contexts for the Container. Valid values include: web, android, or ios. @mutable tagmanager.accounts.containers.create @mutable tagmanager.accounts.containers.update",
          "type": "array"
        },
        "features": {
          "$ref": "ContainerFeatures",
          "description": "Read-only Container feature set."
        }
      },
      "id": "Container"
    },
    "Condition": {
      "description": "Represents a predicate.",
      "type": "object",
      "properties": {
        "type": {
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "NOTE(lanzone): When defining a ConditionType here, don't forget to also define a matching PredicateType (in condition.proto)."
          ],
          "enum": [
            "conditionTypeUnspecified",
            "equals",
            "contains",
            "startsWith",
            "endsWith",
            "matchRegex",
            "greater",
            "greaterOrEquals",
            "less",
            "lessOrEquals",
            "cssSelector",
            "urlMatches"
          ],
          "type": "string",
          "description": "The type of operator for this condition. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.workspaces.triggers.create",
              "tagmanager.accounts.containers.workspaces.triggers.update"
            ]
          }
        },
        "parameter": {
          "items": {
            "$ref": "Parameter"
          },
          "description": "A list of named parameters (key/value), depending on the condition's type. Notes: - For binary operators, include parameters named arg0 and arg1 for specifying the left and right operands, respectively. - At this time, the left operand (arg0) must be a reference to a variable. - For case-insensitive Regex matching, include a boolean parameter named ignore_case that is set to true. If not specified or set to any other value, the matching will be case sensitive. - To negate an operator, include a boolean parameter named negate boolean parameter that is set to true. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "type": "array",
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.workspaces.triggers.create",
              "tagmanager.accounts.containers.workspaces.triggers.update"
            ]
          }
        }
      },
      "id": "Condition"
    },
    "Tag": {
      "properties": {
        "tagManagerUrl": {
          "description": "Auto generated link to the tag manager UI",
          "type": "string"
        },
        "notes": {
          "description": "User notes on how to apply this tag in the container. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update",
          "type": "string"
        },
        "parameter": {
          "type": "array",
          "items": {
            "$ref": "Parameter"
          },
          "description": "The tag's parameters. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update"
        },
        "scheduleEndMs": {
          "type": "string",
          "format": "int64",
          "description": "The end timestamp in milliseconds to schedule a tag. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update"
        },
        "monitoringMetadata": {
          "description": "A map of key-value pairs of tag metadata to be included in the event data for tag monitoring. Notes: - This parameter must be type MAP. - Each parameter in the map are type TEMPLATE, however cannot contain variable references. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update",
          "$ref": "Parameter"
        },
        "blockingTriggerId": {
          "items": {
            "type": "string"
          },
          "description": "Blocking trigger IDs. If any of the listed triggers evaluate to true, the tag will not fire. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update",
          "type": "array"
        },
        "setupTag": {
          "description": "The list of setup tags. Currently we only allow one.",
          "items": {
            "$ref": "SetupTag"
          },
          "type": "array"
        },
        "teardownTag": {
          "items": {
            "$ref": "TeardownTag"
          },
          "type": "array",
          "description": "The list of teardown tags. Currently we only allow one."
        },
        "paused": {
          "type": "boolean",
          "description": "Indicates whether the tag is paused, which prevents the tag from firing. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update"
        },
        "scheduleStartMs": {
          "description": "The start timestamp in milliseconds to schedule a tag. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update",
          "format": "int64",
          "type": "string"
        },
        "parentFolderId": {
          "description": "Parent folder id.",
          "type": "string"
        },
        "liveOnly": {
          "description": "If set to true, this tag will only fire in the live environment (e.g. not in preview or debug mode). @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update",
          "type": "boolean"
        },
        "monitoringMetadataTagNameKey": {
          "description": "If non-empty, then the tag display name will be included in the monitoring metadata map using the key specified. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update",
          "type": "string"
        },
        "fingerprint": {
          "type": "string",
          "description": "The fingerprint of the GTM Tag as computed at storage time. This value is recomputed whenever the tag is modified."
        },
        "path": {
          "type": "string",
          "description": "GTM Tag's API relative path."
        },
        "blockingRuleId": {
          "type": "array",
          "description": "Blocking rule IDs. If any of the listed rules evaluate to true, the tag will not fire. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update",
          "items": {
            "type": "string"
          }
        },
        "consentSettings": {
          "$ref": "TagConsentSetting",
          "description": "Consent settings of a tag. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update"
        },
        "containerId": {
          "description": "GTM Container ID.",
          "type": "string"
        },
        "priority": {
          "$ref": "Parameter",
          "description": "User defined numeric priority of the tag. Tags are fired asynchronously in order of priority. Tags with higher numeric value fire first. A tag's priority can be a positive or negative value. The default value is 0. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update"
        },
        "name": {
          "description": "Tag display name. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update",
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.workspaces.tags.create",
              "tagmanager.accounts.containers.workspaces.tags.update"
            ]
          },
          "type": "string"
        },
        "type": {
          "description": "GTM Tag Type. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update",
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.workspaces.tags.create",
              "tagmanager.accounts.containers.workspaces.tags.update"
            ]
          },
          "type": "string"
        },
        "firingRuleId": {
          "description": "Firing rule IDs. A tag will fire when any of the listed rules are true and all of its blockingRuleIds (if any specified) are false. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "accountId": {
          "type": "string",
          "description": "GTM Account ID."
        },
        "workspaceId": {
          "description": "GTM Workspace ID.",
          "type": "string"
        },
        "firingTriggerId": {
          "description": "Firing trigger IDs. A tag will fire when any of the listed triggers are true and all of its blockingTriggerIds (if any specified) are false. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "tagId": {
          "type": "string",
          "description": "The Tag ID uniquely identifies the GTM Tag."
        },
        "tagFiringOption": {
          "type": "string",
          "enumDescriptions": [
            "",
            "Tag can be fired multiple times per event.",
            "Tag can only be fired per event but can be fired multiple times per load (e.g., app load or page load).",
            "Tag can only be fired per load (e.g., app load or page load)."
          ],
          "enum": [
            "tagFiringOptionUnspecified",
            "unlimited",
            "oncePerEvent",
            "oncePerLoad"
          ],
          "description": "Option to fire this tag."
        }
      },
      "id": "Tag",
      "type": "object",
      "description": "Represents a Google Tag Manager Tag."
    },
    "VariableFormatValue": {
      "id": "VariableFormatValue",
      "type": "object",
      "properties": {
        "convertFalseToValue": {
          "$ref": "Parameter",
          "description": "The value to convert if a variable value is false."
        },
        "caseConversionType": {
          "type": "string",
          "enum": [
            "none",
            "lowercase",
            "uppercase"
          ],
          "enumDescriptions": [
            "",
            "The option to convert a variable value to lowercase.",
            "The option to convert a variable value to uppercase."
          ],
          "description": "The option to convert a string-type variable value to either lowercase or uppercase."
        },
        "convertUndefinedToValue": {
          "description": "The value to convert if a variable value is undefined.",
          "$ref": "Parameter"
        },
        "convertTrueToValue": {
          "$ref": "Parameter",
          "description": "The value to convert if a variable value is true."
        },
        "convertNullToValue": {
          "description": "The value to convert if a variable value is null.",
          "$ref": "Parameter"
        }
      }
    },
    "RevertBuiltInVariableResponse": {
      "type": "object",
      "description": "The result of reverting a built-in variable in a workspace.",
      "properties": {
        "enabled": {
          "description": "Whether the built-in variable is enabled after reversion.",
          "type": "boolean"
        }
      },
      "id": "RevertBuiltInVariableResponse"
    },
    "CreateContainerVersionResponse": {
      "description": "Create container versions response.",
      "id": "CreateContainerVersionResponse",
      "properties": {
        "newWorkspacePath": {
          "description": "Auto generated workspace path created as a result of version creation. This field should only be populated if the created version was not a quick preview.",
          "type": "string"
        },
        "compilerError": {
          "description": "Compiler errors or not.",
          "type": "boolean"
        },
        "syncStatus": {
          "description": "Whether version creation failed when syncing the workspace to the latest container version.",
          "$ref": "SyncStatus"
        },
        "containerVersion": {
          "$ref": "ContainerVersion",
          "description": "The container version created."
        }
      },
      "type": "object"
    },
    "ListUserPermissionsResponse": {
      "type": "object",
      "description": "List user permissions response.",
      "id": "ListUserPermissionsResponse",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Continuation token for fetching the next page of results."
        },
        "userPermission": {
          "description": "All GTM UserPermissions of a GTM Account.",
          "items": {
            "$ref": "UserPermission"
          },
          "type": "array"
        }
      }
    },
    "Destination": {
      "properties": {
        "path": {
          "description": "Destination's API relative path.",
          "type": "string"
        },
        "containerId": {
          "type": "string",
          "description": "GTM Container ID."
        },
        "name": {
          "type": "string",
          "description": "Destination display name."
        },
        "destinationLinkId": {
          "description": "The Destination link ID uniquely identifies the Destination.",
          "type": "string"
        },
        "accountId": {
          "description": "GTM Account ID.",
          "type": "string"
        },
        "fingerprint": {
          "type": "string",
          "description": "The fingerprint of the Google Tag Destination as computed at storage time. This value is recomputed whenever the destination is modified."
        },
        "destinationId": {
          "type": "string",
          "description": "Destination ID."
        },
        "tagManagerUrl": {
          "type": "string",
          "description": "Auto generated link to the tag manager UI."
        }
      },
      "description": "Represents a Google Tag Destination.",
      "type": "object",
      "id": "Destination"
    },
    "ContainerAccess": {
      "properties": {
        "containerId": {
          "description": "GTM Container ID. @mutable tagmanager.accounts.permissions.create @mutable tagmanager.accounts.permissions.update",
          "type": "string"
        },
        "permission": {
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            "",
            ""
          ],
          "enum": [
            "containerPermissionUnspecified",
            "noAccess",
            "read",
            "edit",
            "approve",
            "publish"
          ],
          "type": "string",
          "description": "List of Container permissions. @mutable tagmanager.accounts.permissions.create @mutable tagmanager.accounts.permissions.update"
        }
      },
      "description": "Defines the Google Tag Manager Container access permissions.",
      "type": "object",
      "id": "ContainerAccess"
    },
    "RevertClientResponse": {
      "properties": {
        "client": {
          "description": "Client as it appears in the latest container version since the last workspace synchronization operation. If no client is present, that means the client was deleted in the latest container version.",
          "$ref": "Client"
        }
      },
      "description": "The result of reverting a client in a workspace.",
      "id": "RevertClientResponse",
      "type": "object"
    },
    "Folder": {
      "id": "Folder",
      "description": "Represents a Google Tag Manager Folder.",
      "type": "object",
      "properties": {
        "accountId": {
          "description": "GTM Account ID.",
          "type": "string"
        },
        "tagManagerUrl": {
          "description": "Auto generated link to the tag manager UI",
          "type": "string"
        },
        "workspaceId": {
          "description": "GTM Workspace ID.",
          "type": "string"
        },
        "fingerprint": {
          "type": "string",
          "description": "The fingerprint of the GTM Folder as computed at storage time. This value is recomputed whenever the folder is modified."
        },
        "notes": {
          "type": "string",
          "description": "User notes on how to apply this folder in the container. @mutable tagmanager.accounts.containers.workspaces.folders.create @mutable tagmanager.accounts.containers.workspaces.folders.update"
        },
        "path": {
          "description": "GTM Folder's API relative path.",
          "type": "string"
        },
        "containerId": {
          "description": "GTM Container ID.",
          "type": "string"
        },
        "name": {
          "description": "Folder display name. @mutable tagmanager.accounts.containers.workspaces.folders.create @mutable tagmanager.accounts.containers.workspaces.folders.update",
          "type": "string",
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.workspaces.folders.create",
              "tagmanager.accounts.containers.workspaces.folders.update"
            ]
          }
        },
        "folderId": {
          "type": "string",
          "description": "The Folder ID uniquely identifies the GTM Folder."
        }
      }
    },
    "GalleryReference": {
      "type": "object",
      "description": "Represents the link between a custom template and an entry on the Community Template Gallery site.",
      "id": "GalleryReference",
      "properties": {
        "isModified": {
          "description": "If a user has manually edited the community gallery template.",
          "type": "boolean"
        },
        "owner": {
          "type": "string",
          "description": "The name of the owner for the community gallery template."
        },
        "signature": {
          "type": "string",
          "description": "The signature of the community gallery template as computed at import time. This value is recomputed whenever the template is updated from the gallery."
        },
        "version": {
          "description": "The version of the community gallery template.",
          "type": "string"
        },
        "host": {
          "description": "The name of the host for the community gallery template.",
          "type": "string"
        },
        "repository": {
          "type": "string",
          "description": "The name of the repository for the community gallery template."
        }
      }
    },
    "ListContainerVersionsResponse": {
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Continuation token for fetching the next page of results."
        },
        "containerVersionHeader": {
          "items": {
            "$ref": "ContainerVersionHeader"
          },
          "type": "array",
          "description": "All container version headers of a GTM Container."
        }
      },
      "description": "List container versions response.",
      "type": "object",
      "id": "ListContainerVersionsResponse"
    },
    "Environment": {
      "id": "Environment",
      "description": "Represents a Google Tag Manager Environment. Note that a user can create, delete and update environments of type USER, but can only update the enable_debug and url fields of environments of other types.",
      "type": "object",
      "properties": {
        "containerId": {
          "description": "GTM Container ID.",
          "type": "string"
        },
        "workspaceId": {
          "description": "Represents a link to a quick preview of a workspace.",
          "type": "string"
        },
        "description": {
          "type": "string",
          "description": "The environment description. Can be set or changed only on USER type environments. @mutable tagmanager.accounts.containers.environments.create @mutable tagmanager.accounts.containers.environments.update"
        },
        "authorizationCode": {
          "type": "string",
          "description": "The environment authorization code."
        },
        "tagManagerUrl": {
          "type": "string",
          "description": "Auto generated link to the tag manager UI"
        },
        "name": {
          "type": "string",
          "description": "The environment display name. Can be set or changed only on USER type environments. @mutable tagmanager.accounts.containers.environments.create @mutable tagmanager.accounts.containers.environments.update",
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.environments.create",
              "tagmanager.accounts.containers.environments.update"
            ]
          }
        },
        "path": {
          "description": "GTM Environment's API relative path.",
          "type": "string"
        },
        "environmentId": {
          "type": "string",
          "description": "GTM Environment ID uniquely identifies the GTM Environment."
        },
        "authorizationTimestamp": {
          "type": "string",
          "description": "The last update time-stamp for the authorization code.",
          "format": "google-datetime"
        },
        "fingerprint": {
          "type": "string",
          "description": "The fingerprint of the GTM environment as computed at storage time. This value is recomputed whenever the environment is modified."
        },
        "url": {
          "description": "Default preview page url for the environment. @mutable tagmanager.accounts.containers.environments.create @mutable tagmanager.accounts.containers.environments.update",
          "type": "string"
        },
        "type": {
          "type": "string",
          "enumDescriptions": [
            "Points to a user defined environment.",
            "Points to the current live container version.",
            "Points to the latest container version.",
            "Automatically managed environment that points to a workspace preview or version created by a workspace."
          ],
          "enum": [
            "user",
            "live",
            "latest",
            "workspace"
          ],
          "description": "The type of this environment."
        },
        "enableDebug": {
          "description": "Whether or not to enable debug by default for the environment. @mutable tagmanager.accounts.containers.environments.create @mutable tagmanager.accounts.containers.environments.update",
          "type": "boolean"
        },
        "containerVersionId": {
          "type": "string",
          "description": "Represents a link to a container version."
        },
        "accountId": {
          "description": "GTM Account ID.",
          "type": "string"
        }
      }
    },
    "ListTemplatesResponse": {
      "type": "object",
      "id": "ListTemplatesResponse",
      "properties": {
        "template": {
          "items": {
            "$ref": "CustomTemplate"
          },
          "description": "All GTM Custom Templates of a GTM Container.",
          "type": "array"
        },
        "nextPageToken": {
          "description": "Continuation token for fetching the next page of results.",
          "type": "string"
        }
      }
    },
    "RevertZoneResponse": {
      "description": "The result of reverting a zone in a workspace.",
      "properties": {
        "zone": {
          "$ref": "Zone",
          "description": "Zone as it appears in the latest container version since the last workspace synchronization operation. If no zone is present, that means the zone was deleted in the latest container version."
        }
      },
      "id": "RevertZoneResponse",
      "type": "object"
    }
  },
  "revision": "20230222",
  "documentationLink": "https://developers.google.com/tag-manager",
  "mtlsRootUrl": "https://tagmanager.mtls.googleapis.com/",
  "parameters": {
    "prettyPrint": {
      "location": "query",
      "default": "true",
      "type": "boolean",
      "description": "Returns response with indentations and line breaks."
    },
    "uploadType": {
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string"
    },
    "alt": {
      "type": "string",
      "description": "Data format for response.",
      "default": "json",
      "location": "query",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "enum": [
        "json",
        "media",
        "proto"
      ]
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "upload_protocol": {
      "type": "string",
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
    },
    "access_token": {
      "description": "OAuth access token.",
      "type": "string",
      "location": "query"
    },
    "key": {
      "type": "string",
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "type": "string",
      "location": "query"
    },
    "$.xgafv": {
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "location": "query",
      "type": "string"
    },
    "callback": {
      "location": "query",
      "type": "string",
      "description": "JSONP"
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    }
  },
  "id": "tagmanager:v2",
  "rootUrl": "https://tagmanager.googleapis.com/",
  "canonicalName": "Tag Manager",
  "title": "Tag Manager API",
  "resources": {
    "accounts": {
      "methods": {
        "get": {
          "parameters": {
            "path": {
              "required": true,
              "location": "path",
              "pattern": "^accounts/[^/]+$",
              "type": "string",
              "description": "GTM Account's API relative path. Example: accounts/{account_id}"
            }
          },
          "description": "Gets a GTM Account.",
          "id": "tagmanager.accounts.get",
          "httpMethod": "GET",
          "flatPath": "tagmanager/v2/accounts/{accountsId}",
          "scopes": [
            "https://www.googleapis.com/auth/tagmanager.edit.containers",
            "https://www.googleapis.com/auth/tagmanager.manage.accounts",
            "https://www.googleapis.com/auth/tagmanager.readonly"
          ],
          "parameterOrder": [
            "path"
          ],
          "response": {
            "$ref": "Account"
          },
          "path": "tagmanager/v2/{+path}"
        },
        "update": {
          "parameters": {
            "path": {
              "description": "GTM Account's API relative path. Example: accounts/{account_id}",
              "type": "string",
              "location": "path",
              "required": true,
              "pattern": "^accounts/[^/]+$"
            },
            "fingerprint": {
              "location": "query",
              "type": "string",
              "description": "When provided, this fingerprint must match the fingerprint of the account in storage."
            }
          },
          "id": "tagmanager.accounts.update",
          "request": {
            "$ref": "Account"
          },
          "httpMethod": "PUT",
          "response": {
            "$ref": "Account"
          },
          "flatPath": "tagmanager/v2/accounts/{accountsId}",
          "description": "Updates a GTM Account.",
          "parameterOrder": [
            "path"
          ],
          "path": "tagmanager/v2/{+path}",
          "scopes": [
            "https://www.googleapis.com/auth/tagmanager.manage.accounts"
          ]
        },
        "list": {
          "parameterOrder": [],
          "flatPath": "tagmanager/v2/accounts",
          "description": "Lists all GTM Accounts that a user has access to.",
          "parameters": {
            "includeGoogleTags": {
              "description": "Also retrieve accounts associated with Google Tag when true.",
              "type": "boolean",
              "location": "query"
            },
            "pageToken": {
              "description": "Continuation token for fetching the next page of results.",
              "location": "query",
              "type": "string"
            }
          },
          "httpMethod": "GET",
          "path": "tagmanager/v2/accounts",
          "response": {
            "$ref": "ListAccountsResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/tagmanager.edit.containers",
            "https://www.googleapis.com/auth/tagmanager.manage.accounts",
            "https://www.googleapis.com/auth/tagmanager.readonly"
          ],
          "id": "tagmanager.accounts.list"
        }
      },
      "resources": {
        "containers": {
          "methods": {
            "move_tag_id": {
              "description": "Move Tag ID out of a Container.",
              "scopes": [
                "https://www.googleapis.com/auth/tagmanager.edit.containers"
              ],
              "response": {
                "$ref": "Container"
              },
              "path": "tagmanager/v2/{+path}:move_tag_id",
              "parameterOrder": [
                "path"
              ],
              "parameters": {
                "tagId": {
                  "location": "query",
                  "type": "string",
                  "description": "Tag ID to be removed from the current Container."
                },
                "allowUserPermissionFeatureUpdate": {
                  "description": "Must be set to true to allow features.user_permissions to change from false to true. If this operation causes an update but this bit is false, the operation will fail.",
                  "type": "boolean",
                  "location": "query"
                },
                "copyTermsOfService": {
                  "location": "query",
                  "description": "Must be set to true to accept all terms of service agreements copied from the current tag to the newly created tag. If this bit is false, the operation will fail.",
                  "type": "boolean"
                },
                "path": {
                  "description": "GTM Container's API relative path. Example: accounts/{account_id}/containers/{container_id}",
                  "required": true,
                  "location": "path",
                  "type": "string",
                  "pattern": "^accounts/[^/]+/containers/[^/]+$"
                },
                "copySettings": {
                  "type": "boolean",
                  "location": "query",
                  "description": "Whether or not to copy tag settings from this tag to the new tag."
                },
                "tagName": {
                  "location": "query",
                  "description": "The name for the newly created tag.",
                  "type": "string"
                },
                "copyUsers": {
                  "type": "boolean",
                  "location": "query",
                  "description": "Whether or not to copy users from this tag to the new tag."
                }
              },
              "id": "tagmanager.accounts.containers.move_tag_id",
              "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}:move_tag_id",
              "httpMethod": "POST"
            },
            "update": {
              "httpMethod": "PUT",
              "path": "tagmanager/v2/{+path}",
              "response": {
                "$ref": "Container"
              },
              "parameters": {
                "path": {
                  "location": "path",
                  "type": "string",
                  "description": "GTM Container's API relative path. Example: accounts/{account_id}/containers/{container_id}",
                  "pattern": "^accounts/[^/]+/containers/[^/]+$",
                  "required": true
                },
                "fingerprint": {
                  "description": "When provided, this fingerprint must match the fingerprint of the container in storage.",
                  "location": "query",
                  "type": "string"
                }
              },
              "request": {
                "$ref": "Container"
              },
              "scopes": [
                "https://www.googleapis.com/auth/tagmanager.edit.containers"
              ],
              "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}",
              "id": "tagmanager.accounts.containers.update",
              "description": "Updates a Container.",
              "parameterOrder": [
                "path"
              ]
            },
            "list": {
              "id": "tagmanager.accounts.containers.list",
              "parameterOrder": [
                "parent"
              ],
              "parameters": {
                "pageToken": {
                  "location": "query",
                  "description": "Continuation token for fetching the next page of results.",
                  "type": "string"
                },
                "parent": {
                  "type": "string",
                  "location": "path",
                  "required": true,
                  "pattern": "^accounts/[^/]+$",
                  "description": "GTM Account's API relative path. Example: accounts/{account_id}."
                }
              },
              "flatPath": "tagmanager/v2/accounts/{accountsId}/containers",
              "description": "Lists all Containers that belongs to a GTM Account.",
              "response": {
                "$ref": "ListContainersResponse"
              },
              "path": "tagmanager/v2/{+parent}/containers",
              "scopes": [
                "https://www.googleapis.com/auth/tagmanager.edit.containers",
                "https://www.googleapis.com/auth/tagmanager.readonly"
              ],
              "httpMethod": "GET"
            },
            "lookup": {
              "parameterOrder": [],
              "path": "tagmanager/v2/accounts/containers:lookup",
              "scopes": [
                "https://www.googleapis.com/auth/tagmanager.edit.containers",
                "https://www.googleapis.com/auth/tagmanager.readonly"
              ],
              "httpMethod": "GET",
              "flatPath": "tagmanager/v2/accounts/containers:lookup",
              "description": "Looks up a Container by destination ID.",
              "parameters": {
                "destinationId": {
                  "location": "query",
                  "description": "Destination ID linked to a GTM Container, e.g. AW-123456789. Example: accounts/containers:lookup?destination_id={destination_id}.",
                  "type": "string"
                }
              },
              "id": "tagmanager.accounts.containers.lookup",
              "response": {
                "$ref": "Container"
              }
            },
            "combine": {
              "parameters": {
                "allowUserPermissionFeatureUpdate": {
                  "description": "Must be set to true to allow features.user_permissions to change from false to true. If this operation causes an update but this bit is false, the operation will fail.",
                  "location": "query",
                  "type": "boolean"
                },
                "settingSource": {
                  "enumDescriptions": [
                    "",
                    "Keep the current container config setting after combine",
                    "Use config setting from the other tag after combine"
                  ],
                  "enum": [
                    "settingSourceUnspecified",
                    "current",
                    "other"
                  ],
                  "type": "string",
                  "location": "query",
                  "description": "Specify the source of config setting after combine"
                },
                "containerId": {
                  "location": "query",
                  "type": "string",
                  "description": "ID of container that will be merged into the current container."
                },
                "path": {
                  "description": "GTM Container's API relative path. Example: accounts/{account_id}/containers/{container_id}",
                  "type": "string",
                  "required": true,
                  "location": "path",
                  "pattern": "^accounts/[^/]+/containers/[^/]+$"
                }
              },
              "id": "tagmanager.accounts.containers.combine",
              "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}:combine",
              "path": "tagmanager/v2/{+path}:combine",
              "scopes": [
                "https://www.googleapis.com/auth/tagmanager.edit.containers"
              ],
              "httpMethod": "POST",
              "description": "Combines Containers.",
              "response": {
                "$ref": "Container"
              },
              "parameterOrder": [
                "path"
              ]
            },
            "create": {
              "flatPath": "tagmanager/v2/accounts/{accountsId}/containers",
              "id": "tagmanager.accounts.containers.create",
              "request": {
                "$ref": "Container"
              },
              "description": "Creates a Container.",
              "httpMethod": "POST",
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "Container"
              },
              "scopes": [
                "https://www.googleapis.com/auth/tagmanager.edit.containers"
              ],
              "path": "tagmanager/v2/{+parent}/containers",
              "parameters": {
                "parent": {
                  "required": true,
                  "pattern": "^accounts/[^/]+$",
                  "type": "string",
                  "location": "path",
                  "description": "GTM Account's API relative path. Example: accounts/{account_id}."
                }
              }
            },
            "delete": {
              "path": "tagmanager/v2/{+path}",
              "scopes": [
                "https://www.googleapis.com/auth/tagmanager.delete.containers"
              ],
              "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}",
              "httpMethod": "DELETE",
              "parameterOrder": [
                "path"
              ],
              "id": "tagmanager.accounts.containers.delete",
              "parameters": {
                "path": {
                  "pattern": "^accounts/[^/]+/containers/[^/]+$",
                  "type": "string",
                  "description": "GTM Container's API relative path. Example: accounts/{account_id}/containers/{container_id}",
                  "location": "path",
                  "required": true
                }
              },
              "description": "Deletes a Container."
            },
            "snippet": {
              "description": "Gets the tagging snippet for a Container.",
              "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}:snippet",
              "path": "tagmanager/v2/{+path}:snippet",
              "scopes": [
                "https://www.googleapis.com/auth/tagmanager.edit.containers",
                "https://www.googleapis.com/auth/tagmanager.readonly"
              ],
              "httpMethod": "GET",
              "id": "tagmanager.accounts.containers.snippet",
              "parameterOrder": [
                "path"
              ],
              "parameters": {
                "path": {
                  "description": "Container snippet's API relative path. Example: accounts/{account_id}/containers/{container_id}:snippet",
                  "pattern": "^accounts/[^/]+/containers/[^/]+$",
                  "required": true,
                  "type": "string",
                  "location": "path"
                }
              },
              "response": {
                "$ref": "GetContainerSnippetResponse"
              }
            },
            "get": {
              "parameterOrder": [
                "path"
              ],
              "description": "Gets a Container.",
              "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}",
              "scopes": [
                "https://www.googleapis.com/auth/tagmanager.edit.containers",
                "https://www.googleapis.com/auth/tagmanager.readonly"
              ],
              "path": "tagmanager/v2/{+path}",
              "response": {
                "$ref": "Container"
              },
              "parameters": {
                "path": {
                  "description": "GTM Container's API relative path. Example: accounts/{account_id}/containers/{container_id}",
                  "type": "string",
                  "pattern": "^accounts/[^/]+/containers/[^/]+$",
                  "required": true,
                  "location": "path"
                }
              },
              "httpMethod": "GET",
              "id": "tagmanager.accounts.containers.get"
            }
          },
          "resources": {
            "destinations": {
              "methods": {
                "get": {
                  "httpMethod": "GET",
                  "id": "tagmanager.accounts.containers.destinations.get",
                  "parameterOrder": [
                    "path"
                  ],
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/destinations/{destinationsId}",
                  "description": "Gets a Destination.",
                  "parameters": {
                    "path": {
                      "description": "Google Tag Destination's API relative path. Example: accounts/{account_id}/containers/{container_id}/destinations/{destination_link_id}",
                      "required": true,
                      "location": "path",
                      "pattern": "^accounts/[^/]+/containers/[^/]+/destinations/[^/]+$",
                      "type": "string"
                    }
                  },
                  "response": {
                    "$ref": "Destination"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers",
                    "https://www.googleapis.com/auth/tagmanager.readonly"
                  ],
                  "path": "tagmanager/v2/{+path}"
                },
                "link": {
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers"
                  ],
                  "id": "tagmanager.accounts.containers.destinations.link",
                  "description": "Adds a Destination to this Container and removes it from the Container to which it is currently linked.",
                  "parameters": {
                    "allowUserPermissionFeatureUpdate": {
                      "type": "boolean",
                      "location": "query",
                      "description": "Must be set to true to allow features.user_permissions to change from false to true. If this operation causes an update but this bit is false, the operation will fail."
                    },
                    "parent": {
                      "pattern": "^accounts/[^/]+/containers/[^/]+$",
                      "required": true,
                      "location": "path",
                      "description": "GTM parent Container's API relative path. Example: accounts/{account_id}/containers/{container_id}",
                      "type": "string"
                    },
                    "destinationId": {
                      "location": "query",
                      "description": "Destination ID to be linked to the current container.",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/destinations:link",
                  "httpMethod": "POST",
                  "path": "tagmanager/v2/{+parent}/destinations:link",
                  "response": {
                    "$ref": "Destination"
                  }
                },
                "list": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "tagmanager/v2/{+parent}/destinations",
                  "httpMethod": "GET",
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/destinations",
                  "id": "tagmanager.accounts.containers.destinations.list",
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers",
                    "https://www.googleapis.com/auth/tagmanager.readonly"
                  ],
                  "parameters": {
                    "parent": {
                      "pattern": "^accounts/[^/]+/containers/[^/]+$",
                      "location": "path",
                      "required": true,
                      "description": "GTM parent Container's API relative path. Example: accounts/{account_id}/containers/{container_id}",
                      "type": "string"
                    }
                  },
                  "description": "Lists all Destinations linked to a GTM Container.",
                  "response": {
                    "$ref": "ListDestinationsResponse"
                  }
                }
              }
            },
            "environments": {
              "methods": {
                "create": {
                  "id": "tagmanager.accounts.containers.environments.create",
                  "request": {
                    "$ref": "Environment"
                  },
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "pattern": "^accounts/[^/]+/containers/[^/]+$",
                      "location": "path",
                      "required": true,
                      "description": "GTM Container's API relative path. Example: accounts/{account_id}/containers/{container_id}"
                    }
                  },
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/environments",
                  "description": "Creates a GTM Environment.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "tagmanager/v2/{+parent}/environments",
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "Environment"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers"
                  ]
                },
                "reauthorize": {
                  "parameterOrder": [
                    "path"
                  ],
                  "path": "tagmanager/v2/{+path}:reauthorize",
                  "response": {
                    "$ref": "Environment"
                  },
                  "request": {
                    "$ref": "Environment"
                  },
                  "id": "tagmanager.accounts.containers.environments.reauthorize",
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/environments/{environmentsId}:reauthorize",
                  "httpMethod": "POST",
                  "description": "Re-generates the authorization code for a GTM Environment.",
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.publish"
                  ],
                  "parameters": {
                    "path": {
                      "pattern": "^accounts/[^/]+/containers/[^/]+/environments/[^/]+$",
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "GTM Environment's API relative path. Example: accounts/{account_id}/containers/{container_id}/environments/{environment_id}"
                    }
                  }
                },
                "update": {
                  "httpMethod": "PUT",
                  "path": "tagmanager/v2/{+path}",
                  "request": {
                    "$ref": "Environment"
                  },
                  "parameterOrder": [
                    "path"
                  ],
                  "id": "tagmanager.accounts.containers.environments.update",
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers"
                  ],
                  "description": "Updates a GTM Environment.",
                  "parameters": {
                    "path": {
                      "pattern": "^accounts/[^/]+/containers/[^/]+/environments/[^/]+$",
                      "required": true,
                      "description": "GTM Environment's API relative path. Example: accounts/{account_id}/containers/{container_id}/environments/{environment_id}",
                      "type": "string",
                      "location": "path"
                    },
                    "fingerprint": {
                      "location": "query",
                      "type": "string",
                      "description": "When provided, this fingerprint must match the fingerprint of the environment in storage."
                    }
                  },
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/environments/{environmentsId}",
                  "response": {
                    "$ref": "Environment"
                  }
                },
                "get": {
                  "parameters": {
                    "path": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "GTM Environment's API relative path. Example: accounts/{account_id}/containers/{container_id}/environments/{environment_id}",
                      "pattern": "^accounts/[^/]+/containers/[^/]+/environments/[^/]+$"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers",
                    "https://www.googleapis.com/auth/tagmanager.readonly"
                  ],
                  "id": "tagmanager.accounts.containers.environments.get",
                  "path": "tagmanager/v2/{+path}",
                  "response": {
                    "$ref": "Environment"
                  },
                  "parameterOrder": [
                    "path"
                  ],
                  "httpMethod": "GET",
                  "description": "Gets a GTM Environment.",
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/environments/{environmentsId}"
                },
                "delete": {
                  "path": "tagmanager/v2/{+path}",
                  "description": "Deletes a GTM Environment.",
                  "parameters": {
                    "path": {
                      "description": "GTM Environment's API relative path. Example: accounts/{account_id}/containers/{container_id}/environments/{environment_id}",
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "pattern": "^accounts/[^/]+/containers/[^/]+/environments/[^/]+$"
                    }
                  },
                  "parameterOrder": [
                    "path"
                  ],
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/environments/{environmentsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers"
                  ],
                  "id": "tagmanager.accounts.containers.environments.delete",
                  "httpMethod": "DELETE"
                },
                "list": {
                  "description": "Lists all GTM Environments of a GTM Container.",
                  "path": "tagmanager/v2/{+parent}/environments",
                  "id": "tagmanager.accounts.containers.environments.list",
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "type": "string",
                      "pattern": "^accounts/[^/]+/containers/[^/]+$",
                      "description": "GTM Container's API relative path. Example: accounts/{account_id}/containers/{container_id}",
                      "required": true
                    },
                    "pageToken": {
                      "type": "string",
                      "description": "Continuation token for fetching the next page of results.",
                      "location": "query"
                    }
                  },
                  "httpMethod": "GET",
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/environments",
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers",
                    "https://www.googleapis.com/auth/tagmanager.readonly"
                  ],
                  "response": {
                    "$ref": "ListEnvironmentsResponse"
                  }
                }
              }
            },
            "versions": {
              "methods": {
                "publish": {
                  "parameters": {
                    "fingerprint": {
                      "description": "When provided, this fingerprint must match the fingerprint of the container version in storage.",
                      "type": "string",
                      "location": "query"
                    },
                    "path": {
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "description": "GTM ContainerVersion's API relative path. Example: accounts/{account_id}/containers/{container_id}/versions/{version_id}",
                      "pattern": "^accounts/[^/]+/containers/[^/]+/versions/[^/]+$"
                    }
                  },
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "PublishContainerVersionResponse"
                  },
                  "description": "Publishes a Container Version.",
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/versions/{versionsId}:publish",
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.publish"
                  ],
                  "id": "tagmanager.accounts.containers.versions.publish",
                  "path": "tagmanager/v2/{+path}:publish",
                  "parameterOrder": [
                    "path"
                  ]
                },
                "delete": {
                  "parameterOrder": [
                    "path"
                  ],
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/versions/{versionsId}",
                  "path": "tagmanager/v2/{+path}",
                  "id": "tagmanager.accounts.containers.versions.delete",
                  "httpMethod": "DELETE",
                  "description": "Deletes a Container Version.",
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containerversions"
                  ],
                  "parameters": {
                    "path": {
                      "location": "path",
                      "pattern": "^accounts/[^/]+/containers/[^/]+/versions/[^/]+$",
                      "description": "GTM ContainerVersion's API relative path. Example: accounts/{account_id}/containers/{container_id}/versions/{version_id}",
                      "type": "string",
                      "required": true
                    }
                  }
                },
                "get": {
                  "id": "tagmanager.accounts.containers.versions.get",
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/versions/{versionsId}",
                  "parameters": {
                    "path": {
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "pattern": "^accounts/[^/]+/containers/[^/]+/versions/[^/]+$",
                      "description": "GTM ContainerVersion's API relative path. Example: accounts/{account_id}/containers/{container_id}/versions/{version_id}"
                    },
                    "containerVersionId": {
                      "type": "string",
                      "location": "query",
                      "description": "The GTM ContainerVersion ID. Specify published to retrieve the currently published version."
                    }
                  },
                  "httpMethod": "GET",
                  "path": "tagmanager/v2/{+path}",
                  "response": {
                    "$ref": "ContainerVersion"
                  },
                  "description": "Gets a Container Version.",
                  "parameterOrder": [
                    "path"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers",
                    "https://www.googleapis.com/auth/tagmanager.edit.containerversions",
                    "https://www.googleapis.com/auth/tagmanager.readonly"
                  ]
                },
                "set_latest": {
                  "parameters": {
                    "path": {
                      "location": "path",
                      "pattern": "^accounts/[^/]+/containers/[^/]+/versions/[^/]+$",
                      "type": "string",
                      "required": true,
                      "description": "GTM ContainerVersion's API relative path. Example: accounts/{account_id}/containers/{container_id}/versions/{version_id}"
                    }
                  },
                  "httpMethod": "POST",
                  "id": "tagmanager.accounts.containers.versions.set_latest",
                  "path": "tagmanager/v2/{+path}:set_latest",
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers"
                  ],
                  "parameterOrder": [
                    "path"
                  ],
                  "response": {
                    "$ref": "ContainerVersion"
                  },
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/versions/{versionsId}:set_latest",
                  "description": "Sets the latest version used for synchronization of workspaces when detecting conflicts and errors."
                },
                "undelete": {
                  "response": {
                    "$ref": "ContainerVersion"
                  },
                  "httpMethod": "POST",
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/versions/{versionsId}:undelete",
                  "description": "Undeletes a Container Version.",
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containerversions"
                  ],
                  "path": "tagmanager/v2/{+path}:undelete",
                  "parameters": {
                    "path": {
                      "description": "GTM ContainerVersion's API relative path. Example: accounts/{account_id}/containers/{container_id}/versions/{version_id}",
                      "location": "path",
                      "pattern": "^accounts/[^/]+/containers/[^/]+/versions/[^/]+$",
                      "type": "string",
                      "required": true
                    }
                  },
                  "parameterOrder": [
                    "path"
                  ],
                  "id": "tagmanager.accounts.containers.versions.undelete"
                },
                "live": {
                  "httpMethod": "GET",
                  "id": "tagmanager.accounts.containers.versions.live",
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/versions:live",
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "pattern": "^accounts/[^/]+/containers/[^/]+$",
                      "description": "GTM Container's API relative path. Example: accounts/{account_id}/containers/{container_id}"
                    }
                  },
                  "path": "tagmanager/v2/{+parent}/versions:live",
                  "description": "Gets the live (i.e. published) container version",
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers",
                    "https://www.googleapis.com/auth/tagmanager.readonly"
                  ],
                  "response": {
                    "$ref": "ContainerVersion"
                  },
                  "parameterOrder": [
                    "parent"
                  ]
                },
                "update": {
                  "request": {
                    "$ref": "ContainerVersion"
                  },
                  "parameters": {
                    "fingerprint": {
                      "description": "When provided, this fingerprint must match the fingerprint of the container version in storage.",
                      "type": "string",
                      "location": "query"
                    },
                    "path": {
                      "pattern": "^accounts/[^/]+/containers/[^/]+/versions/[^/]+$",
                      "description": "GTM ContainerVersion's API relative path. Example: accounts/{account_id}/containers/{container_id}/versions/{version_id}",
                      "type": "string",
                      "location": "path",
                      "required": true
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containerversions"
                  ],
                  "response": {
                    "$ref": "ContainerVersion"
                  },
                  "parameterOrder": [
                    "path"
                  ],
                  "path": "tagmanager/v2/{+path}",
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/versions/{versionsId}",
                  "httpMethod": "PUT",
                  "description": "Updates a Container Version.",
                  "id": "tagmanager.accounts.containers.versions.update"
                }
              }
            },
            "version_headers": {
              "methods": {
                "latest": {
                  "path": "tagmanager/v2/{+parent}/version_headers:latest",
                  "id": "tagmanager.accounts.containers.version_headers.latest",
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ContainerVersionHeader"
                  },
                  "parameters": {
                    "parent": {
                      "pattern": "^accounts/[^/]+/containers/[^/]+$",
                      "description": "GTM Container's API relative path. Example: accounts/{account_id}/containers/{container_id}",
                      "type": "string",
                      "location": "path",
                      "required": true
                    }
                  },
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/version_headers:latest",
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers",
                    "https://www.googleapis.com/auth/tagmanager.readonly"
                  ],
                  "description": "Gets the latest container version header"
                },
                "list": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "tagmanager.accounts.containers.version_headers.list",
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers",
                    "https://www.googleapis.com/auth/tagmanager.edit.containerversions",
                    "https://www.googleapis.com/auth/tagmanager.readonly"
                  ],
                  "response": {
                    "$ref": "ListContainerVersionsResponse"
                  },
                  "description": "Lists all Container Versions of a GTM Container.",
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/version_headers",
                  "path": "tagmanager/v2/{+parent}/version_headers",
                  "parameters": {
                    "includeDeleted": {
                      "location": "query",
                      "description": "Also retrieve deleted (archived) versions when true.",
                      "type": "boolean"
                    },
                    "parent": {
                      "location": "path",
                      "required": true,
                      "description": "GTM Container's API relative path. Example: accounts/{account_id}/containers/{container_id}",
                      "pattern": "^accounts/[^/]+/containers/[^/]+$",
                      "type": "string"
                    },
                    "pageToken": {
                      "description": "Continuation token for fetching the next page of results.",
                      "location": "query",
                      "type": "string"
                    }
                  }
                }
              }
            },
            "workspaces": {
              "methods": {
                "update": {
                  "parameterOrder": [
                    "path"
                  ],
                  "parameters": {
                    "path": {
                      "location": "path",
                      "required": true,
                      "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                      "type": "string",
                      "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}"
                    },
                    "fingerprint": {
                      "type": "string",
                      "description": "When provided, this fingerprint must match the fingerprint of the workspace in storage.",
                      "location": "query"
                    }
                  },
                  "path": "tagmanager/v2/{+path}",
                  "request": {
                    "$ref": "Workspace"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers"
                  ],
                  "description": "Updates a Workspace.",
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}",
                  "id": "tagmanager.accounts.containers.workspaces.update",
                  "httpMethod": "PUT",
                  "response": {
                    "$ref": "Workspace"
                  }
                },
                "list": {
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces",
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers",
                    "https://www.googleapis.com/auth/tagmanager.readonly"
                  ],
                  "response": {
                    "$ref": "ListWorkspacesResponse"
                  },
                  "description": "Lists all Workspaces that belong to a GTM Container.",
                  "id": "tagmanager.accounts.containers.workspaces.list",
                  "path": "tagmanager/v2/{+parent}/workspaces",
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "GTM parent Container's API relative path. Example: accounts/{account_id}/containers/{container_id}",
                      "type": "string",
                      "pattern": "^accounts/[^/]+/containers/[^/]+$",
                      "required": true,
                      "location": "path"
                    },
                    "pageToken": {
                      "type": "string",
                      "description": "Continuation token for fetching the next page of results.",
                      "location": "query"
                    }
                  }
                },
                "delete": {
                  "description": "Deletes a Workspace.",
                  "id": "tagmanager.accounts.containers.workspaces.delete",
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.delete.containers"
                  ],
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}",
                  "parameterOrder": [
                    "path"
                  ],
                  "httpMethod": "DELETE",
                  "path": "tagmanager/v2/{+path}",
                  "parameters": {
                    "path": {
                      "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$"
                    }
                  }
                },
                "get": {
                  "parameters": {
                    "path": {
                      "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}"
                    }
                  },
                  "description": "Gets a Workspace.",
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}",
                  "parameterOrder": [
                    "path"
                  ],
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "Workspace"
                  },
                  "path": "tagmanager/v2/{+path}",
                  "id": "tagmanager.accounts.containers.workspaces.get",
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers",
                    "https://www.googleapis.com/auth/tagmanager.readonly"
                  ]
                },
                "create": {
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces",
                  "description": "Creates a Workspace.",
                  "request": {
                    "$ref": "Workspace"
                  },
                  "id": "tagmanager.accounts.containers.workspaces.create",
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "POST",
                  "path": "tagmanager/v2/{+parent}/workspaces",
                  "parameters": {
                    "parent": {
                      "description": "GTM parent Container's API relative path. Example: accounts/{account_id}/containers/{container_id}",
                      "required": true,
                      "pattern": "^accounts/[^/]+/containers/[^/]+$",
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "response": {
                    "$ref": "Workspace"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers"
                  ]
                },
                "resolve_conflict": {
                  "path": "tagmanager/v2/{+path}:resolve_conflict",
                  "request": {
                    "$ref": "Entity"
                  },
                  "httpMethod": "POST",
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}:resolve_conflict",
                  "parameters": {
                    "fingerprint": {
                      "type": "string",
                      "location": "query",
                      "description": "When provided, this fingerprint must match the fingerprint of the entity_in_workspace in the merge conflict."
                    },
                    "path": {
                      "required": true,
                      "location": "path",
                      "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                      "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "path"
                  ],
                  "id": "tagmanager.accounts.containers.workspaces.resolve_conflict",
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers"
                  ],
                  "description": "Resolves a merge conflict for a workspace entity by updating it to the resolved entity passed in the request."
                },
                "sync": {
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}:sync",
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers"
                  ],
                  "id": "tagmanager.accounts.containers.workspaces.sync",
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "path"
                  ],
                  "description": "Syncs a workspace to the latest container version by updating all unmodified workspace entities and displaying conflicts for modified entities.",
                  "response": {
                    "$ref": "SyncWorkspaceResponse"
                  },
                  "path": "tagmanager/v2/{+path}:sync",
                  "parameters": {
                    "path": {
                      "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                      "required": true,
                      "type": "string",
                      "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                      "location": "path"
                    }
                  }
                },
                "create_version": {
                  "request": {
                    "$ref": "CreateContainerVersionRequestVersionOptions"
                  },
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}:create_version",
                  "response": {
                    "$ref": "CreateContainerVersionResponse"
                  },
                  "description": "Creates a Container Version from the entities present in the workspace, deletes the workspace, and sets the base container version to the newly created version.",
                  "path": "tagmanager/v2/{+path}:create_version",
                  "parameterOrder": [
                    "path"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containerversions"
                  ],
                  "parameters": {
                    "path": {
                      "location": "path",
                      "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                      "required": true,
                      "type": "string",
                      "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$"
                    }
                  },
                  "httpMethod": "POST",
                  "id": "tagmanager.accounts.containers.workspaces.create_version"
                },
                "quick_preview": {
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}:quick_preview",
                  "httpMethod": "POST",
                  "description": "Quick previews a workspace by creating a fake container version from all entities in the provided workspace.",
                  "response": {
                    "$ref": "QuickPreviewResponse"
                  },
                  "parameters": {
                    "path": {
                      "required": true,
                      "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containerversions"
                  ],
                  "parameterOrder": [
                    "path"
                  ],
                  "id": "tagmanager.accounts.containers.workspaces.quick_preview",
                  "path": "tagmanager/v2/{+path}:quick_preview"
                },
                "getStatus": {
                  "id": "tagmanager.accounts.containers.workspaces.getStatus",
                  "path": "tagmanager/v2/{+path}/status",
                  "parameterOrder": [
                    "path"
                  ],
                  "parameters": {
                    "path": {
                      "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                      "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                      "type": "string",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "description": "Finds conflicting and modified entities in the workspace.",
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/status",
                  "response": {
                    "$ref": "GetWorkspaceStatusResponse"
                  },
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers",
                    "https://www.googleapis.com/auth/tagmanager.readonly"
                  ]
                }
              },
              "resources": {
                "variables": {
                  "methods": {
                    "get": {
                      "parameterOrder": [
                        "path"
                      ],
                      "id": "tagmanager.accounts.containers.workspaces.variables.get",
                      "response": {
                        "$ref": "Variable"
                      },
                      "parameters": {
                        "path": {
                          "description": "GTM Variable's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/variables/{variable_id}",
                          "type": "string",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/variables/[^/]+$",
                          "location": "path",
                          "required": true
                        }
                      },
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/variables/{variablesId}",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "httpMethod": "GET",
                      "path": "tagmanager/v2/{+path}",
                      "description": "Gets a GTM Variable."
                    },
                    "revert": {
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "id": "tagmanager.accounts.containers.workspaces.variables.revert",
                      "path": "tagmanager/v2/{+path}:revert",
                      "description": "Reverts changes to a GTM Variable in a GTM Workspace.",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/variables/{variablesId}:revert",
                      "parameters": {
                        "path": {
                          "required": true,
                          "description": "GTM Variable's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/variables/{variable_id}",
                          "type": "string",
                          "location": "path",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/variables/[^/]+$"
                        },
                        "fingerprint": {
                          "location": "query",
                          "description": "When provided, this fingerprint must match the fingerprint of the variable in storage.",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "path"
                      ],
                      "response": {
                        "$ref": "RevertVariableResponse"
                      },
                      "httpMethod": "POST"
                    },
                    "update": {
                      "request": {
                        "$ref": "Variable"
                      },
                      "httpMethod": "PUT",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "id": "tagmanager.accounts.containers.workspaces.variables.update",
                      "response": {
                        "$ref": "Variable"
                      },
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/variables/{variablesId}",
                      "path": "tagmanager/v2/{+path}",
                      "parameters": {
                        "path": {
                          "required": true,
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/variables/[^/]+$",
                          "description": "GTM Variable's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/variables/{variable_id}",
                          "type": "string",
                          "location": "path"
                        },
                        "fingerprint": {
                          "type": "string",
                          "description": "When provided, this fingerprint must match the fingerprint of the variable in storage.",
                          "location": "query"
                        }
                      },
                      "parameterOrder": [
                        "path"
                      ],
                      "description": "Updates a GTM Variable."
                    },
                    "list": {
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/variables",
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "description": "Lists all GTM Variables of a Container.",
                      "response": {
                        "$ref": "ListVariablesResponse"
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "id": "tagmanager.accounts.containers.workspaces.variables.list",
                      "path": "tagmanager/v2/{+parent}/variables",
                      "parameters": {
                        "parent": {
                          "type": "string",
                          "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "location": "path",
                          "required": true
                        },
                        "pageToken": {
                          "location": "query",
                          "type": "string",
                          "description": "Continuation token for fetching the next page of results."
                        }
                      }
                    },
                    "create": {
                      "id": "tagmanager.accounts.containers.workspaces.variables.create",
                      "response": {
                        "$ref": "Variable"
                      },
                      "path": "tagmanager/v2/{+parent}/variables",
                      "description": "Creates a GTM Variable.",
                      "parameterOrder": [
                        "parent"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "request": {
                        "$ref": "Variable"
                      },
                      "parameters": {
                        "parent": {
                          "required": true,
                          "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                          "type": "string",
                          "location": "path",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$"
                        }
                      },
                      "httpMethod": "POST",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/variables"
                    },
                    "delete": {
                      "description": "Deletes a GTM Variable.",
                      "id": "tagmanager.accounts.containers.workspaces.variables.delete",
                      "path": "tagmanager/v2/{+path}",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/variables/{variablesId}",
                      "parameterOrder": [
                        "path"
                      ],
                      "parameters": {
                        "path": {
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/variables/[^/]+$",
                          "location": "path",
                          "required": true,
                          "description": "GTM Variable's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/variables/{variable_id}",
                          "type": "string"
                        }
                      },
                      "httpMethod": "DELETE"
                    }
                  }
                },
                "tags": {
                  "methods": {
                    "create": {
                      "request": {
                        "$ref": "Tag"
                      },
                      "description": "Creates a GTM Tag.",
                      "path": "tagmanager/v2/{+parent}/tags",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/tags",
                      "id": "tagmanager.accounts.containers.workspaces.tags.create",
                      "parameters": {
                        "parent": {
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "type": "string",
                          "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                          "location": "path",
                          "required": true
                        }
                      },
                      "response": {
                        "$ref": "Tag"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "httpMethod": "POST",
                      "parameterOrder": [
                        "parent"
                      ]
                    },
                    "revert": {
                      "parameters": {
                        "fingerprint": {
                          "type": "string",
                          "location": "query",
                          "description": "When provided, this fingerprint must match the fingerprint of thetag in storage."
                        },
                        "path": {
                          "type": "string",
                          "description": "GTM Tag's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/tags/{tag_id}",
                          "required": true,
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/tags/[^/]+$",
                          "location": "path"
                        }
                      },
                      "parameterOrder": [
                        "path"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "response": {
                        "$ref": "RevertTagResponse"
                      },
                      "httpMethod": "POST",
                      "id": "tagmanager.accounts.containers.workspaces.tags.revert",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/tags/{tagsId}:revert",
                      "description": "Reverts changes to a GTM Tag in a GTM Workspace.",
                      "path": "tagmanager/v2/{+path}:revert"
                    },
                    "delete": {
                      "id": "tagmanager.accounts.containers.workspaces.tags.delete",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/tags/{tagsId}",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "parameterOrder": [
                        "path"
                      ],
                      "description": "Deletes a GTM Tag.",
                      "httpMethod": "DELETE",
                      "parameters": {
                        "path": {
                          "location": "path",
                          "required": true,
                          "description": "GTM Tag's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/tags/{tag_id}",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/tags/[^/]+$",
                          "type": "string"
                        }
                      },
                      "path": "tagmanager/v2/{+path}"
                    },
                    "list": {
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "description": "Lists all GTM Tags of a Container.",
                      "parameters": {
                        "pageToken": {
                          "location": "query",
                          "type": "string",
                          "description": "Continuation token for fetching the next page of results."
                        },
                        "parent": {
                          "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                          "location": "path",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "type": "string",
                          "required": true
                        }
                      },
                      "response": {
                        "$ref": "ListTagsResponse"
                      },
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/tags",
                      "parameterOrder": [
                        "parent"
                      ],
                      "path": "tagmanager/v2/{+parent}/tags",
                      "id": "tagmanager.accounts.containers.workspaces.tags.list"
                    },
                    "update": {
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "request": {
                        "$ref": "Tag"
                      },
                      "path": "tagmanager/v2/{+path}",
                      "httpMethod": "PUT",
                      "id": "tagmanager.accounts.containers.workspaces.tags.update",
                      "description": "Updates a GTM Tag.",
                      "response": {
                        "$ref": "Tag"
                      },
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/tags/{tagsId}",
                      "parameterOrder": [
                        "path"
                      ],
                      "parameters": {
                        "fingerprint": {
                          "type": "string",
                          "location": "query",
                          "description": "When provided, this fingerprint must match the fingerprint of the tag in storage."
                        },
                        "path": {
                          "location": "path",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/tags/[^/]+$",
                          "description": "GTM Tag's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/tags/{tag_id}",
                          "type": "string",
                          "required": true
                        }
                      }
                    },
                    "get": {
                      "description": "Gets a GTM Tag.",
                      "parameters": {
                        "path": {
                          "description": "GTM Tag's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/tags/{tag_id}",
                          "type": "string",
                          "location": "path",
                          "required": true,
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/tags/[^/]+$"
                        }
                      },
                      "response": {
                        "$ref": "Tag"
                      },
                      "id": "tagmanager.accounts.containers.workspaces.tags.get",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "parameterOrder": [
                        "path"
                      ],
                      "httpMethod": "GET",
                      "path": "tagmanager/v2/{+path}",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/tags/{tagsId}"
                    }
                  }
                },
                "built_in_variables": {
                  "methods": {
                    "revert": {
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/built_in_variables:revert",
                      "path": "tagmanager/v2/{+path}/built_in_variables:revert",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "description": "Reverts changes to a GTM Built-In Variables in a GTM Workspace.",
                      "response": {
                        "$ref": "RevertBuiltInVariableResponse"
                      },
                      "httpMethod": "POST",
                      "parameters": {
                        "type": {
                          "location": "query",
                          "description": "The type of built-in variable to revert.",
                          "type": "string",
                          "enumDescriptions": [
                            "",
                            "",
                            "",
                            "",
                            "",
                            "For web or mobile.",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "For web or mobile.",
                            "",
                            "For web or mobile.",
                            "For web or mobile.",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            ""
                          ],
                          "enum": [
                            "builtInVariableTypeUnspecified",
                            "pageUrl",
                            "pageHostname",
                            "pagePath",
                            "referrer",
                            "event",
                            "clickElement",
                            "clickClasses",
                            "clickId",
                            "clickTarget",
                            "clickUrl",
                            "clickText",
                            "firstPartyServingUrl",
                            "formElement",
                            "formClasses",
                            "formId",
                            "formTarget",
                            "formUrl",
                            "formText",
                            "errorMessage",
                            "errorUrl",
                            "errorLine",
                            "newHistoryUrl",
                            "oldHistoryUrl",
                            "newHistoryFragment",
                            "oldHistoryFragment",
                            "newHistoryState",
                            "oldHistoryState",
                            "historySource",
                            "containerVersion",
                            "debugMode",
                            "randomNumber",
                            "containerId",
                            "appId",
                            "appName",
                            "appVersionCode",
                            "appVersionName",
                            "language",
                            "osVersion",
                            "platform",
                            "sdkVersion",
                            "deviceName",
                            "resolution",
                            "advertiserId",
                            "advertisingTrackingEnabled",
                            "htmlId",
                            "environmentName",
                            "ampBrowserLanguage",
                            "ampCanonicalPath",
                            "ampCanonicalUrl",
                            "ampCanonicalHost",
                            "ampReferrer",
                            "ampTitle",
                            "ampClientId",
                            "ampClientTimezone",
                            "ampClientTimestamp",
                            "ampClientScreenWidth",
                            "ampClientScreenHeight",
                            "ampClientScrollX",
                            "ampClientScrollY",
                            "ampClientMaxScrollX",
                            "ampClientMaxScrollY",
                            "ampTotalEngagedTime",
                            "ampPageViewId",
                            "ampPageLoadTime",
                            "ampPageDownloadTime",
                            "ampGtmEvent",
                            "eventName",
                            "firebaseEventParameterCampaign",
                            "firebaseEventParameterCampaignAclid",
                            "firebaseEventParameterCampaignAnid",
                            "firebaseEventParameterCampaignClickTimestamp",
                            "firebaseEventParameterCampaignContent",
                            "firebaseEventParameterCampaignCp1",
                            "firebaseEventParameterCampaignGclid",
                            "firebaseEventParameterCampaignSource",
                            "firebaseEventParameterCampaignTerm",
                            "firebaseEventParameterCurrency",
                            "firebaseEventParameterDynamicLinkAcceptTime",
                            "firebaseEventParameterDynamicLinkLinkid",
                            "firebaseEventParameterNotificationMessageDeviceTime",
                            "firebaseEventParameterNotificationMessageId",
                            "firebaseEventParameterNotificationMessageName",
                            "firebaseEventParameterNotificationMessageTime",
                            "firebaseEventParameterNotificationTopic",
                            "firebaseEventParameterPreviousAppVersion",
                            "firebaseEventParameterPreviousOsVersion",
                            "firebaseEventParameterPrice",
                            "firebaseEventParameterProductId",
                            "firebaseEventParameterQuantity",
                            "firebaseEventParameterValue",
                            "videoProvider",
                            "videoUrl",
                            "videoTitle",
                            "videoDuration",
                            "videoPercent",
                            "videoVisible",
                            "videoStatus",
                            "videoCurrentTime",
                            "scrollDepthThreshold",
                            "scrollDepthUnits",
                            "scrollDepthDirection",
                            "elementVisibilityRatio",
                            "elementVisibilityTime",
                            "elementVisibilityFirstTime",
                            "elementVisibilityRecentTime",
                            "requestPath",
                            "requestMethod",
                            "clientName",
                            "queryString",
                            "serverPageLocationUrl",
                            "serverPageLocationPath",
                            "serverPageLocationHostname",
                            "visitorRegion"
                          ]
                        },
                        "path": {
                          "description": "GTM BuiltInVariable's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/built_in_variables",
                          "location": "path",
                          "type": "string",
                          "required": true,
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$"
                        }
                      },
                      "parameterOrder": [
                        "path"
                      ],
                      "id": "tagmanager.accounts.containers.workspaces.built_in_variables.revert"
                    },
                    "create": {
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "parameterOrder": [
                        "parent"
                      ],
                      "description": "Creates one or more GTM Built-In Variables.",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/built_in_variables",
                      "path": "tagmanager/v2/{+parent}/built_in_variables",
                      "httpMethod": "POST",
                      "id": "tagmanager.accounts.containers.workspaces.built_in_variables.create",
                      "parameters": {
                        "type": {
                          "enumDescriptions": [
                            "",
                            "",
                            "",
                            "",
                            "",
                            "For web or mobile.",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "For web or mobile.",
                            "",
                            "For web or mobile.",
                            "For web or mobile.",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            ""
                          ],
                          "repeated": true,
                          "enum": [
                            "builtInVariableTypeUnspecified",
                            "pageUrl",
                            "pageHostname",
                            "pagePath",
                            "referrer",
                            "event",
                            "clickElement",
                            "clickClasses",
                            "clickId",
                            "clickTarget",
                            "clickUrl",
                            "clickText",
                            "firstPartyServingUrl",
                            "formElement",
                            "formClasses",
                            "formId",
                            "formTarget",
                            "formUrl",
                            "formText",
                            "errorMessage",
                            "errorUrl",
                            "errorLine",
                            "newHistoryUrl",
                            "oldHistoryUrl",
                            "newHistoryFragment",
                            "oldHistoryFragment",
                            "newHistoryState",
                            "oldHistoryState",
                            "historySource",
                            "containerVersion",
                            "debugMode",
                            "randomNumber",
                            "containerId",
                            "appId",
                            "appName",
                            "appVersionCode",
                            "appVersionName",
                            "language",
                            "osVersion",
                            "platform",
                            "sdkVersion",
                            "deviceName",
                            "resolution",
                            "advertiserId",
                            "advertisingTrackingEnabled",
                            "htmlId",
                            "environmentName",
                            "ampBrowserLanguage",
                            "ampCanonicalPath",
                            "ampCanonicalUrl",
                            "ampCanonicalHost",
                            "ampReferrer",
                            "ampTitle",
                            "ampClientId",
                            "ampClientTimezone",
                            "ampClientTimestamp",
                            "ampClientScreenWidth",
                            "ampClientScreenHeight",
                            "ampClientScrollX",
                            "ampClientScrollY",
                            "ampClientMaxScrollX",
                            "ampClientMaxScrollY",
                            "ampTotalEngagedTime",
                            "ampPageViewId",
                            "ampPageLoadTime",
                            "ampPageDownloadTime",
                            "ampGtmEvent",
                            "eventName",
                            "firebaseEventParameterCampaign",
                            "firebaseEventParameterCampaignAclid",
                            "firebaseEventParameterCampaignAnid",
                            "firebaseEventParameterCampaignClickTimestamp",
                            "firebaseEventParameterCampaignContent",
                            "firebaseEventParameterCampaignCp1",
                            "firebaseEventParameterCampaignGclid",
                            "firebaseEventParameterCampaignSource",
                            "firebaseEventParameterCampaignTerm",
                            "firebaseEventParameterCurrency",
                            "firebaseEventParameterDynamicLinkAcceptTime",
                            "firebaseEventParameterDynamicLinkLinkid",
                            "firebaseEventParameterNotificationMessageDeviceTime",
                            "firebaseEventParameterNotificationMessageId",
                            "firebaseEventParameterNotificationMessageName",
                            "firebaseEventParameterNotificationMessageTime",
                            "firebaseEventParameterNotificationTopic",
                            "firebaseEventParameterPreviousAppVersion",
                            "firebaseEventParameterPreviousOsVersion",
                            "firebaseEventParameterPrice",
                            "firebaseEventParameterProductId",
                            "firebaseEventParameterQuantity",
                            "firebaseEventParameterValue",
                            "videoProvider",
                            "videoUrl",
                            "videoTitle",
                            "videoDuration",
                            "videoPercent",
                            "videoVisible",
                            "videoStatus",
                            "videoCurrentTime",
                            "scrollDepthThreshold",
                            "scrollDepthUnits",
                            "scrollDepthDirection",
                            "elementVisibilityRatio",
                            "elementVisibilityTime",
                            "elementVisibilityFirstTime",
                            "elementVisibilityRecentTime",
                            "requestPath",
                            "requestMethod",
                            "clientName",
                            "queryString",
                            "serverPageLocationUrl",
                            "serverPageLocationPath",
                            "serverPageLocationHostname",
                            "visitorRegion"
                          ],
                          "description": "The types of built-in variables to enable.",
                          "location": "query",
                          "type": "string"
                        },
                        "parent": {
                          "location": "path",
                          "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "type": "string",
                          "required": true
                        }
                      },
                      "response": {
                        "$ref": "CreateBuiltInVariableResponse"
                      }
                    },
                    "delete": {
                      "httpMethod": "DELETE",
                      "description": "Deletes one or more GTM Built-In Variables.",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "parameters": {
                        "path": {
                          "required": true,
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/built_in_variables$",
                          "type": "string",
                          "description": "GTM BuiltInVariable's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/built_in_variables",
                          "location": "path"
                        },
                        "type": {
                          "enum": [
                            "builtInVariableTypeUnspecified",
                            "pageUrl",
                            "pageHostname",
                            "pagePath",
                            "referrer",
                            "event",
                            "clickElement",
                            "clickClasses",
                            "clickId",
                            "clickTarget",
                            "clickUrl",
                            "clickText",
                            "firstPartyServingUrl",
                            "formElement",
                            "formClasses",
                            "formId",
                            "formTarget",
                            "formUrl",
                            "formText",
                            "errorMessage",
                            "errorUrl",
                            "errorLine",
                            "newHistoryUrl",
                            "oldHistoryUrl",
                            "newHistoryFragment",
                            "oldHistoryFragment",
                            "newHistoryState",
                            "oldHistoryState",
                            "historySource",
                            "containerVersion",
                            "debugMode",
                            "randomNumber",
                            "containerId",
                            "appId",
                            "appName",
                            "appVersionCode",
                            "appVersionName",
                            "language",
                            "osVersion",
                            "platform",
                            "sdkVersion",
                            "deviceName",
                            "resolution",
                            "advertiserId",
                            "advertisingTrackingEnabled",
                            "htmlId",
                            "environmentName",
                            "ampBrowserLanguage",
                            "ampCanonicalPath",
                            "ampCanonicalUrl",
                            "ampCanonicalHost",
                            "ampReferrer",
                            "ampTitle",
                            "ampClientId",
                            "ampClientTimezone",
                            "ampClientTimestamp",
                            "ampClientScreenWidth",
                            "ampClientScreenHeight",
                            "ampClientScrollX",
                            "ampClientScrollY",
                            "ampClientMaxScrollX",
                            "ampClientMaxScrollY",
                            "ampTotalEngagedTime",
                            "ampPageViewId",
                            "ampPageLoadTime",
                            "ampPageDownloadTime",
                            "ampGtmEvent",
                            "eventName",
                            "firebaseEventParameterCampaign",
                            "firebaseEventParameterCampaignAclid",
                            "firebaseEventParameterCampaignAnid",
                            "firebaseEventParameterCampaignClickTimestamp",
                            "firebaseEventParameterCampaignContent",
                            "firebaseEventParameterCampaignCp1",
                            "firebaseEventParameterCampaignGclid",
                            "firebaseEventParameterCampaignSource",
                            "firebaseEventParameterCampaignTerm",
                            "firebaseEventParameterCurrency",
                            "firebaseEventParameterDynamicLinkAcceptTime",
                            "firebaseEventParameterDynamicLinkLinkid",
                            "firebaseEventParameterNotificationMessageDeviceTime",
                            "firebaseEventParameterNotificationMessageId",
                            "firebaseEventParameterNotificationMessageName",
                            "firebaseEventParameterNotificationMessageTime",
                            "firebaseEventParameterNotificationTopic",
                            "firebaseEventParameterPreviousAppVersion",
                            "firebaseEventParameterPreviousOsVersion",
                            "firebaseEventParameterPrice",
                            "firebaseEventParameterProductId",
                            "firebaseEventParameterQuantity",
                            "firebaseEventParameterValue",
                            "videoProvider",
                            "videoUrl",
                            "videoTitle",
                            "videoDuration",
                            "videoPercent",
                            "videoVisible",
                            "videoStatus",
                            "videoCurrentTime",
                            "scrollDepthThreshold",
                            "scrollDepthUnits",
                            "scrollDepthDirection",
                            "elementVisibilityRatio",
                            "elementVisibilityTime",
                            "elementVisibilityFirstTime",
                            "elementVisibilityRecentTime",
                            "requestPath",
                            "requestMethod",
                            "clientName",
                            "queryString",
                            "serverPageLocationUrl",
                            "serverPageLocationPath",
                            "serverPageLocationHostname",
                            "visitorRegion"
                          ],
                          "repeated": true,
                          "type": "string",
                          "enumDescriptions": [
                            "",
                            "",
                            "",
                            "",
                            "",
                            "For web or mobile.",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "For web or mobile.",
                            "",
                            "For web or mobile.",
                            "For web or mobile.",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            ""
                          ],
                          "location": "query",
                          "description": "The types of built-in variables to delete."
                        }
                      },
                      "id": "tagmanager.accounts.containers.workspaces.built_in_variables.delete",
                      "parameterOrder": [
                        "path"
                      ],
                      "path": "tagmanager/v2/{+path}",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/built_in_variables"
                    },
                    "list": {
                      "description": "Lists all the enabled Built-In Variables of a GTM Container.",
                      "parameters": {
                        "pageToken": {
                          "location": "query",
                          "type": "string",
                          "description": "Continuation token for fetching the next page of results."
                        },
                        "parent": {
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "type": "string",
                          "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                          "required": true,
                          "location": "path"
                        }
                      },
                      "response": {
                        "$ref": "ListEnabledBuiltInVariablesResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "httpMethod": "GET",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/built_in_variables",
                      "path": "tagmanager/v2/{+parent}/built_in_variables",
                      "id": "tagmanager.accounts.containers.workspaces.built_in_variables.list",
                      "parameterOrder": [
                        "parent"
                      ]
                    }
                  }
                },
                "zones": {
                  "methods": {
                    "list": {
                      "response": {
                        "$ref": "ListZonesResponse"
                      },
                      "path": "tagmanager/v2/{+parent}/zones",
                      "parameterOrder": [
                        "parent"
                      ],
                      "httpMethod": "GET",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/zones",
                      "id": "tagmanager.accounts.containers.workspaces.zones.list",
                      "parameters": {
                        "pageToken": {
                          "location": "query",
                          "description": "Continuation token for fetching the next page of results.",
                          "type": "string"
                        },
                        "parent": {
                          "required": true,
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                          "location": "path",
                          "type": "string"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "description": "Lists all GTM Zones of a GTM container workspace."
                    },
                    "create": {
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/zones",
                      "request": {
                        "$ref": "Zone"
                      },
                      "httpMethod": "POST",
                      "path": "tagmanager/v2/{+parent}/zones",
                      "parameterOrder": [
                        "parent"
                      ],
                      "description": "Creates a GTM Zone.",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "response": {
                        "$ref": "Zone"
                      },
                      "parameters": {
                        "parent": {
                          "location": "path",
                          "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                          "type": "string",
                          "required": true,
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$"
                        }
                      },
                      "id": "tagmanager.accounts.containers.workspaces.zones.create"
                    },
                    "update": {
                      "path": "tagmanager/v2/{+path}",
                      "request": {
                        "$ref": "Zone"
                      },
                      "parameterOrder": [
                        "path"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "httpMethod": "PUT",
                      "response": {
                        "$ref": "Zone"
                      },
                      "parameters": {
                        "path": {
                          "description": "GTM Zone's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/zones/{zone_id}",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/zones/[^/]+$",
                          "type": "string",
                          "location": "path",
                          "required": true
                        },
                        "fingerprint": {
                          "type": "string",
                          "location": "query",
                          "description": "When provided, this fingerprint must match the fingerprint of the zone in storage."
                        }
                      },
                      "description": "Updates a GTM Zone.",
                      "id": "tagmanager.accounts.containers.workspaces.zones.update",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/zones/{zonesId}"
                    },
                    "delete": {
                      "id": "tagmanager.accounts.containers.workspaces.zones.delete",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/zones/{zonesId}",
                      "parameterOrder": [
                        "path"
                      ],
                      "description": "Deletes a GTM Zone.",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "httpMethod": "DELETE",
                      "parameters": {
                        "path": {
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/zones/[^/]+$",
                          "description": "GTM Zone's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/zones/{zone_id}",
                          "type": "string",
                          "location": "path",
                          "required": true
                        }
                      },
                      "path": "tagmanager/v2/{+path}"
                    },
                    "revert": {
                      "httpMethod": "POST",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/zones/{zonesId}:revert",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "path": "tagmanager/v2/{+path}:revert",
                      "parameters": {
                        "path": {
                          "description": "GTM Zone's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/zones/{zone_id}",
                          "required": true,
                          "type": "string",
                          "location": "path",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/zones/[^/]+$"
                        },
                        "fingerprint": {
                          "description": "When provided, this fingerprint must match the fingerprint of the zone in storage.",
                          "type": "string",
                          "location": "query"
                        }
                      },
                      "id": "tagmanager.accounts.containers.workspaces.zones.revert",
                      "response": {
                        "$ref": "RevertZoneResponse"
                      },
                      "parameterOrder": [
                        "path"
                      ],
                      "description": "Reverts changes to a GTM Zone in a GTM Workspace."
                    },
                    "get": {
                      "parameterOrder": [
                        "path"
                      ],
                      "id": "tagmanager.accounts.containers.workspaces.zones.get",
                      "parameters": {
                        "path": {
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/zones/[^/]+$",
                          "required": true,
                          "type": "string",
                          "location": "path",
                          "description": "GTM Zone's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/zones/{zone_id}"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "path": "tagmanager/v2/{+path}",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/zones/{zonesId}",
                      "httpMethod": "GET",
                      "response": {
                        "$ref": "Zone"
                      },
                      "description": "Gets a GTM Zone."
                    }
                  }
                },
                "folders": {
                  "methods": {
                    "get": {
                      "parameters": {
                        "path": {
                          "location": "path",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/folders/[^/]+$",
                          "required": true,
                          "type": "string",
                          "description": "GTM Folder's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/folders/{folder_id}"
                        }
                      },
                      "description": "Gets a GTM Folder.",
                      "parameterOrder": [
                        "path"
                      ],
                      "id": "tagmanager.accounts.containers.workspaces.folders.get",
                      "httpMethod": "GET",
                      "response": {
                        "$ref": "Folder"
                      },
                      "path": "tagmanager/v2/{+path}",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/folders/{foldersId}"
                    },
                    "delete": {
                      "path": "tagmanager/v2/{+path}",
                      "parameterOrder": [
                        "path"
                      ],
                      "parameters": {
                        "path": {
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/folders/[^/]+$",
                          "type": "string",
                          "required": true,
                          "location": "path",
                          "description": "GTM Folder's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/folders/{folder_id}"
                        }
                      },
                      "description": "Deletes a GTM Folder.",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/folders/{foldersId}",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "id": "tagmanager.accounts.containers.workspaces.folders.delete",
                      "httpMethod": "DELETE"
                    },
                    "create": {
                      "httpMethod": "POST",
                      "path": "tagmanager/v2/{+parent}/folders",
                      "request": {
                        "$ref": "Folder"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "parameters": {
                        "parent": {
                          "type": "string",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "location": "path",
                          "required": true,
                          "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "Folder"
                      },
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/folders",
                      "id": "tagmanager.accounts.containers.workspaces.folders.create",
                      "description": "Creates a GTM Folder."
                    },
                    "revert": {
                      "response": {
                        "$ref": "RevertFolderResponse"
                      },
                      "parameterOrder": [
                        "path"
                      ],
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/folders/{foldersId}:revert",
                      "httpMethod": "POST",
                      "parameters": {
                        "path": {
                          "description": "GTM Folder's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/folders/{folder_id}",
                          "type": "string",
                          "required": true,
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/folders/[^/]+$",
                          "location": "path"
                        },
                        "fingerprint": {
                          "description": "When provided, this fingerprint must match the fingerprint of the tag in storage.",
                          "location": "query",
                          "type": "string"
                        }
                      },
                      "path": "tagmanager/v2/{+path}:revert",
                      "description": "Reverts changes to a GTM Folder in a GTM Workspace.",
                      "id": "tagmanager.accounts.containers.workspaces.folders.revert",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ]
                    },
                    "move_entities_to_folder": {
                      "parameterOrder": [
                        "path"
                      ],
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/folders/{foldersId}:move_entities_to_folder",
                      "httpMethod": "POST",
                      "description": "Moves entities to a GTM Folder.",
                      "parameters": {
                        "path": {
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/folders/[^/]+$",
                          "type": "string",
                          "required": true,
                          "description": "GTM Folder's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/folders/{folder_id}",
                          "location": "path"
                        },
                        "triggerId": {
                          "location": "query",
                          "description": "The triggers to be moved to the folder.",
                          "repeated": true,
                          "type": "string"
                        },
                        "variableId": {
                          "description": "The variables to be moved to the folder.",
                          "type": "string",
                          "location": "query",
                          "repeated": true
                        },
                        "tagId": {
                          "type": "string",
                          "repeated": true,
                          "description": "The tags to be moved to the folder.",
                          "location": "query"
                        }
                      },
                      "request": {
                        "$ref": "Folder"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "id": "tagmanager.accounts.containers.workspaces.folders.move_entities_to_folder",
                      "path": "tagmanager/v2/{+path}:move_entities_to_folder"
                    },
                    "update": {
                      "parameters": {
                        "path": {
                          "location": "path",
                          "type": "string",
                          "required": true,
                          "description": "GTM Folder's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/folders/{folder_id}",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/folders/[^/]+$"
                        },
                        "fingerprint": {
                          "description": "When provided, this fingerprint must match the fingerprint of the folder in storage.",
                          "type": "string",
                          "location": "query"
                        }
                      },
                      "description": "Updates a GTM Folder.",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "path": "tagmanager/v2/{+path}",
                      "response": {
                        "$ref": "Folder"
                      },
                      "request": {
                        "$ref": "Folder"
                      },
                      "parameterOrder": [
                        "path"
                      ],
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/folders/{foldersId}",
                      "httpMethod": "PUT",
                      "id": "tagmanager.accounts.containers.workspaces.folders.update"
                    },
                    "list": {
                      "path": "tagmanager/v2/{+parent}/folders",
                      "httpMethod": "GET",
                      "parameterOrder": [
                        "parent"
                      ],
                      "parameters": {
                        "parent": {
                          "location": "path",
                          "required": true,
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                          "type": "string"
                        },
                        "pageToken": {
                          "type": "string",
                          "location": "query",
                          "description": "Continuation token for fetching the next page of results."
                        }
                      },
                      "description": "Lists all GTM Folders of a Container.",
                      "response": {
                        "$ref": "ListFoldersResponse"
                      },
                      "id": "tagmanager.accounts.containers.workspaces.folders.list",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/folders",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ]
                    },
                    "entities": {
                      "httpMethod": "POST",
                      "path": "tagmanager/v2/{+path}:entities",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/folders/{foldersId}:entities",
                      "id": "tagmanager.accounts.containers.workspaces.folders.entities",
                      "parameters": {
                        "pageToken": {
                          "type": "string",
                          "location": "query",
                          "description": "Continuation token for fetching the next page of results."
                        },
                        "path": {
                          "type": "string",
                          "required": true,
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/folders/[^/]+$",
                          "location": "path",
                          "description": "GTM Folder's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/folders/{folder_id}"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "response": {
                        "$ref": "FolderEntities"
                      },
                      "parameterOrder": [
                        "path"
                      ],
                      "description": "List all entities in a GTM Folder."
                    }
                  }
                },
                "templates": {
                  "methods": {
                    "delete": {
                      "description": "Deletes a GTM Template.",
                      "httpMethod": "DELETE",
                      "path": "tagmanager/v2/{+path}",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "parameters": {
                        "path": {
                          "location": "path",
                          "description": "GTM Custom Template's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/templates/{template_id}",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/templates/[^/]+$",
                          "type": "string",
                          "required": true
                        }
                      },
                      "id": "tagmanager.accounts.containers.workspaces.templates.delete",
                      "parameterOrder": [
                        "path"
                      ],
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/templates/{templatesId}"
                    },
                    "get": {
                      "parameterOrder": [
                        "path"
                      ],
                      "id": "tagmanager.accounts.containers.workspaces.templates.get",
                      "description": "Gets a GTM Template.",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/templates/{templatesId}",
                      "parameters": {
                        "path": {
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/templates/[^/]+$",
                          "required": true,
                          "type": "string",
                          "location": "path",
                          "description": "GTM Custom Template's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/templates/{template_id}"
                        }
                      },
                      "path": "tagmanager/v2/{+path}",
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "response": {
                        "$ref": "CustomTemplate"
                      }
                    },
                    "list": {
                      "httpMethod": "GET",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/templates",
                      "response": {
                        "$ref": "ListTemplatesResponse"
                      },
                      "id": "tagmanager.accounts.containers.workspaces.templates.list",
                      "parameterOrder": [
                        "parent"
                      ],
                      "parameters": {
                        "parent": {
                          "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                          "required": true,
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "location": "path",
                          "type": "string"
                        },
                        "pageToken": {
                          "location": "query",
                          "description": "Continuation token for fetching the next page of results.",
                          "type": "string"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "path": "tagmanager/v2/{+parent}/templates",
                      "description": "Lists all GTM Templates of a GTM container workspace."
                    },
                    "revert": {
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/templates/{templatesId}:revert",
                      "response": {
                        "$ref": "RevertTemplateResponse"
                      },
                      "description": "Reverts changes to a GTM Template in a GTM Workspace.",
                      "id": "tagmanager.accounts.containers.workspaces.templates.revert",
                      "httpMethod": "POST",
                      "parameters": {
                        "path": {
                          "location": "path",
                          "type": "string",
                          "required": true,
                          "description": "GTM Custom Template's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/templates/{template_id}",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/templates/[^/]+$"
                        },
                        "fingerprint": {
                          "location": "query",
                          "description": "When provided, this fingerprint must match the fingerprint of the template in storage.",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "path"
                      ],
                      "path": "tagmanager/v2/{+path}:revert",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ]
                    },
                    "update": {
                      "request": {
                        "$ref": "CustomTemplate"
                      },
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/templates/{templatesId}",
                      "id": "tagmanager.accounts.containers.workspaces.templates.update",
                      "parameterOrder": [
                        "path"
                      ],
                      "parameters": {
                        "path": {
                          "type": "string",
                          "location": "path",
                          "description": "GTM Custom Template's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/templates/{template_id}",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/templates/[^/]+$",
                          "required": true
                        },
                        "fingerprint": {
                          "description": "When provided, this fingerprint must match the fingerprint of the templates in storage.",
                          "location": "query",
                          "type": "string"
                        }
                      },
                      "response": {
                        "$ref": "CustomTemplate"
                      },
                      "description": "Updates a GTM Template.",
                      "httpMethod": "PUT",
                      "path": "tagmanager/v2/{+path}",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ]
                    },
                    "create": {
                      "response": {
                        "$ref": "CustomTemplate"
                      },
                      "description": "Creates a GTM Custom Template.",
                      "request": {
                        "$ref": "CustomTemplate"
                      },
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/templates",
                      "httpMethod": "POST",
                      "parameterOrder": [
                        "parent"
                      ],
                      "parameters": {
                        "parent": {
                          "required": true,
                          "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "location": "path",
                          "type": "string"
                        }
                      },
                      "path": "tagmanager/v2/{+parent}/templates",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "id": "tagmanager.accounts.containers.workspaces.templates.create"
                    }
                  }
                },
                "triggers": {
                  "methods": {
                    "delete": {
                      "parameters": {
                        "path": {
                          "type": "string",
                          "required": true,
                          "description": "GTM Trigger's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/triggers/{trigger_id}",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/triggers/[^/]+$",
                          "location": "path"
                        }
                      },
                      "httpMethod": "DELETE",
                      "description": "Deletes a GTM Trigger.",
                      "path": "tagmanager/v2/{+path}",
                      "parameterOrder": [
                        "path"
                      ],
                      "id": "tagmanager.accounts.containers.workspaces.triggers.delete",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/triggers/{triggersId}",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ]
                    },
                    "revert": {
                      "path": "tagmanager/v2/{+path}:revert",
                      "parameters": {
                        "fingerprint": {
                          "location": "query",
                          "description": "When provided, this fingerprint must match the fingerprint of the trigger in storage.",
                          "type": "string"
                        },
                        "path": {
                          "type": "string",
                          "required": true,
                          "description": "GTM Trigger's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/triggers/{trigger_id}",
                          "location": "path",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/triggers/[^/]+$"
                        }
                      },
                      "parameterOrder": [
                        "path"
                      ],
                      "response": {
                        "$ref": "RevertTriggerResponse"
                      },
                      "httpMethod": "POST",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/triggers/{triggersId}:revert",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "id": "tagmanager.accounts.containers.workspaces.triggers.revert",
                      "description": "Reverts changes to a GTM Trigger in a GTM Workspace."
                    },
                    "create": {
                      "request": {
                        "$ref": "Trigger"
                      },
                      "description": "Creates a GTM Trigger.",
                      "parameters": {
                        "parent": {
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "type": "string",
                          "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                          "required": true,
                          "location": "path"
                        }
                      },
                      "path": "tagmanager/v2/{+parent}/triggers",
                      "parameterOrder": [
                        "parent"
                      ],
                      "id": "tagmanager.accounts.containers.workspaces.triggers.create",
                      "httpMethod": "POST",
                      "response": {
                        "$ref": "Trigger"
                      },
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/triggers",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ]
                    },
                    "list": {
                      "description": "Lists all GTM Triggers of a Container.",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/triggers",
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "ListTriggersResponse"
                      },
                      "path": "tagmanager/v2/{+parent}/triggers",
                      "id": "tagmanager.accounts.containers.workspaces.triggers.list",
                      "httpMethod": "GET",
                      "parameters": {
                        "pageToken": {
                          "description": "Continuation token for fetching the next page of results.",
                          "location": "query",
                          "type": "string"
                        },
                        "parent": {
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "location": "path",
                          "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                          "required": true,
                          "type": "string"
                        }
                      }
                    },
                    "update": {
                      "parameterOrder": [
                        "path"
                      ],
                      "description": "Updates a GTM Trigger.",
                      "parameters": {
                        "path": {
                          "location": "path",
                          "type": "string",
                          "description": "GTM Trigger's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/triggers/{trigger_id}",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/triggers/[^/]+$",
                          "required": true
                        },
                        "fingerprint": {
                          "type": "string",
                          "description": "When provided, this fingerprint must match the fingerprint of the trigger in storage.",
                          "location": "query"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "id": "tagmanager.accounts.containers.workspaces.triggers.update",
                      "response": {
                        "$ref": "Trigger"
                      },
                      "request": {
                        "$ref": "Trigger"
                      },
                      "httpMethod": "PUT",
                      "path": "tagmanager/v2/{+path}",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/triggers/{triggersId}"
                    },
                    "get": {
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "parameters": {
                        "path": {
                          "location": "path",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/triggers/[^/]+$",
                          "type": "string",
                          "description": "GTM Trigger's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/triggers/{trigger_id}",
                          "required": true
                        }
                      },
                      "id": "tagmanager.accounts.containers.workspaces.triggers.get",
                      "httpMethod": "GET",
                      "parameterOrder": [
                        "path"
                      ],
                      "description": "Gets a GTM Trigger.",
                      "path": "tagmanager/v2/{+path}",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/triggers/{triggersId}",
                      "response": {
                        "$ref": "Trigger"
                      }
                    }
                  }
                },
                "gtag_config": {
                  "methods": {
                    "list": {
                      "id": "tagmanager.accounts.containers.workspaces.gtag_config.list",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/gtag_config",
                      "path": "tagmanager/v2/{+parent}/gtag_config",
                      "parameters": {
                        "pageToken": {
                          "location": "query",
                          "type": "string",
                          "description": "Continuation token for fetching the next page of results."
                        },
                        "parent": {
                          "description": "Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "required": true,
                          "location": "path",
                          "type": "string"
                        }
                      },
                      "httpMethod": "GET",
                      "response": {
                        "$ref": "ListGtagConfigResponse"
                      },
                      "description": "Lists all Google tag configs in a Container.",
                      "parameterOrder": [
                        "parent"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ]
                    },
                    "create": {
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "path": "tagmanager/v2/{+parent}/gtag_config",
                      "description": "Creates a Google tag config.",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/gtag_config",
                      "id": "tagmanager.accounts.containers.workspaces.gtag_config.create",
                      "parameterOrder": [
                        "parent"
                      ],
                      "request": {
                        "$ref": "GtagConfig"
                      },
                      "parameters": {
                        "parent": {
                          "required": true,
                          "location": "path",
                          "type": "string",
                          "description": "Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$"
                        }
                      },
                      "response": {
                        "$ref": "GtagConfig"
                      },
                      "httpMethod": "POST"
                    },
                    "get": {
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/gtag_config/{gtag_configId}",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "parameterOrder": [
                        "path"
                      ],
                      "path": "tagmanager/v2/{+path}",
                      "response": {
                        "$ref": "GtagConfig"
                      },
                      "parameters": {
                        "path": {
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/gtag_config/[^/]+$",
                          "required": true,
                          "description": "Google tag config's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/gtag_config/{gtag_config_id}",
                          "location": "path",
                          "type": "string"
                        }
                      },
                      "httpMethod": "GET",
                      "description": "Gets a Google tag config.",
                      "id": "tagmanager.accounts.containers.workspaces.gtag_config.get"
                    },
                    "delete": {
                      "parameters": {
                        "path": {
                          "type": "string",
                          "description": "Google tag config's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/gtag_config/{gtag_config_id}",
                          "required": true,
                          "location": "path",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/gtag_config/[^/]+$"
                        }
                      },
                      "parameterOrder": [
                        "path"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "path": "tagmanager/v2/{+path}",
                      "httpMethod": "DELETE",
                      "id": "tagmanager.accounts.containers.workspaces.gtag_config.delete",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/gtag_config/{gtag_configId}",
                      "description": "Deletes a Google tag config."
                    },
                    "update": {
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/gtag_config/{gtag_configId}",
                      "httpMethod": "PUT",
                      "description": "Updates a Google tag config.",
                      "parameterOrder": [
                        "path"
                      ],
                      "request": {
                        "$ref": "GtagConfig"
                      },
                      "parameters": {
                        "fingerprint": {
                          "description": "When provided, this fingerprint must match the fingerprint of the config in storage.",
                          "type": "string",
                          "location": "query"
                        },
                        "path": {
                          "location": "path",
                          "required": true,
                          "description": "Google tag config's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/gtag_config/{gtag_config_id}",
                          "type": "string",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/gtag_config/[^/]+$"
                        }
                      },
                      "path": "tagmanager/v2/{+path}",
                      "id": "tagmanager.accounts.containers.workspaces.gtag_config.update",
                      "response": {
                        "$ref": "GtagConfig"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ]
                    }
                  }
                },
                "clients": {
                  "methods": {
                    "list": {
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "parameters": {
                        "parent": {
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                          "required": true,
                          "location": "path",
                          "type": "string"
                        },
                        "pageToken": {
                          "type": "string",
                          "location": "query",
                          "description": "Continuation token for fetching the next page of results."
                        }
                      },
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/clients",
                      "description": "Lists all GTM Clients of a GTM container workspace.",
                      "path": "tagmanager/v2/{+parent}/clients",
                      "httpMethod": "GET",
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "ListClientsResponse"
                      },
                      "id": "tagmanager.accounts.containers.workspaces.clients.list"
                    },
                    "revert": {
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "id": "tagmanager.accounts.containers.workspaces.clients.revert",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/clients/{clientsId}:revert",
                      "response": {
                        "$ref": "RevertClientResponse"
                      },
                      "parameterOrder": [
                        "path"
                      ],
                      "description": "Reverts changes to a GTM Client in a GTM Workspace.",
                      "httpMethod": "POST",
                      "parameters": {
                        "fingerprint": {
                          "description": "When provided, this fingerprint must match the fingerprint of the client in storage.",
                          "type": "string",
                          "location": "query"
                        },
                        "path": {
                          "location": "path",
                          "type": "string",
                          "required": true,
                          "description": "GTM Client's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/clients/{client_id}",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/clients/[^/]+$"
                        }
                      },
                      "path": "tagmanager/v2/{+path}:revert"
                    },
                    "delete": {
                      "path": "tagmanager/v2/{+path}",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "parameterOrder": [
                        "path"
                      ],
                      "parameters": {
                        "path": {
                          "description": "GTM Client's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/clients/{client_id}",
                          "required": true,
                          "location": "path",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/clients/[^/]+$",
                          "type": "string"
                        }
                      },
                      "httpMethod": "DELETE",
                      "description": "Deletes a GTM Client.",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/clients/{clientsId}",
                      "id": "tagmanager.accounts.containers.workspaces.clients.delete"
                    },
                    "create": {
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "description": "Creates a GTM Client.",
                      "id": "tagmanager.accounts.containers.workspaces.clients.create",
                      "response": {
                        "$ref": "Client"
                      },
                      "path": "tagmanager/v2/{+parent}/clients",
                      "httpMethod": "POST",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/clients",
                      "parameterOrder": [
                        "parent"
                      ],
                      "request": {
                        "$ref": "Client"
                      },
                      "parameters": {
                        "parent": {
                          "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                          "location": "path",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "type": "string",
                          "required": true
                        }
                      }
                    },
                    "update": {
                      "description": "Updates a GTM Client.",
                      "parameterOrder": [
                        "path"
                      ],
                      "parameters": {
                        "fingerprint": {
                          "type": "string",
                          "location": "query",
                          "description": "When provided, this fingerprint must match the fingerprint of the client in storage."
                        },
                        "path": {
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/clients/[^/]+$",
                          "description": "GTM Client's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/clients/{client_id}",
                          "required": true,
                          "type": "string",
                          "location": "path"
                        }
                      },
                      "response": {
                        "$ref": "Client"
                      },
                      "id": "tagmanager.accounts.containers.workspaces.clients.update",
                      "request": {
                        "$ref": "Client"
                      },
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/clients/{clientsId}",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "path": "tagmanager/v2/{+path}",
                      "httpMethod": "PUT"
                    },
                    "get": {
                      "parameterOrder": [
                        "path"
                      ],
                      "response": {
                        "$ref": "Client"
                      },
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/clients/{clientsId}",
                      "httpMethod": "GET",
                      "path": "tagmanager/v2/{+path}",
                      "id": "tagmanager.accounts.containers.workspaces.clients.get",
                      "parameters": {
                        "path": {
                          "type": "string",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/clients/[^/]+$",
                          "required": true,
                          "description": "GTM Client's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/clients/{client_id}",
                          "location": "path"
                        }
                      },
                      "description": "Gets a GTM Client.",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "user_permissions": {
          "methods": {
            "list": {
              "httpMethod": "GET",
              "response": {
                "$ref": "ListUserPermissionsResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/tagmanager.manage.users"
              ],
              "parameterOrder": [
                "parent"
              ],
              "parameters": {
                "parent": {
                  "location": "path",
                  "description": "GTM Account's API relative path. Example: accounts/{account_id}",
                  "pattern": "^accounts/[^/]+$",
                  "type": "string",
                  "required": true
                },
                "pageToken": {
                  "location": "query",
                  "type": "string",
                  "description": "Continuation token for fetching the next page of results."
                }
              },
              "id": "tagmanager.accounts.user_permissions.list",
              "flatPath": "tagmanager/v2/accounts/{accountsId}/user_permissions",
              "path": "tagmanager/v2/{+parent}/user_permissions",
              "description": "List all users that have access to the account along with Account and Container user access granted to each of them."
            },
            "create": {
              "scopes": [
                "https://www.googleapis.com/auth/tagmanager.manage.users"
              ],
              "description": "Creates a user's Account & Container access.",
              "flatPath": "tagmanager/v2/accounts/{accountsId}/user_permissions",
              "response": {
                "$ref": "UserPermission"
              },
              "httpMethod": "POST",
              "parameterOrder": [
                "parent"
              ],
              "path": "tagmanager/v2/{+parent}/user_permissions",
              "request": {
                "$ref": "UserPermission"
              },
              "id": "tagmanager.accounts.user_permissions.create",
              "parameters": {
                "parent": {
                  "location": "path",
                  "type": "string",
                  "description": "GTM Account's API relative path. Example: accounts/{account_id}",
                  "required": true,
                  "pattern": "^accounts/[^/]+$"
                }
              }
            },
            "update": {
              "request": {
                "$ref": "UserPermission"
              },
              "flatPath": "tagmanager/v2/accounts/{accountsId}/user_permissions/{user_permissionsId}",
              "scopes": [
                "https://www.googleapis.com/auth/tagmanager.manage.users"
              ],
              "httpMethod": "PUT",
              "description": "Updates a user's Account & Container access.",
              "path": "tagmanager/v2/{+path}",
              "parameters": {
                "path": {
                  "type": "string",
                  "pattern": "^accounts/[^/]+/user_permissions/[^/]+$",
                  "location": "path",
                  "description": "GTM UserPermission's API relative path. Example: accounts/{account_id}/user_permissions/{user_permission_id}",
                  "required": true
                }
              },
              "response": {
                "$ref": "UserPermission"
              },
              "id": "tagmanager.accounts.user_permissions.update",
              "parameterOrder": [
                "path"
              ]
            },
            "delete": {
              "scopes": [
                "https://www.googleapis.com/auth/tagmanager.manage.users"
              ],
              "httpMethod": "DELETE",
              "description": "Removes a user from the account, revoking access to it and all of its containers.",
              "parameterOrder": [
                "path"
              ],
              "parameters": {
                "path": {
                  "type": "string",
                  "pattern": "^accounts/[^/]+/user_permissions/[^/]+$",
                  "description": "GTM UserPermission's API relative path. Example: accounts/{account_id}/user_permissions/{user_permission_id}",
                  "location": "path",
                  "required": true
                }
              },
              "flatPath": "tagmanager/v2/accounts/{accountsId}/user_permissions/{user_permissionsId}",
              "path": "tagmanager/v2/{+path}",
              "id": "tagmanager.accounts.user_permissions.delete"
            },
            "get": {
              "scopes": [
                "https://www.googleapis.com/auth/tagmanager.manage.users"
              ],
              "description": "Gets a user's Account & Container access.",
              "response": {
                "$ref": "UserPermission"
              },
              "httpMethod": "GET",
              "path": "tagmanager/v2/{+path}",
              "parameters": {
                "path": {
                  "description": "GTM UserPermission's API relative path. Example: accounts/{account_id}/user_permissions/{user_permission_id}",
                  "required": true,
                  "pattern": "^accounts/[^/]+/user_permissions/[^/]+$",
                  "type": "string",
                  "location": "path"
                }
              },
              "id": "tagmanager.accounts.user_permissions.get",
              "parameterOrder": [
                "path"
              ],
              "flatPath": "tagmanager/v2/accounts/{accountsId}/user_permissions/{user_permissionsId}"
            }
          }
        }
      }
    }
  },
  "ownerName": "Google",
  "protocol": "rest",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "discoveryVersion": "v1",
  "batchPath": "batch",
  "kind": "discovery#restDescription"
}
