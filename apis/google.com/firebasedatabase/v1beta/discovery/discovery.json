{
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "resources": {
            "instances": {
              "methods": {
                "undelete": {
                  "description": "Restores a DatabaseInstance that was previously marked to be deleted. After the delete method is used, DatabaseInstances are set to the DELETED state for 20 days, and will be purged within 30 days. Databases in the DELETED state can be undeleted without losing any data. This method may only be used on a DatabaseInstance in the DELETED state. Purged DatabaseInstances may not be recovered.",
                  "path": "v1beta/{+name}:undelete",
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "required": true,
                      "description": "Required. The fully qualified resource name of the database instance, in the form: `projects/{project-number}/locations/{location-id}/instances/{database-id}`",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/firebase"
                  ],
                  "request": {
                    "$ref": "UndeleteDatabaseInstanceRequest"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:undelete",
                  "id": "firebasedatabase.projects.locations.instances.undelete",
                  "response": {
                    "$ref": "DatabaseInstance"
                  }
                },
                "get": {
                  "description": "Gets the DatabaseInstance identified by the specified resource name.",
                  "response": {
                    "$ref": "DatabaseInstance"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-platform.read-only",
                    "https://www.googleapis.com/auth/firebase",
                    "https://www.googleapis.com/auth/firebase.readonly"
                  ],
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}",
                  "id": "firebasedatabase.projects.locations.instances.get",
                  "parameters": {
                    "name": {
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "type": "string",
                      "description": "Required. The fully qualified resource name of the database instance, in the form: `projects/{project-number}/locations/{location-id}/instances/{database-id}`. `database-id` is a globally unique identifier across all parent collections. For convenience, this method allows you to supply `-` as a wildcard character in place of specific collections under `projects` and `locations`. The resulting wildcarding form of the method is: `projects/-/locations/-/instances/{database-id}`."
                    }
                  },
                  "httpMethod": "GET",
                  "path": "v1beta/{+name}",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "reenable": {
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:reenable",
                  "description": "Enables a DatabaseInstance. The database must have been disabled previously using DisableDatabaseInstance. The state of a successfully reenabled DatabaseInstance is ACTIVE.",
                  "response": {
                    "$ref": "DatabaseInstance"
                  },
                  "path": "v1beta/{+name}:reenable",
                  "id": "firebasedatabase.projects.locations.instances.reenable",
                  "request": {
                    "$ref": "ReenableDatabaseInstanceRequest"
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "Required. The fully qualified resource name of the database instance, in the form: `projects/{project-number}/locations/{location-id}/instances/{database-id}`",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/firebase"
                  ],
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "create": {
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent project for which to create a database instance, in the form: `projects/{project-number}/locations/{location-id}`.",
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "validateOnly": {
                      "description": "When set to true, the request will be validated but not submitted.",
                      "location": "query",
                      "type": "boolean"
                    },
                    "databaseId": {
                      "description": "The globally unique identifier of the database instance.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "response": {
                    "$ref": "DatabaseInstance"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "firebasedatabase.projects.locations.instances.create",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/firebase"
                  ],
                  "description": "Requests that a new DatabaseInstance be created. The state of a successfully created DatabaseInstance is ACTIVE. Only available for projects on the Blaze plan. Projects can be upgraded using the Cloud Billing API https://cloud.google.com/billing/reference/rest/v1/projects/updateBillingInfo. Note that it might take a few minutes for billing enablement state to propagate to Firebase systems.",
                  "request": {
                    "$ref": "DatabaseInstance"
                  },
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/instances",
                  "path": "v1beta/{+parent}/instances",
                  "httpMethod": "POST"
                },
                "list": {
                  "httpMethod": "GET",
                  "path": "v1beta/{+parent}/instances",
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "description": "Required. The parent project for which to list database instances, in the form: `projects/{project-number}/locations/{location-id}` To list across all locations, use a parent in the form: `projects/{project-number}/locations/-`"
                    },
                    "pageToken": {
                      "description": "Token returned from a previous call to `ListDatabaseInstances` indicating where in the set of database instances to resume listing.",
                      "location": "query",
                      "type": "string"
                    },
                    "showDeleted": {
                      "description": "Indicate that DatabaseInstances in the `DELETED` state should also be returned.",
                      "type": "boolean",
                      "location": "query"
                    },
                    "pageSize": {
                      "description": "The maximum number of database instances to return in the response. The server may return fewer than this at its discretion. If no value is specified (or too large a value is specified), then the server will impose its own limit.",
                      "location": "query",
                      "format": "int32",
                      "type": "integer"
                    }
                  },
                  "id": "firebasedatabase.projects.locations.instances.list",
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/instances",
                  "description": "Lists each DatabaseInstance associated with the specified parent project. The list items are returned in no particular order, but will be a consistent view of the database instances when additional requests are made with a `pageToken`. The resulting list contains instances in any STATE. The list results may be stale by a few seconds. Use GetDatabaseInstance for consistent reads.",
                  "response": {
                    "$ref": "ListDatabaseInstancesResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-platform.read-only",
                    "https://www.googleapis.com/auth/firebase",
                    "https://www.googleapis.com/auth/firebase.readonly"
                  ]
                },
                "delete": {
                  "response": {
                    "$ref": "DatabaseInstance"
                  },
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "description": "Required. The fully qualified resource name of the database instance, in the form: `projects/{project-number}/locations/{location-id}/instances/{database-id}`",
                      "required": true
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1beta/{+name}",
                  "description": "Marks a DatabaseInstance to be deleted. The DatabaseInstance will be set to the DELETED state for 20 days, and will be purged within 30 days. The default database cannot be deleted. IDs for deleted database instances may never be recovered or re-used. The Database may only be deleted if it is already in a DISABLED state.",
                  "httpMethod": "DELETE",
                  "id": "firebasedatabase.projects.locations.instances.delete",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/firebase"
                  ]
                },
                "disable": {
                  "id": "firebasedatabase.projects.locations.instances.disable",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/firebase"
                  ],
                  "response": {
                    "$ref": "DatabaseInstance"
                  },
                  "path": "v1beta/{+name}:disable",
                  "description": "Disables a DatabaseInstance. The database can be re-enabled later using ReenableDatabaseInstance. When a database is disabled, all reads and writes are denied, including view access in the Firebase console.",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "description": "Required. The fully qualified resource name of the database instance, in the form: `projects/{project-number}/locations/{location-id}/instances/{database-id}`"
                    }
                  },
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:disable",
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "DisableDatabaseInstanceRequest"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "baseUrl": "https://firebasedatabase.googleapis.com/",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "fullyEncodeReservedExpansion": true,
  "canonicalName": "Firebase Realtime Database",
  "version": "v1beta",
  "kind": "discovery#restDescription",
  "revision": "20230223",
  "name": "firebasedatabase",
  "version_module": true,
  "title": "Firebase Realtime Database API",
  "documentationLink": "https://firebase.google.com/docs/reference/rest/database/database-management/rest/",
  "id": "firebasedatabase:v1beta",
  "rootUrl": "https://firebasedatabase.googleapis.com/",
  "description": "The Firebase Realtime Database API enables programmatic provisioning and management of Realtime Database instances.",
  "ownerName": "Google",
  "ownerDomain": "google.com",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/firebase": {
          "description": "View and administer all your Firebase data and settings"
        },
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        },
        "https://www.googleapis.com/auth/firebase.readonly": {
          "description": "View all your Firebase data and settings"
        },
        "https://www.googleapis.com/auth/cloud-platform.read-only": {
          "description": "View your data across Google Cloud services and see the email address of your Google Account"
        }
      }
    }
  },
  "schemas": {
    "DatabaseInstance": {
      "id": "DatabaseInstance",
      "type": "object",
      "properties": {
        "type": {
          "enum": [
            "DATABASE_INSTANCE_TYPE_UNSPECIFIED",
            "DEFAULT_DATABASE",
            "USER_DATABASE"
          ],
          "enumDescriptions": [
            "Unknown state, likely the result of an error on the backend. This is only used for distinguishing unset values.",
            "The default database that is provisioned when a project is created.",
            "A database that the user created."
          ],
          "type": "string",
          "description": "Immutable. The database instance type. On creation only USER_DATABASE is allowed, which is also the default when omitted."
        },
        "state": {
          "type": "string",
          "enum": [
            "LIFECYCLE_STATE_UNSPECIFIED",
            "ACTIVE",
            "DISABLED",
            "DELETED"
          ],
          "readOnly": true,
          "enumDescriptions": [
            "Unspecified state, likely the result of an error on the backend. This is only used for distinguishing unset values.",
            "The normal and active state.",
            "The database is in a disabled state. It can be re-enabled later.",
            "The database is in a deleted state."
          ],
          "description": "Output only. The database's lifecycle state. Read-only."
        },
        "project": {
          "readOnly": true,
          "description": "Output only. The resource name of the project this instance belongs to. For example: `projects/{project-number}`.",
          "type": "string"
        },
        "name": {
          "description": "The fully qualified resource name of the database instance, in the form: `projects/{project-number}/locations/{location-id}/instances/{database-id}`.",
          "type": "string"
        },
        "databaseUrl": {
          "type": "string",
          "description": "Output only. Output Only. The globally unique hostname of the database.",
          "readOnly": true
        }
      },
      "description": "Representation of a Realtime Database instance. Details on interacting with contents of a DatabaseInstance can be found at: https://firebase.google.com/docs/database/rest/start."
    },
    "DisableDatabaseInstanceRequest": {
      "properties": {},
      "id": "DisableDatabaseInstanceRequest",
      "description": "The request sent to the DisableDatabaseInstance method.",
      "type": "object"
    },
    "UndeleteDatabaseInstanceRequest": {
      "type": "object",
      "description": "The request sent to UndeleteDatabaseInstance method.",
      "properties": {},
      "id": "UndeleteDatabaseInstanceRequest"
    },
    "ReenableDatabaseInstanceRequest": {
      "description": "The request sent to the ReenableDatabaseInstance method.",
      "properties": {},
      "id": "ReenableDatabaseInstanceRequest",
      "type": "object"
    },
    "ListDatabaseInstancesResponse": {
      "description": "The response from the ListDatabaseInstances method.",
      "id": "ListDatabaseInstancesResponse",
      "properties": {
        "nextPageToken": {
          "description": "If the result list is too large to fit in a single response, then a token is returned. If the string is empty, then this response is the last page of results. This token can be used in a subsequent call to `ListDatabaseInstances` to find the next group of database instances. Page tokens are short-lived and should not be persisted.",
          "type": "string"
        },
        "instances": {
          "items": {
            "$ref": "DatabaseInstance"
          },
          "type": "array",
          "description": "List of each DatabaseInstance that is in the parent Firebase project."
        }
      },
      "type": "object"
    }
  },
  "discoveryVersion": "v1",
  "batchPath": "batch",
  "mtlsRootUrl": "https://firebasedatabase.mtls.googleapis.com/",
  "parameters": {
    "access_token": {
      "location": "query",
      "description": "OAuth access token.",
      "type": "string"
    },
    "upload_protocol": {
      "location": "query",
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
    },
    "fields": {
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string"
    },
    "callback": {
      "location": "query",
      "description": "JSONP",
      "type": "string"
    },
    "$.xgafv": {
      "location": "query",
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "type": "string"
    },
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "quotaUser": {
      "type": "string",
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
    },
    "oauth_token": {
      "location": "query",
      "description": "OAuth 2.0 token for the current user.",
      "type": "string"
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string",
      "location": "query"
    },
    "alt": {
      "location": "query",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "type": "string",
      "description": "Data format for response.",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "default": "json"
    },
    "prettyPrint": {
      "location": "query",
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean",
      "default": "true"
    }
  },
  "protocol": "rest",
  "servicePath": "",
  "basePath": ""
}
