{
  "mtlsRootUrl": "https://playintegrity.mtls.googleapis.com/",
  "id": "playintegrity:v1",
  "name": "playintegrity",
  "rootUrl": "https://playintegrity.googleapis.com/",
  "fullyEncodeReservedExpansion": true,
  "description": "The Play Integrity API helps you check that you're interacting with your genuine app on a genuine Android device powered by Google Play services. The Play Integrity API has replaced SafetyNet Attestation and Android Device Verification.",
  "ownerName": "Google",
  "servicePath": "",
  "canonicalName": "Play Integrity",
  "title": "Google Play Integrity API",
  "batchPath": "batch",
  "ownerDomain": "google.com",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/playintegrity": {
          "description": "Private Service: https://www.googleapis.com/auth/playintegrity"
        }
      }
    }
  },
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "revision": "20230226",
  "version": "v1",
  "parameters": {
    "uploadType": {
      "location": "query",
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query",
      "type": "string"
    },
    "$.xgafv": {
      "location": "query",
      "description": "V1 error format.",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "type": "string",
      "enum": [
        "1",
        "2"
      ]
    },
    "access_token": {
      "description": "OAuth access token.",
      "location": "query",
      "type": "string"
    },
    "alt": {
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query",
      "description": "Data format for response.",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "default": "json",
      "type": "string"
    },
    "fields": {
      "type": "string",
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response."
    },
    "oauth_token": {
      "location": "query",
      "description": "OAuth 2.0 token for the current user.",
      "type": "string"
    },
    "quotaUser": {
      "type": "string",
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
    },
    "callback": {
      "location": "query",
      "type": "string",
      "description": "JSONP"
    },
    "prettyPrint": {
      "location": "query",
      "default": "true",
      "type": "boolean",
      "description": "Returns response with indentations and line breaks."
    },
    "key": {
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string"
    }
  },
  "resources": {
    "v1": {
      "methods": {
        "decodeIntegrityToken": {
          "parameters": {
            "packageName": {
              "location": "path",
              "description": " Package name of the app the attached integrity token belongs to.",
              "type": "string",
              "pattern": "^[^/]+$",
              "required": true
            }
          },
          "httpMethod": "POST",
          "response": {
            "$ref": "DecodeIntegrityTokenResponse"
          },
          "description": "Decodes the integrity token and returns the token payload.",
          "parameterOrder": [
            "packageName"
          ],
          "flatPath": "v1/{v1Id}:decodeIntegrityToken",
          "id": "playintegrity.decodeIntegrityToken",
          "path": "v1/{+packageName}:decodeIntegrityToken",
          "request": {
            "$ref": "DecodeIntegrityTokenRequest"
          },
          "scopes": [
            "https://www.googleapis.com/auth/playintegrity"
          ]
        }
      }
    }
  },
  "schemas": {
    "TokenPayloadExternal": {
      "type": "object",
      "properties": {
        "accountDetails": {
          "description": "Required. Details about the Play Store account.",
          "$ref": "AccountDetails"
        },
        "appIntegrity": {
          "$ref": "AppIntegrity",
          "description": "Required. Details about the application integrity."
        },
        "testingDetails": {
          "description": "Indicates that this payload is generated for testing purposes and contains any additional data that is linked with testing status.",
          "$ref": "TestingDetails"
        },
        "deviceIntegrity": {
          "$ref": "DeviceIntegrity",
          "description": "Required. Details about the device integrity."
        },
        "requestDetails": {
          "description": "Required. Details about the integrity request.",
          "$ref": "RequestDetails"
        }
      },
      "id": "TokenPayloadExternal",
      "description": "Contains basic app information and integrity signals like device attestation and licensing details."
    },
    "AppIntegrity": {
      "description": "Contains the application integrity information.",
      "type": "object",
      "properties": {
        "packageName": {
          "description": "Package name of the application under attestation. Set iff app_recognition_verdict != UNEVALUATED.",
          "type": "string"
        },
        "appRecognitionVerdict": {
          "type": "string",
          "enum": [
            "UNKNOWN",
            "PLAY_RECOGNIZED",
            "UNRECOGNIZED_VERSION",
            "UNEVALUATED"
          ],
          "enumDescriptions": [
            "Play does not have sufficient information to evaluate app integrity",
            "The app and certificate match the versions distributed by Play.",
            "The certificate or package name does not match Google Play records.",
            "Application integrity was not evaluated since a necessary requirement was missed. For example DeviceIntegrity did not meet the minimum bar."
          ],
          "description": "Required. Details about the app recognition verdict"
        },
        "certificateSha256Digest": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The SHA256 hash of the requesting app's signing certificates (base64 web-safe encoded). Set iff app_recognition_verdict != UNEVALUATED."
        },
        "versionCode": {
          "format": "int64",
          "description": "Version code of the application. Set iff app_recognition_verdict != UNEVALUATED.",
          "type": "string"
        }
      },
      "id": "AppIntegrity"
    },
    "DeviceIntegrity": {
      "type": "object",
      "description": "Contains the device attestation information.",
      "properties": {
        "deviceRecognitionVerdict": {
          "items": {
            "enumDescriptions": [
              "Play does not have sufficient information to evaluate device integrity",
              "App is running on a device that passes basic system integrity checks, but may not meet Android platform compatibility requirements and may not be approved to run Google Play services.",
              "App is running on GMS Android device with Google Play services.",
              "App is running on GMS Android device with Google Play services and has a strong guarantee of system integrity such as a hardware-backed keystore.",
              "App is running on an Android emulator with Google Play services which meets core Android compatibility requirements."
            ],
            "type": "string",
            "enum": [
              "UNKNOWN",
              "MEETS_BASIC_INTEGRITY",
              "MEETS_DEVICE_INTEGRITY",
              "MEETS_STRONG_INTEGRITY",
              "MEETS_VIRTUAL_INTEGRITY"
            ]
          },
          "type": "array",
          "description": "Details about the integrity of the device the app is running on"
        }
      },
      "id": "DeviceIntegrity"
    },
    "DecodeIntegrityTokenRequest": {
      "type": "object",
      "properties": {
        "integrityToken": {
          "description": "Encoded integrity token.",
          "type": "string"
        }
      },
      "id": "DecodeIntegrityTokenRequest",
      "description": "Request to decode the integrity token."
    },
    "RequestDetails": {
      "id": "RequestDetails",
      "properties": {
        "requestPackageName": {
          "description": "Required. Application package name this attestation was requested for. Note: This field makes no guarantees or promises on the caller integrity. For details on application integrity, check application_integrity.",
          "type": "string"
        },
        "requestHash": {
          "type": "string",
          "description": "Request hash that was provided in the request."
        },
        "nonce": {
          "description": "Nonce that was provided in the request (which is base64 web-safe no-wrap).",
          "type": "string"
        },
        "timestampMillis": {
          "description": "Required. Timestamp, in milliseconds, of the integrity application request.",
          "type": "string",
          "format": "int64"
        }
      },
      "type": "object",
      "description": "Contains the integrity request information."
    },
    "AccountDetails": {
      "id": "AccountDetails",
      "description": "Contains the account information such as the licensing status for the user in the scope.",
      "type": "object",
      "properties": {
        "appLicensingVerdict": {
          "type": "string",
          "description": "Required. Details about the licensing status of the user for the app in the scope.",
          "enum": [
            "UNKNOWN",
            "LICENSED",
            "UNLICENSED",
            "UNEVALUATED"
          ],
          "enumDescriptions": [
            "Play does not have sufficient information to evaluate licensing details",
            "The app and certificate match the versions distributed by Play.",
            "The certificate or package name does not match Google Play records.",
            "Licensing details were not evaluated since a necessary requirement was missed. For example DeviceIntegrity did not meet the minimum bar or the application was not a known Play version."
          ]
        },
        "accountActivity": {
          "$ref": "AccountActivity",
          "description": "Details about the account activity for the user in the scope."
        }
      }
    },
    "TestingDetails": {
      "id": "TestingDetails",
      "type": "object",
      "properties": {
        "isTestingResponse": {
          "description": "Required. Indicates that the information contained in this payload is a testing response that is statically overridden for a tester.",
          "type": "boolean"
        }
      },
      "description": "Contains additional information generated for testing responses."
    },
    "DecodeIntegrityTokenResponse": {
      "description": "Response containing the decoded integrity payload.",
      "type": "object",
      "properties": {
        "tokenPayloadExternal": {
          "$ref": "TokenPayloadExternal",
          "description": "Plain token payload generated from the decoded integrity token."
        }
      },
      "id": "DecodeIntegrityTokenResponse"
    },
    "AccountActivity": {
      "type": "object",
      "properties": {
        "activityLevel": {
          "enumDescriptions": [
            "Activity level has not been set.",
            "Account activity level is not evaluated because one of the prerequisite conditions is not met (e.g., device is not trusted, the user does not have Play app license)",
            "Google Play store activity is unusual for at least one of the user accounts on the device. Google Play recommends checking that this is a real user.",
            "Google Play does not have sufficient activity for the user account on the device. The account may be new, or it may lack activity on Google Play.",
            "Google Play store activity is typical for the user account or accounts on the device.",
            "Google Play store activity is typical for the user account or accounts on the device, with harder to replicate signals."
          ],
          "description": "Required. Indicates the activity level of the account.",
          "type": "string",
          "enum": [
            "ACTIVITY_LEVEL_UNSPECIFIED",
            "UNEVALUATED",
            "UNUSUAL",
            "UNKNOWN",
            "TYPICAL_BASIC",
            "TYPICAL_STRONG"
          ]
        }
      },
      "description": "Contains a signal helping apps differentiating between likely genuine users and likely non-genuine traffic (such as accounts being used for fraud, accounts used by automated traffic, or accounts used in device farms) based on the presence and volume of Play store activity.",
      "id": "AccountActivity"
    }
  },
  "kind": "discovery#restDescription",
  "discoveryVersion": "v1",
  "protocol": "rest",
  "version_module": true,
  "baseUrl": "https://playintegrity.googleapis.com/",
  "basePath": "",
  "documentationLink": "https://developer.android.com/google/play/integrity"
}
