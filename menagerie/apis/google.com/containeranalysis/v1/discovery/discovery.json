{
  "description": "An implementation of the Grafeas API, which stores, and enables querying and retrieval of critical metadata about all of your software artifacts.",
  "id": "containeranalysis:v1",
  "revision": "20230221",
  "version": "v1",
  "schemas": {
    "ContaineranalysisGoogleDevtoolsCloudbuildV1UploadedPythonPackage": {
      "type": "object",
      "properties": {
        "fileHashes": {
          "description": "Hash types and values of the Python Artifact.",
          "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1FileHashes"
        },
        "uri": {
          "description": "URI of the uploaded artifact.",
          "type": "string"
        },
        "pushTiming": {
          "description": "Output only. Stores timing information for pushing the specified artifact.",
          "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1TimeSpan",
          "readOnly": true
        }
      },
      "description": "Artifact uploaded using the PythonPackage directive.",
      "id": "ContaineranalysisGoogleDevtoolsCloudbuildV1UploadedPythonPackage"
    },
    "ListNoteOccurrencesResponse": {
      "type": "object",
      "properties": {
        "occurrences": {
          "items": {
            "$ref": "Occurrence"
          },
          "type": "array",
          "description": "The occurrences attached to the specified note."
        },
        "nextPageToken": {
          "description": "Token to provide to skip to a particular spot in the list.",
          "type": "string"
        }
      },
      "description": "Response for listing occurrences for a note.",
      "id": "ListNoteOccurrencesResponse"
    },
    "Empty": {
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "id": "Empty",
      "type": "object",
      "properties": {}
    },
    "ContaineranalysisGoogleDevtoolsCloudbuildV1BuiltImage": {
      "description": "An image built by the pipeline.",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name used to push the container image to Google Container Registry, as presented to `docker push`."
        },
        "pushTiming": {
          "description": "Output only. Stores timing information for pushing the specified image.",
          "readOnly": true,
          "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1TimeSpan"
        },
        "digest": {
          "description": "Docker Registry 2.0 digest.",
          "type": "string"
        }
      },
      "id": "ContaineranalysisGoogleDevtoolsCloudbuildV1BuiltImage"
    },
    "GitSourceContext": {
      "id": "GitSourceContext",
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "description": "Git repository URL."
        },
        "revisionId": {
          "type": "string",
          "description": "Git commit hash."
        }
      },
      "description": "A GitSourceContext denotes a particular revision in a third party Git repository (e.g., GitHub)."
    },
    "Identity": {
      "description": "The unique identifier of the update.",
      "type": "object",
      "properties": {
        "revision": {
          "description": "The revision number of the update.",
          "type": "integer",
          "format": "int32"
        },
        "updateId": {
          "type": "string",
          "description": "The revision independent identifier of the update."
        }
      },
      "id": "Identity"
    },
    "BuildOccurrence": {
      "id": "BuildOccurrence",
      "properties": {
        "intotoProvenance": {
          "$ref": "InTotoProvenance",
          "description": "Deprecated. See InTotoStatement for the replacement. In-toto Provenance representation as defined in spec."
        },
        "provenance": {
          "$ref": "BuildProvenance",
          "description": "The actual provenance for the build."
        },
        "provenanceBytes": {
          "description": "Serialized JSON representation of the provenance, used in generating the build signature in the corresponding build note. After verifying the signature, `provenance_bytes` can be unmarshalled and compared to the provenance to confirm that it is unchanged. A base64-encoded string representation of the provenance bytes is used for the signature in order to interoperate with openssl which expects this format for signature verification. The serialized form is captured both to avoid ambiguity in how the provenance is marshalled to json as well to prevent incompatibilities with future changes.",
          "type": "string"
        },
        "intotoStatement": {
          "description": "In-toto Statement representation as defined in spec. The intoto_statement can contain any type of provenance. The serialized payload of the statement can be stored and signed in the Occurrence's envelope.",
          "$ref": "InTotoStatement"
        }
      },
      "type": "object",
      "description": "Details of a build occurrence."
    },
    "CVSS": {
      "id": "CVSS",
      "type": "object",
      "properties": {
        "attackComplexity": {
          "type": "string",
          "enum": [
            "ATTACK_COMPLEXITY_UNSPECIFIED",
            "ATTACK_COMPLEXITY_LOW",
            "ATTACK_COMPLEXITY_HIGH"
          ],
          "enumDescriptions": [
            "",
            "",
            ""
          ]
        },
        "baseScore": {
          "format": "float",
          "description": "The base score is a function of the base metric scores.",
          "type": "number"
        },
        "scope": {
          "enumDescriptions": [
            "",
            "",
            ""
          ],
          "enum": [
            "SCOPE_UNSPECIFIED",
            "SCOPE_UNCHANGED",
            "SCOPE_CHANGED"
          ],
          "type": "string"
        },
        "exploitabilityScore": {
          "format": "float",
          "type": "number"
        },
        "privilegesRequired": {
          "enum": [
            "PRIVILEGES_REQUIRED_UNSPECIFIED",
            "PRIVILEGES_REQUIRED_NONE",
            "PRIVILEGES_REQUIRED_LOW",
            "PRIVILEGES_REQUIRED_HIGH"
          ],
          "type": "string",
          "enumDescriptions": [
            "",
            "",
            "",
            ""
          ]
        },
        "userInteraction": {
          "enum": [
            "USER_INTERACTION_UNSPECIFIED",
            "USER_INTERACTION_NONE",
            "USER_INTERACTION_REQUIRED"
          ],
          "type": "string",
          "enumDescriptions": [
            "",
            "",
            ""
          ]
        },
        "integrityImpact": {
          "type": "string",
          "enumDescriptions": [
            "",
            "",
            "",
            ""
          ],
          "enum": [
            "IMPACT_UNSPECIFIED",
            "IMPACT_HIGH",
            "IMPACT_LOW",
            "IMPACT_NONE"
          ]
        },
        "attackVector": {
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            ""
          ],
          "type": "string",
          "description": "Base Metrics Represents the intrinsic characteristics of a vulnerability that are constant over time and across user environments.",
          "enum": [
            "ATTACK_VECTOR_UNSPECIFIED",
            "ATTACK_VECTOR_NETWORK",
            "ATTACK_VECTOR_ADJACENT",
            "ATTACK_VECTOR_LOCAL",
            "ATTACK_VECTOR_PHYSICAL"
          ]
        },
        "authentication": {
          "type": "string",
          "enumDescriptions": [
            "",
            "",
            "",
            ""
          ],
          "enum": [
            "AUTHENTICATION_UNSPECIFIED",
            "AUTHENTICATION_MULTIPLE",
            "AUTHENTICATION_SINGLE",
            "AUTHENTICATION_NONE"
          ]
        },
        "confidentialityImpact": {
          "enum": [
            "IMPACT_UNSPECIFIED",
            "IMPACT_HIGH",
            "IMPACT_LOW",
            "IMPACT_NONE"
          ],
          "type": "string",
          "enumDescriptions": [
            "",
            "",
            "",
            ""
          ]
        },
        "impactScore": {
          "type": "number",
          "format": "float"
        },
        "availabilityImpact": {
          "enumDescriptions": [
            "",
            "",
            "",
            ""
          ],
          "type": "string",
          "enum": [
            "IMPACT_UNSPECIFIED",
            "IMPACT_HIGH",
            "IMPACT_LOW",
            "IMPACT_NONE"
          ]
        }
      },
      "description": "Common Vulnerability Scoring System. For details, see https://www.first.org/cvss/specification-document This is a message we will try to use for storing various versions of CVSS rather than making a separate proto for storing a specific version."
    },
    "SlsaRecipe": {
      "id": "SlsaRecipe",
      "properties": {
        "type": {
          "type": "string",
          "description": "URI indicating what type of recipe was performed. It determines the meaning of recipe.entryPoint, recipe.arguments, recipe.environment, and materials."
        },
        "definedInMaterial": {
          "format": "int64",
          "type": "string",
          "description": "Index in materials containing the recipe steps that are not implied by recipe.type. For example, if the recipe type were \"make\", then this would point to the source containing the Makefile, not the make program itself. Set to -1 if the recipe doesn't come from a material, as zero is default unset value for int64."
        },
        "environment": {
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "type": "object",
          "description": "Any other builder-controlled inputs necessary for correctly evaluating the recipe. Usually only needed for reproducing the build but not evaluated as part of policy. Depending on the recipe Type, the structure may be different."
        },
        "arguments": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "description": "Collection of all external inputs that influenced the build on top of recipe.definedInMaterial and recipe.entryPoint. For example, if the recipe type were \"make\", then this might be the flags passed to make aside from the target, which is captured in recipe.entryPoint. Depending on the recipe Type, the structure may be different.",
          "type": "object"
        },
        "entryPoint": {
          "description": "String identifying the entry point into the build. This is often a path to a configuration file and/or a target label within that file. The syntax and meaning are defined by recipe.type. For example, if the recipe type were \"make\", then this would reference the directory in which to run make as well as which target to use.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Steps taken to build the artifact. For a TaskRun, typically each container corresponds to one step in the recipe."
    },
    "ListNotesResponse": {
      "id": "ListNotesResponse",
      "properties": {
        "nextPageToken": {
          "description": "The next pagination token in the list response. It should be used as `page_token` for the following request. An empty value means no more results.",
          "type": "string"
        },
        "notes": {
          "items": {
            "$ref": "Note"
          },
          "type": "array",
          "description": "The notes requested."
        }
      },
      "description": "Response for listing notes.",
      "type": "object"
    },
    "PackageOccurrence": {
      "description": "Details on how a particular software package was installed on a system.",
      "properties": {
        "architecture": {
          "type": "string",
          "description": "Output only. The CPU architecture for which packages in this distribution channel were built. Architecture will be blank for language packages.",
          "enumDescriptions": [
            "Unknown architecture.",
            "X86 architecture.",
            "X64 architecture."
          ],
          "readOnly": true,
          "enum": [
            "ARCHITECTURE_UNSPECIFIED",
            "X86",
            "X64"
          ]
        },
        "version": {
          "$ref": "Version",
          "readOnly": true,
          "description": "Output only. The version of the package."
        },
        "license": {
          "description": "Licenses that have been declared by the authors of the package.",
          "$ref": "License"
        },
        "packageType": {
          "type": "string",
          "description": "Output only. The type of package; whether native or non native (e.g., ruby gems, node.js packages, etc.).",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Required. Output only. The name of the installed package."
        },
        "cpeUri": {
          "description": "Output only. The cpe_uri in [CPE format](https://cpe.mitre.org/specification/) denoting the package manager version distributing a package. The cpe_uri will be blank for language packages.",
          "readOnly": true,
          "type": "string"
        },
        "location": {
          "items": {
            "$ref": "Location"
          },
          "type": "array",
          "description": "All of the places within the filesystem versions of this package have been found."
        }
      },
      "id": "PackageOccurrence",
      "type": "object"
    },
    "Recipe": {
      "description": "Steps taken to build the artifact. For a TaskRun, typically each container corresponds to one step in the recipe.",
      "type": "object",
      "properties": {
        "definedInMaterial": {
          "description": "Index in materials containing the recipe steps that are not implied by recipe.type. For example, if the recipe type were \"make\", then this would point to the source containing the Makefile, not the make program itself. Set to -1 if the recipe doesn't come from a material, as zero is default unset value for int64.",
          "type": "string",
          "format": "int64"
        },
        "type": {
          "description": "URI indicating what type of recipe was performed. It determines the meaning of recipe.entryPoint, recipe.arguments, recipe.environment, and materials.",
          "type": "string"
        },
        "environment": {
          "items": {
            "type": "object",
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            }
          },
          "description": "Any other builder-controlled inputs necessary for correctly evaluating the recipe. Usually only needed for reproducing the build but not evaluated as part of policy. Since the environment field can greatly vary in structure, depending on the builder and recipe type, this is of form \"Any\".",
          "type": "array"
        },
        "arguments": {
          "description": "Collection of all external inputs that influenced the build on top of recipe.definedInMaterial and recipe.entryPoint. For example, if the recipe type were \"make\", then this might be the flags passed to make aside from the target, which is captured in recipe.entryPoint. Since the arguments field can greatly vary in structure, depending on the builder and recipe type, this is of form \"Any\".",
          "items": {
            "type": "object",
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            }
          },
          "type": "array"
        },
        "entryPoint": {
          "type": "string",
          "description": "String identifying the entry point into the build. This is often a path to a configuration file and/or a target label within that file. The syntax and meaning are defined by recipe.type. For example, if the recipe type were \"make\", then this would reference the directory in which to run make as well as which target to use."
        }
      },
      "id": "Recipe"
    },
    "SetIamPolicyRequest": {
      "properties": {
        "policy": {
          "$ref": "Policy",
          "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them."
        }
      },
      "id": "SetIamPolicyRequest",
      "type": "object",
      "description": "Request message for `SetIamPolicy` method."
    },
    "ContaineranalysisGoogleDevtoolsCloudbuildV1Results": {
      "description": "Artifacts created by the build pipeline.",
      "id": "ContaineranalysisGoogleDevtoolsCloudbuildV1Results",
      "properties": {
        "images": {
          "type": "array",
          "description": "Container images that were built as a part of the build.",
          "items": {
            "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1BuiltImage"
          }
        },
        "artifactManifest": {
          "description": "Path to the artifact manifest for non-container artifacts uploaded to Cloud Storage. Only populated when artifacts are uploaded to Cloud Storage.",
          "type": "string"
        },
        "buildStepImages": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of build step digests, in the order corresponding to build step indices."
        },
        "numArtifacts": {
          "type": "string",
          "format": "int64",
          "description": "Number of non-container artifacts uploaded to Cloud Storage. Only populated when artifacts are uploaded to Cloud Storage."
        },
        "mavenArtifacts": {
          "description": "Maven artifacts uploaded to Artifact Registry at the end of the build.",
          "type": "array",
          "items": {
            "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1UploadedMavenArtifact"
          }
        },
        "artifactTiming": {
          "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1TimeSpan",
          "description": "Time to push all non-container artifacts to Cloud Storage."
        },
        "pythonPackages": {
          "items": {
            "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1UploadedPythonPackage"
          },
          "description": "Python artifacts uploaded to Artifact Registry at the end of the build.",
          "type": "array"
        },
        "buildStepOutputs": {
          "description": "List of build step outputs, produced by builder images, in the order corresponding to build step indices. [Cloud Builders](https://cloud.google.com/cloud-build/docs/cloud-builders) can produce this output by writing to `$BUILDER_OUTPUT/output`. Only the first 4KB of data is stored.",
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          }
        }
      },
      "type": "object"
    },
    "Envelope": {
      "description": "MUST match https://github.com/secure-systems-lab/dsse/blob/master/envelope.proto. An authenticated message of arbitrary type.",
      "type": "object",
      "properties": {
        "payload": {
          "format": "byte",
          "type": "string"
        },
        "payloadType": {
          "type": "string"
        },
        "signatures": {
          "items": {
            "$ref": "EnvelopeSignature"
          },
          "type": "array"
        }
      },
      "id": "Envelope"
    },
    "Status": {
      "properties": {
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            }
          },
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
        },
        "code": {
          "type": "integer",
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "format": "int32"
        },
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
        }
      },
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "id": "Status",
      "type": "object"
    },
    "DiscoveryOccurrence": {
      "type": "object",
      "properties": {
        "continuousAnalysis": {
          "enum": [
            "CONTINUOUS_ANALYSIS_UNSPECIFIED",
            "ACTIVE",
            "INACTIVE"
          ],
          "description": "Whether the resource is continuously analyzed.",
          "type": "string",
          "enumDescriptions": [
            "Unknown.",
            "The resource is continuously analyzed.",
            "The resource is ignored for continuous analysis."
          ]
        },
        "cpe": {
          "type": "string",
          "description": "The CPE of the resource being scanned."
        },
        "archiveTime": {
          "description": "Output only. The time occurrences related to this discovery occurrence were archived.",
          "type": "string",
          "readOnly": true,
          "format": "google-datetime"
        },
        "lastScanTime": {
          "description": "The last time this resource was scanned.",
          "type": "string",
          "format": "google-datetime"
        },
        "analysisError": {
          "type": "array",
          "description": "Indicates any errors encountered during analysis of a resource. There could be 0 or more of these errors.",
          "items": {
            "$ref": "Status"
          }
        },
        "analysisStatus": {
          "enum": [
            "ANALYSIS_STATUS_UNSPECIFIED",
            "PENDING",
            "SCANNING",
            "FINISHED_SUCCESS",
            "COMPLETE",
            "FINISHED_FAILED",
            "FINISHED_UNSUPPORTED"
          ],
          "description": "The status of discovery for the resource.",
          "type": "string",
          "enumDescriptions": [
            "Unknown.",
            "Resource is known but no action has been taken yet.",
            "Resource is being analyzed.",
            "Analysis has finished successfully.",
            "Analysis has completed.",
            "Analysis has finished unsuccessfully, the analysis itself is in a bad state.",
            "The resource is known not to be supported."
          ]
        },
        "analysisStatusError": {
          "$ref": "Status",
          "description": "When an error is encountered this will contain a LocalizedMessage under details to show to the user. The LocalizedMessage is output only and populated by the API."
        },
        "analysisCompleted": {
          "$ref": "AnalysisCompleted"
        }
      },
      "description": "Provides information about the analysis status of a discovered resource.",
      "id": "DiscoveryOccurrence"
    },
    "WindowsDetail": {
      "properties": {
        "cpeUri": {
          "type": "string",
          "description": "Required. The [CPE URI](https://cpe.mitre.org/specification/) this vulnerability affects."
        },
        "fixingKbs": {
          "items": {
            "$ref": "KnowledgeBase"
          },
          "type": "array",
          "description": "Required. The names of the KBs which have hotfixes to mitigate this vulnerability. Note that there may be multiple hotfixes (and thus multiple KBs) that mitigate a given vulnerability. Currently any listed KBs presence is considered a fix."
        },
        "description": {
          "description": "The description of this vulnerability.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Required. The name of this vulnerability."
        }
      },
      "type": "object",
      "id": "WindowsDetail"
    },
    "Signature": {
      "properties": {
        "signature": {
          "format": "byte",
          "description": "The content of the signature, an opaque bytestring. The payload that this signature verifies MUST be unambiguously provided with the Signature during verification. A wrapper message might provide the payload explicitly. Alternatively, a message might have a canonical serialization that can always be unambiguously computed to derive the payload.",
          "type": "string"
        },
        "publicKeyId": {
          "type": "string",
          "description": "The identifier for the public key that verifies this signature. * The `public_key_id` is required. * The `public_key_id` SHOULD be an RFC3986 conformant URI. * When possible, the `public_key_id` SHOULD be an immutable reference, such as a cryptographic digest. Examples of valid `public_key_id`s: OpenPGP V4 public key fingerprint: * \"openpgp4fpr:74FAF3B861BDA0870C7B6DEF607E48D2A663AEEA\" See https://www.iana.org/assignments/uri-schemes/prov/openpgp4fpr for more details on this scheme. RFC6920 digest-named SubjectPublicKeyInfo (digest of the DER serialization): * \"ni:///sha-256;cD9o9Cq6LG3jD0iKXqEi_vdjJGecm_iXkbqVoScViaU\" * \"nih:///sha-256;703f68f42aba2c6de30f488a5ea122fef76324679c9bf89791ba95a1271589a5\""
        }
      },
      "description": "Verifiers (e.g. Kritis implementations) MUST verify signatures with respect to the trust anchors defined in policy (e.g. a Kritis policy). Typically this means that the verifier has been configured with a map from `public_key_id` to public key material (and any required parameters, e.g. signing algorithm). In particular, verification implementations MUST NOT treat the signature `public_key_id` as anything more than a key lookup hint. The `public_key_id` DOES NOT validate or authenticate a public key; it only provides a mechanism for quickly selecting a public key ALREADY CONFIGURED on the verifier through a trusted channel. Verification implementations MUST reject signatures in any of the following circumstances: * The `public_key_id` is not recognized by the verifier. * The public key that `public_key_id` refers to does not verify the signature with respect to the payload. The `signature` contents SHOULD NOT be \"attached\" (where the payload is included with the serialized `signature` bytes). Verifiers MUST ignore any \"attached\" payload and only verify signatures with respect to explicitly provided payload (e.g. a `payload` field on the proto message that holds this Signature, or the canonical serialization of the proto message that holds this signature).",
      "id": "Signature",
      "type": "object"
    },
    "RepoId": {
      "description": "A unique identifier for a Cloud Repo.",
      "properties": {
        "projectRepoId": {
          "description": "A combination of a project ID and a repo name.",
          "$ref": "ProjectRepoId"
        },
        "uid": {
          "type": "string",
          "description": "A server-assigned, globally unique identifier."
        }
      },
      "type": "object",
      "id": "RepoId"
    },
    "GrafeasV1SlsaProvenanceZeroTwoSlsaBuilder": {
      "type": "object",
      "description": "Identifies the entity that executed the recipe, which is trusted to have correctly performed the operation and populated this provenance.",
      "id": "GrafeasV1SlsaProvenanceZeroTwoSlsaBuilder",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "ComplianceOccurrence": {
      "description": "An indication that the compliance checks in the associated ComplianceNote were not satisfied for particular resources or a specified reason.",
      "id": "ComplianceOccurrence",
      "type": "object",
      "properties": {
        "nonCompliantFiles": {
          "type": "array",
          "items": {
            "$ref": "NonCompliantFile"
          }
        },
        "nonComplianceReason": {
          "type": "string"
        }
      }
    },
    "FileHashes": {
      "id": "FileHashes",
      "properties": {
        "fileHash": {
          "description": "Required. Collection of file hashes.",
          "type": "array",
          "items": {
            "$ref": "Hash"
          }
        }
      },
      "type": "object",
      "description": "Container message for hashes of byte content of files, used in source messages to verify integrity of source input to the build."
    },
    "CisBenchmark": {
      "description": "A compliance check that is a CIS benchmark.",
      "type": "object",
      "id": "CisBenchmark",
      "properties": {
        "profileLevel": {
          "type": "integer",
          "format": "int32"
        },
        "severity": {
          "type": "string",
          "enum": [
            "SEVERITY_UNSPECIFIED",
            "MINIMAL",
            "LOW",
            "MEDIUM",
            "HIGH",
            "CRITICAL"
          ],
          "enumDescriptions": [
            "Unknown.",
            "Minimal severity.",
            "Low severity.",
            "Medium severity.",
            "High severity.",
            "Critical severity."
          ]
        }
      }
    },
    "ListOccurrencesResponse": {
      "type": "object",
      "id": "ListOccurrencesResponse",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "The next pagination token in the list response. It should be used as `page_token` for the following request. An empty value means no more results."
        },
        "occurrences": {
          "items": {
            "$ref": "Occurrence"
          },
          "type": "array",
          "description": "The occurrences requested."
        }
      },
      "description": "Response for listing occurrences."
    },
    "AttestationNote": {
      "id": "AttestationNote",
      "properties": {
        "hint": {
          "description": "Hint hints at the purpose of the attestation authority.",
          "$ref": "Hint"
        }
      },
      "type": "object",
      "description": "Note kind that represents a logical attestation \"role\" or \"authority\". For example, an organization might have one `Authority` for \"QA\" and one for \"build\". This note is intended to act strictly as a grouping mechanism for the attached occurrences (Attestations). This grouping mechanism also provides a security boundary, since IAM ACLs gate the ability for a principle to attach an occurrence to a given note. It also provides a single point of lookup to find all attached attestation occurrences, even if they don't all live in the same project."
    },
    "BatchCreateOccurrencesRequest": {
      "properties": {
        "occurrences": {
          "description": "Required. The occurrences to create. Max allowed length is 1000.",
          "items": {
            "$ref": "Occurrence"
          },
          "type": "array"
        }
      },
      "description": "Request to create occurrences in batch.",
      "type": "object",
      "id": "BatchCreateOccurrencesRequest"
    },
    "BatchCreateNotesRequest": {
      "id": "BatchCreateNotesRequest",
      "properties": {
        "notes": {
          "type": "object",
          "additionalProperties": {
            "$ref": "Note"
          },
          "description": "Required. The notes to create. Max allowed length is 1000."
        }
      },
      "description": "Request to create notes in batch.",
      "type": "object"
    },
    "ContaineranalysisGoogleDevtoolsCloudbuildV1Build": {
      "type": "object",
      "properties": {
        "serviceAccount": {
          "type": "string",
          "description": "IAM service account whose credentials will be used at build runtime. Must be of the format `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}`. ACCOUNT can be email address or uniqueId of the service account. "
        },
        "projectId": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. ID of the project."
        },
        "results": {
          "readOnly": true,
          "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1Results",
          "description": "Output only. Results of the build."
        },
        "substitutions": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Substitutions data for `Build` resource."
        },
        "logsBucket": {
          "description": "Google Cloud Storage bucket where logs should be written (see [Bucket Name Requirements](https://cloud.google.com/storage/docs/bucket-naming#requirements)). Logs file names will be of the format `${logs_bucket}/log-${build_id}.txt`.",
          "type": "string"
        },
        "source": {
          "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1Source",
          "description": "The location of the source files to build."
        },
        "tags": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Tags for annotation of a `Build`. These are not docker tags."
        },
        "name": {
          "type": "string",
          "description": "Output only. The 'Build' name with format: `projects/{project}/locations/{location}/builds/{build}`, where {build} is a unique identifier generated by the service.",
          "readOnly": true
        },
        "timing": {
          "additionalProperties": {
            "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1TimeSpan"
          },
          "description": "Output only. Stores timing information for phases of the build. Valid keys are: * BUILD: time to execute all build steps. * PUSH: time to push all artifacts including docker images and non docker artifacts. * FETCHSOURCE: time to fetch source. * SETUPBUILD: time to set up build. If the build does not specify source or images, these keys will not be included.",
          "type": "object",
          "readOnly": true
        },
        "buildTriggerId": {
          "readOnly": true,
          "description": "Output only. The ID of the `BuildTrigger` that triggered this build, if it was triggered automatically.",
          "type": "string"
        },
        "availableSecrets": {
          "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1Secrets",
          "description": "Secrets and secret environment variables."
        },
        "warnings": {
          "items": {
            "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1BuildWarning"
          },
          "type": "array",
          "readOnly": true,
          "description": "Output only. Non-fatal problems encountered during the execution of the build."
        },
        "startTime": {
          "readOnly": true,
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. Time at which execution of the build was started."
        },
        "queueTtl": {
          "description": "TTL in queue for this build. If provided and the build is enqueued longer than this value, the build will expire and the build status will be `EXPIRED`. The TTL starts ticking from create_time.",
          "format": "google-duration",
          "type": "string"
        },
        "images": {
          "description": "A list of images to be pushed upon the successful completion of all build steps. The images are pushed using the builder service account's credentials. The digests of the pushed images will be stored in the `Build` resource's results field. If any of the images fail to be pushed, the build status is marked `FAILURE`.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "approval": {
          "description": "Output only. Describes this build's approval configuration, status, and result.",
          "readOnly": true,
          "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1BuildApproval"
        },
        "timeout": {
          "type": "string",
          "format": "google-duration",
          "description": "Amount of time that this build should be allowed to run, to second granularity. If this amount of time elapses, work on the build will cease and the build status will be `TIMEOUT`. `timeout` starts ticking from `startTime`. Default time is 60 minutes."
        },
        "statusDetail": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Customer-readable message about the current status."
        },
        "createTime": {
          "description": "Output only. Time at which the request to create the build was received.",
          "type": "string",
          "readOnly": true,
          "format": "google-datetime"
        },
        "status": {
          "type": "string",
          "enumDescriptions": [
            "Status of the build is unknown.",
            "Build has been created and is pending execution and queuing. It has not been queued.",
            "Build or step is queued; work has not yet begun.",
            "Build or step is being executed.",
            "Build or step finished successfully.",
            "Build or step failed to complete successfully.",
            "Build or step failed due to an internal cause.",
            "Build or step took longer than was allowed.",
            "Build or step was canceled by a user.",
            "Build was enqueued for longer than the value of `queue_ttl`."
          ],
          "readOnly": true,
          "enum": [
            "STATUS_UNKNOWN",
            "PENDING",
            "QUEUED",
            "WORKING",
            "SUCCESS",
            "FAILURE",
            "INTERNAL_ERROR",
            "TIMEOUT",
            "CANCELLED",
            "EXPIRED"
          ],
          "description": "Output only. Status of the build."
        },
        "steps": {
          "description": "Required. The operations to be performed on the workspace.",
          "type": "array",
          "items": {
            "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1BuildStep"
          }
        },
        "finishTime": {
          "description": "Output only. Time at which execution of the build was finished. The difference between finish_time and start_time is the duration of the build's execution.",
          "type": "string",
          "format": "google-datetime",
          "readOnly": true
        },
        "sourceProvenance": {
          "readOnly": true,
          "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1SourceProvenance",
          "description": "Output only. A permanent fixed identifier for source."
        },
        "failureInfo": {
          "readOnly": true,
          "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1BuildFailureInfo",
          "description": "Output only. Contains information about the build when status=FAILURE."
        },
        "artifacts": {
          "description": "Artifacts produced by the build that should be uploaded upon successful completion of all build steps.",
          "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1Artifacts"
        },
        "logUrl": {
          "description": "Output only. URL to logs for this build in Google Cloud Console.",
          "type": "string",
          "readOnly": true
        },
        "id": {
          "type": "string",
          "description": "Output only. Unique identifier of the build.",
          "readOnly": true
        },
        "options": {
          "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1BuildOptions",
          "description": "Special options for this build."
        },
        "secrets": {
          "type": "array",
          "items": {
            "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1Secret"
          },
          "description": "Secrets to decrypt using Cloud Key Management Service. Note: Secret Manager is the recommended technique for managing sensitive data with Cloud Build. Use `available_secrets` to configure builds to access secrets from Secret Manager. For instructions, see: https://cloud.google.com/cloud-build/docs/securing-builds/use-secrets"
        }
      },
      "description": "A build resource in the Cloud Build API. At a high level, a `Build` describes where to find source code, how to build it (for example, the builder image to run on the source), and where to store the built artifacts. Fields can include the following variables, which will be expanded when the build is created: - $PROJECT_ID: the project ID of the build. - $PROJECT_NUMBER: the project number of the build. - $LOCATION: the location/region of the build. - $BUILD_ID: the autogenerated ID of the build. - $REPO_NAME: the source repository name specified by RepoSource. - $BRANCH_NAME: the branch name specified by RepoSource. - $TAG_NAME: the tag name specified by RepoSource. - $REVISION_ID or $COMMIT_SHA: the commit SHA specified by RepoSource or resolved from the specified branch or tag. - $SHORT_SHA: first 7 characters of $REVISION_ID or $COMMIT_SHA.",
      "id": "ContaineranalysisGoogleDevtoolsCloudbuildV1Build"
    },
    "BuilderConfig": {
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "type": "object",
      "id": "BuilderConfig"
    },
    "GrafeasV1SlsaProvenanceZeroTwoSlsaCompleteness": {
      "type": "object",
      "properties": {
        "environment": {
          "type": "boolean"
        },
        "materials": {
          "type": "boolean"
        },
        "parameters": {
          "type": "boolean"
        }
      },
      "id": "GrafeasV1SlsaProvenanceZeroTwoSlsaCompleteness",
      "description": "Indicates that the builder claims certain fields in this message to be complete."
    },
    "ContaineranalysisGoogleDevtoolsCloudbuildV1FileHashes": {
      "properties": {
        "fileHash": {
          "items": {
            "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1Hash"
          },
          "type": "array",
          "description": "Collection of file hashes."
        }
      },
      "id": "ContaineranalysisGoogleDevtoolsCloudbuildV1FileHashes",
      "description": "Container message for hashes of byte content of files, used in SourceProvenance messages to verify integrity of source input to the build.",
      "type": "object"
    },
    "CVSSv3": {
      "id": "CVSSv3",
      "properties": {
        "impactScore": {
          "format": "float",
          "type": "number"
        },
        "attackVector": {
          "type": "string",
          "enum": [
            "ATTACK_VECTOR_UNSPECIFIED",
            "ATTACK_VECTOR_NETWORK",
            "ATTACK_VECTOR_ADJACENT",
            "ATTACK_VECTOR_LOCAL",
            "ATTACK_VECTOR_PHYSICAL"
          ],
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            ""
          ],
          "description": "Base Metrics Represents the intrinsic characteristics of a vulnerability that are constant over time and across user environments."
        },
        "privilegesRequired": {
          "enumDescriptions": [
            "",
            "",
            "",
            ""
          ],
          "enum": [
            "PRIVILEGES_REQUIRED_UNSPECIFIED",
            "PRIVILEGES_REQUIRED_NONE",
            "PRIVILEGES_REQUIRED_LOW",
            "PRIVILEGES_REQUIRED_HIGH"
          ],
          "type": "string"
        },
        "scope": {
          "enumDescriptions": [
            "",
            "",
            ""
          ],
          "type": "string",
          "enum": [
            "SCOPE_UNSPECIFIED",
            "SCOPE_UNCHANGED",
            "SCOPE_CHANGED"
          ]
        },
        "userInteraction": {
          "enumDescriptions": [
            "",
            "",
            ""
          ],
          "enum": [
            "USER_INTERACTION_UNSPECIFIED",
            "USER_INTERACTION_NONE",
            "USER_INTERACTION_REQUIRED"
          ],
          "type": "string"
        },
        "baseScore": {
          "type": "number",
          "description": "The base score is a function of the base metric scores.",
          "format": "float"
        },
        "availabilityImpact": {
          "type": "string",
          "enum": [
            "IMPACT_UNSPECIFIED",
            "IMPACT_HIGH",
            "IMPACT_LOW",
            "IMPACT_NONE"
          ],
          "enumDescriptions": [
            "",
            "",
            "",
            ""
          ]
        },
        "exploitabilityScore": {
          "type": "number",
          "format": "float"
        },
        "integrityImpact": {
          "enum": [
            "IMPACT_UNSPECIFIED",
            "IMPACT_HIGH",
            "IMPACT_LOW",
            "IMPACT_NONE"
          ],
          "type": "string",
          "enumDescriptions": [
            "",
            "",
            "",
            ""
          ]
        },
        "attackComplexity": {
          "enum": [
            "ATTACK_COMPLEXITY_UNSPECIFIED",
            "ATTACK_COMPLEXITY_LOW",
            "ATTACK_COMPLEXITY_HIGH"
          ],
          "type": "string",
          "enumDescriptions": [
            "",
            "",
            ""
          ]
        },
        "confidentialityImpact": {
          "type": "string",
          "enumDescriptions": [
            "",
            "",
            "",
            ""
          ],
          "enum": [
            "IMPACT_UNSPECIFIED",
            "IMPACT_HIGH",
            "IMPACT_LOW",
            "IMPACT_NONE"
          ]
        }
      },
      "description": "Common Vulnerability Scoring System version 3. For details, see https://www.first.org/cvss/specification-document",
      "type": "object"
    },
    "ImageNote": {
      "id": "ImageNote",
      "properties": {
        "fingerprint": {
          "description": "Required. Immutable. The fingerprint of the base image.",
          "$ref": "Fingerprint"
        },
        "resourceUrl": {
          "type": "string",
          "description": "Required. Immutable. The resource_url for the resource representing the basis of associated occurrence images."
        }
      },
      "description": "Basis describes the base image portion (Note) of the DockerImage relationship. Linked occurrences are derived from this or an equivalent image via: FROM Or an equivalent reference, e.g., a tag of the resource_url.",
      "type": "object"
    },
    "VulnerabilityOccurrence": {
      "type": "object",
      "description": "An occurrence of a severity vulnerability on a resource.",
      "properties": {
        "shortDescription": {
          "type": "string",
          "description": "Output only. A one sentence description of this vulnerability."
        },
        "type": {
          "description": "The type of package; whether native or non native (e.g., ruby gems, node.js packages, etc.).",
          "type": "string"
        },
        "severity": {
          "type": "string",
          "enum": [
            "SEVERITY_UNSPECIFIED",
            "MINIMAL",
            "LOW",
            "MEDIUM",
            "HIGH",
            "CRITICAL"
          ],
          "enumDescriptions": [
            "Unknown.",
            "Minimal severity.",
            "Low severity.",
            "Medium severity.",
            "High severity.",
            "Critical severity."
          ],
          "description": "Output only. The note provider assigned severity of this vulnerability."
        },
        "relatedUrls": {
          "items": {
            "$ref": "RelatedUrl"
          },
          "type": "array",
          "description": "Output only. URLs related to this vulnerability."
        },
        "longDescription": {
          "description": "Output only. A detailed description of this vulnerability.",
          "type": "string"
        },
        "effectiveSeverity": {
          "enumDescriptions": [
            "Unknown.",
            "Minimal severity.",
            "Low severity.",
            "Medium severity.",
            "High severity.",
            "Critical severity."
          ],
          "description": "The distro assigned severity for this vulnerability when it is available, otherwise this is the note provider assigned severity. When there are multiple PackageIssues for this vulnerability, they can have different effective severities because some might be provided by the distro while others are provided by the language ecosystem for a language pack. For this reason, it is advised to use the effective severity on the PackageIssue level. In the case where multiple PackageIssues have differing effective severities, this field should be the highest severity for any of the PackageIssues.",
          "enum": [
            "SEVERITY_UNSPECIFIED",
            "MINIMAL",
            "LOW",
            "MEDIUM",
            "HIGH",
            "CRITICAL"
          ],
          "type": "string"
        },
        "cvssv3": {
          "description": "The cvss v3 score for the vulnerability.",
          "$ref": "CVSS"
        },
        "fixAvailable": {
          "description": "Output only. Whether at least one of the affected packages has a fix available.",
          "type": "boolean"
        },
        "cvssVersion": {
          "enum": [
            "CVSS_VERSION_UNSPECIFIED",
            "CVSS_VERSION_2",
            "CVSS_VERSION_3"
          ],
          "enumDescriptions": [
            "",
            "",
            ""
          ],
          "description": "Output only. CVSS version used to populate cvss_score and severity.",
          "type": "string"
        },
        "cvssV2": {
          "$ref": "CVSS",
          "description": "The cvss v2 score for the vulnerability."
        },
        "cvssScore": {
          "description": "Output only. The CVSS score of this vulnerability. CVSS score is on a scale of 0 - 10 where 0 indicates low severity and 10 indicates high severity.",
          "type": "number",
          "format": "float"
        },
        "packageIssue": {
          "items": {
            "$ref": "PackageIssue"
          },
          "type": "array",
          "description": "Required. The set of affected locations and their fixes (if available) within the associated resource."
        }
      },
      "id": "VulnerabilityOccurrence"
    },
    "DSSEAttestationNote": {
      "id": "DSSEAttestationNote",
      "properties": {
        "hint": {
          "description": "DSSEHint hints at the purpose of the attestation authority.",
          "$ref": "DSSEHint"
        }
      },
      "type": "object"
    },
    "ContaineranalysisGoogleDevtoolsCloudbuildV1Artifacts": {
      "type": "object",
      "description": "Artifacts produced by a build that should be uploaded upon successful completion of all build steps.",
      "properties": {
        "objects": {
          "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsArtifactObjects",
          "description": "A list of objects to be uploaded to Cloud Storage upon successful completion of all build steps. Files in the workspace matching specified paths globs will be uploaded to the specified Cloud Storage location using the builder service account's credentials. The location and generation of the uploaded objects will be stored in the Build resource's results field. If any objects fail to be pushed, the build is marked FAILURE."
        },
        "images": {
          "description": "A list of images to be pushed upon the successful completion of all build steps. The images will be pushed using the builder service account's credentials. The digests of the pushed images will be stored in the Build resource's results field. If any of the images fail to be pushed, the build is marked FAILURE.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "pythonPackages": {
          "items": {
            "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsPythonPackage"
          },
          "description": "A list of Python packages to be uploaded to Artifact Registry upon successful completion of all build steps. The build service account credentials will be used to perform the upload. If any objects fail to be pushed, the build is marked FAILURE.",
          "type": "array"
        },
        "mavenArtifacts": {
          "type": "array",
          "items": {
            "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsMavenArtifact"
          },
          "description": "A list of Maven artifacts to be uploaded to Artifact Registry upon successful completion of all build steps. Artifacts in the workspace matching specified paths globs will be uploaded to the specified Artifact Registry repository using the builder service account's credentials. If any artifacts fail to be pushed, the build is marked FAILURE."
        }
      },
      "id": "ContaineranalysisGoogleDevtoolsCloudbuildV1Artifacts"
    },
    "SlsaCompleteness": {
      "id": "SlsaCompleteness",
      "properties": {
        "arguments": {
          "description": "If true, the builder claims that recipe.arguments is complete, meaning that all external inputs are properly captured in the recipe.",
          "type": "boolean"
        },
        "environment": {
          "type": "boolean",
          "description": "If true, the builder claims that recipe.environment is claimed to be complete."
        },
        "materials": {
          "type": "boolean",
          "description": "If true, the builder claims that materials are complete, usually through some controls to prevent network access. Sometimes called \"hermetic\"."
        }
      },
      "description": "Indicates that the builder claims certain fields in this message to be complete.",
      "type": "object"
    },
    "GrafeasV1SlsaProvenanceZeroTwoSlsaConfigSource": {
      "properties": {
        "digest": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "uri": {
          "type": "string"
        },
        "entryPoint": {
          "type": "string"
        }
      },
      "id": "GrafeasV1SlsaProvenanceZeroTwoSlsaConfigSource",
      "description": "Describes where the config file that kicked off the build came from. This is effectively a pointer to the source where buildConfig came from.",
      "type": "object"
    },
    "ContaineranalysisGoogleDevtoolsCloudbuildV1Hash": {
      "properties": {
        "type": {
          "type": "string",
          "enumDescriptions": [
            "No hash requested.",
            "Use a sha256 hash.",
            "Use a md5 hash."
          ],
          "description": "The type of hash that was performed.",
          "enum": [
            "NONE",
            "SHA256",
            "MD5"
          ]
        },
        "value": {
          "description": "The hash value.",
          "type": "string",
          "format": "byte"
        }
      },
      "id": "ContaineranalysisGoogleDevtoolsCloudbuildV1Hash",
      "description": "Container message for hash values.",
      "type": "object"
    },
    "ContaineranalysisGoogleDevtoolsCloudbuildV1TimeSpan": {
      "type": "object",
      "id": "ContaineranalysisGoogleDevtoolsCloudbuildV1TimeSpan",
      "description": "Start and end times for a build execution phase.",
      "properties": {
        "endTime": {
          "format": "google-datetime",
          "description": "End of time span.",
          "type": "string"
        },
        "startTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Start of time span."
        }
      }
    },
    "Distribution": {
      "type": "object",
      "id": "Distribution",
      "properties": {
        "maintainer": {
          "type": "string",
          "description": "A freeform string denoting the maintainer of this package."
        },
        "architecture": {
          "enum": [
            "ARCHITECTURE_UNSPECIFIED",
            "X86",
            "X64"
          ],
          "description": "The CPU architecture for which packages in this distribution channel were built.",
          "type": "string",
          "enumDescriptions": [
            "Unknown architecture.",
            "X86 architecture.",
            "X64 architecture."
          ]
        },
        "description": {
          "type": "string",
          "description": "The distribution channel-specific description of this package."
        },
        "url": {
          "type": "string",
          "description": "The distribution channel-specific homepage for this package."
        },
        "latestVersion": {
          "description": "The latest available version of this package in this distribution channel.",
          "$ref": "Version"
        },
        "cpeUri": {
          "description": "Required. The cpe_uri in [CPE format](https://cpe.mitre.org/specification/) denoting the package manager version distributing a package.",
          "type": "string"
        }
      },
      "description": "This represents a particular channel of distribution for a given package. E.g., Debian's jessie-backports dpkg mirror."
    },
    "BuildNote": {
      "id": "BuildNote",
      "type": "object",
      "properties": {
        "builderVersion": {
          "type": "string",
          "description": "Required. Immutable. Version of the builder which produced this build."
        }
      },
      "description": "Note holding the version of the provider's builder and the signature of the provenance message in the build details occurrence."
    },
    "ContaineranalysisGoogleDevtoolsCloudbuildV1BuildOptions": {
      "type": "object",
      "properties": {
        "workerPool": {
          "type": "string",
          "description": "This field deprecated; please use `pool.name` instead."
        },
        "volumes": {
          "items": {
            "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1Volume"
          },
          "type": "array",
          "description": "Global list of volumes to mount for ALL build steps Each volume is created as an empty volume prior to starting the build process. Upon completion of the build, volumes and their contents are discarded. Global volume names and paths cannot conflict with the volumes defined a build step. Using a global volume in a build with only one step is not valid as it is indicative of a build request with an incorrect configuration."
        },
        "pool": {
          "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1BuildOptionsPoolOption",
          "description": "Optional. Specification for execution on a `WorkerPool`. See [running builds in a private pool](https://cloud.google.com/build/docs/private-pools/run-builds-in-private-pool) for more information."
        },
        "diskSizeGb": {
          "type": "string",
          "format": "int64",
          "description": "Requested disk size for the VM that runs the build. Note that this is *NOT* \"disk free\"; some of the space will be used by the operating system and build utilities. Also note that this is the minimum disk size that will be allocated for the build -- the build may run with a larger disk than requested. At present, the maximum disk size is 2000GB; builds that request more than the maximum are rejected with an error."
        },
        "env": {
          "items": {
            "type": "string"
          },
          "description": "A list of global environment variable definitions that will exist for all build steps in this build. If a variable is defined in both globally and in a build step, the variable will use the build step value. The elements are of the form \"KEY=VALUE\" for the environment variable \"KEY\" being given the value \"VALUE\".",
          "type": "array"
        },
        "requestedVerifyOption": {
          "description": "Requested verifiability options.",
          "enum": [
            "NOT_VERIFIED",
            "VERIFIED"
          ],
          "enumDescriptions": [
            "Not a verifiable build (the default).",
            "Build must be verified."
          ],
          "type": "string"
        },
        "secretEnv": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of global environment variables, which are encrypted using a Cloud Key Management Service crypto key. These values must be specified in the build's `Secret`. These variables will be available to all build steps in this build."
        },
        "logStreamingOption": {
          "type": "string",
          "enum": [
            "STREAM_DEFAULT",
            "STREAM_ON",
            "STREAM_OFF"
          ],
          "description": "Option to define build log streaming behavior to Google Cloud Storage.",
          "enumDescriptions": [
            "Service may automatically determine build log streaming behavior.",
            "Build logs should be streamed to Google Cloud Storage.",
            "Build logs should not be streamed to Google Cloud Storage; they will be written when the build is completed."
          ]
        },
        "dynamicSubstitutions": {
          "type": "boolean",
          "description": "Option to specify whether or not to apply bash style string operations to the substitutions. NOTE: this is always enabled for triggered builds and cannot be overridden in the build configuration file."
        },
        "sourceProvenanceHash": {
          "type": "array",
          "description": "Requested hash for SourceProvenance.",
          "items": {
            "enum": [
              "NONE",
              "SHA256",
              "MD5"
            ],
            "type": "string",
            "enumDescriptions": [
              "No hash requested.",
              "Use a sha256 hash.",
              "Use a md5 hash."
            ]
          }
        },
        "logging": {
          "description": "Option to specify the logging mode, which determines if and where build logs are stored.",
          "enumDescriptions": [
            "The service determines the logging mode. The default is `LEGACY`. Do not rely on the default logging behavior as it may change in the future.",
            "Build logs are stored in Cloud Logging and Cloud Storage.",
            "Build logs are stored in Cloud Storage.",
            "This option is the same as CLOUD_LOGGING_ONLY.",
            "Build logs are stored in Cloud Logging. Selecting this option will not allow [logs streaming](https://cloud.google.com/sdk/gcloud/reference/builds/log).",
            "Turn off all logging. No build logs will be captured."
          ],
          "type": "string",
          "enum": [
            "LOGGING_UNSPECIFIED",
            "LEGACY",
            "GCS_ONLY",
            "STACKDRIVER_ONLY",
            "CLOUD_LOGGING_ONLY",
            "NONE"
          ]
        },
        "substitutionOption": {
          "description": "Option to specify behavior when there is an error in the substitution checks. NOTE: this is always set to ALLOW_LOOSE for triggered builds and cannot be overridden in the build configuration file.",
          "enumDescriptions": [
            "Fails the build if error in substitutions checks, like missing a substitution in the template or in the map.",
            "Do not fail the build if error in substitutions checks."
          ],
          "type": "string",
          "enum": [
            "MUST_MATCH",
            "ALLOW_LOOSE"
          ]
        },
        "machineType": {
          "type": "string",
          "enumDescriptions": [
            "Standard machine type.",
            "Highcpu machine with 8 CPUs.",
            "Highcpu machine with 32 CPUs.",
            "Highcpu e2 machine with 8 CPUs.",
            "Highcpu e2 machine with 32 CPUs."
          ],
          "enum": [
            "UNSPECIFIED",
            "N1_HIGHCPU_8",
            "N1_HIGHCPU_32",
            "E2_HIGHCPU_8",
            "E2_HIGHCPU_32"
          ],
          "description": "Compute Engine machine type on which to run the build."
        }
      },
      "description": "Optional arguments to enable specific features of builds.",
      "id": "ContaineranalysisGoogleDevtoolsCloudbuildV1BuildOptions"
    },
    "GrafeasV1FileLocation": {
      "description": "Indicates the location at which a package was found.",
      "properties": {
        "filePath": {
          "type": "string",
          "description": "For jars that are contained inside .war files, this filepath can indicate the path to war file combined with the path to jar file."
        }
      },
      "id": "GrafeasV1FileLocation",
      "type": "object"
    },
    "ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsMavenArtifact": {
      "description": "A Maven artifact to upload to Artifact Registry upon successful completion of all build steps.",
      "type": "object",
      "id": "ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsMavenArtifact",
      "properties": {
        "repository": {
          "type": "string",
          "description": "Artifact Registry repository, in the form \"https://$REGION-maven.pkg.dev/$PROJECT/$REPOSITORY\" Artifact in the workspace specified by path will be uploaded to Artifact Registry with this location as a prefix."
        },
        "groupId": {
          "description": "Maven `groupId` value used when uploading the artifact to Artifact Registry.",
          "type": "string"
        },
        "path": {
          "type": "string",
          "description": "Path to an artifact in the build's workspace to be uploaded to Artifact Registry. This can be either an absolute path, e.g. /workspace/my-app/target/my-app-1.0.SNAPSHOT.jar or a relative path from /workspace, e.g. my-app/target/my-app-1.0.SNAPSHOT.jar."
        },
        "artifactId": {
          "type": "string",
          "description": "Maven `artifactId` value used when uploading the artifact to Artifact Registry."
        },
        "version": {
          "description": "Maven `version` value used when uploading the artifact to Artifact Registry.",
          "type": "string"
        }
      }
    },
    "ImageOccurrence": {
      "properties": {
        "layerInfo": {
          "description": "This contains layer-specific metadata, if populated it has length \"distance\" and is ordered with [distance] being the layer immediately following the base image and [1] being the final layer.",
          "items": {
            "$ref": "Layer"
          },
          "type": "array"
        },
        "baseResourceUrl": {
          "type": "string",
          "description": "Output only. This contains the base image URL for the derived image occurrence."
        },
        "fingerprint": {
          "$ref": "Fingerprint",
          "description": "Required. The fingerprint of the derived image."
        },
        "distance": {
          "description": "Output only. The number of layers by which this image differs from the associated image basis.",
          "type": "integer",
          "format": "int32"
        }
      },
      "id": "ImageOccurrence",
      "type": "object",
      "description": "Details of the derived image portion of the DockerImage relationship. This image would be produced from a Dockerfile with FROM ."
    },
    "ContaineranalysisGoogleDevtoolsCloudbuildV1BuildFailureInfo": {
      "type": "object",
      "description": "A fatal problem encountered during the execution of the build.",
      "properties": {
        "detail": {
          "type": "string",
          "description": "Explains the failure issue in more detail using hard-coded text."
        },
        "type": {
          "enumDescriptions": [
            "Type unspecified",
            "Unable to push the image to the repository.",
            "Final image not found.",
            "Unauthorized push of the final image.",
            "Backend logging failures. Should retry.",
            "A build step has failed.",
            "The source fetching has failed."
          ],
          "enum": [
            "FAILURE_TYPE_UNSPECIFIED",
            "PUSH_FAILED",
            "PUSH_IMAGE_NOT_FOUND",
            "PUSH_NOT_AUTHORIZED",
            "LOGGING_FAILURE",
            "USER_BUILD_STEP",
            "FETCH_SOURCE_FAILED"
          ],
          "type": "string",
          "description": "The name of the failure."
        }
      },
      "id": "ContaineranalysisGoogleDevtoolsCloudbuildV1BuildFailureInfo"
    },
    "GrafeasV1SlsaProvenanceZeroTwoSlsaInvocation": {
      "id": "GrafeasV1SlsaProvenanceZeroTwoSlsaInvocation",
      "description": "Identifies the event that kicked off the build.",
      "properties": {
        "configSource": {
          "$ref": "GrafeasV1SlsaProvenanceZeroTwoSlsaConfigSource"
        },
        "parameters": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          },
          "type": "object"
        },
        "environment": {
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          }
        }
      },
      "type": "object"
    },
    "SlsaProvenance": {
      "properties": {
        "materials": {
          "description": "The collection of artifacts that influenced the build including sources, dependencies, build tools, base images, and so on. This is considered to be incomplete unless metadata.completeness.materials is true. Unset or null is equivalent to empty.",
          "type": "array",
          "items": {
            "$ref": "Material"
          }
        },
        "builder": {
          "$ref": "SlsaBuilder",
          "description": "required"
        },
        "metadata": {
          "$ref": "SlsaMetadata"
        },
        "recipe": {
          "$ref": "SlsaRecipe",
          "description": "Identifies the configuration used for the build. When combined with materials, this SHOULD fully describe the build, such that re-running this recipe results in bit-for-bit identical output (if the build is reproducible). required"
        }
      },
      "id": "SlsaProvenance",
      "type": "object"
    },
    "CloudRepoSourceContext": {
      "description": "A CloudRepoSourceContext denotes a particular revision in a Google Cloud Source Repo.",
      "type": "object",
      "id": "CloudRepoSourceContext",
      "properties": {
        "aliasContext": {
          "$ref": "AliasContext",
          "description": "An alias, which may be a branch or tag."
        },
        "revisionId": {
          "description": "A revision ID.",
          "type": "string"
        },
        "repoId": {
          "$ref": "RepoId",
          "description": "The ID of the repo."
        }
      }
    },
    "Version": {
      "properties": {
        "epoch": {
          "format": "int32",
          "description": "Used to correct mistakes in the version numbering scheme.",
          "type": "integer"
        },
        "kind": {
          "enumDescriptions": [
            "Unknown.",
            "A standard package version.",
            "A special version representing negative infinity.",
            "A special version representing positive infinity."
          ],
          "type": "string",
          "description": "Required. Distinguishes between sentinel MIN/MAX versions and normal versions.",
          "enum": [
            "VERSION_KIND_UNSPECIFIED",
            "NORMAL",
            "MINIMUM",
            "MAXIMUM"
          ]
        },
        "fullName": {
          "type": "string",
          "description": "Human readable version string. This string is of the form :- and is only set when kind is NORMAL."
        },
        "inclusive": {
          "type": "boolean",
          "description": "Whether this version is specifying part of an inclusive range. Grafeas does not have the capability to specify version ranges; instead we have fields that specify start version and end versions. At times this is insufficient - we also need to specify whether the version is included in the range or is excluded from the range. This boolean is expected to be set to true when the version is included in a range."
        },
        "revision": {
          "type": "string",
          "description": "The iteration of the package build from the above version."
        },
        "name": {
          "type": "string",
          "description": "Required only when version kind is NORMAL. The main part of the version name."
        }
      },
      "description": "Version contains structured information about the version of a package.",
      "id": "Version",
      "type": "object"
    },
    "ContaineranalysisGoogleDevtoolsCloudbuildV1BuildStep": {
      "id": "ContaineranalysisGoogleDevtoolsCloudbuildV1BuildStep",
      "type": "object",
      "properties": {
        "timeout": {
          "type": "string",
          "format": "google-duration",
          "description": "Time limit for executing this build step. If not defined, the step has no time limit and will be allowed to continue to run until either it completes or the build itself times out."
        },
        "env": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "A list of environment variable definitions to be used when running a step. The elements are of the form \"KEY=VALUE\" for the environment variable \"KEY\" being given the value \"VALUE\"."
        },
        "id": {
          "description": "Unique identifier for this build step, used in `wait_for` to reference this build step as a dependency.",
          "type": "string"
        },
        "secretEnv": {
          "items": {
            "type": "string"
          },
          "description": "A list of environment variables which are encrypted using a Cloud Key Management Service crypto key. These values must be specified in the build's `Secret`.",
          "type": "array"
        },
        "volumes": {
          "type": "array",
          "description": "List of volumes to mount into the build step. Each volume is created as an empty volume prior to execution of the build step. Upon completion of the build, volumes and their contents are discarded. Using a named volume in only one step is not valid as it is indicative of a build request with an incorrect configuration.",
          "items": {
            "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1Volume"
          }
        },
        "entrypoint": {
          "type": "string",
          "description": "Entrypoint to be used instead of the build step image's default entrypoint. If unset, the image's default entrypoint is used."
        },
        "pullTiming": {
          "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1TimeSpan",
          "description": "Output only. Stores timing information for pulling this build step's builder image only.",
          "readOnly": true
        },
        "allowFailure": {
          "description": "Allow this build step to fail without failing the entire build. If false, the entire build will fail if this step fails. Otherwise, the build will succeed, but this step will still have a failure status. Error information will be reported in the failure_detail field.",
          "type": "boolean"
        },
        "timing": {
          "description": "Output only. Stores timing information for executing this build step.",
          "readOnly": true,
          "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1TimeSpan"
        },
        "waitFor": {
          "items": {
            "type": "string"
          },
          "description": "The ID(s) of the step(s) that this build step depends on. This build step will not start until all the build steps in `wait_for` have completed successfully. If `wait_for` is empty, this build step will start when all previous build steps in the `Build.Steps` list have completed successfully.",
          "type": "array"
        },
        "allowExitCodes": {
          "description": "Allow this build step to fail without failing the entire build if and only if the exit code is one of the specified codes. If allow_failure is also specified, this field will take precedence.",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "status": {
          "enum": [
            "STATUS_UNKNOWN",
            "PENDING",
            "QUEUED",
            "WORKING",
            "SUCCESS",
            "FAILURE",
            "INTERNAL_ERROR",
            "TIMEOUT",
            "CANCELLED",
            "EXPIRED"
          ],
          "description": "Output only. Status of the build step. At this time, build step status is only updated on build completion; step status is not updated in real-time as the build progresses.",
          "type": "string",
          "readOnly": true,
          "enumDescriptions": [
            "Status of the build is unknown.",
            "Build has been created and is pending execution and queuing. It has not been queued.",
            "Build or step is queued; work has not yet begun.",
            "Build or step is being executed.",
            "Build or step finished successfully.",
            "Build or step failed to complete successfully.",
            "Build or step failed due to an internal cause.",
            "Build or step took longer than was allowed.",
            "Build or step was canceled by a user.",
            "Build was enqueued for longer than the value of `queue_ttl`."
          ]
        },
        "args": {
          "type": "array",
          "description": "A list of arguments that will be presented to the step when it is started. If the image used to run the step's container has an entrypoint, the `args` are used as arguments to that entrypoint. If the image does not define an entrypoint, the first element in args is used as the entrypoint, and the remainder will be used as arguments.",
          "items": {
            "type": "string"
          }
        },
        "dir": {
          "description": "Working directory to use when running this step's container. If this value is a relative path, it is relative to the build's working directory. If this value is absolute, it may be outside the build's working directory, in which case the contents of the path may not be persisted across build step executions, unless a `volume` for that path is specified. If the build specifies a `RepoSource` with `dir` and a step with a `dir`, which specifies an absolute path, the `RepoSource` `dir` is ignored for the step's execution.",
          "type": "string"
        },
        "script": {
          "type": "string",
          "description": "A shell script to be executed in the step. When script is provided, the user cannot specify the entrypoint or args."
        },
        "exitCode": {
          "format": "int32",
          "type": "integer",
          "readOnly": true,
          "description": "Output only. Return code from running the step."
        },
        "name": {
          "type": "string",
          "description": "Required. The name of the container image that will run this particular build step. If the image is available in the host's Docker daemon's cache, it will be run directly. If not, the host will attempt to pull the image first, using the builder service account's credentials if necessary. The Docker daemon's cache will already have the latest versions of all of the officially supported build steps ([https://github.com/GoogleCloudPlatform/cloud-builders](https://github.com/GoogleCloudPlatform/cloud-builders)). The Docker daemon will also have cached many of the layers for some popular images, like \"ubuntu\", \"debian\", but they will be refreshed at the time you attempt to use them. If you built an image in a previous build step, it will be stored in the host's Docker daemon's cache and is available to use as the name for a later build step."
        }
      },
      "description": "A step in the build pipeline."
    },
    "ContaineranalysisGoogleDevtoolsCloudbuildV1Source": {
      "properties": {
        "storageSourceManifest": {
          "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1StorageSourceManifest",
          "description": "If provided, get the source from this manifest in Google Cloud Storage. This feature is in Preview; see description [here](https://github.com/GoogleCloudPlatform/cloud-builders/tree/master/gcs-fetcher)."
        },
        "storageSource": {
          "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1StorageSource",
          "description": "If provided, get the source from this location in Google Cloud Storage."
        },
        "repoSource": {
          "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1RepoSource",
          "description": "If provided, get the source from this location in a Cloud Source Repository."
        }
      },
      "description": "Location of the source in a supported storage service.",
      "id": "ContaineranalysisGoogleDevtoolsCloudbuildV1Source",
      "type": "object"
    },
    "TimeSpan": {
      "properties": {
        "startTime": {
          "type": "string",
          "description": "Start of time span.",
          "format": "google-datetime"
        },
        "endTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "End of time span."
        }
      },
      "description": "Start and end times for a build execution phase. Next ID: 3",
      "id": "TimeSpan",
      "type": "object"
    },
    "GerritSourceContext": {
      "type": "object",
      "id": "GerritSourceContext",
      "properties": {
        "hostUri": {
          "description": "The URI of a running Gerrit instance.",
          "type": "string"
        },
        "gerritProject": {
          "description": "The full project name within the host. Projects may be nested, so \"project/subproject\" is a valid project name. The \"repo name\" is the hostURI/project.",
          "type": "string"
        },
        "aliasContext": {
          "$ref": "AliasContext",
          "description": "An alias, which may be a branch or tag."
        },
        "revisionId": {
          "type": "string",
          "description": "A revision (commit) ID."
        }
      },
      "description": "A SourceContext referring to a Gerrit project."
    },
    "DSSEHint": {
      "description": "This submessage provides human-readable hints about the purpose of the authority. Because the name of a note acts as its resource reference, it is important to disambiguate the canonical name of the Note (which might be a UUID for security purposes) from \"readable\" names more suitable for debug output. Note that these hints should not be used to look up authorities in security sensitive contexts, such as when looking up attestations to verify.",
      "properties": {
        "humanReadableName": {
          "type": "string",
          "description": "Required. The human readable name of this attestation authority, for example \"cloudbuild-prod\"."
        }
      },
      "type": "object",
      "id": "DSSEHint"
    },
    "Subject": {
      "id": "Subject",
      "properties": {
        "digest": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "`\"\": \"\"` Algorithms can be e.g. sha256, sha512 See https://github.com/in-toto/attestation/blob/main/spec/field_types.md#DigestSet"
        },
        "name": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "TestIamPermissionsResponse": {
      "description": "Response message for `TestIamPermissions` method.",
      "id": "TestIamPermissionsResponse",
      "properties": {
        "permissions": {
          "description": "A subset of `TestPermissionsRequest.permissions` that the caller is allowed.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "Metadata": {
      "type": "object",
      "description": "Other properties of the build.",
      "id": "Metadata",
      "properties": {
        "buildInvocationId": {
          "description": "Identifies the particular build invocation, which can be useful for finding associated logs or other ad-hoc analysis. The value SHOULD be globally unique, per in-toto Provenance spec.",
          "type": "string"
        },
        "buildFinishedOn": {
          "format": "google-datetime",
          "description": "The timestamp of when the build completed.",
          "type": "string"
        },
        "reproducible": {
          "description": "If true, the builder claims that running the recipe on materials will produce bit-for-bit identical output.",
          "type": "boolean"
        },
        "completeness": {
          "$ref": "Completeness",
          "description": "Indicates that the builder claims certain fields in this message to be complete."
        },
        "buildStartedOn": {
          "format": "google-datetime",
          "type": "string",
          "description": "The timestamp of when the build started."
        }
      }
    },
    "ContaineranalysisGoogleDevtoolsCloudbuildV1UploadedMavenArtifact": {
      "description": "A Maven artifact uploaded using the MavenArtifact directive.",
      "type": "object",
      "id": "ContaineranalysisGoogleDevtoolsCloudbuildV1UploadedMavenArtifact",
      "properties": {
        "pushTiming": {
          "description": "Output only. Stores timing information for pushing the specified artifact.",
          "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1TimeSpan",
          "readOnly": true
        },
        "uri": {
          "description": "URI of the uploaded artifact.",
          "type": "string"
        },
        "fileHashes": {
          "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1FileHashes",
          "description": "Hash types and values of the Maven Artifact."
        }
      }
    },
    "AnalysisCompleted": {
      "id": "AnalysisCompleted",
      "description": "Indicates which analysis completed successfully. Multiple types of analysis can be performed on a single resource.",
      "properties": {
        "analysisType": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "TestIamPermissionsRequest": {
      "id": "TestIamPermissionsRequest",
      "type": "object",
      "description": "Request message for `TestIamPermissions` method.",
      "properties": {
        "permissions": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions)."
        }
      }
    },
    "UpgradeOccurrence": {
      "type": "object",
      "id": "UpgradeOccurrence",
      "properties": {
        "parsedVersion": {
          "$ref": "Version",
          "description": "Required for non-Windows OS. The version of the package in a machine + human readable form."
        },
        "package": {
          "description": "Required for non-Windows OS. The package this Upgrade is for.",
          "type": "string"
        },
        "distribution": {
          "description": "Metadata about the upgrade for available for the specific operating system for the resource_url. This allows efficient filtering, as well as making it easier to use the occurrence.",
          "$ref": "UpgradeDistribution"
        },
        "windowsUpdate": {
          "$ref": "WindowsUpdate",
          "description": "Required for Windows OS. Represents the metadata about the Windows update."
        }
      },
      "description": "An Upgrade Occurrence represents that a specific resource_url could install a specific upgrade. This presence is supplied via local sources (i.e. it is present in the mirror and the running system has noticed its availability). For Windows, both distribution and windows_update contain information for the Windows update."
    },
    "ComplianceVersion": {
      "type": "object",
      "id": "ComplianceVersion",
      "properties": {
        "benchmarkDocument": {
          "description": "The name of the document that defines this benchmark, e.g. \"CIS Container-Optimized OS\".",
          "type": "string"
        },
        "cpeUri": {
          "description": "The CPE URI (https://cpe.mitre.org/specification/) this benchmark is applicable to.",
          "type": "string"
        },
        "version": {
          "description": "The version of the benchmark. This is set to the version of the OS-specific CIS document the benchmark is defined in.",
          "type": "string"
        }
      },
      "description": "Describes the CIS benchmark version that is applicable to a given OS and os version."
    },
    "Jwt": {
      "type": "object",
      "properties": {
        "compactJwt": {
          "description": "The compact encoding of a JWS, which is always three base64 encoded strings joined by periods. For details, see: https://tools.ietf.org/html/rfc7515.html#section-3.1",
          "type": "string"
        }
      },
      "id": "Jwt"
    },
    "Expr": {
      "description": "Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() \u003c 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.",
      "type": "object",
      "properties": {
        "expression": {
          "type": "string",
          "description": "Textual representation of an expression in Common Expression Language syntax."
        },
        "title": {
          "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.",
          "type": "string"
        },
        "description": {
          "type": "string",
          "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
        },
        "location": {
          "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.",
          "type": "string"
        }
      },
      "id": "Expr"
    },
    "UpgradeNote": {
      "properties": {
        "distributions": {
          "description": "Metadata about the upgrade for each specific operating system.",
          "type": "array",
          "items": {
            "$ref": "UpgradeDistribution"
          }
        },
        "version": {
          "description": "Required for non-Windows OS. The version of the package in machine + human readable form.",
          "$ref": "Version"
        },
        "package": {
          "type": "string",
          "description": "Required for non-Windows OS. The package this Upgrade is for."
        },
        "windowsUpdate": {
          "$ref": "WindowsUpdate",
          "description": "Required for Windows OS. Represents the metadata about the Windows update."
        }
      },
      "description": "An Upgrade Note represents a potential upgrade of a package to a given version. For each package version combination (i.e. bash 4.0, bash 4.1, bash 4.1.2), there will be an Upgrade Note. For Windows, windows_update field represents the information related to the update.",
      "type": "object",
      "id": "UpgradeNote"
    },
    "DeploymentOccurrence": {
      "type": "object",
      "properties": {
        "undeployTime": {
          "format": "google-datetime",
          "description": "End of the lifetime of this deployment.",
          "type": "string"
        },
        "resourceUri": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Output only. Resource URI for the artifact being deployed taken from the deployable field with the same name."
        },
        "platform": {
          "enum": [
            "PLATFORM_UNSPECIFIED",
            "GKE",
            "FLEX",
            "CUSTOM"
          ],
          "type": "string",
          "description": "Platform hosting this deployment.",
          "enumDescriptions": [
            "Unknown.",
            "Google Container Engine.",
            "Google App Engine: Flexible Environment.",
            "Custom user-defined platform."
          ]
        },
        "config": {
          "description": "Configuration used to create this deployment.",
          "type": "string"
        },
        "address": {
          "type": "string",
          "description": "Address of the runtime element hosting this deployment."
        },
        "deployTime": {
          "description": "Required. Beginning of the lifetime of this deployment.",
          "format": "google-datetime",
          "type": "string"
        },
        "userEmail": {
          "type": "string",
          "description": "Identity of the user that triggered this deployment."
        }
      },
      "description": "The period during which some deployable was active in a runtime.",
      "id": "DeploymentOccurrence"
    },
    "SlsaProvenanceZeroTwo": {
      "id": "SlsaProvenanceZeroTwo",
      "properties": {
        "materials": {
          "items": {
            "$ref": "GrafeasV1SlsaProvenanceZeroTwoSlsaMaterial"
          },
          "type": "array"
        },
        "buildType": {
          "type": "string"
        },
        "builder": {
          "$ref": "GrafeasV1SlsaProvenanceZeroTwoSlsaBuilder"
        },
        "metadata": {
          "$ref": "GrafeasV1SlsaProvenanceZeroTwoSlsaMetadata"
        },
        "buildConfig": {
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          }
        },
        "invocation": {
          "$ref": "GrafeasV1SlsaProvenanceZeroTwoSlsaInvocation"
        }
      },
      "type": "object",
      "description": "See full explanation of fields at slsa.dev/provenance/v0.2."
    },
    "Completeness": {
      "type": "object",
      "id": "Completeness",
      "description": "Indicates that the builder claims certain fields in this message to be complete.",
      "properties": {
        "environment": {
          "type": "boolean",
          "description": "If true, the builder claims that recipe.environment is claimed to be complete."
        },
        "arguments": {
          "description": "If true, the builder claims that recipe.arguments is complete, meaning that all external inputs are properly captured in the recipe.",
          "type": "boolean"
        },
        "materials": {
          "type": "boolean",
          "description": "If true, the builder claims that materials are complete, usually through some controls to prevent network access. Sometimes called \"hermetic\"."
        }
      }
    },
    "ContaineranalysisGoogleDevtoolsCloudbuildV1InlineSecret": {
      "type": "object",
      "id": "ContaineranalysisGoogleDevtoolsCloudbuildV1InlineSecret",
      "description": "Pairs a set of secret environment variables mapped to encrypted values with the Cloud KMS key to use to decrypt the value.",
      "properties": {
        "kmsKeyName": {
          "description": "Resource name of Cloud KMS crypto key to decrypt the encrypted value. In format: projects/*/locations/*/keyRings/*/cryptoKeys/*",
          "type": "string"
        },
        "envMap": {
          "description": "Map of environment variable name to its encrypted value. Secret environment variables must be unique across all of a build's secrets, and must be used by at least one build step. Values can be at most 64 KB in size. There can be at most 100 secret values across all of a build's secrets.",
          "additionalProperties": {
            "format": "byte",
            "type": "string"
          },
          "type": "object"
        }
      }
    },
    "RelatedUrl": {
      "properties": {
        "url": {
          "description": "Specific URL associated with the resource.",
          "type": "string"
        },
        "label": {
          "type": "string",
          "description": "Label to describe usage of the URL."
        }
      },
      "description": "Metadata for any related URL information.",
      "type": "object",
      "id": "RelatedUrl"
    },
    "ContaineranalysisGoogleDevtoolsCloudbuildV1ApprovalResult": {
      "type": "object",
      "description": "ApprovalResult describes the decision and associated metadata of a manual approval of a build.",
      "id": "ContaineranalysisGoogleDevtoolsCloudbuildV1ApprovalResult",
      "properties": {
        "decision": {
          "description": "Required. The decision of this manual approval.",
          "enum": [
            "DECISION_UNSPECIFIED",
            "APPROVED",
            "REJECTED"
          ],
          "type": "string",
          "enumDescriptions": [
            "Default enum type. This should not be used.",
            "Build is approved.",
            "Build is rejected."
          ]
        },
        "approvalTime": {
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The time when the approval decision was made.",
          "type": "string"
        },
        "comment": {
          "description": "Optional. An optional comment for this manual approval result.",
          "type": "string"
        },
        "url": {
          "description": "Optional. An optional URL tied to this manual approval result. This field is essentially the same as comment, except that it will be rendered by the UI differently. An example use case is a link to an external job that approved this Build.",
          "type": "string"
        },
        "approverAccount": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Email of the user that called the ApproveBuild API to approve or reject a build at the time that the API was called."
        }
      }
    },
    "Artifact": {
      "type": "object",
      "description": "Artifact describes a build product.",
      "properties": {
        "checksum": {
          "description": "Hash or checksum value of a binary, or Docker Registry 2.0 digest of a container.",
          "type": "string"
        },
        "id": {
          "description": "Artifact ID, if any; for container images, this will be a URL by digest like `gcr.io/projectID/imagename@sha256:123456`.",
          "type": "string"
        },
        "names": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Related artifact names. This may be the path to a binary or jar file, or in the case of a container build, the name used to push the container image to Google Container Registry, as presented to `docker push`. Note that a single Artifact ID can have multiple names, for example if two tags are applied to one image."
        }
      },
      "id": "Artifact"
    },
    "ProjectRepoId": {
      "description": "Selects a repo using a Google Cloud Platform project ID (e.g., winged-cargo-31) and a repo name within that project.",
      "id": "ProjectRepoId",
      "type": "object",
      "properties": {
        "repoName": {
          "description": "The name of the repo. Leave empty for the default repo.",
          "type": "string"
        },
        "projectId": {
          "description": "The ID of the project.",
          "type": "string"
        }
      }
    },
    "Source": {
      "properties": {
        "fileHashes": {
          "additionalProperties": {
            "$ref": "FileHashes"
          },
          "type": "object",
          "description": "Hash(es) of the build source, which can be used to verify that the original source integrity was maintained in the build. The keys to this map are file paths used as build source and the values contain the hash values for those files. If the build source came in a single package such as a gzipped tarfile (.tar.gz), the FileHash will be for the single path to that file."
        },
        "additionalContexts": {
          "items": {
            "$ref": "SourceContext"
          },
          "type": "array",
          "description": "If provided, some of the source code used for the build may be found in these locations, in the case where the source repository had multiple remotes or submodules. This list will not include the context specified in the context field."
        },
        "context": {
          "description": "If provided, the source code used for the build came from this location.",
          "$ref": "SourceContext"
        },
        "artifactStorageSourceUri": {
          "description": "If provided, the input binary artifacts for the build came from this location.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Source describes the location of the source used for the build.",
      "id": "Source"
    },
    "EnvelopeSignature": {
      "type": "object",
      "id": "EnvelopeSignature",
      "properties": {
        "sig": {
          "format": "byte",
          "type": "string"
        },
        "keyid": {
          "type": "string"
        }
      }
    },
    "BatchCreateNotesResponse": {
      "description": "Response for creating notes in batch.",
      "type": "object",
      "properties": {
        "notes": {
          "items": {
            "$ref": "Note"
          },
          "description": "The notes that were created.",
          "type": "array"
        }
      },
      "id": "BatchCreateNotesResponse"
    },
    "License": {
      "description": "License information.",
      "id": "License",
      "properties": {
        "comments": {
          "description": "Comments",
          "type": "string"
        },
        "expression": {
          "type": "string",
          "description": "Often a single license can be used to represent the licensing terms. Sometimes it is necessary to include a choice of one or more licenses or some combination of license identifiers. Examples: \"LGPL-2.1-only OR MIT\", \"LGPL-2.1-only AND MIT\", \"GPL-2.0-or-later WITH Bison-exception-2.2\"."
        }
      },
      "type": "object"
    },
    "ContaineranalysisGoogleDevtoolsCloudbuildV1Secrets": {
      "id": "ContaineranalysisGoogleDevtoolsCloudbuildV1Secrets",
      "description": "Secrets and secret environment variables.",
      "type": "object",
      "properties": {
        "inline": {
          "items": {
            "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1InlineSecret"
          },
          "description": "Secrets encrypted with KMS key and the associated secret environment variable.",
          "type": "array"
        },
        "secretManager": {
          "items": {
            "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1SecretManagerSecret"
          },
          "type": "array",
          "description": "Secrets in Secret Manager and associated secret environment variable."
        }
      }
    },
    "ContaineranalysisGoogleDevtoolsCloudbuildV1StorageSourceManifest": {
      "type": "object",
      "properties": {
        "generation": {
          "format": "int64",
          "description": "Google Cloud Storage generation for the object. If the generation is omitted, the latest generation will be used.",
          "type": "string"
        },
        "bucket": {
          "description": "Google Cloud Storage bucket containing the source manifest (see [Bucket Name Requirements](https://cloud.google.com/storage/docs/bucket-naming#requirements)).",
          "type": "string"
        },
        "object": {
          "type": "string",
          "description": "Google Cloud Storage object containing the source manifest. This object must be a JSON file."
        }
      },
      "id": "ContaineranalysisGoogleDevtoolsCloudbuildV1StorageSourceManifest",
      "description": "Location of the source manifest in Google Cloud Storage. This feature is in Preview; see description [here](https://github.com/GoogleCloudPlatform/cloud-builders/tree/master/gcs-fetcher)."
    },
    "ContaineranalysisGoogleDevtoolsCloudbuildV1SourceProvenance": {
      "properties": {
        "resolvedRepoSource": {
          "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1RepoSource",
          "description": "A copy of the build's `source.repo_source`, if exists, with any revisions resolved."
        },
        "resolvedStorageSource": {
          "description": "A copy of the build's `source.storage_source`, if exists, with any generations resolved.",
          "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1StorageSource"
        },
        "fileHashes": {
          "type": "object",
          "description": "Output only. Hash(es) of the build source, which can be used to verify that the original source integrity was maintained in the build. Note that `FileHashes` will only be populated if `BuildOptions` has requested a `SourceProvenanceHash`. The keys to this map are file paths used as build source and the values contain the hash values for those files. If the build source came in a single package such as a gzipped tarfile (`.tar.gz`), the `FileHash` will be for the single path to that file.",
          "readOnly": true,
          "additionalProperties": {
            "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1FileHashes"
          }
        },
        "resolvedStorageSourceManifest": {
          "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1StorageSourceManifest",
          "description": "A copy of the build's `source.storage_source_manifest`, if exists, with any revisions resolved. This feature is in Preview."
        }
      },
      "description": "Provenance of the source. Ways to find the original source, or verify that some source was used for this build.",
      "id": "ContaineranalysisGoogleDevtoolsCloudbuildV1SourceProvenance",
      "type": "object"
    },
    "PackageIssue": {
      "properties": {
        "effectiveSeverity": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The distro or language system assigned severity for this vulnerability when that is available and note provider assigned severity when it is not available.",
          "enum": [
            "SEVERITY_UNSPECIFIED",
            "MINIMAL",
            "LOW",
            "MEDIUM",
            "HIGH",
            "CRITICAL"
          ],
          "enumDescriptions": [
            "Unknown.",
            "Minimal severity.",
            "Low severity.",
            "Medium severity.",
            "High severity.",
            "Critical severity."
          ]
        },
        "fileLocation": {
          "type": "array",
          "items": {
            "$ref": "GrafeasV1FileLocation"
          },
          "description": "The location at which this package was found."
        },
        "fixAvailable": {
          "type": "boolean",
          "description": "Output only. Whether a fix is available for this package."
        },
        "affectedPackage": {
          "type": "string",
          "description": "Required. The package this vulnerability was found in."
        },
        "affectedCpeUri": {
          "type": "string",
          "description": "Required. The [CPE URI](https://cpe.mitre.org/specification/) this vulnerability was found in."
        },
        "fixedCpeUri": {
          "type": "string",
          "description": "The [CPE URI](https://cpe.mitre.org/specification/) this vulnerability was fixed in. It is possible for this to be different from the affected_cpe_uri."
        },
        "fixedVersion": {
          "description": "Required. The version of the package this vulnerability was fixed in. Setting this to VersionKind.MAXIMUM means no fix is yet available.",
          "$ref": "Version"
        },
        "fixedPackage": {
          "type": "string",
          "description": "The package this vulnerability was fixed in. It is possible for this to be different from the affected_package."
        },
        "affectedVersion": {
          "$ref": "Version",
          "description": "Required. The version of the package that is installed on the resource affected by this vulnerability."
        },
        "packageType": {
          "type": "string",
          "description": "The type of package (e.g. OS, MAVEN, GO)."
        }
      },
      "type": "object",
      "id": "PackageIssue",
      "description": "A detail for a distro and package this vulnerability occurrence was found in and its associated fix (if one is available)."
    },
    "BatchCreateOccurrencesResponse": {
      "id": "BatchCreateOccurrencesResponse",
      "type": "object",
      "description": "Response for creating occurrences in batch.",
      "properties": {
        "occurrences": {
          "description": "The occurrences that were created.",
          "type": "array",
          "items": {
            "$ref": "Occurrence"
          }
        }
      }
    },
    "GoogleDevtoolsContaineranalysisV1alpha1OperationMetadata": {
      "properties": {
        "endTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The time that this operation was marked completed or failed."
        },
        "createTime": {
          "description": "Output only. The time this operation was created.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "id": "GoogleDevtoolsContaineranalysisV1alpha1OperationMetadata",
      "type": "object",
      "description": "Metadata for all operations used and required for all operations that created by Container Analysis Providers"
    },
    "SlsaMetadata": {
      "type": "object",
      "description": "Other properties of the build.",
      "id": "SlsaMetadata",
      "properties": {
        "buildFinishedOn": {
          "type": "string",
          "format": "google-datetime",
          "description": "The timestamp of when the build completed."
        },
        "buildInvocationId": {
          "type": "string",
          "description": "Identifies the particular build invocation, which can be useful for finding associated logs or other ad-hoc analysis. The value SHOULD be globally unique, per in-toto Provenance spec."
        },
        "buildStartedOn": {
          "type": "string",
          "description": "The timestamp of when the build started.",
          "format": "google-datetime"
        },
        "completeness": {
          "description": "Indicates that the builder claims certain fields in this message to be complete.",
          "$ref": "SlsaCompleteness"
        },
        "reproducible": {
          "type": "boolean",
          "description": "If true, the builder claims that running the recipe on materials will produce bit-for-bit identical output."
        }
      }
    },
    "KnowledgeBase": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "description": "A link to the KB in the [Windows update catalog] (https://www.catalog.update.microsoft.com/)."
        },
        "name": {
          "type": "string",
          "description": "The KB name (generally of the form KB[0-9]+ (e.g., KB123456))."
        }
      },
      "id": "KnowledgeBase"
    },
    "VulnerabilityOccurrencesSummary": {
      "type": "object",
      "properties": {
        "counts": {
          "items": {
            "$ref": "FixableTotalByDigest"
          },
          "type": "array",
          "description": "A listing by resource of the number of fixable and total vulnerabilities."
        }
      },
      "id": "VulnerabilityOccurrencesSummary",
      "description": "A summary of how many vulnerability occurrences there are per resource and severity type."
    },
    "Category": {
      "id": "Category",
      "properties": {
        "name": {
          "description": "The localized name of the category.",
          "type": "string"
        },
        "categoryId": {
          "description": "The identifier of the category.",
          "type": "string"
        }
      },
      "description": "The category to which the update belongs.",
      "type": "object"
    },
    "ContaineranalysisGoogleDevtoolsCloudbuildV1BuildApproval": {
      "id": "ContaineranalysisGoogleDevtoolsCloudbuildV1BuildApproval",
      "description": "BuildApproval describes a build's approval configuration, state, and result.",
      "type": "object",
      "properties": {
        "config": {
          "description": "Output only. Configuration for manual approval of this build.",
          "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1ApprovalConfig",
          "readOnly": true
        },
        "result": {
          "readOnly": true,
          "description": "Output only. Result of manual approval for this Build.",
          "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1ApprovalResult"
        },
        "state": {
          "description": "Output only. The state of this build's approval.",
          "type": "string",
          "enumDescriptions": [
            "Default enum type. This should not be used.",
            "Build approval is pending.",
            "Build approval has been approved.",
            "Build approval has been rejected.",
            "Build was cancelled while it was still pending approval."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "PENDING",
            "APPROVED",
            "REJECTED",
            "CANCELLED"
          ],
          "readOnly": true
        }
      }
    },
    "SourceContext": {
      "properties": {
        "cloudRepo": {
          "$ref": "CloudRepoSourceContext",
          "description": "A SourceContext referring to a revision in a Google Cloud Source Repo."
        },
        "git": {
          "$ref": "GitSourceContext",
          "description": "A SourceContext referring to any third party Git repo (e.g., GitHub)."
        },
        "gerrit": {
          "description": "A SourceContext referring to a Gerrit project.",
          "$ref": "GerritSourceContext"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Labels with user defined metadata."
        }
      },
      "id": "SourceContext",
      "type": "object",
      "description": "A SourceContext is a reference to a tree of files. A SourceContext together with a path point to a unique revision of a single file or directory."
    },
    "Material": {
      "properties": {
        "digest": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "uri": {
          "type": "string"
        }
      },
      "id": "Material",
      "type": "object"
    },
    "Location": {
      "id": "Location",
      "properties": {
        "cpeUri": {
          "type": "string",
          "description": "Deprecated. The CPE URI in [CPE format](https://cpe.mitre.org/specification/)"
        },
        "path": {
          "description": "The path from which we gathered that this package/version is installed.",
          "type": "string"
        },
        "version": {
          "description": "Deprecated. The version installed at this location.",
          "$ref": "Version"
        }
      },
      "type": "object",
      "description": "An occurrence of a particular package installation found within a system's filesystem. E.g., glibc was found in `/var/lib/dpkg/status`."
    },
    "Layer": {
      "properties": {
        "directive": {
          "description": "Required. The recovered Dockerfile directive used to construct this layer. See https://docs.docker.com/engine/reference/builder/ for more information.",
          "type": "string"
        },
        "arguments": {
          "description": "The recovered arguments to the Dockerfile directive.",
          "type": "string"
        }
      },
      "description": "Layer holds metadata specific to a layer of a Docker image.",
      "id": "Layer",
      "type": "object"
    },
    "Volume": {
      "id": "Volume",
      "properties": {
        "path": {
          "type": "string",
          "description": "Path at which to mount the volume. Paths must be absolute and cannot conflict with other volume paths on the same build step or with certain reserved volume paths."
        },
        "name": {
          "type": "string",
          "description": "Name of the volume to mount. Volume names must be unique per build step and must be valid names for Docker volumes. Each named volume must be used by at least two build steps."
        }
      },
      "type": "object",
      "description": "Volume describes a Docker container volume which is mounted into build steps in order to persist files across build step execution. Next ID: 3"
    },
    "DeploymentNote": {
      "properties": {
        "resourceUri": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Required. Resource URI for the artifact being deployed."
        }
      },
      "id": "DeploymentNote",
      "description": "An artifact that can be deployed in some runtime.",
      "type": "object"
    },
    "ContaineranalysisGoogleDevtoolsCloudbuildV1ApprovalConfig": {
      "description": "ApprovalConfig describes configuration for manual approval of a build.",
      "id": "ContaineranalysisGoogleDevtoolsCloudbuildV1ApprovalConfig",
      "properties": {
        "approvalRequired": {
          "description": "Whether or not approval is needed. If this is set on a build, it will become pending when created, and will need to be explicitly approved to start.",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "ContaineranalysisGoogleDevtoolsCloudbuildV1RepoSource": {
      "description": "Location of the source in a Google Cloud Source Repository.",
      "type": "object",
      "properties": {
        "invertRegex": {
          "type": "boolean",
          "description": "Only trigger a build if the revision regex does NOT match the revision regex."
        },
        "projectId": {
          "description": "ID of the project that owns the Cloud Source Repository. If omitted, the project ID requesting the build is assumed.",
          "type": "string"
        },
        "dir": {
          "description": "Directory, relative to the source root, in which to run the build. This must be a relative path. If a step's `dir` is specified and is an absolute path, this value is ignored for that step's execution.",
          "type": "string"
        },
        "commitSha": {
          "description": "Explicit commit SHA to build.",
          "type": "string"
        },
        "branchName": {
          "description": "Regex matching branches to build. The syntax of the regular expressions accepted is the syntax accepted by RE2 and described at https://github.com/google/re2/wiki/Syntax",
          "type": "string"
        },
        "tagName": {
          "type": "string",
          "description": "Regex matching tags to build. The syntax of the regular expressions accepted is the syntax accepted by RE2 and described at https://github.com/google/re2/wiki/Syntax"
        },
        "substitutions": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Substitutions to use in a triggered build. Should only be used with RunBuildTrigger"
        },
        "repoName": {
          "description": "Name of the Cloud Source Repository.",
          "type": "string"
        }
      },
      "id": "ContaineranalysisGoogleDevtoolsCloudbuildV1RepoSource"
    },
    "BuildProvenance": {
      "id": "BuildProvenance",
      "description": "Provenance of a build. Contains all information needed to verify the full details about the build from source to completion.",
      "type": "object",
      "properties": {
        "buildOptions": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Special options applied to this build. This is a catch-all field where build providers can enter any desired additional details.",
          "type": "object"
        },
        "createTime": {
          "type": "string",
          "description": "Time at which the build was created.",
          "format": "google-datetime"
        },
        "projectId": {
          "type": "string",
          "description": "ID of the project."
        },
        "sourceProvenance": {
          "description": "Details of the Source input to the build.",
          "$ref": "Source"
        },
        "startTime": {
          "format": "google-datetime",
          "description": "Time at which execution of the build was started.",
          "type": "string"
        },
        "triggerId": {
          "description": "Trigger identifier if the build was triggered automatically; empty if not.",
          "type": "string"
        },
        "commands": {
          "description": "Commands requested by the build.",
          "type": "array",
          "items": {
            "$ref": "Command"
          }
        },
        "id": {
          "type": "string",
          "description": "Required. Unique identifier of the build."
        },
        "logsUri": {
          "description": "URI where any logs for this provenance were written.",
          "type": "string"
        },
        "builtArtifacts": {
          "type": "array",
          "description": "Output of the build.",
          "items": {
            "$ref": "Artifact"
          }
        },
        "endTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Time at which execution of the build was finished."
        },
        "builderVersion": {
          "type": "string",
          "description": "Version string of the builder at the time this build was executed."
        },
        "creator": {
          "type": "string",
          "description": "E-mail address of the user who initiated this build. Note that this was the user's e-mail address at the time the build was initiated; this address may not represent the same end-user for all time."
        }
      }
    },
    "NonCompliantFile": {
      "id": "NonCompliantFile",
      "properties": {
        "reason": {
          "type": "string",
          "description": "Explains why a file is non compliant for a CIS check."
        },
        "path": {
          "description": "Empty if `display_command` is set.",
          "type": "string"
        },
        "displayCommand": {
          "description": "Command to display the non-compliant files.",
          "type": "string"
        }
      },
      "description": "Details about files that caused a compliance check to fail. display_command is a single command that can be used to display a list of non compliant files. When there is no such command, we can also iterate a list of non compliant file using 'path'.",
      "type": "object"
    },
    "ContaineranalysisGoogleDevtoolsCloudbuildV1Volume": {
      "description": "Volume describes a Docker container volume which is mounted into build steps in order to persist files across build step execution.",
      "id": "ContaineranalysisGoogleDevtoolsCloudbuildV1Volume",
      "properties": {
        "path": {
          "type": "string",
          "description": "Path at which to mount the volume. Paths must be absolute and cannot conflict with other volume paths on the same build step or with certain reserved volume paths."
        },
        "name": {
          "type": "string",
          "description": "Name of the volume to mount. Volume names must be unique per build step and must be valid names for Docker volumes. Each named volume must be used by at least two build steps."
        }
      },
      "type": "object"
    },
    "AliasContext": {
      "type": "object",
      "description": "An alias to a repo revision.",
      "properties": {
        "kind": {
          "type": "string",
          "enum": [
            "KIND_UNSPECIFIED",
            "FIXED",
            "MOVABLE",
            "OTHER"
          ],
          "description": "The alias kind.",
          "enumDescriptions": [
            "Unknown.",
            "Git tag.",
            "Git branch.",
            "Used to specify non-standard aliases. For example, if a Git repo has a ref named \"refs/foo/bar\"."
          ]
        },
        "name": {
          "description": "The alias name.",
          "type": "string"
        }
      },
      "id": "AliasContext"
    },
    "ComplianceNote": {
      "id": "ComplianceNote",
      "properties": {
        "rationale": {
          "description": "A rationale for the existence of this compliance check.",
          "type": "string"
        },
        "title": {
          "description": "The title that identifies this compliance check.",
          "type": "string"
        },
        "cisBenchmark": {
          "$ref": "CisBenchmark"
        },
        "remediation": {
          "type": "string",
          "description": "A description of remediation steps if the compliance check fails."
        },
        "version": {
          "items": {
            "$ref": "ComplianceVersion"
          },
          "type": "array",
          "description": "The OS and config versions the benchmark applies to."
        },
        "scanInstructions": {
          "type": "string",
          "format": "byte",
          "description": "Serialized scan instructions with a predefined format."
        },
        "description": {
          "type": "string",
          "description": "A description about this compliance check."
        }
      },
      "type": "object"
    },
    "ContaineranalysisGoogleDevtoolsCloudbuildV1BuildWarning": {
      "id": "ContaineranalysisGoogleDevtoolsCloudbuildV1BuildWarning",
      "properties": {
        "text": {
          "type": "string",
          "description": "Explanation of the warning generated."
        },
        "priority": {
          "enumDescriptions": [
            "Should not be used.",
            "e.g. deprecation warnings and alternative feature highlights.",
            "e.g. automated detection of possible issues with the build.",
            "e.g. alerts that a feature used in the build is pending removal"
          ],
          "type": "string",
          "enum": [
            "PRIORITY_UNSPECIFIED",
            "INFO",
            "WARNING",
            "ALERT"
          ],
          "description": "The priority for this warning."
        }
      },
      "type": "object",
      "description": "A non-fatal problem encountered during the execution of the build."
    },
    "Hash": {
      "id": "Hash",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Required. The type of hash that was performed, e.g. \"SHA-256\"."
        },
        "value": {
          "format": "byte",
          "description": "Required. The hash value.",
          "type": "string"
        }
      },
      "description": "Container message for hash values."
    },
    "GetPolicyOptions": {
      "description": "Encapsulates settings provided to GetIamPolicy.",
      "type": "object",
      "properties": {
        "requestedPolicyVersion": {
          "format": "int32",
          "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
          "type": "integer"
        }
      },
      "id": "GetPolicyOptions"
    },
    "InTotoProvenance": {
      "id": "InTotoProvenance",
      "properties": {
        "recipe": {
          "$ref": "Recipe",
          "description": "Identifies the configuration used for the build. When combined with materials, this SHOULD fully describe the build, such that re-running this recipe results in bit-for-bit identical output (if the build is reproducible). required"
        },
        "metadata": {
          "$ref": "Metadata"
        },
        "materials": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "The collection of artifacts that influenced the build including sources, dependencies, build tools, base images, and so on. This is considered to be incomplete unless metadata.completeness.materials is true. Unset or null is equivalent to empty."
        },
        "builderConfig": {
          "$ref": "BuilderConfig",
          "description": "required"
        }
      },
      "type": "object"
    },
    "ContaineranalysisGoogleDevtoolsCloudbuildV1Secret": {
      "id": "ContaineranalysisGoogleDevtoolsCloudbuildV1Secret",
      "description": "Pairs a set of secret environment variables containing encrypted values with the Cloud KMS key to use to decrypt the value. Note: Use `kmsKeyName` with `available_secrets` instead of using `kmsKeyName` with `secret`. For instructions see: https://cloud.google.com/cloud-build/docs/securing-builds/use-encrypted-credentials.",
      "type": "object",
      "properties": {
        "secretEnv": {
          "description": "Map of environment variable name to its encrypted value. Secret environment variables must be unique across all of a build's secrets, and must be used by at least one build step. Values can be at most 64 KB in size. There can be at most 100 secret values across all of a build's secrets.",
          "additionalProperties": {
            "type": "string",
            "format": "byte"
          },
          "type": "object"
        },
        "kmsKeyName": {
          "type": "string",
          "description": "Cloud KMS key name to use to decrypt these envs."
        }
      }
    },
    "Note": {
      "id": "Note",
      "description": "A type of analysis that can be done for a resource.",
      "properties": {
        "relatedUrl": {
          "items": {
            "$ref": "RelatedUrl"
          },
          "type": "array",
          "description": "URLs associated with this note."
        },
        "dsseAttestation": {
          "$ref": "DSSEAttestationNote",
          "description": "A note describing a dsse attestation note."
        },
        "compliance": {
          "$ref": "ComplianceNote",
          "description": "A note describing a compliance check."
        },
        "discovery": {
          "$ref": "DiscoveryNote",
          "description": "A note describing the initial analysis of a resource."
        },
        "upgrade": {
          "description": "A note describing available package upgrades.",
          "$ref": "UpgradeNote"
        },
        "image": {
          "description": "A note describing a base image.",
          "$ref": "ImageNote"
        },
        "name": {
          "type": "string",
          "description": "Output only. The name of the note in the form of `projects/[PROVIDER_ID]/notes/[NOTE_ID]`."
        },
        "longDescription": {
          "type": "string",
          "description": "A detailed description of this note."
        },
        "deployment": {
          "description": "A note describing something that can be deployed.",
          "$ref": "DeploymentNote"
        },
        "expirationTime": {
          "type": "string",
          "description": "Time of expiration for this note. Empty if note does not expire.",
          "format": "google-datetime"
        },
        "shortDescription": {
          "description": "A one sentence description of this note.",
          "type": "string"
        },
        "vulnerability": {
          "description": "A note describing a package vulnerability.",
          "$ref": "VulnerabilityNote"
        },
        "build": {
          "$ref": "BuildNote",
          "description": "A note describing build provenance for a verifiable build."
        },
        "kind": {
          "description": "Output only. The type of analysis. This field can be used as a filter in list requests.",
          "type": "string",
          "enum": [
            "NOTE_KIND_UNSPECIFIED",
            "VULNERABILITY",
            "BUILD",
            "IMAGE",
            "PACKAGE",
            "DEPLOYMENT",
            "DISCOVERY",
            "ATTESTATION",
            "UPGRADE",
            "COMPLIANCE",
            "DSSE_ATTESTATION"
          ],
          "enumDescriptions": [
            "Default value. This value is unused.",
            "The note and occurrence represent a package vulnerability.",
            "The note and occurrence assert build provenance.",
            "This represents an image basis relationship.",
            "This represents a package installed via a package manager.",
            "The note and occurrence track deployment events.",
            "The note and occurrence track the initial discovery status of a resource.",
            "This represents a logical \"role\" that can attest to artifacts.",
            "This represents an available package upgrade.",
            "This represents a Compliance Note",
            "This represents a DSSE attestation Note"
          ]
        },
        "attestation": {
          "$ref": "AttestationNote",
          "description": "A note describing an attestation role."
        },
        "createTime": {
          "description": "Output only. The time this note was created. This field can be used as a filter in list requests.",
          "format": "google-datetime",
          "type": "string"
        },
        "package": {
          "$ref": "PackageNote",
          "description": "A note describing a package hosted by various package managers."
        },
        "relatedNoteNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Other notes related to this note."
        },
        "updateTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The time this note was last updated. This field can be used as a filter in list requests."
        }
      },
      "type": "object"
    },
    "GrafeasV1SlsaProvenanceZeroTwoSlsaMetadata": {
      "description": "Other properties of the build.",
      "type": "object",
      "id": "GrafeasV1SlsaProvenanceZeroTwoSlsaMetadata",
      "properties": {
        "buildFinishedOn": {
          "format": "google-datetime",
          "type": "string"
        },
        "reproducible": {
          "type": "boolean"
        },
        "buildInvocationId": {
          "type": "string"
        },
        "completeness": {
          "$ref": "GrafeasV1SlsaProvenanceZeroTwoSlsaCompleteness"
        },
        "buildStartedOn": {
          "type": "string",
          "format": "google-datetime"
        }
      }
    },
    "AttestationOccurrence": {
      "type": "object",
      "id": "AttestationOccurrence",
      "description": "Occurrence that represents a single \"attestation\". The authenticity of an attestation can be verified using the attached signature. If the verifier trusts the public key of the signer, then verifying the signature is sufficient to establish trust. In this circumstance, the authority to which this attestation is attached is primarily useful for lookup (how to find this attestation if you already know the authority and artifact to be verified) and intent (for which authority this attestation was intended to sign.",
      "properties": {
        "signatures": {
          "items": {
            "$ref": "Signature"
          },
          "description": "One or more signatures over `serialized_payload`. Verifier implementations should consider this attestation message verified if at least one `signature` verifies `serialized_payload`. See `Signature` in common.proto for more details on signature structure and verification.",
          "type": "array"
        },
        "jwts": {
          "type": "array",
          "description": "One or more JWTs encoding a self-contained attestation. Each JWT encodes the payload that it verifies within the JWT itself. Verifier implementation SHOULD ignore the `serialized_payload` field when verifying these JWTs. If only JWTs are present on this AttestationOccurrence, then the `serialized_payload` SHOULD be left empty. Each JWT SHOULD encode a claim specific to the `resource_uri` of this Occurrence, but this is not validated by Grafeas metadata API implementations. The JWT itself is opaque to Grafeas.",
          "items": {
            "$ref": "Jwt"
          }
        },
        "serializedPayload": {
          "description": "Required. The serialized payload that is verified by one or more `signatures`.",
          "type": "string",
          "format": "byte"
        }
      }
    },
    "PackageNote": {
      "description": "PackageNote represents a particular package version.",
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "description": "The description of this package."
        },
        "license": {
          "description": "Licenses that have been declared by the authors of the package.",
          "$ref": "License"
        },
        "architecture": {
          "enumDescriptions": [
            "Unknown architecture.",
            "X86 architecture.",
            "X64 architecture."
          ],
          "type": "string",
          "description": "The CPU architecture for which packages in this distribution channel were built. Architecture will be blank for language packages.",
          "enum": [
            "ARCHITECTURE_UNSPECIFIED",
            "X86",
            "X64"
          ]
        },
        "digest": {
          "description": "Hash value, typically a file digest, that allows unique identification a specific package.",
          "type": "array",
          "items": {
            "$ref": "Digest"
          }
        },
        "distribution": {
          "items": {
            "$ref": "Distribution"
          },
          "description": "Deprecated. The various channels by which a package is distributed.",
          "type": "array"
        },
        "cpeUri": {
          "description": "The cpe_uri in [CPE format](https://cpe.mitre.org/specification/) denoting the package manager version distributing a package. The cpe_uri will be blank for language packages.",
          "type": "string"
        },
        "version": {
          "description": "The version of the package.",
          "$ref": "Version"
        },
        "url": {
          "type": "string",
          "description": "The homepage for this package."
        },
        "maintainer": {
          "type": "string",
          "description": "A freeform text denoting the maintainer of this package."
        },
        "name": {
          "type": "string",
          "description": "Required. Immutable. The name of the package."
        },
        "packageType": {
          "description": "The type of package; whether native or non native (e.g., ruby gems, node.js packages, etc.).",
          "type": "string"
        }
      },
      "id": "PackageNote"
    },
    "InTotoStatement": {
      "properties": {
        "predicateType": {
          "type": "string",
          "description": "`https://slsa.dev/provenance/v0.1` for SlsaProvenance."
        },
        "provenance": {
          "$ref": "InTotoProvenance"
        },
        "_type": {
          "description": "Always `https://in-toto.io/Statement/v0.1`.",
          "type": "string"
        },
        "slsaProvenance": {
          "$ref": "SlsaProvenance"
        },
        "slsaProvenanceZeroTwo": {
          "$ref": "SlsaProvenanceZeroTwo"
        },
        "subject": {
          "type": "array",
          "items": {
            "$ref": "Subject"
          }
        }
      },
      "description": "Spec defined at https://github.com/in-toto/attestation/tree/main/spec#statement The serialized InTotoStatement will be stored as Envelope.payload. Envelope.payloadType is always \"application/vnd.in-toto+json\".",
      "id": "InTotoStatement",
      "type": "object"
    },
    "DSSEAttestationOccurrence": {
      "id": "DSSEAttestationOccurrence",
      "properties": {
        "envelope": {
          "description": "If doing something security critical, make sure to verify the signatures in this metadata.",
          "$ref": "Envelope"
        },
        "statement": {
          "$ref": "InTotoStatement"
        }
      },
      "description": "Deprecated. Prefer to use a regular Occurrence, and populate the Envelope at the top level of the Occurrence.",
      "type": "object"
    },
    "Policy": {
      "id": "Policy",
      "type": "object",
      "properties": {
        "etag": {
          "type": "string",
          "format": "byte",
          "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost."
        },
        "bindings": {
          "type": "array",
          "items": {
            "$ref": "Binding"
          },
          "description": "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`."
        },
        "version": {
          "type": "integer",
          "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
          "format": "int32"
        }
      },
      "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time \u003c timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time \u003c timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/)."
    },
    "ContaineranalysisGoogleDevtoolsCloudbuildV1SecretManagerSecret": {
      "type": "object",
      "properties": {
        "env": {
          "type": "string",
          "description": "Environment variable name to associate with the secret. Secret environment variables must be unique across all of a build's secrets, and must be used by at least one build step."
        },
        "versionName": {
          "type": "string",
          "description": "Resource name of the SecretVersion. In format: projects/*/secrets/*/versions/*"
        }
      },
      "id": "ContaineranalysisGoogleDevtoolsCloudbuildV1SecretManagerSecret",
      "description": "Pairs a secret environment variable with a SecretVersion in Secret Manager."
    },
    "Occurrence": {
      "type": "object",
      "description": "An instance of an analysis type that has been found on a resource.",
      "properties": {
        "noteName": {
          "description": "Required. Immutable. The analysis note associated with this occurrence, in the form of `projects/[PROVIDER_ID]/notes/[NOTE_ID]`. This field can be used as a filter in list requests.",
          "type": "string"
        },
        "discovery": {
          "$ref": "DiscoveryOccurrence",
          "description": "Describes when a resource was discovered."
        },
        "createTime": {
          "format": "google-datetime",
          "description": "Output only. The time this occurrence was created.",
          "type": "string"
        },
        "compliance": {
          "description": "Describes a compliance violation on a linked resource.",
          "$ref": "ComplianceOccurrence"
        },
        "build": {
          "description": "Describes a verifiable build.",
          "$ref": "BuildOccurrence"
        },
        "deployment": {
          "$ref": "DeploymentOccurrence",
          "description": "Describes the deployment of an artifact on a runtime."
        },
        "upgrade": {
          "description": "Describes an available package upgrade on the linked resource.",
          "$ref": "UpgradeOccurrence"
        },
        "resourceUri": {
          "description": "Required. Immutable. A URI that represents the resource for which the occurrence applies. For example, `https://gcr.io/project/image@sha256:123abc` for a Docker image.",
          "type": "string"
        },
        "remediation": {
          "description": "A description of actions that can be taken to remedy the note.",
          "type": "string"
        },
        "attestation": {
          "$ref": "AttestationOccurrence",
          "description": "Describes an attestation of an artifact."
        },
        "kind": {
          "type": "string",
          "enumDescriptions": [
            "Default value. This value is unused.",
            "The note and occurrence represent a package vulnerability.",
            "The note and occurrence assert build provenance.",
            "This represents an image basis relationship.",
            "This represents a package installed via a package manager.",
            "The note and occurrence track deployment events.",
            "The note and occurrence track the initial discovery status of a resource.",
            "This represents a logical \"role\" that can attest to artifacts.",
            "This represents an available package upgrade.",
            "This represents a Compliance Note",
            "This represents a DSSE attestation Note"
          ],
          "description": "Output only. This explicitly denotes which of the occurrence details are specified. This field can be used as a filter in list requests.",
          "enum": [
            "NOTE_KIND_UNSPECIFIED",
            "VULNERABILITY",
            "BUILD",
            "IMAGE",
            "PACKAGE",
            "DEPLOYMENT",
            "DISCOVERY",
            "ATTESTATION",
            "UPGRADE",
            "COMPLIANCE",
            "DSSE_ATTESTATION"
          ]
        },
        "envelope": {
          "description": "https://github.com/secure-systems-lab/dsse",
          "$ref": "Envelope"
        },
        "vulnerability": {
          "description": "Describes a security vulnerability.",
          "$ref": "VulnerabilityOccurrence"
        },
        "image": {
          "$ref": "ImageOccurrence",
          "description": "Describes how this resource derives from the basis in the associated note."
        },
        "dsseAttestation": {
          "$ref": "DSSEAttestationOccurrence",
          "description": "Describes an attestation of an artifact using dsse."
        },
        "package": {
          "description": "Describes the installation of a package on the linked resource.",
          "$ref": "PackageOccurrence"
        },
        "updateTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The time this occurrence was last updated."
        },
        "name": {
          "type": "string",
          "description": "Output only. The name of the occurrence in the form of `projects/[PROJECT_ID]/occurrences/[OCCURRENCE_ID]`."
        }
      },
      "id": "Occurrence"
    },
    "DiscoveryNote": {
      "properties": {
        "analysisKind": {
          "enum": [
            "NOTE_KIND_UNSPECIFIED",
            "VULNERABILITY",
            "BUILD",
            "IMAGE",
            "PACKAGE",
            "DEPLOYMENT",
            "DISCOVERY",
            "ATTESTATION",
            "UPGRADE",
            "COMPLIANCE",
            "DSSE_ATTESTATION"
          ],
          "type": "string",
          "enumDescriptions": [
            "Default value. This value is unused.",
            "The note and occurrence represent a package vulnerability.",
            "The note and occurrence assert build provenance.",
            "This represents an image basis relationship.",
            "This represents a package installed via a package manager.",
            "The note and occurrence track deployment events.",
            "The note and occurrence track the initial discovery status of a resource.",
            "This represents a logical \"role\" that can attest to artifacts.",
            "This represents an available package upgrade.",
            "This represents a Compliance Note",
            "This represents a DSSE attestation Note"
          ],
          "description": "Required. Immutable. The kind of analysis that is handled by this discovery."
        }
      },
      "id": "DiscoveryNote",
      "description": "A note that indicates a type of analysis a provider would perform. This note exists in a provider's project. A `Discovery` occurrence is created in a consumer's project at the start of analysis.",
      "type": "object"
    },
    "GrafeasV1SlsaProvenanceZeroTwoSlsaMaterial": {
      "id": "GrafeasV1SlsaProvenanceZeroTwoSlsaMaterial",
      "type": "object",
      "description": "The collection of artifacts that influenced the build including sources, dependencies, build tools, base images, and so on.",
      "properties": {
        "uri": {
          "type": "string"
        },
        "digest": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "Binding": {
      "id": "Binding",
      "type": "object",
      "properties": {
        "condition": {
          "$ref": "Expr",
          "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
        },
        "role": {
          "type": "string",
          "description": "Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`."
        },
        "members": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding."
        }
      },
      "description": "Associates `members`, or principals, with a `role`."
    },
    "Digest": {
      "id": "Digest",
      "description": "Digest information.",
      "type": "object",
      "properties": {
        "algo": {
          "description": "`SHA1`, `SHA512` etc.",
          "type": "string"
        },
        "digestBytes": {
          "format": "byte",
          "description": "Value of the digest.",
          "type": "string"
        }
      }
    },
    "Fingerprint": {
      "id": "Fingerprint",
      "description": "A set of properties that uniquely identify a given Docker image.",
      "properties": {
        "v2Blob": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Required. The ordered list of v2 blobs that represent a given image."
        },
        "v2Name": {
          "type": "string",
          "description": "Output only. The name of the image's v2 blobs computed via: [bottom] := v2_blobbottom := sha256(v2_blob[N] + \" \" + v2_name[N+1]) Only the name of the final blob is kept."
        },
        "v1Name": {
          "description": "Required. The layer ID of the final layer in the Docker image's v1 representation.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Detail": {
      "id": "Detail",
      "type": "object",
      "description": "A detail for a distro and package affected by this vulnerability and its associated fix (if one is available).",
      "properties": {
        "source": {
          "description": "The source from which the information in this Detail was obtained.",
          "type": "string"
        },
        "sourceUpdateTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The time this information was last changed at the source. This is an upstream timestamp from the underlying information source - e.g. Ubuntu security tracker."
        },
        "severityName": {
          "description": "The distro assigned severity of this vulnerability.",
          "type": "string"
        },
        "isObsolete": {
          "type": "boolean",
          "description": "Whether this detail is obsolete. Occurrences are expected not to point to obsolete details."
        },
        "fixedPackage": {
          "description": "The distro recommended package to update to that contains a fix for this vulnerability. It is possible for this to be different from the affected_package.",
          "type": "string"
        },
        "fixedCpeUri": {
          "type": "string",
          "description": "The distro recommended [CPE URI](https://cpe.mitre.org/specification/) to update to that contains a fix for this vulnerability. It is possible for this to be different from the affected_cpe_uri."
        },
        "packageType": {
          "type": "string",
          "description": "The type of package; whether native or non native (e.g., ruby gems, node.js packages, etc.)."
        },
        "affectedPackage": {
          "description": "Required. The package this vulnerability affects.",
          "type": "string"
        },
        "affectedVersionEnd": {
          "$ref": "Version",
          "description": "The version number at the end of an interval in which this vulnerability exists. A vulnerability can affect a package between version numbers that are disjoint sets of intervals (example: [1.0.0-1.1.0], [2.4.6-2.4.8] and [4.5.6-4.6.8]) each of which will be represented in its own Detail. If a specific affected version is provided by a vulnerability database, affected_version_start and affected_version_end will be the same in that Detail."
        },
        "vendor": {
          "description": "The name of the vendor of the product.",
          "type": "string"
        },
        "description": {
          "type": "string",
          "description": "A vendor-specific description of this vulnerability."
        },
        "fixedVersion": {
          "$ref": "Version",
          "description": "The distro recommended version to update to that contains a fix for this vulnerability. Setting this to VersionKind.MAXIMUM means no such version is yet available."
        },
        "affectedVersionStart": {
          "description": "The version number at the start of an interval in which this vulnerability exists. A vulnerability can affect a package between version numbers that are disjoint sets of intervals (example: [1.0.0-1.1.0], [2.4.6-2.4.8] and [4.5.6-4.6.8]) each of which will be represented in its own Detail. If a specific affected version is provided by a vulnerability database, affected_version_start and affected_version_end will be the same in that Detail.",
          "$ref": "Version"
        },
        "affectedCpeUri": {
          "type": "string",
          "description": "Required. The [CPE URI](https://cpe.mitre.org/specification/) this vulnerability affects."
        }
      }
    },
    "BuildStep": {
      "properties": {
        "pullTiming": {
          "$ref": "TimeSpan",
          "description": "Output only. Stores timing information for pulling this build step's builder image only."
        },
        "args": {
          "items": {
            "type": "string"
          },
          "description": "A list of arguments that will be presented to the step when it is started. If the image used to run the step's container has an entrypoint, the `args` are used as arguments to that entrypoint. If the image does not define an entrypoint, the first element in args is used as the entrypoint, and the remainder will be used as arguments.",
          "type": "array"
        },
        "allowExitCodes": {
          "description": "Allow this build step to fail without failing the entire build if and only if the exit code is one of the specified codes. If allow_failure is also specified, this field will take precedence.",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "script": {
          "type": "string",
          "description": "A shell script to be executed in the step. When script is provided, the user cannot specify the entrypoint or args."
        },
        "timeout": {
          "format": "google-duration",
          "type": "string",
          "description": "Time limit for executing this build step. If not defined, the step has no time limit and will be allowed to continue to run until either it completes or the build itself times out."
        },
        "volumes": {
          "description": "List of volumes to mount into the build step. Each volume is created as an empty volume prior to execution of the build step. Upon completion of the build, volumes and their contents are discarded. Using a named volume in only one step is not valid as it is indicative of a build request with an incorrect configuration.",
          "items": {
            "$ref": "Volume"
          },
          "type": "array"
        },
        "exitCode": {
          "format": "int32",
          "description": "Output only. Return code from running the step.",
          "type": "integer"
        },
        "entrypoint": {
          "type": "string",
          "description": "Entrypoint to be used instead of the build step image's default entrypoint. If unset, the image's default entrypoint is used."
        },
        "secretEnv": {
          "description": "A list of environment variables which are encrypted using a Cloud Key Management Service crypto key. These values must be specified in the build's `Secret`.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "timing": {
          "description": "Output only. Stores timing information for executing this build step.",
          "$ref": "TimeSpan"
        },
        "name": {
          "type": "string",
          "description": "Required. The name of the container image that will run this particular build step. If the image is available in the host's Docker daemon's cache, it will be run directly. If not, the host will attempt to pull the image first, using the builder service account's credentials if necessary. The Docker daemon's cache will already have the latest versions of all of the officially supported build steps ([https://github.com/GoogleCloudPlatform/cloud-builders](https://github.com/GoogleCloudPlatform/cloud-builders)). The Docker daemon will also have cached many of the layers for some popular images, like \"ubuntu\", \"debian\", but they will be refreshed at the time you attempt to use them. If you built an image in a previous build step, it will be stored in the host's Docker daemon's cache and is available to use as the name for a later build step."
        },
        "allowFailure": {
          "type": "boolean",
          "description": "Allow this build step to fail without failing the entire build. If false, the entire build will fail if this step fails. Otherwise, the build will succeed, but this step will still have a failure status. Error information will be reported in the failure_detail field."
        },
        "id": {
          "description": "Unique identifier for this build step, used in `wait_for` to reference this build step as a dependency.",
          "type": "string"
        },
        "env": {
          "type": "array",
          "description": "A list of environment variable definitions to be used when running a step. The elements are of the form \"KEY=VALUE\" for the environment variable \"KEY\" being given the value \"VALUE\".",
          "items": {
            "type": "string"
          }
        },
        "status": {
          "enumDescriptions": [
            "Status of the build is unknown.",
            "Build has been created and is pending execution and queuing. It has not been queued.",
            "Build has been received and is being queued.",
            "Build or step is queued; work has not yet begun.",
            "Build or step is being executed.",
            "Build or step finished successfully.",
            "Build or step failed to complete successfully.",
            "Build or step failed due to an internal cause.",
            "Build or step took longer than was allowed.",
            "Build or step was canceled by a user.",
            "Build was enqueued for longer than the value of `queue_ttl`."
          ],
          "enum": [
            "STATUS_UNKNOWN",
            "PENDING",
            "QUEUING",
            "QUEUED",
            "WORKING",
            "SUCCESS",
            "FAILURE",
            "INTERNAL_ERROR",
            "TIMEOUT",
            "CANCELLED",
            "EXPIRED"
          ],
          "description": "Output only. Status of the build step. At this time, build step status is only updated on build completion; step status is not updated in real-time as the build progresses.",
          "type": "string"
        },
        "dir": {
          "type": "string",
          "description": "Working directory to use when running this step's container. If this value is a relative path, it is relative to the build's working directory. If this value is absolute, it may be outside the build's working directory, in which case the contents of the path may not be persisted across build step executions, unless a `volume` for that path is specified. If the build specifies a `RepoSource` with `dir` and a step with a `dir`, which specifies an absolute path, the `RepoSource` `dir` is ignored for the step's execution."
        },
        "waitFor": {
          "items": {
            "type": "string"
          },
          "description": "The ID(s) of the step(s) that this build step depends on. This build step will not start until all the build steps in `wait_for` have completed successfully. If `wait_for` is empty, this build step will start when all previous build steps in the `Build.Steps` list have completed successfully.",
          "type": "array"
        }
      },
      "type": "object",
      "id": "BuildStep",
      "description": "A step in the build pipeline. Next ID: 20"
    },
    "GetIamPolicyRequest": {
      "properties": {
        "options": {
          "$ref": "GetPolicyOptions",
          "description": "OPTIONAL: A `GetPolicyOptions` object for specifying options to `GetIamPolicy`."
        }
      },
      "description": "Request message for `GetIamPolicy` method.",
      "type": "object",
      "id": "GetIamPolicyRequest"
    },
    "VulnerabilityNote": {
      "id": "VulnerabilityNote",
      "type": "object",
      "properties": {
        "cvssV2": {
          "$ref": "CVSS",
          "description": "The full description of the v2 CVSS for this vulnerability."
        },
        "cvssV3": {
          "description": "The full description of the CVSSv3 for this vulnerability.",
          "$ref": "CVSSv3"
        },
        "windowsDetails": {
          "type": "array",
          "description": "Windows details get their own format because the information format and model don't match a normal detail. Specifically Windows updates are done as patches, thus Windows vulnerabilities really are a missing package, rather than a package being at an incorrect version.",
          "items": {
            "$ref": "WindowsDetail"
          }
        },
        "cvssVersion": {
          "type": "string",
          "enum": [
            "CVSS_VERSION_UNSPECIFIED",
            "CVSS_VERSION_2",
            "CVSS_VERSION_3"
          ],
          "enumDescriptions": [
            "",
            "",
            ""
          ],
          "description": "CVSS version used to populate cvss_score and severity."
        },
        "details": {
          "type": "array",
          "description": "Details of all known distros and packages affected by this vulnerability.",
          "items": {
            "$ref": "Detail"
          }
        },
        "cvssScore": {
          "type": "number",
          "format": "float",
          "description": "The CVSS score of this vulnerability. CVSS score is on a scale of 0 - 10 where 0 indicates low severity and 10 indicates high severity."
        },
        "severity": {
          "enum": [
            "SEVERITY_UNSPECIFIED",
            "MINIMAL",
            "LOW",
            "MEDIUM",
            "HIGH",
            "CRITICAL"
          ],
          "type": "string",
          "description": "The note provider assigned severity of this vulnerability.",
          "enumDescriptions": [
            "Unknown.",
            "Minimal severity.",
            "Low severity.",
            "Medium severity.",
            "High severity.",
            "Critical severity."
          ]
        },
        "sourceUpdateTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The time this information was last changed at the source. This is an upstream timestamp from the underlying information source - e.g. Ubuntu security tracker."
        }
      },
      "description": "A security vulnerability that can be found in resources."
    },
    "WindowsUpdate": {
      "properties": {
        "title": {
          "type": "string",
          "description": "The localized title of the update."
        },
        "description": {
          "description": "The localized description of the update.",
          "type": "string"
        },
        "categories": {
          "items": {
            "$ref": "Category"
          },
          "type": "array",
          "description": "The list of categories to which the update belongs."
        },
        "supportUrl": {
          "type": "string",
          "description": "The hyperlink to the support information for the update."
        },
        "identity": {
          "description": "Required - The unique identifier for the update.",
          "$ref": "Identity"
        },
        "kbArticleIds": {
          "items": {
            "type": "string"
          },
          "description": "The Microsoft Knowledge Base article IDs that are associated with the update.",
          "type": "array"
        },
        "lastPublishedTimestamp": {
          "type": "string",
          "description": "The last published timestamp of the update.",
          "format": "google-datetime"
        }
      },
      "type": "object",
      "description": "Windows Update represents the metadata about the update for the Windows operating system. The fields in this message come from the Windows Update API documented at https://docs.microsoft.com/en-us/windows/win32/api/wuapi/nn-wuapi-iupdate.",
      "id": "WindowsUpdate"
    },
    "FixableTotalByDigest": {
      "type": "object",
      "description": "Per resource and severity counts of fixable and total vulnerabilities.",
      "id": "FixableTotalByDigest",
      "properties": {
        "resourceUri": {
          "type": "string",
          "description": "The affected resource."
        },
        "fixableCount": {
          "format": "int64",
          "description": "The number of fixable vulnerabilities associated with this resource.",
          "type": "string"
        },
        "totalCount": {
          "format": "int64",
          "description": "The total number of vulnerabilities associated with this resource.",
          "type": "string"
        },
        "severity": {
          "enum": [
            "SEVERITY_UNSPECIFIED",
            "MINIMAL",
            "LOW",
            "MEDIUM",
            "HIGH",
            "CRITICAL"
          ],
          "description": "The severity for this count. SEVERITY_UNSPECIFIED indicates total across all severities.",
          "type": "string",
          "enumDescriptions": [
            "Unknown.",
            "Minimal severity.",
            "Low severity.",
            "Medium severity.",
            "High severity.",
            "Critical severity."
          ]
        }
      }
    },
    "ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsArtifactObjects": {
      "properties": {
        "paths": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Path globs used to match files in the build's workspace."
        },
        "timing": {
          "description": "Output only. Stores timing information for pushing all artifact objects.",
          "readOnly": true,
          "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1TimeSpan"
        },
        "location": {
          "description": "Cloud Storage bucket and optional object path, in the form \"gs://bucket/path/to/somewhere/\". (see [Bucket Name Requirements](https://cloud.google.com/storage/docs/bucket-naming#requirements)). Files in the workspace matching any path pattern will be uploaded to Cloud Storage with this location as a prefix.",
          "type": "string"
        }
      },
      "description": "Files in the workspace to upload to Cloud Storage upon successful completion of all build steps.",
      "id": "ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsArtifactObjects",
      "type": "object"
    },
    "ContaineranalysisGoogleDevtoolsCloudbuildV1StorageSource": {
      "type": "object",
      "description": "Location of the source in an archive file in Google Cloud Storage.",
      "properties": {
        "bucket": {
          "type": "string",
          "description": "Google Cloud Storage bucket containing the source (see [Bucket Name Requirements](https://cloud.google.com/storage/docs/bucket-naming#requirements))."
        },
        "object": {
          "type": "string",
          "description": "Google Cloud Storage object containing the source. This object must be a zipped (`.zip`) or gzipped archive file (`.tar.gz`) containing source to build."
        },
        "generation": {
          "type": "string",
          "description": "Google Cloud Storage generation for the object. If the generation is omitted, the latest generation will be used.",
          "format": "int64"
        }
      },
      "id": "ContaineranalysisGoogleDevtoolsCloudbuildV1StorageSource"
    },
    "Hint": {
      "type": "object",
      "description": "This submessage provides human-readable hints about the purpose of the authority. Because the name of a note acts as its resource reference, it is important to disambiguate the canonical name of the Note (which might be a UUID for security purposes) from \"readable\" names more suitable for debug output. Note that these hints should not be used to look up authorities in security sensitive contexts, such as when looking up attestations to verify.",
      "id": "Hint",
      "properties": {
        "humanReadableName": {
          "description": "Required. The human readable name of this attestation authority, for example \"qa\".",
          "type": "string"
        }
      }
    },
    "ContaineranalysisGoogleDevtoolsCloudbuildV1BuildOptionsPoolOption": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The `WorkerPool` resource to execute the build on. You must have `cloudbuild.workerpools.use` on the project hosting the WorkerPool. Format projects/{project}/locations/{location}/workerPools/{workerPoolId}"
        }
      },
      "description": "Details about how a build should be executed on a `WorkerPool`. See [running builds in a private pool](https://cloud.google.com/build/docs/private-pools/run-builds-in-private-pool) for more information.",
      "type": "object",
      "id": "ContaineranalysisGoogleDevtoolsCloudbuildV1BuildOptionsPoolOption"
    },
    "ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsPythonPackage": {
      "id": "ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsPythonPackage",
      "type": "object",
      "properties": {
        "repository": {
          "type": "string",
          "description": "Artifact Registry repository, in the form \"https://$REGION-python.pkg.dev/$PROJECT/$REPOSITORY\" Files in the workspace matching any path pattern will be uploaded to Artifact Registry with this location as a prefix."
        },
        "paths": {
          "description": "Path globs used to match files in the build's workspace. For Python/ Twine, this is usually `dist/*`, and sometimes additionally an `.asc` file.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "description": "Python package to upload to Artifact Registry upon successful completion of all build steps. A package can encapsulate multiple objects to be uploaded to a single repository."
    },
    "UpgradeDistribution": {
      "id": "UpgradeDistribution",
      "properties": {
        "severity": {
          "type": "string",
          "description": "The severity as specified by the upstream operating system."
        },
        "cve": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The cve tied to this Upgrade."
        },
        "classification": {
          "type": "string",
          "description": "The operating system classification of this Upgrade, as specified by the upstream operating system upgrade feed. For Windows the classification is one of the category_ids listed at https://docs.microsoft.com/en-us/previous-versions/windows/desktop/ff357803(v=vs.85)"
        },
        "cpeUri": {
          "description": "Required - The specific operating system this metadata applies to. See https://cpe.mitre.org/specification/.",
          "type": "string"
        }
      },
      "description": "The Upgrade Distribution represents metadata about the Upgrade for each operating system (CPE). Some distributions have additional metadata around updates, classifying them into various categories and severities.",
      "type": "object"
    },
    "Command": {
      "type": "object",
      "id": "Command",
      "description": "Command describes a step performed as part of the build pipeline.",
      "properties": {
        "id": {
          "description": "Optional unique identifier for this command, used in wait_for to reference this command as a dependency.",
          "type": "string"
        },
        "args": {
          "type": "array",
          "description": "Command-line arguments used when executing this command.",
          "items": {
            "type": "string"
          }
        },
        "env": {
          "type": "array",
          "description": "Environment variables set before running this command.",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "description": "Required. Name of the command, as presented on the command line, or if the command is packaged as a Docker container, as presented to `docker pull`.",
          "type": "string"
        },
        "waitFor": {
          "description": "The ID(s) of the command(s) that this command depends on.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "dir": {
          "description": "Working directory (relative to project source root) used when running this command.",
          "type": "string"
        }
      }
    },
    "SlsaBuilder": {
      "id": "SlsaBuilder",
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "type": "object"
    }
  },
  "rootUrl": "https://containeranalysis.googleapis.com/",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "documentationLink": "https://cloud.google.com/container-analysis/api/reference/rest/",
  "fullyEncodeReservedExpansion": true,
  "batchPath": "batch",
  "parameters": {
    "uploadType": {
      "location": "query",
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
    },
    "alt": {
      "description": "Data format for response.",
      "type": "string",
      "location": "query",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ]
    },
    "prettyPrint": {
      "location": "query",
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "type": "boolean"
    },
    "quotaUser": {
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string"
    },
    "access_token": {
      "description": "OAuth access token.",
      "location": "query",
      "type": "string"
    },
    "$.xgafv": {
      "description": "V1 error format.",
      "location": "query",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "enum": [
        "1",
        "2"
      ],
      "type": "string"
    },
    "fields": {
      "type": "string",
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response."
    },
    "oauth_token": {
      "location": "query",
      "description": "OAuth 2.0 token for the current user.",
      "type": "string"
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "key": {
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string"
    }
  },
  "mtlsRootUrl": "https://containeranalysis.mtls.googleapis.com/",
  "servicePath": "",
  "name": "containeranalysis",
  "discoveryVersion": "v1",
  "ownerDomain": "google.com",
  "baseUrl": "https://containeranalysis.googleapis.com/",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "protocol": "rest",
  "basePath": "",
  "version_module": true,
  "canonicalName": "Container Analysis",
  "ownerName": "Google",
  "kind": "discovery#restDescription",
  "title": "Container Analysis API",
  "resources": {
    "projects": {
      "resources": {
        "notes": {
          "methods": {
            "delete": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "httpMethod": "DELETE",
              "parameters": {
                "name": {
                  "pattern": "^projects/[^/]+/notes/[^/]+$",
                  "location": "path",
                  "type": "string",
                  "required": true,
                  "description": "Required. The name of the note in the form of `projects/[PROVIDER_ID]/notes/[NOTE_ID]`."
                }
              },
              "description": "Deletes the specified note.",
              "id": "containeranalysis.projects.notes.delete",
              "parameterOrder": [
                "name"
              ],
              "flatPath": "v1/projects/{projectsId}/notes/{notesId}",
              "path": "v1/{+name}",
              "response": {
                "$ref": "Empty"
              }
            },
            "list": {
              "flatPath": "v1/projects/{projectsId}/notes",
              "httpMethod": "GET",
              "parameterOrder": [
                "parent"
              ],
              "description": "Lists notes for the specified project.",
              "response": {
                "$ref": "ListNotesResponse"
              },
              "parameters": {
                "filter": {
                  "type": "string",
                  "description": "The filter expression.",
                  "location": "query"
                },
                "pageSize": {
                  "type": "integer",
                  "location": "query",
                  "description": "Number of notes to return in the list. Must be positive. Max allowed page size is 1000. If not specified, page size defaults to 20.",
                  "format": "int32"
                },
                "pageToken": {
                  "location": "query",
                  "type": "string",
                  "description": "Token to provide to skip to a particular spot in the list."
                },
                "parent": {
                  "pattern": "^projects/[^/]+$",
                  "description": "Required. The name of the project to list notes for in the form of `projects/[PROJECT_ID]`.",
                  "type": "string",
                  "required": true,
                  "location": "path"
                }
              },
              "id": "containeranalysis.projects.notes.list",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "path": "v1/{+parent}/notes"
            },
            "batchCreate": {
              "parameterOrder": [
                "parent"
              ],
              "id": "containeranalysis.projects.notes.batchCreate",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "response": {
                "$ref": "BatchCreateNotesResponse"
              },
              "parameters": {
                "parent": {
                  "required": true,
                  "description": "Required. The name of the project in the form of `projects/[PROJECT_ID]`, under which the notes are to be created.",
                  "type": "string",
                  "location": "path",
                  "pattern": "^projects/[^/]+$"
                }
              },
              "description": "Creates new notes in batch.",
              "flatPath": "v1/projects/{projectsId}/notes:batchCreate",
              "path": "v1/{+parent}/notes:batchCreate",
              "request": {
                "$ref": "BatchCreateNotesRequest"
              },
              "httpMethod": "POST"
            },
            "patch": {
              "httpMethod": "PATCH",
              "response": {
                "$ref": "Note"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "path": "v1/{+name}",
              "parameters": {
                "updateMask": {
                  "location": "query",
                  "description": "The fields to update.",
                  "type": "string",
                  "format": "google-fieldmask"
                },
                "name": {
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "pattern": "^projects/[^/]+/notes/[^/]+$",
                  "description": "Required. The name of the note in the form of `projects/[PROVIDER_ID]/notes/[NOTE_ID]`."
                }
              },
              "request": {
                "$ref": "Note"
              },
              "id": "containeranalysis.projects.notes.patch",
              "parameterOrder": [
                "name"
              ],
              "flatPath": "v1/projects/{projectsId}/notes/{notesId}",
              "description": "Updates the specified note."
            },
            "setIamPolicy": {
              "httpMethod": "POST",
              "id": "containeranalysis.projects.notes.setIamPolicy",
              "parameterOrder": [
                "resource"
              ],
              "flatPath": "v1/projects/{projectsId}/notes/{notesId}:setIamPolicy",
              "parameters": {
                "resource": {
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                  "pattern": "^projects/[^/]+/notes/[^/]+$"
                }
              },
              "description": "Sets the access control policy on the specified note or occurrence. Requires `containeranalysis.notes.setIamPolicy` or `containeranalysis.occurrences.setIamPolicy` permission if the resource is a note or an occurrence, respectively. The resource takes the format `projects/[PROJECT_ID]/notes/[NOTE_ID]` for notes and `projects/[PROJECT_ID]/occurrences/[OCCURRENCE_ID]` for occurrences.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "path": "v1/{+resource}:setIamPolicy",
              "response": {
                "$ref": "Policy"
              },
              "request": {
                "$ref": "SetIamPolicyRequest"
              }
            },
            "create": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1/projects/{projectsId}/notes",
              "httpMethod": "POST",
              "path": "v1/{+parent}/notes",
              "response": {
                "$ref": "Note"
              },
              "description": "Creates a new note.",
              "request": {
                "$ref": "Note"
              },
              "parameters": {
                "parent": {
                  "pattern": "^projects/[^/]+$",
                  "description": "Required. The name of the project in the form of `projects/[PROJECT_ID]`, under which the note is to be created.",
                  "location": "path",
                  "required": true,
                  "type": "string"
                },
                "noteId": {
                  "description": "Required. The ID to use for this note.",
                  "type": "string",
                  "location": "query"
                }
              },
              "id": "containeranalysis.projects.notes.create",
              "parameterOrder": [
                "parent"
              ]
            },
            "get": {
              "flatPath": "v1/projects/{projectsId}/notes/{notesId}",
              "response": {
                "$ref": "Note"
              },
              "httpMethod": "GET",
              "description": "Gets the specified note.",
              "path": "v1/{+name}",
              "id": "containeranalysis.projects.notes.get",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "required": true,
                  "description": "Required. The name of the note in the form of `projects/[PROVIDER_ID]/notes/[NOTE_ID]`.",
                  "location": "path",
                  "pattern": "^projects/[^/]+/notes/[^/]+$",
                  "type": "string"
                }
              }
            },
            "testIamPermissions": {
              "path": "v1/{+resource}:testIamPermissions",
              "parameters": {
                "resource": {
                  "type": "string",
                  "required": true,
                  "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                  "location": "path",
                  "pattern": "^projects/[^/]+/notes/[^/]+$"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1/projects/{projectsId}/notes/{notesId}:testIamPermissions",
              "request": {
                "$ref": "TestIamPermissionsRequest"
              },
              "response": {
                "$ref": "TestIamPermissionsResponse"
              },
              "id": "containeranalysis.projects.notes.testIamPermissions",
              "description": "Returns the permissions that a caller has on the specified note or occurrence. Requires list permission on the project (for example, `containeranalysis.notes.list`). The resource takes the format `projects/[PROJECT_ID]/notes/[NOTE_ID]` for notes and `projects/[PROJECT_ID]/occurrences/[OCCURRENCE_ID]` for occurrences.",
              "httpMethod": "POST",
              "parameterOrder": [
                "resource"
              ]
            },
            "getIamPolicy": {
              "request": {
                "$ref": "GetIamPolicyRequest"
              },
              "description": "Gets the access control policy for a note or an occurrence resource. Requires `containeranalysis.notes.setIamPolicy` or `containeranalysis.occurrences.setIamPolicy` permission if the resource is a note or occurrence, respectively. The resource takes the format `projects/[PROJECT_ID]/notes/[NOTE_ID]` for notes and `projects/[PROJECT_ID]/occurrences/[OCCURRENCE_ID]` for occurrences.",
              "flatPath": "v1/projects/{projectsId}/notes/{notesId}:getIamPolicy",
              "parameterOrder": [
                "resource"
              ],
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "id": "containeranalysis.projects.notes.getIamPolicy",
              "parameters": {
                "resource": {
                  "required": true,
                  "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                  "location": "path",
                  "type": "string",
                  "pattern": "^projects/[^/]+/notes/[^/]+$"
                }
              },
              "path": "v1/{+resource}:getIamPolicy",
              "response": {
                "$ref": "Policy"
              }
            }
          },
          "resources": {
            "occurrences": {
              "methods": {
                "list": {
                  "flatPath": "v1/projects/{projectsId}/notes/{notesId}/occurrences",
                  "response": {
                    "$ref": "ListNoteOccurrencesResponse"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}/occurrences",
                  "id": "containeranalysis.projects.notes.occurrences.list",
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists occurrences referencing the specified note. Provider projects can use this method to get all occurrences across consumer projects referencing the specified note.",
                  "parameters": {
                    "pageSize": {
                      "location": "query",
                      "description": "Number of occurrences to return in the list.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "Token to provide to skip to a particular spot in the list.",
                      "type": "string",
                      "location": "query"
                    },
                    "name": {
                      "description": "Required. The name of the note to list occurrences for in the form of `projects/[PROVIDER_ID]/notes/[NOTE_ID]`.",
                      "pattern": "^projects/[^/]+/notes/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "filter": {
                      "type": "string",
                      "description": "The filter expression.",
                      "location": "query"
                    }
                  }
                }
              }
            }
          }
        },
        "occurrences": {
          "methods": {
            "getNotes": {
              "description": "Gets the note attached to the specified occurrence. Consumer projects can use this method to get a note that belongs to a provider project.",
              "path": "v1/{+name}/notes",
              "response": {
                "$ref": "Note"
              },
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "type": "string",
                  "pattern": "^projects/[^/]+/occurrences/[^/]+$",
                  "required": true,
                  "description": "Required. The name of the occurrence in the form of `projects/[PROJECT_ID]/occurrences/[OCCURRENCE_ID]`.",
                  "location": "path"
                }
              },
              "id": "containeranalysis.projects.occurrences.getNotes",
              "flatPath": "v1/projects/{projectsId}/occurrences/{occurrencesId}/notes",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "name"
              ]
            },
            "create": {
              "path": "v1/{+parent}/occurrences",
              "parameters": {
                "parent": {
                  "location": "path",
                  "type": "string",
                  "required": true,
                  "description": "Required. The name of the project in the form of `projects/[PROJECT_ID]`, under which the occurrence is to be created.",
                  "pattern": "^projects/[^/]+$"
                }
              },
              "request": {
                "$ref": "Occurrence"
              },
              "response": {
                "$ref": "Occurrence"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "id": "containeranalysis.projects.occurrences.create",
              "httpMethod": "POST",
              "description": "Creates a new occurrence.",
              "parameterOrder": [
                "parent"
              ],
              "flatPath": "v1/projects/{projectsId}/occurrences"
            },
            "batchCreate": {
              "httpMethod": "POST",
              "description": "Creates new occurrences in batch.",
              "id": "containeranalysis.projects.occurrences.batchCreate",
              "parameters": {
                "parent": {
                  "type": "string",
                  "pattern": "^projects/[^/]+$",
                  "location": "path",
                  "description": "Required. The name of the project in the form of `projects/[PROJECT_ID]`, under which the occurrences are to be created.",
                  "required": true
                }
              },
              "flatPath": "v1/projects/{projectsId}/occurrences:batchCreate",
              "response": {
                "$ref": "BatchCreateOccurrencesResponse"
              },
              "path": "v1/{+parent}/occurrences:batchCreate",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "request": {
                "$ref": "BatchCreateOccurrencesRequest"
              },
              "parameterOrder": [
                "parent"
              ]
            },
            "setIamPolicy": {
              "httpMethod": "POST",
              "flatPath": "v1/projects/{projectsId}/occurrences/{occurrencesId}:setIamPolicy",
              "path": "v1/{+resource}:setIamPolicy",
              "id": "containeranalysis.projects.occurrences.setIamPolicy",
              "request": {
                "$ref": "SetIamPolicyRequest"
              },
              "description": "Sets the access control policy on the specified note or occurrence. Requires `containeranalysis.notes.setIamPolicy` or `containeranalysis.occurrences.setIamPolicy` permission if the resource is a note or an occurrence, respectively. The resource takes the format `projects/[PROJECT_ID]/notes/[NOTE_ID]` for notes and `projects/[PROJECT_ID]/occurrences/[OCCURRENCE_ID]` for occurrences.",
              "parameters": {
                "resource": {
                  "type": "string",
                  "location": "path",
                  "required": true,
                  "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                  "pattern": "^projects/[^/]+/occurrences/[^/]+$"
                }
              },
              "response": {
                "$ref": "Policy"
              },
              "parameterOrder": [
                "resource"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            },
            "getIamPolicy": {
              "parameterOrder": [
                "resource"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "path": "v1/{+resource}:getIamPolicy",
              "request": {
                "$ref": "GetIamPolicyRequest"
              },
              "description": "Gets the access control policy for a note or an occurrence resource. Requires `containeranalysis.notes.setIamPolicy` or `containeranalysis.occurrences.setIamPolicy` permission if the resource is a note or occurrence, respectively. The resource takes the format `projects/[PROJECT_ID]/notes/[NOTE_ID]` for notes and `projects/[PROJECT_ID]/occurrences/[OCCURRENCE_ID]` for occurrences.",
              "parameters": {
                "resource": {
                  "type": "string",
                  "pattern": "^projects/[^/]+/occurrences/[^/]+$",
                  "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                  "required": true,
                  "location": "path"
                }
              },
              "response": {
                "$ref": "Policy"
              },
              "httpMethod": "POST",
              "id": "containeranalysis.projects.occurrences.getIamPolicy",
              "flatPath": "v1/projects/{projectsId}/occurrences/{occurrencesId}:getIamPolicy"
            },
            "get": {
              "flatPath": "v1/projects/{projectsId}/occurrences/{occurrencesId}",
              "path": "v1/{+name}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "location": "path",
                  "type": "string",
                  "description": "Required. The name of the occurrence in the form of `projects/[PROJECT_ID]/occurrences/[OCCURRENCE_ID]`.",
                  "pattern": "^projects/[^/]+/occurrences/[^/]+$",
                  "required": true
                }
              },
              "id": "containeranalysis.projects.occurrences.get",
              "httpMethod": "GET",
              "description": "Gets the specified occurrence.",
              "response": {
                "$ref": "Occurrence"
              },
              "parameterOrder": [
                "name"
              ]
            },
            "patch": {
              "httpMethod": "PATCH",
              "parameters": {
                "updateMask": {
                  "description": "The fields to update.",
                  "location": "query",
                  "format": "google-fieldmask",
                  "type": "string"
                },
                "name": {
                  "required": true,
                  "location": "path",
                  "description": "Required. The name of the occurrence in the form of `projects/[PROJECT_ID]/occurrences/[OCCURRENCE_ID]`.",
                  "type": "string",
                  "pattern": "^projects/[^/]+/occurrences/[^/]+$"
                }
              },
              "flatPath": "v1/projects/{projectsId}/occurrences/{occurrencesId}",
              "path": "v1/{+name}",
              "id": "containeranalysis.projects.occurrences.patch",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "name"
              ],
              "request": {
                "$ref": "Occurrence"
              },
              "response": {
                "$ref": "Occurrence"
              },
              "description": "Updates the specified occurrence."
            },
            "delete": {
              "httpMethod": "DELETE",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "path": "v1/{+name}",
              "flatPath": "v1/projects/{projectsId}/occurrences/{occurrencesId}",
              "response": {
                "$ref": "Empty"
              },
              "id": "containeranalysis.projects.occurrences.delete",
              "parameterOrder": [
                "name"
              ],
              "description": "Deletes the specified occurrence. For example, use this method to delete an occurrence when the occurrence is no longer applicable for the given resource.",
              "parameters": {
                "name": {
                  "pattern": "^projects/[^/]+/occurrences/[^/]+$",
                  "description": "Required. The name of the occurrence in the form of `projects/[PROJECT_ID]/occurrences/[OCCURRENCE_ID]`.",
                  "type": "string",
                  "required": true,
                  "location": "path"
                }
              }
            },
            "getVulnerabilitySummary": {
              "path": "v1/{+parent}/occurrences:vulnerabilitySummary",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "httpMethod": "GET",
              "flatPath": "v1/projects/{projectsId}/occurrences:vulnerabilitySummary",
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "VulnerabilityOccurrencesSummary"
              },
              "description": "Gets a summary of the number and severity of occurrences.",
              "id": "containeranalysis.projects.occurrences.getVulnerabilitySummary",
              "parameters": {
                "filter": {
                  "location": "query",
                  "type": "string",
                  "description": "The filter expression."
                },
                "parent": {
                  "location": "path",
                  "description": "Required. The name of the project to get a vulnerability summary for in the form of `projects/[PROJECT_ID]`.",
                  "pattern": "^projects/[^/]+$",
                  "type": "string",
                  "required": true
                }
              }
            },
            "list": {
              "flatPath": "v1/projects/{projectsId}/occurrences",
              "description": "Lists occurrences for the specified project.",
              "parameterOrder": [
                "parent"
              ],
              "id": "containeranalysis.projects.occurrences.list",
              "path": "v1/{+parent}/occurrences",
              "httpMethod": "GET",
              "response": {
                "$ref": "ListOccurrencesResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "pageToken": {
                  "description": "Token to provide to skip to a particular spot in the list.",
                  "type": "string",
                  "location": "query"
                },
                "parent": {
                  "required": true,
                  "pattern": "^projects/[^/]+$",
                  "location": "path",
                  "type": "string",
                  "description": "Required. The name of the project to list occurrences for in the form of `projects/[PROJECT_ID]`."
                },
                "filter": {
                  "type": "string",
                  "location": "query",
                  "description": "The filter expression."
                },
                "pageSize": {
                  "location": "query",
                  "format": "int32",
                  "type": "integer",
                  "description": "Number of occurrences to return in the list. Must be positive. Max allowed page size is 1000. If not specified, page size defaults to 20."
                }
              }
            },
            "testIamPermissions": {
              "id": "containeranalysis.projects.occurrences.testIamPermissions",
              "parameterOrder": [
                "resource"
              ],
              "path": "v1/{+resource}:testIamPermissions",
              "response": {
                "$ref": "TestIamPermissionsResponse"
              },
              "request": {
                "$ref": "TestIamPermissionsRequest"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1/projects/{projectsId}/occurrences/{occurrencesId}:testIamPermissions",
              "parameters": {
                "resource": {
                  "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "pattern": "^projects/[^/]+/occurrences/[^/]+$"
                }
              },
              "description": "Returns the permissions that a caller has on the specified note or occurrence. Requires list permission on the project (for example, `containeranalysis.notes.list`). The resource takes the format `projects/[PROJECT_ID]/notes/[NOTE_ID]` for notes and `projects/[PROJECT_ID]/occurrences/[OCCURRENCE_ID]` for occurrences.",
              "httpMethod": "POST"
            }
          }
        }
      }
    }
  }
}
