{
  "version_module": true,
  "discoveryVersion": "v1",
  "title": "Certificate Manager API",
  "kind": "discovery#restDescription",
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "resources": {
            "certificates": {
              "methods": {
                "get": {
                  "id": "certificatemanager.projects.locations.certificates.get",
                  "description": "Gets details of a single Certificate.",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Certificate"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/certificates/{certificatesId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/certificates/[^/]+$",
                      "description": "Required. A name of the certificate to describe. Must be in the format `projects/*/locations/*/certificates/*`.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "path": "v1/{+name}"
                },
                "delete": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/certificates/{certificatesId}",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Deletes a single Certificate.",
                  "path": "v1/{+name}",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "description": "Required. A name of the certificate to delete. Must be in the format `projects/*/locations/*/certificates/*`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/certificates/[^/]+$",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "httpMethod": "DELETE",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "certificatemanager.projects.locations.certificates.delete"
                },
                "create": {
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "certificatemanager.projects.locations.certificates.create",
                  "httpMethod": "POST",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/certificates",
                  "request": {
                    "$ref": "Certificate"
                  },
                  "description": "Creates a new Certificate in a given project and location.",
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent resource of the certificate. Must be in the format `projects/*/locations/*`.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "type": "string"
                    },
                    "certificateId": {
                      "description": "Required. A user-provided name of the certificate.",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "path": "v1/{+parent}/certificates",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "patch": {
                  "description": "Updates a Certificate.",
                  "path": "v1/{+name}",
                  "request": {
                    "$ref": "Certificate"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "certificatemanager.projects.locations.certificates.patch",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "PATCH",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/certificates/{certificatesId}",
                  "parameters": {
                    "updateMask": {
                      "description": "Required. The update mask applies to the resource. For the `FieldMask` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask.",
                      "format": "google-fieldmask",
                      "location": "query",
                      "type": "string"
                    },
                    "name": {
                      "type": "string",
                      "description": "A user-defined name of the certificate. Certificate names must be unique globally and match pattern `projects/*/locations/*/certificates/*`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/certificates/[^/]+$",
                      "location": "path",
                      "required": true
                    }
                  },
                  "response": {
                    "$ref": "Operation"
                  }
                },
                "list": {
                  "path": "v1/{+parent}/certificates",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists Certificates in a given project and location.",
                  "parameters": {
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "The value returned by the last `ListCertificatesResponse`. Indicates that this is a continuation of a prior `ListCertificates` call, and that the system should return the next page of data."
                    },
                    "filter": {
                      "type": "string",
                      "location": "query",
                      "description": "Filter expression to restrict the Certificates returned."
                    },
                    "pageSize": {
                      "format": "int32",
                      "description": "Maximum number of certificates to return per call.",
                      "location": "query",
                      "type": "integer"
                    },
                    "parent": {
                      "description": "Required. The project and location from which the certificate should be listed, specified in the format `projects/*/locations/*`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "required": true
                    },
                    "orderBy": {
                      "description": "A list of Certificate field names used to specify the order of the returned results. The default sorting order is ascending. To specify descending order for a field, add a suffix \" desc\".",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "httpMethod": "GET",
                  "id": "certificatemanager.projects.locations.certificates.list",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/certificates",
                  "response": {
                    "$ref": "ListCertificatesResponse"
                  },
                  "parameterOrder": [
                    "parent"
                  ]
                }
              }
            },
            "certificateIssuanceConfigs": {
              "methods": {
                "delete": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "certificatemanager.projects.locations.certificateIssuanceConfigs.delete",
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/certificateIssuanceConfigs/{certificateIssuanceConfigsId}",
                  "description": "Deletes a single CertificateIssuanceConfig.",
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "DELETE",
                  "path": "v1/{+name}",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "type": "string",
                      "description": "Required. A name of the certificate issuance config to delete. Must be in the format `projects/*/locations/*/certificateIssuanceConfigs/*`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/certificateIssuanceConfigs/[^/]+$",
                      "required": true
                    }
                  }
                },
                "list": {
                  "httpMethod": "GET",
                  "id": "certificatemanager.projects.locations.certificateIssuanceConfigs.list",
                  "description": "Lists CertificateIssuanceConfigs in a given project and location.",
                  "response": {
                    "$ref": "ListCertificateIssuanceConfigsResponse"
                  },
                  "parameters": {
                    "filter": {
                      "location": "query",
                      "type": "string",
                      "description": "Filter expression to restrict the Certificates Configs returned."
                    },
                    "pageSize": {
                      "location": "query",
                      "description": "Maximum number of certificate configs to return per call.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "parent": {
                      "location": "path",
                      "description": "Required. The project and location from which the certificate should be listed, specified in the format `projects/*/locations/*`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "type": "string"
                    },
                    "orderBy": {
                      "location": "query",
                      "type": "string",
                      "description": "A list of Certificate Config field names used to specify the order of the returned results. The default sorting order is ascending. To specify descending order for a field, add a suffix \" desc\"."
                    },
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "The value returned by the last `ListCertificateIssuanceConfigsResponse`. Indicates that this is a continuation of a prior `ListCertificateIssuanceConfigs` call, and that the system should return the next page of data."
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+parent}/certificateIssuanceConfigs",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/certificateIssuanceConfigs",
                  "parameterOrder": [
                    "parent"
                  ]
                },
                "create": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v1/{+parent}/certificateIssuanceConfigs",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Creates a new CertificateIssuanceConfig in a given project and location.",
                  "id": "certificatemanager.projects.locations.certificateIssuanceConfigs.create",
                  "parameters": {
                    "certificateIssuanceConfigId": {
                      "description": "Required. A user-provided name of the certificate config.",
                      "type": "string",
                      "location": "query"
                    },
                    "parent": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "description": "Required. The parent resource of the certificate issuance config. Must be in the format `projects/*/locations/*`.",
                      "required": true
                    }
                  },
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "CertificateIssuanceConfig"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/certificateIssuanceConfigs"
                },
                "get": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "description": "Required. A name of the certificate issuance config to describe. Must be in the format `projects/*/locations/*/certificateIssuanceConfigs/*`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/certificateIssuanceConfigs/[^/]+$"
                    }
                  },
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/certificateIssuanceConfigs/{certificateIssuanceConfigsId}",
                  "description": "Gets details of a single CertificateIssuanceConfig.",
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "CertificateIssuanceConfig"
                  },
                  "id": "certificatemanager.projects.locations.certificateIssuanceConfigs.get",
                  "parameterOrder": [
                    "name"
                  ]
                }
              }
            },
            "certificateMaps": {
              "methods": {
                "get": {
                  "description": "Gets details of a single CertificateMap.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/certificateMaps/{certificateMapsId}",
                  "response": {
                    "$ref": "CertificateMap"
                  },
                  "path": "v1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "type": "string",
                      "description": "Required. A name of the certificate map to describe. Must be in the format `projects/*/locations/*/certificateMaps/*`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/certificateMaps/[^/]+$",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "id": "certificatemanager.projects.locations.certificateMaps.get",
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "patch": {
                  "httpMethod": "PATCH",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "CertificateMap"
                  },
                  "description": "Updates a CertificateMap.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/certificateMaps/{certificateMapsId}",
                  "path": "v1/{+name}",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "updateMask": {
                      "location": "query",
                      "description": "Required. The update mask applies to the resource. For the `FieldMask` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask.",
                      "format": "google-fieldmask",
                      "type": "string"
                    },
                    "name": {
                      "description": "A user-defined name of the Certificate Map. Certificate Map names must be unique globally and match pattern `projects/*/locations/*/certificateMaps/*`.",
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/certificateMaps/[^/]+$"
                    }
                  },
                  "id": "certificatemanager.projects.locations.certificateMaps.patch"
                },
                "create": {
                  "description": "Creates a new CertificateMap in a given project and location.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "CertificateMap"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/certificateMaps",
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "certificatemanager.projects.locations.certificateMaps.create",
                  "path": "v1/{+parent}/certificateMaps",
                  "parameters": {
                    "parent": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The parent resource of the certificate map. Must be in the format `projects/*/locations/*`.",
                      "type": "string",
                      "location": "path"
                    },
                    "certificateMapId": {
                      "description": "Required. A user-provided name of the certificate map.",
                      "location": "query",
                      "type": "string"
                    }
                  }
                },
                "list": {
                  "parameters": {
                    "pageSize": {
                      "type": "integer",
                      "location": "query",
                      "format": "int32",
                      "description": "Maximum number of certificate maps to return per call."
                    },
                    "pageToken": {
                      "location": "query",
                      "description": "The value returned by the last `ListCertificateMapsResponse`. Indicates that this is a continuation of a prior `ListCertificateMaps` call, and that the system should return the next page of data.",
                      "type": "string"
                    },
                    "filter": {
                      "location": "query",
                      "description": "Filter expression to restrict the Certificates Maps returned.",
                      "type": "string"
                    },
                    "parent": {
                      "description": "Required. The project and location from which the certificate maps should be listed, specified in the format `projects/*/locations/*`.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "location": "path"
                    },
                    "orderBy": {
                      "description": "A list of Certificate Map field names used to specify the order of the returned results. The default sorting order is ascending. To specify descending order for a field, add a suffix \" desc\".",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "id": "certificatemanager.projects.locations.certificateMaps.list",
                  "response": {
                    "$ref": "ListCertificateMapsResponse"
                  },
                  "httpMethod": "GET",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/certificateMaps",
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v1/{+parent}/certificateMaps",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists CertificateMaps in a given project and location."
                },
                "delete": {
                  "httpMethod": "DELETE",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}",
                  "id": "certificatemanager.projects.locations.certificateMaps.delete",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/certificateMaps/{certificateMapsId}",
                  "parameters": {
                    "name": {
                      "required": true,
                      "description": "Required. A name of the certificate map to delete. Must be in the format `projects/*/locations/*/certificateMaps/*`.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/certificateMaps/[^/]+$",
                      "location": "path"
                    }
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Deletes a single CertificateMap. A Certificate Map can't be deleted if it contains Certificate Map Entries. Remove all the entries from the map before calling this method."
                }
              },
              "resources": {
                "certificateMapEntries": {
                  "methods": {
                    "patch": {
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/certificateMaps/{certificateMapsId}/certificateMapEntries/{certificateMapEntriesId}",
                      "parameterOrder": [
                        "name"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "PATCH",
                      "response": {
                        "$ref": "Operation"
                      },
                      "path": "v1/{+name}",
                      "description": "Updates a CertificateMapEntry.",
                      "id": "certificatemanager.projects.locations.certificateMaps.certificateMapEntries.patch",
                      "request": {
                        "$ref": "CertificateMapEntry"
                      },
                      "parameters": {
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/certificateMaps/[^/]+/certificateMapEntries/[^/]+$",
                          "description": "A user-defined name of the Certificate Map Entry. Certificate Map Entry names must be unique globally and match pattern `projects/*/locations/*/certificateMaps/*/certificateMapEntries/*`.",
                          "required": true,
                          "location": "path",
                          "type": "string"
                        },
                        "updateMask": {
                          "type": "string",
                          "description": "Required. The update mask applies to the resource. For the `FieldMask` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask.",
                          "location": "query",
                          "format": "google-fieldmask"
                        }
                      }
                    },
                    "get": {
                      "path": "v1/{+name}",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/certificateMaps/{certificateMapsId}/certificateMapEntries/{certificateMapEntriesId}",
                      "id": "certificatemanager.projects.locations.certificateMaps.certificateMapEntries.get",
                      "parameters": {
                        "name": {
                          "type": "string",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/certificateMaps/[^/]+/certificateMapEntries/[^/]+$",
                          "location": "path",
                          "description": "Required. A name of the certificate map entry to describe. Must be in the format `projects/*/locations/*/certificateMaps/*/certificateMapEntries/*`."
                        }
                      },
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "CertificateMapEntry"
                      },
                      "description": "Gets details of a single CertificateMapEntry."
                    },
                    "list": {
                      "response": {
                        "$ref": "ListCertificateMapEntriesResponse"
                      },
                      "id": "certificatemanager.projects.locations.certificateMaps.certificateMapEntries.list",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/certificateMaps/{certificateMapsId}/certificateMapEntries",
                      "parameters": {
                        "filter": {
                          "type": "string",
                          "description": "Filter expression to restrict the returned Certificate Map Entries.",
                          "location": "query"
                        },
                        "pageToken": {
                          "location": "query",
                          "type": "string",
                          "description": "The value returned by the last `ListCertificateMapEntriesResponse`. Indicates that this is a continuation of a prior `ListCertificateMapEntries` call, and that the system should return the next page of data."
                        },
                        "orderBy": {
                          "location": "query",
                          "description": "A list of Certificate Map Entry field names used to specify the order of the returned results. The default sorting order is ascending. To specify descending order for a field, add a suffix \" desc\".",
                          "type": "string"
                        },
                        "pageSize": {
                          "type": "integer",
                          "location": "query",
                          "description": "Maximum number of certificate map entries to return. The service may return fewer than this value. If unspecified, at most 50 certificate map entries will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                          "format": "int32"
                        },
                        "parent": {
                          "required": true,
                          "description": "Required. The project, location and certificate map from which the certificate map entries should be listed, specified in the format `projects/*/locations/*/certificateMaps/*`.",
                          "location": "path",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/certificateMaps/[^/]+$"
                        }
                      },
                      "httpMethod": "GET",
                      "parameterOrder": [
                        "parent"
                      ],
                      "description": "Lists CertificateMapEntries in a given project and location.",
                      "path": "v1/{+parent}/certificateMapEntries"
                    },
                    "create": {
                      "response": {
                        "$ref": "Operation"
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "POST",
                      "parameters": {
                        "certificateMapEntryId": {
                          "description": "Required. A user-provided name of the certificate map entry.",
                          "type": "string",
                          "location": "query"
                        },
                        "parent": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/certificateMaps/[^/]+$",
                          "description": "Required. The parent resource of the certificate map entry. Must be in the format `projects/*/locations/*/certificateMaps/*`.",
                          "type": "string",
                          "location": "path",
                          "required": true
                        }
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/certificateMaps/{certificateMapsId}/certificateMapEntries",
                      "path": "v1/{+parent}/certificateMapEntries",
                      "description": "Creates a new CertificateMapEntry in a given project and location.",
                      "id": "certificatemanager.projects.locations.certificateMaps.certificateMapEntries.create",
                      "request": {
                        "$ref": "CertificateMapEntry"
                      }
                    },
                    "delete": {
                      "httpMethod": "DELETE",
                      "description": "Deletes a single CertificateMapEntry.",
                      "path": "v1/{+name}",
                      "parameterOrder": [
                        "name"
                      ],
                      "id": "certificatemanager.projects.locations.certificateMaps.certificateMapEntries.delete",
                      "response": {
                        "$ref": "Operation"
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/certificateMaps/{certificateMapsId}/certificateMapEntries/{certificateMapEntriesId}",
                      "parameters": {
                        "name": {
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/certificateMaps/[^/]+/certificateMapEntries/[^/]+$",
                          "description": "Required. A name of the certificate map entry to delete. Must be in the format `projects/*/locations/*/certificateMaps/*/certificateMapEntries/*`.",
                          "type": "string",
                          "location": "path"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    }
                  }
                }
              }
            },
            "dnsAuthorizations": {
              "methods": {
                "get": {
                  "id": "certificatemanager.projects.locations.dnsAuthorizations.get",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/dnsAuthorizations/{dnsAuthorizationsId}",
                  "path": "v1/{+name}",
                  "parameters": {
                    "name": {
                      "description": "Required. A name of the dns authorization to describe. Must be in the format `projects/*/locations/*/dnsAuthorizations/*`.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/dnsAuthorizations/[^/]+$",
                      "type": "string"
                    }
                  },
                  "response": {
                    "$ref": "DnsAuthorization"
                  },
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets details of a single DnsAuthorization.",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "delete": {
                  "description": "Deletes a single DnsAuthorization.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/dnsAuthorizations/{dnsAuthorizationsId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "certificatemanager.projects.locations.dnsAuthorizations.delete",
                  "path": "v1/{+name}",
                  "httpMethod": "DELETE",
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "location": "path",
                      "description": "Required. A name of the dns authorization to delete. Must be in the format `projects/*/locations/*/dnsAuthorizations/*`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/dnsAuthorizations/[^/]+$",
                      "required": true,
                      "type": "string"
                    }
                  }
                },
                "list": {
                  "description": "Lists DnsAuthorizations in a given project and location.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "certificatemanager.projects.locations.dnsAuthorizations.list",
                  "parameters": {
                    "pageSize": {
                      "description": "Maximum number of dns authorizations to return per call.",
                      "format": "int32",
                      "type": "integer",
                      "location": "query"
                    },
                    "orderBy": {
                      "description": "A list of Dns Authorization field names used to specify the order of the returned results. The default sorting order is ascending. To specify descending order for a field, add a suffix \" desc\".",
                      "location": "query",
                      "type": "string"
                    },
                    "filter": {
                      "description": "Filter expression to restrict the Dns Authorizations returned.",
                      "location": "query",
                      "type": "string"
                    },
                    "pageToken": {
                      "description": "The value returned by the last `ListDnsAuthorizationsResponse`. Indicates that this is a continuation of a prior `ListDnsAuthorizations` call, and that the system should return the next page of data.",
                      "location": "query",
                      "type": "string"
                    },
                    "parent": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "location": "path",
                      "description": "Required. The project and location from which the dns authorizations should be listed, specified in the format `projects/*/locations/*`."
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "ListDnsAuthorizationsResponse"
                  },
                  "path": "v1/{+parent}/dnsAuthorizations",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/dnsAuthorizations",
                  "httpMethod": "GET"
                },
                "create": {
                  "id": "certificatemanager.projects.locations.dnsAuthorizations.create",
                  "path": "v1/{+parent}/dnsAuthorizations",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "dnsAuthorizationId": {
                      "description": "Required. A user-provided name of the dns authorization.",
                      "location": "query",
                      "type": "string"
                    },
                    "parent": {
                      "description": "Required. The parent resource of the dns authorization. Must be in the format `projects/*/locations/*`.",
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/dnsAuthorizations",
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "POST",
                  "description": "Creates a new DnsAuthorization in a given project and location.",
                  "request": {
                    "$ref": "DnsAuthorization"
                  }
                },
                "patch": {
                  "parameters": {
                    "updateMask": {
                      "type": "string",
                      "description": "Required. The update mask applies to the resource. For the `FieldMask` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask.",
                      "format": "google-fieldmask",
                      "location": "query"
                    },
                    "name": {
                      "type": "string",
                      "location": "path",
                      "description": "A user-defined name of the dns authorization. DnsAuthorization names must be unique globally and match pattern `projects/*/locations/*/dnsAuthorizations/*`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/dnsAuthorizations/[^/]+$",
                      "required": true
                    }
                  },
                  "id": "certificatemanager.projects.locations.dnsAuthorizations.patch",
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}",
                  "request": {
                    "$ref": "DnsAuthorization"
                  },
                  "httpMethod": "PATCH",
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/dnsAuthorizations/{dnsAuthorizationsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Updates a DnsAuthorization."
                }
              }
            },
            "operations": {
              "methods": {
                "list": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations",
                  "parameters": {
                    "pageSize": {
                      "description": "The standard list page size.",
                      "type": "integer",
                      "location": "query",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "The standard list page token.",
                      "location": "query",
                      "type": "string"
                    },
                    "filter": {
                      "description": "The standard list filter.",
                      "location": "query",
                      "type": "string"
                    },
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "The name of the operation's parent resource.",
                      "type": "string",
                      "location": "path",
                      "required": true
                    }
                  },
                  "response": {
                    "$ref": "ListOperationsResponse"
                  },
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `\"/v1/{name=users/*}/operations\"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.",
                  "path": "v1/{+name}/operations",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "certificatemanager.projects.locations.operations.list"
                },
                "delete": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "certificatemanager.projects.locations.operations.delete",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "required": true,
                      "description": "The name of the operation resource to be deleted.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "type": "string"
                    }
                  },
                  "httpMethod": "DELETE",
                  "path": "v1/{+name}",
                  "response": {
                    "$ref": "Empty"
                  }
                },
                "cancel": {
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
                  "id": "certificatemanager.projects.locations.operations.cancel",
                  "request": {
                    "$ref": "CancelOperationRequest"
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "required": true,
                      "description": "The name of the operation resource to be cancelled."
                    }
                  },
                  "path": "v1/{+name}:cancel",
                  "response": {
                    "$ref": "Empty"
                  }
                },
                "get": {
                  "path": "v1/{+name}",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "location": "path",
                      "description": "The name of the operation resource."
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                  "id": "certificatemanager.projects.locations.operations.get",
                  "httpMethod": "GET"
                }
              }
            }
          },
          "methods": {
            "get": {
              "parameters": {
                "name": {
                  "description": "Resource name for the location.",
                  "type": "string",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects/[^/]+/locations/[^/]+$"
                }
              },
              "path": "v1/{+name}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "name"
              ],
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}",
              "response": {
                "$ref": "Location"
              },
              "id": "certificatemanager.projects.locations.get",
              "description": "Gets information about a location.",
              "httpMethod": "GET"
            },
            "list": {
              "path": "v1/{+name}/locations",
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "description": "Lists information about the supported locations for this service.",
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "id": "certificatemanager.projects.locations.list",
              "flatPath": "v1/projects/{projectsId}/locations",
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "filter": {
                  "location": "query",
                  "type": "string",
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like `\"displayName=tokyo\"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160)."
                },
                "pageSize": {
                  "location": "query",
                  "type": "integer",
                  "format": "int32",
                  "description": "The maximum number of results to return. If not set, the service selects a default."
                },
                "pageToken": {
                  "type": "string",
                  "location": "query",
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page."
                },
                "name": {
                  "required": true,
                  "pattern": "^projects/[^/]+$",
                  "description": "The resource that owns the locations collection, if applicable.",
                  "location": "path",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  "name": "certificatemanager",
  "mtlsRootUrl": "https://certificatemanager.mtls.googleapis.com/",
  "revision": "20230220",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "basePath": "",
  "schemas": {
    "ListCertificateIssuanceConfigsResponse": {
      "description": "Response for the `ListCertificateIssuanceConfigs` method.",
      "properties": {
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "If there might be more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as `page_token`."
        },
        "certificateIssuanceConfigs": {
          "description": "A list of certificate configs for the parent resource.",
          "type": "array",
          "items": {
            "$ref": "CertificateIssuanceConfig"
          }
        }
      },
      "type": "object",
      "id": "ListCertificateIssuanceConfigsResponse"
    },
    "ListOperationsResponse": {
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        },
        "operations": {
          "type": "array",
          "items": {
            "$ref": "Operation"
          },
          "description": "A list of operations that matches the specified filter in the request."
        }
      },
      "id": "ListOperationsResponse",
      "description": "The response message for Operations.ListOperations."
    },
    "ListDnsAuthorizationsResponse": {
      "type": "object",
      "id": "ListDnsAuthorizationsResponse",
      "description": "Response for the `ListDnsAuthorizations` method.",
      "properties": {
        "dnsAuthorizations": {
          "items": {
            "$ref": "DnsAuthorization"
          },
          "type": "array",
          "description": "A list of dns authorizations for the parent resource."
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "nextPageToken": {
          "description": "If there might be more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as `page_token`.",
          "type": "string"
        }
      }
    },
    "Certificate": {
      "type": "object",
      "id": "Certificate",
      "properties": {
        "name": {
          "description": "A user-defined name of the certificate. Certificate names must be unique globally and match pattern `projects/*/locations/*/certificates/*`.",
          "type": "string"
        },
        "selfManaged": {
          "$ref": "SelfManagedCertificate",
          "description": "If set, defines data of a self-managed certificate."
        },
        "scope": {
          "type": "string",
          "enumDescriptions": [
            "Certificates with default scope are served from core Google data centers. If unsure, choose this option.",
            "Certificates with scope EDGE_CACHE are special-purposed certificates, served from non-core Google data centers."
          ],
          "enum": [
            "DEFAULT",
            "EDGE_CACHE"
          ],
          "description": "Immutable. The scope of the certificate."
        },
        "updateTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The last update timestamp of a Certificate.",
          "readOnly": true
        },
        "createTime": {
          "readOnly": true,
          "description": "Output only. The creation timestamp of a Certificate.",
          "format": "google-datetime",
          "type": "string"
        },
        "expireTime": {
          "readOnly": true,
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The expiry timestamp of a Certificate."
        },
        "description": {
          "description": "One or more paragraphs of text description of a certificate.",
          "type": "string"
        },
        "sanDnsnames": {
          "items": {
            "type": "string"
          },
          "readOnly": true,
          "type": "array",
          "description": "Output only. The list of Subject Alternative Names of dnsName type defined in the certificate (see RFC 5280 4.2.1.6). Managed certificates that haven't been provisioned yet have this field populated with a value of the managed.domains field."
        },
        "labels": {
          "type": "object",
          "description": "Set of labels associated with a Certificate.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "managed": {
          "$ref": "ManagedCertificate",
          "description": "If set, contains configuration and state of a managed certificate."
        },
        "pemCertificate": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The PEM-encoded certificate chain."
        }
      },
      "description": "Defines TLS certificate."
    },
    "OperationMetadata": {
      "properties": {
        "apiVersion": {
          "type": "string",
          "description": "API version used to start the operation."
        },
        "target": {
          "type": "string",
          "description": "Server-defined resource path for the target of the operation."
        },
        "verb": {
          "type": "string",
          "description": "Name of the verb executed by the operation."
        },
        "statusMessage": {
          "description": "Human-readable status of the operation, if any.",
          "type": "string"
        },
        "endTime": {
          "description": "The time the operation finished running.",
          "type": "string",
          "format": "google-datetime"
        },
        "requestedCancellation": {
          "type": "boolean",
          "description": "Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`."
        },
        "createTime": {
          "format": "google-datetime",
          "description": "The time the operation was created.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "OperationMetadata",
      "description": "Represents the metadata of the long-running operation. Output only."
    },
    "ListCertificateMapEntriesResponse": {
      "id": "ListCertificateMapEntriesResponse",
      "type": "object",
      "description": "Response for the `ListCertificateMapEntries` method.",
      "properties": {
        "nextPageToken": {
          "description": "If there might be more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as `page_token`.",
          "type": "string"
        },
        "certificateMapEntries": {
          "description": "A list of certificate map entries for the parent resource.",
          "items": {
            "$ref": "CertificateMapEntry"
          },
          "type": "array"
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      }
    },
    "CertificateMapEntry": {
      "id": "CertificateMapEntry",
      "properties": {
        "state": {
          "readOnly": true,
          "description": "Output only. A serving state of this Certificate Map Entry.",
          "type": "string",
          "enum": [
            "SERVING_STATE_UNSPECIFIED",
            "ACTIVE",
            "PENDING"
          ],
          "enumDescriptions": [
            "The status is undefined.",
            "The configuration is serving.",
            "Update is in progress. Some frontends may serve this configuration."
          ]
        },
        "description": {
          "description": "One or more paragraphs of text description of a certificate map entry.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "A user-defined name of the Certificate Map Entry. Certificate Map Entry names must be unique globally and match pattern `projects/*/locations/*/certificateMaps/*/certificateMapEntries/*`."
        },
        "createTime": {
          "description": "Output only. The creation timestamp of a Certificate Map Entry.",
          "format": "google-datetime",
          "readOnly": true,
          "type": "string"
        },
        "matcher": {
          "type": "string",
          "description": "A predefined matcher for particular cases, other than SNI selection.",
          "enum": [
            "MATCHER_UNSPECIFIED",
            "PRIMARY"
          ],
          "enumDescriptions": [
            "A matcher has't been recognized.",
            "A primary certificate that is served when SNI wasn't specified in the request or SNI couldn't be found in the map."
          ]
        },
        "certificates": {
          "description": "A set of Certificates defines for the given `hostname`. There can be defined up to fifteen certificates in each Certificate Map Entry. Each certificate must match pattern `projects/*/locations/*/certificates/*`.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "hostname": {
          "description": "A Hostname (FQDN, e.g. `example.com`) or a wildcard hostname expression (`*.example.com`) for a set of hostnames with common suffix. Used as Server Name Indication (SNI) for selecting a proper certificate.",
          "type": "string"
        },
        "labels": {
          "description": "Set of labels associated with a Certificate Map Entry.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "updateTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The update timestamp of a Certificate Map Entry.",
          "readOnly": true
        }
      },
      "type": "object",
      "description": "Defines a certificate map entry."
    },
    "CertificateAuthorityServiceConfig": {
      "description": "Contains information required to contact CA service.",
      "type": "object",
      "properties": {
        "caPool": {
          "type": "string",
          "description": "Required. A CA pool resource used to issue a certificate. The CA pool string has a relative resource path following the form \"projects/{project}/locations/{location}/caPools/{ca_pool}\"."
        }
      },
      "id": "CertificateAuthorityServiceConfig"
    },
    "DnsAuthorization": {
      "type": "object",
      "description": "A DnsAuthorization resource describes a way to perform domain authorization for certificate issuance.",
      "properties": {
        "updateTime": {
          "type": "string",
          "description": "Output only. The last update timestamp of a DnsAuthorization.",
          "format": "google-datetime",
          "readOnly": true
        },
        "domain": {
          "type": "string",
          "description": "Required. Immutable. A domain that is being authorized. A DnsAuthorization resource covers a single domain and its wildcard, e.g. authorization for `example.com` can be used to issue certificates for `example.com` and `*.example.com`."
        },
        "description": {
          "description": "One or more paragraphs of text description of a DnsAuthorization.",
          "type": "string"
        },
        "dnsResourceRecord": {
          "$ref": "DnsResourceRecord",
          "readOnly": true,
          "description": "Output only. DNS Resource Record that needs to be added to DNS configuration."
        },
        "name": {
          "description": "A user-defined name of the dns authorization. DnsAuthorization names must be unique globally and match pattern `projects/*/locations/*/dnsAuthorizations/*`.",
          "type": "string"
        },
        "labels": {
          "type": "object",
          "description": "Set of labels associated with a DnsAuthorization.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The creation timestamp of a DnsAuthorization.",
          "readOnly": true
        }
      },
      "id": "DnsAuthorization"
    },
    "ProvisioningIssue": {
      "type": "object",
      "id": "ProvisioningIssue",
      "description": "Information about issues with provisioning a Managed Certificate.",
      "properties": {
        "details": {
          "description": "Output only. Human readable explanation about the issue. Provided to help address the configuration issues. Not guaranteed to be stable. For programmatic access use Reason enum.",
          "type": "string",
          "readOnly": true
        },
        "reason": {
          "type": "string",
          "enum": [
            "REASON_UNSPECIFIED",
            "AUTHORIZATION_ISSUE",
            "RATE_LIMITED"
          ],
          "description": "Output only. Reason for provisioning failures.",
          "readOnly": true,
          "enumDescriptions": [
            "Reason is unspecified.",
            "Certificate provisioning failed due to an issue with one or more of the domains on the certificate. For details of which domains failed, consult the `authorization_attempt_info` field.",
            "Exceeded Certificate Authority quotas or internal rate limits of the system. Provisioning may take longer to complete."
          ]
        }
      }
    },
    "SelfManagedCertificate": {
      "properties": {
        "pemCertificate": {
          "description": "Input only. The PEM-encoded certificate chain. Leaf certificate comes first, followed by intermediate ones if any.",
          "type": "string"
        },
        "pemPrivateKey": {
          "type": "string",
          "description": "Input only. The PEM-encoded private key of the leaf certificate."
        }
      },
      "type": "object",
      "id": "SelfManagedCertificate",
      "description": "Certificate data for a SelfManaged Certificate. SelfManaged Certificates are uploaded by the user. Updating such certificates before they expire remains the user's responsibility."
    },
    "ListCertificatesResponse": {
      "properties": {
        "certificates": {
          "items": {
            "$ref": "Certificate"
          },
          "type": "array",
          "description": "A list of certificates for the parent resource."
        },
        "unreachable": {
          "items": {
            "type": "string"
          },
          "description": "A list of locations that could not be reached.",
          "type": "array"
        },
        "nextPageToken": {
          "description": "If there might be more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as `page_token`.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "ListCertificatesResponse",
      "description": "Response for the `ListCertificates` method."
    },
    "AuthorizationAttemptInfo": {
      "type": "object",
      "properties": {
        "state": {
          "type": "string",
          "enumDescriptions": [
            "State is unspecified.",
            "Certificate provisioning for this domain is under way. GCP will attempt to authorize the domain.",
            "A managed certificate can be provisioned, no issues for this domain.",
            "Attempt to authorize the domain failed. This prevents the Managed Certificate from being issued. See `failure_reason` and `details` fields for more information."
          ],
          "readOnly": true,
          "enum": [
            "STATE_UNSPECIFIED",
            "AUTHORIZING",
            "AUTHORIZED",
            "FAILED"
          ],
          "description": "Output only. State of the domain for managed certificate issuance."
        },
        "domain": {
          "description": "Domain name of the authorization attempt.",
          "type": "string"
        },
        "failureReason": {
          "readOnly": true,
          "enumDescriptions": [
            "FailureReason is unspecified.",
            "There was a problem with the user's DNS or load balancer configuration for this domain.",
            "Certificate issuance forbidden by an explicit CAA record for the domain or a failure to check CAA records for the domain.",
            "Reached a CA or internal rate-limit for the domain, e.g. for certificates per top-level private domain."
          ],
          "type": "string",
          "description": "Output only. Reason for failure of the authorization attempt for the domain.",
          "enum": [
            "FAILURE_REASON_UNSPECIFIED",
            "CONFIG",
            "CAA",
            "RATE_LIMITED"
          ]
        },
        "details": {
          "type": "string",
          "description": "Output only. Human readable explanation for reaching the state. Provided to help address the configuration issues. Not guaranteed to be stable. For programmatic access use FailureReason enum.",
          "readOnly": true
        }
      },
      "description": "State of the latest attempt to authorize a domain for certificate issuance.",
      "id": "AuthorizationAttemptInfo"
    },
    "CertificateMap": {
      "type": "object",
      "description": "Defines a collection of certificate configurations.",
      "id": "CertificateMap",
      "properties": {
        "gclbTargets": {
          "items": {
            "$ref": "GclbTarget"
          },
          "type": "array",
          "readOnly": true,
          "description": "Output only. A list of GCLB targets that use this Certificate Map. A Target Proxy is only present on this list if it's attached to a Forwarding Rule."
        },
        "createTime": {
          "type": "string",
          "description": "Output only. The creation timestamp of a Certificate Map.",
          "readOnly": true,
          "format": "google-datetime"
        },
        "description": {
          "type": "string",
          "description": "One or more paragraphs of text description of a certificate map."
        },
        "name": {
          "description": "A user-defined name of the Certificate Map. Certificate Map names must be unique globally and match pattern `projects/*/locations/*/certificateMaps/*`.",
          "type": "string"
        },
        "labels": {
          "description": "Set of labels associated with a Certificate Map.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "updateTime": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The update timestamp of a Certificate Map.",
          "format": "google-datetime"
        }
      }
    },
    "ManagedCertificate": {
      "id": "ManagedCertificate",
      "properties": {
        "provisioningIssue": {
          "readOnly": true,
          "description": "Output only. Information about issues with provisioning a Managed Certificate.",
          "$ref": "ProvisioningIssue"
        },
        "state": {
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "State is unspecified.",
            "Certificate Manager attempts to provision or renew the certificate. If the process takes longer than expected, consult the `provisioning_issue` field.",
            "Multiple certificate provisioning attempts failed and Certificate Manager gave up. To try again, delete and create a new managed Certificate resource. For details see the `provisioning_issue` field.",
            "The certificate management is working, and a certificate has been provisioned."
          ],
          "description": "Output only. State of the managed certificate resource.",
          "enum": [
            "STATE_UNSPECIFIED",
            "PROVISIONING",
            "FAILED",
            "ACTIVE"
          ]
        },
        "domains": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Immutable. The domains for which a managed SSL certificate will be generated. Wildcard domains are only supported with DNS challenge resolution."
        },
        "dnsAuthorizations": {
          "items": {
            "type": "string"
          },
          "description": "Immutable. Authorizations that will be used for performing domain authorization.",
          "type": "array"
        },
        "authorizationAttemptInfo": {
          "description": "Output only. Detailed state of the latest authorization attempt for each domain specified for managed certificate resource.",
          "type": "array",
          "items": {
            "$ref": "AuthorizationAttemptInfo"
          },
          "readOnly": true
        },
        "issuanceConfig": {
          "type": "string",
          "description": "Immutable. The resource name for a CertificateIssuanceConfig used to configure private PKI certificates in the format `projects/*/locations/*/certificateIssuanceConfigs/*`. If this field is not set, the certificates will instead be publicly signed as documented at https://cloud.google.com/load-balancing/docs/ssl-certificates/google-managed-certs#caa."
        }
      },
      "type": "object",
      "description": "Configuration and state of a Managed Certificate. Certificate Manager provisions and renews Managed Certificates automatically, for as long as it's authorized to do so."
    },
    "CancelOperationRequest": {
      "description": "The request message for Operations.CancelOperation.",
      "type": "object",
      "id": "CancelOperationRequest",
      "properties": {}
    },
    "GclbTarget": {
      "properties": {
        "targetSslProxy": {
          "description": "Output only. This field returns the resource name in the following format: `//compute.googleapis.com/projects/*/global/targetSslProxies/*`.",
          "readOnly": true,
          "type": "string"
        },
        "ipConfigs": {
          "readOnly": true,
          "items": {
            "$ref": "IpConfig"
          },
          "type": "array",
          "description": "Output only. IP configurations for this Target Proxy where the Certificate Map is serving."
        },
        "targetHttpsProxy": {
          "readOnly": true,
          "description": "Output only. This field returns the resource name in the following format: `//compute.googleapis.com/projects/*/global/targetHttpsProxies/*`.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GclbTarget",
      "description": "Describes a Target Proxy that uses this Certificate Map."
    },
    "Empty": {
      "type": "object",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "id": "Empty",
      "properties": {}
    },
    "ListLocationsResponse": {
      "id": "ListLocationsResponse",
      "type": "object",
      "properties": {
        "locations": {
          "description": "A list of locations that matches the specified filter in the request.",
          "items": {
            "$ref": "Location"
          },
          "type": "array"
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      },
      "description": "The response message for Locations.ListLocations."
    },
    "CertificateAuthorityConfig": {
      "id": "CertificateAuthorityConfig",
      "type": "object",
      "properties": {
        "certificateAuthorityServiceConfig": {
          "description": "Defines a CertificateAuthorityServiceConfig.",
          "$ref": "CertificateAuthorityServiceConfig"
        }
      },
      "description": "The CA that issues the workload certificate. It includes CA address, type, authentication to CA service, etc."
    },
    "DnsResourceRecord": {
      "description": "The structure describing the DNS Resource Record that needs to be added to DNS configuration for the authorization to be usable by certificate.",
      "id": "DnsResourceRecord",
      "properties": {
        "type": {
          "readOnly": true,
          "description": "Output only. Type of the DNS Resource Record. Currently always set to \"CNAME\".",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Output only. Fully qualified name of the DNS Resource Record. e.g. `_acme-challenge.example.com`",
          "readOnly": true
        },
        "data": {
          "readOnly": true,
          "description": "Output only. Data of the DNS Resource Record.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Status": {
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "properties": {
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "details": {
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            }
          },
          "type": "array",
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
        },
        "code": {
          "format": "int32",
          "type": "integer",
          "description": "The status code, which should be an enum value of google.rpc.Code."
        }
      },
      "id": "Status",
      "type": "object"
    },
    "Operation": {
      "type": "object",
      "properties": {
        "error": {
          "$ref": "Status",
          "description": "The error result of the operation in case of failure or cancellation."
        },
        "metadata": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "type": "object"
        },
        "response": {
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`."
        },
        "done": {
          "type": "boolean",
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
        },
        "name": {
          "type": "string",
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
        }
      },
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "id": "Operation"
    },
    "CertificateIssuanceConfig": {
      "properties": {
        "rotationWindowPercentage": {
          "description": "Required. Specifies the percentage of elapsed time of the certificate lifetime to wait before renewing the certificate. Must be a number between 1-99, inclusive.",
          "format": "int32",
          "type": "integer"
        },
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "readOnly": true,
          "description": "Output only. The creation timestamp of a CertificateIssuanceConfig."
        },
        "keyAlgorithm": {
          "description": "Required. The key algorithm to use when generating the private key.",
          "type": "string",
          "enum": [
            "KEY_ALGORITHM_UNSPECIFIED",
            "RSA_2048",
            "ECDSA_P256"
          ],
          "enumDescriptions": [
            "Unspecified key algorithm.",
            "Specifies RSA with a 2048-bit modulus.",
            "Specifies ECDSA with curve P256."
          ]
        },
        "description": {
          "type": "string",
          "description": "One or more paragraphs of text description of a CertificateIssuanceConfig."
        },
        "name": {
          "type": "string",
          "description": "A user-defined name of the certificate issuance config. CertificateIssuanceConfig names must be unique globally and match pattern `projects/*/locations/*/certificateIssuanceConfigs/*`."
        },
        "lifetime": {
          "format": "google-duration",
          "type": "string",
          "description": "Required. Workload certificate lifetime requested."
        },
        "updateTime": {
          "description": "Output only. The last update timestamp of a CertificateIssuanceConfig.",
          "format": "google-datetime",
          "type": "string",
          "readOnly": true
        },
        "certificateAuthorityConfig": {
          "$ref": "CertificateAuthorityConfig",
          "description": "Required. The CA that issues the workload certificate. It includes the CA address, type, authentication to CA service, etc."
        },
        "labels": {
          "description": "Set of labels associated with a CertificateIssuanceConfig.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "id": "CertificateIssuanceConfig",
      "description": "CertificateIssuanceConfig specifies how to issue and manage a certificate.",
      "type": "object"
    },
    "ListCertificateMapsResponse": {
      "properties": {
        "nextPageToken": {
          "description": "If there might be more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as `page_token`.",
          "type": "string"
        },
        "certificateMaps": {
          "description": "A list of certificate maps for the parent resource.",
          "type": "array",
          "items": {
            "$ref": "CertificateMap"
          }
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "ListCertificateMapsResponse",
      "type": "object",
      "description": "Response for the `ListCertificateMaps` method."
    },
    "Location": {
      "properties": {
        "labels": {
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "displayName": {
          "type": "string",
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\"."
        },
        "name": {
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`",
          "type": "string"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "Service-specific metadata. For example the available capacity at the given location."
        },
        "locationId": {
          "description": "The canonical id for this location. For example: `\"us-east1\"`.",
          "type": "string"
        }
      },
      "id": "Location",
      "type": "object",
      "description": "A resource that represents Google Cloud Platform location."
    },
    "IpConfig": {
      "description": "Defines IP configuration where this Certificate Map is serving.",
      "properties": {
        "ports": {
          "description": "Output only. Ports.",
          "items": {
            "format": "uint32",
            "type": "integer"
          },
          "readOnly": true,
          "type": "array"
        },
        "ipAddress": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. An external IP address."
        }
      },
      "id": "IpConfig",
      "type": "object"
    }
  },
  "parameters": {
    "oauth_token": {
      "location": "query",
      "description": "OAuth 2.0 token for the current user.",
      "type": "string"
    },
    "upload_protocol": {
      "type": "string",
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query",
      "type": "string"
    },
    "$.xgafv": {
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "description": "V1 error format.",
      "type": "string",
      "location": "query"
    },
    "callback": {
      "location": "query",
      "type": "string",
      "description": "JSONP"
    },
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "fields": {
      "location": "query",
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response."
    },
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "alt": {
      "description": "Data format for response.",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "default": "json",
      "type": "string",
      "location": "query"
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "prettyPrint": {
      "location": "query",
      "type": "boolean",
      "default": "true",
      "description": "Returns response with indentations and line breaks."
    }
  },
  "baseUrl": "https://certificatemanager.googleapis.com/",
  "documentationLink": "https://cloud.google.com/certificate-manager",
  "description": "",
  "version": "v1",
  "protocol": "rest",
  "fullyEncodeReservedExpansion": true,
  "id": "certificatemanager:v1",
  "ownerDomain": "google.com",
  "servicePath": "",
  "canonicalName": "Certificate Manager",
  "ownerName": "Google",
  "batchPath": "batch",
  "rootUrl": "https://certificatemanager.googleapis.com/",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  }
}
