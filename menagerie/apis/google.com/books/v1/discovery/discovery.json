{
  "id": "books:v1",
  "ownerDomain": "google.com",
  "basePath": "",
  "servicePath": "",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/books": {
          "description": "Manage your books"
        }
      }
    }
  },
  "name": "books",
  "baseUrl": "https://books.googleapis.com/",
  "kind": "discovery#restDescription",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "schemas": {
    "Offers": {
      "id": "Offers",
      "properties": {
        "kind": {
          "description": "Resource type.",
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "gservicesKey": {
                "type": "string"
              },
              "id": {
                "type": "string"
              },
              "items": {
                "items": {
                  "type": "object",
                  "properties": {
                    "description": {
                      "type": "string"
                    },
                    "author": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "volumeId": {
                      "type": "string"
                    },
                    "canonicalVolumeLink": {
                      "type": "string"
                    },
                    "coverUrl": {
                      "type": "string"
                    }
                  }
                },
                "type": "array"
              },
              "artUrl": {
                "type": "string"
              }
            }
          },
          "description": "A list of offers."
        }
      },
      "type": "object"
    },
    "Usersettings": {
      "id": "Usersettings",
      "properties": {
        "kind": {
          "description": "Resource type.",
          "type": "string"
        },
        "notification": {
          "type": "object",
          "properties": {
            "rewardExpirations": {
              "properties": {
                "opted_state": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "priceDrop": {
              "type": "object",
              "properties": {
                "opted_state": {
                  "type": "string"
                }
              }
            },
            "matchMyInterests": {
              "type": "object",
              "properties": {
                "opted_state": {
                  "type": "string"
                }
              }
            },
            "moreFromAuthors": {
              "properties": {
                "opted_state": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "moreFromSeries": {
              "type": "object",
              "properties": {
                "opted_state": {
                  "type": "string"
                }
              }
            }
          }
        },
        "notesExport": {
          "type": "object",
          "properties": {
            "isEnabled": {
              "type": "boolean"
            },
            "folderName": {
              "type": "string"
            }
          },
          "description": "User settings in sub-objects, each for different purposes."
        }
      },
      "type": "object"
    },
    "Bookshelves": {
      "type": "object",
      "id": "Bookshelves",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Resource type."
        },
        "items": {
          "items": {
            "$ref": "Bookshelf"
          },
          "type": "array",
          "description": "A list of bookshelves."
        }
      }
    },
    "Annotations": {
      "type": "object",
      "id": "Annotations",
      "properties": {
        "items": {
          "description": "A list of annotations.",
          "items": {
            "$ref": "Annotation"
          },
          "type": "array"
        },
        "kind": {
          "type": "string",
          "description": "Resource type."
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token to pass in for pagination for the next page. This will not be present if this request does not have more results."
        },
        "totalItems": {
          "description": "Total number of annotations found. This may be greater than the number of notes returned in this response if results have been paginated.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Layersummaries": {
      "id": "Layersummaries",
      "properties": {
        "totalItems": {
          "description": "The total number of layer summaries found.",
          "type": "integer",
          "format": "int32"
        },
        "kind": {
          "description": "Resource type.",
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "Layersummary"
          },
          "description": "A list of layer summary items."
        }
      },
      "type": "object"
    },
    "AnnotationsSummary": {
      "properties": {
        "layers": {
          "items": {
            "type": "object",
            "properties": {
              "updated": {
                "type": "string"
              },
              "allowedCharacterCount": {
                "format": "int32",
                "type": "integer"
              },
              "layerId": {
                "type": "string"
              },
              "limitType": {
                "type": "string"
              },
              "remainingCharacterCount": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "type": "array"
        },
        "kind": {
          "type": "string"
        }
      },
      "id": "AnnotationsSummary",
      "type": "object"
    },
    "Volumeannotation": {
      "type": "object",
      "id": "Volumeannotation",
      "properties": {
        "updated": {
          "type": "string",
          "description": "Timestamp for the last time this anntoation was updated. (RFC 3339 UTC date-time format)."
        },
        "contentRanges": {
          "properties": {
            "cfiRange": {
              "description": "Range in CFI format for this annotation for version above.",
              "$ref": "BooksAnnotationsRange"
            },
            "contentVersion": {
              "description": "Content version applicable to ranges below.",
              "type": "string"
            },
            "gbTextRange": {
              "description": "Range in GB text format for this annotation for version above.",
              "$ref": "BooksAnnotationsRange"
            },
            "gbImageRange": {
              "description": "Range in GB image format for this annotation for version above.",
              "$ref": "BooksAnnotationsRange"
            }
          },
          "type": "object",
          "description": "The content ranges to identify the selected text."
        },
        "annotationType": {
          "type": "string",
          "description": "The type of annotation this is."
        },
        "selectedText": {
          "type": "string",
          "description": "Excerpt from the volume."
        },
        "annotationDataLink": {
          "description": "Link to get data for this annotation.",
          "type": "string"
        },
        "selfLink": {
          "type": "string",
          "description": "URL to this resource."
        },
        "annotationDataId": {
          "description": "The annotation data id for this volume annotation.",
          "type": "string"
        },
        "data": {
          "type": "string",
          "description": "Data for this annotation."
        },
        "volumeId": {
          "description": "The Volume this annotation is for.",
          "type": "string"
        },
        "kind": {
          "description": "Resource Type",
          "type": "string"
        },
        "pageIds": {
          "description": "Pages the annotation spans.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "layerId": {
          "type": "string",
          "description": "The Layer this annotation is for."
        },
        "deleted": {
          "description": "Indicates that this annotation is deleted.",
          "type": "boolean"
        },
        "id": {
          "description": "Unique id of this volume annotation.",
          "type": "string"
        }
      }
    },
    "Notification": {
      "properties": {
        "timeToExpireMs": {
          "format": "int64",
          "type": "string"
        },
        "kind": {
          "description": "Resource type.",
          "type": "string"
        },
        "targetUrl": {
          "type": "string"
        },
        "body": {
          "type": "string"
        },
        "dont_show_notification": {
          "type": "boolean"
        },
        "notification_type": {
          "type": "string"
        },
        "crmExperimentIds": {
          "items": {
            "type": "string",
            "format": "int64"
          },
          "type": "array",
          "description": "The list of crm experiment ids."
        },
        "notificationGroup": {
          "type": "string"
        },
        "doc_id": {
          "type": "string"
        },
        "show_notification_settings_action": {
          "type": "boolean"
        },
        "title": {
          "type": "string"
        },
        "iconUrl": {
          "type": "string"
        },
        "is_document_mature": {
          "type": "boolean"
        },
        "doc_type": {
          "type": "string"
        },
        "pcampaign_id": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        }
      },
      "type": "object",
      "id": "Notification"
    },
    "DownloadAccesses": {
      "id": "DownloadAccesses",
      "type": "object",
      "properties": {
        "downloadAccessList": {
          "description": "A list of download access responses.",
          "items": {
            "$ref": "DownloadAccessRestriction"
          },
          "type": "array"
        },
        "kind": {
          "type": "string",
          "description": "Resource type."
        }
      }
    },
    "Bookshelf": {
      "id": "Bookshelf",
      "properties": {
        "description": {
          "description": "Description of this bookshelf.",
          "type": "string"
        },
        "id": {
          "description": "Id of this bookshelf, only unique by user.",
          "type": "integer",
          "format": "int32"
        },
        "updated": {
          "type": "string",
          "description": "Last modified time of this bookshelf (formatted UTC timestamp with millisecond resolution)."
        },
        "title": {
          "type": "string",
          "description": "Title of this bookshelf."
        },
        "volumeCount": {
          "description": "Number of volumes in this bookshelf.",
          "type": "integer",
          "format": "int32"
        },
        "kind": {
          "type": "string",
          "description": "Resource type for bookshelf metadata."
        },
        "created": {
          "type": "string",
          "description": "Created time for this bookshelf (formatted UTC timestamp with millisecond resolution)."
        },
        "access": {
          "type": "string",
          "description": "Whether this bookshelf is PUBLIC or PRIVATE."
        },
        "selfLink": {
          "type": "string",
          "description": "URL to this resource."
        },
        "volumesLastUpdated": {
          "description": "Last time a volume was added or removed from this bookshelf (formatted UTC timestamp with millisecond resolution).",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Empty": {
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "properties": {},
      "type": "object",
      "id": "Empty"
    },
    "ReadingPosition": {
      "properties": {
        "updated": {
          "description": "Timestamp when this reading position was last updated (formatted UTC timestamp with millisecond resolution).",
          "type": "string"
        },
        "gbTextPosition": {
          "description": "Position in a volume for text-based content.",
          "type": "string"
        },
        "gbImagePosition": {
          "description": "Position in a volume for image-based content.",
          "type": "string"
        },
        "pdfPosition": {
          "type": "string",
          "description": "Position in a PDF file."
        },
        "kind": {
          "type": "string",
          "description": "Resource type for a reading position."
        },
        "epubCfiPosition": {
          "type": "string",
          "description": "Position in an EPUB as a CFI."
        },
        "volumeId": {
          "type": "string",
          "description": "Volume id associated with this reading position."
        }
      },
      "id": "ReadingPosition",
      "type": "object"
    },
    "Geolayerdata": {
      "type": "object",
      "id": "Geolayerdata",
      "properties": {
        "common": {
          "type": "object",
          "properties": {
            "previewImageUrl": {
              "type": "string",
              "description": "The URL for the preview image information."
            },
            "title": {
              "type": "string",
              "description": "The display title and localized canonical name to use when searching for this entity on Google search."
            },
            "snippet": {
              "type": "string",
              "description": "The description for this location."
            },
            "lang": {
              "description": "The language of the information url and description.",
              "type": "string"
            },
            "snippetUrl": {
              "type": "string",
              "description": "The URL for information for this location. Ex: wikipedia link."
            }
          }
        },
        "geo": {
          "properties": {
            "boundary": {
              "items": {
                "type": "string"
              },
              "description": "The boundary of the location as a set of loops containing pairs of latitude, longitude coordinates.",
              "type": "array"
            },
            "mapType": {
              "type": "string",
              "description": "The type of map that should be used for this location. EX: HYBRID, ROADMAP, SATELLITE, TERRAIN"
            },
            "longitude": {
              "type": "number",
              "description": "The longitude of the location.",
              "format": "double"
            },
            "zoom": {
              "format": "int32",
              "type": "integer",
              "description": "The Zoom level to use for the map. Zoom levels between 0 (the lowest zoom level, in which the entire world can be seen on one map) to 21+ (down to individual buildings). See: https: //developers.google.com/maps/documentation/staticmaps/#Zoomlevels"
            },
            "countryCode": {
              "description": "The country code of the location.",
              "type": "string"
            },
            "latitude": {
              "type": "number",
              "format": "double",
              "description": "The latitude of the location."
            },
            "cachePolicy": {
              "type": "string",
              "description": "The cache policy active for this data. EX: UNRESTRICTED, RESTRICTED, NEVER"
            },
            "viewport": {
              "description": "The viewport for showing this location. This is a latitude, longitude rectangle.",
              "properties": {
                "hi": {
                  "properties": {
                    "latitude": {
                      "format": "double",
                      "type": "number"
                    },
                    "longitude": {
                      "type": "number",
                      "format": "double"
                    }
                  },
                  "type": "object"
                },
                "lo": {
                  "properties": {
                    "latitude": {
                      "format": "double",
                      "type": "number"
                    },
                    "longitude": {
                      "type": "number",
                      "format": "double"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "kind": {
          "type": "string"
        }
      }
    },
    "Seriesmembership": {
      "id": "Seriesmembership",
      "type": "object",
      "properties": {
        "member": {
          "type": "array",
          "items": {
            "$ref": "Volume"
          }
        },
        "nextPageToken": {
          "type": "string"
        },
        "kind": {
          "description": "Resorce type.",
          "type": "string"
        }
      }
    },
    "DictionaryAnnotationdata": {
      "type": "object",
      "properties": {
        "layerId": {
          "type": "string",
          "description": "The Layer id for this data. *"
        },
        "volumeId": {
          "type": "string",
          "description": "The volume id for this data. *"
        },
        "data": {
          "description": "JSON encoded data for this dictionary annotation data. Emitted with name 'data' in JSON output. Either this or geo_data will be populated.",
          "$ref": "Dictlayerdata"
        },
        "kind": {
          "type": "string",
          "description": "Resource Type"
        },
        "encodedData": {
          "type": "string",
          "description": "Base64 encoded data for this annotation data.",
          "format": "byte"
        },
        "id": {
          "description": "Unique id for this annotation data.",
          "type": "string"
        },
        "updated": {
          "description": "Timestamp for the last time this data was updated. (RFC 3339 UTC date-time format).",
          "type": "string"
        },
        "selfLink": {
          "description": "URL for this resource. *",
          "type": "string"
        },
        "annotationType": {
          "description": "The type of annotation this data is for.",
          "type": "string"
        }
      },
      "id": "DictionaryAnnotationdata"
    },
    "DownloadAccessRestriction": {
      "type": "object",
      "id": "DownloadAccessRestriction",
      "properties": {
        "restricted": {
          "type": "boolean",
          "description": "Whether this volume has any download access restrictions."
        },
        "signature": {
          "description": "Response signature.",
          "type": "string"
        },
        "deviceAllowed": {
          "type": "boolean",
          "description": "If restricted, whether access is granted for this (user, device, volume)."
        },
        "maxDownloadDevices": {
          "type": "integer",
          "description": "If restricted, the maximum number of content download licenses for this volume.",
          "format": "int32"
        },
        "source": {
          "type": "string",
          "description": "Client app identifier for verification. Download access and client-validation only."
        },
        "volumeId": {
          "type": "string",
          "description": "Identifies the volume for which this entry applies."
        },
        "justAcquired": {
          "description": "If deviceAllowed, whether access was just acquired with this request.",
          "type": "boolean"
        },
        "nonce": {
          "description": "Client nonce for verification. Download access and client-validation only.",
          "type": "string"
        },
        "message": {
          "description": "Error/warning message.",
          "type": "string"
        },
        "reasonCode": {
          "description": "Error/warning reason code. Additional codes may be added in the future. 0 OK 100 ACCESS_DENIED_PUBLISHER_LIMIT 101 ACCESS_DENIED_LIMIT 200 WARNING_USED_LAST_ACCESS",
          "type": "string"
        },
        "kind": {
          "description": "Resource type.",
          "type": "string"
        },
        "downloadsAcquired": {
          "description": "If restricted, the number of content download licenses already acquired (including the requesting client, if licensed).",
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Volumeseriesinfo": {
      "id": "Volumeseriesinfo",
      "properties": {
        "volumeSeries": {
          "items": {
            "type": "object",
            "properties": {
              "seriesBookType": {
                "description": "The book type in the context of series. Examples - Single Issue, Collection Edition, etc.",
                "type": "string"
              },
              "issue": {
                "items": {
                  "type": "object",
                  "properties": {
                    "issueDisplayNumber": {
                      "type": "string"
                    },
                    "issueOrderNumber": {
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                },
                "description": "List of issues. Applicable only for Collection Edition and Omnibus.",
                "type": "array"
              },
              "orderNumber": {
                "description": "The book order number in the series.",
                "format": "int32",
                "type": "integer"
              },
              "seriesId": {
                "description": "The series id.",
                "type": "string"
              }
            }
          },
          "type": "array"
        },
        "shortSeriesBookTitle": {
          "type": "string",
          "description": "Short book title in the context of the series."
        },
        "kind": {
          "description": "Resource type.",
          "type": "string"
        },
        "bookDisplayNumber": {
          "type": "string",
          "description": "The display number string. This should be used only for display purposes and the actual sequence should be inferred from the below orderNumber."
        }
      },
      "type": "object"
    },
    "RequestAccessData": {
      "id": "RequestAccessData",
      "type": "object",
      "properties": {
        "concurrentAccess": {
          "$ref": "ConcurrentAccessRestriction",
          "description": "A concurrent access response."
        },
        "kind": {
          "description": "Resource type.",
          "type": "string"
        },
        "downloadAccess": {
          "description": "A download access response.",
          "$ref": "DownloadAccessRestriction"
        }
      }
    },
    "Category": {
      "type": "object",
      "properties": {
        "items": {
          "description": "A list of onboarding categories.",
          "type": "array",
          "items": {
            "properties": {
              "badgeUrl": {
                "type": "string"
              },
              "categoryId": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "kind": {
          "description": "Resource type.",
          "type": "string"
        }
      },
      "id": "Category"
    },
    "Review": {
      "properties": {
        "volumeId": {
          "type": "string",
          "description": "Volume that this review is for."
        },
        "kind": {
          "type": "string",
          "description": "Resource type for a review."
        },
        "type": {
          "description": "Source type for this review. Possible values are EDITORIAL, WEB_USER or GOOGLE_USER.",
          "type": "string"
        },
        "date": {
          "description": "Date of this review.",
          "type": "string"
        },
        "fullTextUrl": {
          "description": "URL for the full review text, for reviews gathered from the web.",
          "type": "string"
        },
        "author": {
          "properties": {
            "displayName": {
              "type": "string",
              "description": "Name of this person."
            }
          },
          "type": "object",
          "description": "Author of this review."
        },
        "title": {
          "description": "Title for this review.",
          "type": "string"
        },
        "content": {
          "type": "string",
          "description": "Review text."
        },
        "source": {
          "properties": {
            "description": {
              "description": "Name of the source.",
              "type": "string"
            },
            "extraDescription": {
              "type": "string",
              "description": "Extra text about the source of the review."
            },
            "url": {
              "type": "string",
              "description": "URL of the source of the review."
            }
          },
          "description": "Information regarding the source of this review, when the review is not from a Google Books user.",
          "type": "object"
        },
        "rating": {
          "type": "string",
          "description": "Star rating for this review. Possible values are ONE, TWO, THREE, FOUR, FIVE or NOT_RATED."
        }
      },
      "id": "Review",
      "type": "object"
    },
    "Volumes": {
      "properties": {
        "items": {
          "type": "array",
          "description": "A list of volumes.",
          "items": {
            "$ref": "Volume"
          }
        },
        "totalItems": {
          "description": "Total number of volumes found. This might be greater than the number of volumes returned in this response if results have been paginated.",
          "type": "integer",
          "format": "int32"
        },
        "kind": {
          "type": "string",
          "description": "Resource type."
        }
      },
      "type": "object",
      "id": "Volumes"
    },
    "FamilyInfo": {
      "properties": {
        "membership": {
          "description": "Family membership info of the user that made the request.",
          "type": "object",
          "properties": {
            "allowedMaturityRating": {
              "type": "string",
              "description": "The maximum allowed maturity rating for the user."
            },
            "role": {
              "description": "The role of the user in the family.",
              "type": "string"
            },
            "ageGroup": {
              "type": "string",
              "description": "The age group of the user."
            },
            "isInFamily": {
              "type": "boolean"
            },
            "acquirePermission": {
              "description": "Restrictions on user buying and acquiring content.",
              "type": "string"
            }
          }
        },
        "kind": {
          "type": "string",
          "description": "Resource type."
        }
      },
      "type": "object",
      "id": "FamilyInfo"
    },
    "BooksVolumesRecommendedRateResponse": {
      "properties": {
        "consistency_token": {
          "type": "string"
        }
      },
      "type": "object",
      "id": "BooksVolumesRecommendedRateResponse"
    },
    "Volume": {
      "type": "object",
      "id": "Volume",
      "properties": {
        "accessInfo": {
          "description": "Any information about a volume related to reading or obtaining that volume text. This information can depend on country (books may be public domain in one country but not in another, e.g.).",
          "properties": {
            "publicDomain": {
              "type": "boolean",
              "description": "Whether or not this book is public domain in the country listed above."
            },
            "viewability": {
              "type": "string",
              "description": "The read access of a volume. Possible values are PARTIAL, ALL_PAGES, NO_PAGES or UNKNOWN. This value depends on the country listed above. A value of PARTIAL means that the publisher has allowed some portion of the volume to be viewed publicly, without purchase. This can apply to eBooks as well as non-eBooks. Public domain books will always have a value of ALL_PAGES."
            },
            "pdf": {
              "type": "object",
              "description": "Information about pdf content. (In LITE projection.)",
              "properties": {
                "acsTokenLink": {
                  "type": "string",
                  "description": "URL to retrieve ACS token for pdf download. (In LITE projection.)"
                },
                "isAvailable": {
                  "type": "boolean",
                  "description": "Is a scanned image pdf available either as public domain or for purchase. (In LITE projection.)"
                },
                "downloadLink": {
                  "description": "URL to download pdf. (In LITE projection.)",
                  "type": "string"
                }
              }
            },
            "explicitOfflineLicenseManagement": {
              "description": "Whether this volume requires that the client explicitly request offline download license rather than have it done automatically when loading the content, if the client supports it.",
              "type": "boolean"
            },
            "textToSpeechPermission": {
              "type": "string",
              "description": "Whether text-to-speech is permitted for this volume. Values can be ALLOWED, ALLOWED_FOR_ACCESSIBILITY, or NOT_ALLOWED."
            },
            "quoteSharingAllowed": {
              "description": "Whether quote sharing is allowed for this volume.",
              "type": "boolean"
            },
            "country": {
              "type": "string",
              "description": "The two-letter ISO_3166-1 country code for which this access information is valid. (In LITE projection.)"
            },
            "driveImportedContentLink": {
              "description": "URL to the Google Drive viewer if this volume is uploaded by the user by selecting the file from Google Drive.",
              "type": "string"
            },
            "epub": {
              "properties": {
                "isAvailable": {
                  "type": "boolean",
                  "description": "Is a flowing text epub available either as public domain or for purchase. (In LITE projection.)"
                },
                "downloadLink": {
                  "type": "string",
                  "description": "URL to download epub. (In LITE projection.)"
                },
                "acsTokenLink": {
                  "description": "URL to retrieve ACS token for epub download. (In LITE projection.)",
                  "type": "string"
                }
              },
              "type": "object",
              "description": "Information about epub content. (In LITE projection.)"
            },
            "webReaderLink": {
              "type": "string",
              "description": "URL to read this volume on the Google Books site. Link will not allow users to read non-viewable volumes."
            },
            "embeddable": {
              "type": "boolean",
              "description": "Whether this volume can be embedded in a viewport using the Embedded Viewer API."
            },
            "viewOrderUrl": {
              "description": "For ordered but not yet processed orders, we give a URL that can be used to go to the appropriate Google Wallet page.",
              "type": "string"
            },
            "downloadAccess": {
              "$ref": "DownloadAccessRestriction",
              "description": "Information about a volume's download license access restrictions."
            },
            "accessViewStatus": {
              "type": "string",
              "description": "Combines the access and viewability of this volume into a single status field for this user. Values can be FULL_PURCHASED, FULL_PUBLIC_DOMAIN, SAMPLE or NONE. (In LITE projection.)"
            }
          },
          "type": "object"
        },
        "layerInfo": {
          "type": "object",
          "properties": {
            "layers": {
              "items": {
                "type": "object",
                "properties": {
                  "layerId": {
                    "description": "The layer id of this layer (e.g. \"geo\").",
                    "type": "string"
                  },
                  "volumeAnnotationsVersion": {
                    "description": "The current version of this layer's volume annotations. Note that this version applies only to the data in the books.layers.volumeAnnotations.* responses. The actual annotation data is versioned separately.",
                    "type": "string"
                  }
                }
              },
              "type": "array",
              "description": "A layer should appear here if and only if the layer exists for this book."
            }
          },
          "description": "What layers exist in this volume and high level information about them."
        },
        "searchInfo": {
          "properties": {
            "textSnippet": {
              "description": "A text snippet containing the search query.",
              "type": "string"
            }
          },
          "description": "Search result information related to this volume.",
          "type": "object"
        },
        "volumeInfo": {
          "type": "object",
          "description": "General volume information.",
          "properties": {
            "contentVersion": {
              "description": "An identifier for the version of the volume content (text & images). (In LITE projection)",
              "type": "string"
            },
            "language": {
              "type": "string",
              "description": "Best language for this volume (based on content). It is the two-letter ISO 639-1 code such as 'fr', 'en', etc."
            },
            "industryIdentifiers": {
              "description": "Industry standard identifiers for this volume.",
              "items": {
                "type": "object",
                "properties": {
                  "identifier": {
                    "type": "string",
                    "description": "Industry specific volume identifier."
                  },
                  "type": {
                    "type": "string",
                    "description": "Identifier type. Possible values are ISBN_10, ISBN_13, ISSN and OTHER."
                  }
                }
              },
              "type": "array"
            },
            "publisher": {
              "description": "Publisher of this volume. (In LITE projection.)",
              "type": "string"
            },
            "printType": {
              "type": "string",
              "description": "Type of publication of this volume. Possible values are BOOK or MAGAZINE."
            },
            "canonicalVolumeLink": {
              "description": "Canonical URL for a volume. (In LITE projection.)",
              "type": "string"
            },
            "ratingsCount": {
              "type": "integer",
              "format": "int32",
              "description": "The number of review ratings for this volume."
            },
            "allowAnonLogging": {
              "description": "Whether anonymous logging should be allowed.",
              "type": "boolean"
            },
            "printedPageCount": {
              "description": "Total number of printed pages in generated pdf representation.",
              "format": "int32",
              "type": "integer"
            },
            "pageCount": {
              "format": "int32",
              "description": "Total number of pages as per publisher metadata.",
              "type": "integer"
            },
            "authors": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "description": "The names of the authors and/or editors for this volume. (In LITE projection)"
            },
            "title": {
              "description": "Volume title. (In LITE projection.)",
              "type": "string"
            },
            "infoLink": {
              "description": "URL to view information about this volume on the Google Books site. (In LITE projection)",
              "type": "string"
            },
            "maturityRating": {
              "type": "string"
            },
            "mainCategory": {
              "description": "The main category to which this volume belongs. It will be the category from the categories list returned below that has the highest weight.",
              "type": "string"
            },
            "imageLinks": {
              "type": "object",
              "properties": {
                "extraLarge": {
                  "type": "string",
                  "description": "Image link for extra large size (width of ~1280 pixels). (In LITE projection)"
                },
                "large": {
                  "description": "Image link for large size (width of ~800 pixels). (In LITE projection)",
                  "type": "string"
                },
                "thumbnail": {
                  "type": "string",
                  "description": "Image link for thumbnail size (width of ~128 pixels). (In LITE projection)"
                },
                "smallThumbnail": {
                  "description": "Image link for small thumbnail size (width of ~80 pixels). (In LITE projection)",
                  "type": "string"
                },
                "small": {
                  "type": "string",
                  "description": "Image link for small size (width of ~300 pixels). (In LITE projection)"
                },
                "medium": {
                  "description": "Image link for medium size (width of ~575 pixels). (In LITE projection)",
                  "type": "string"
                }
              },
              "description": "A list of image links for all the sizes that are available. (In LITE projection.)"
            },
            "description": {
              "description": "A synopsis of the volume. The text of the description is formatted in HTML and includes simple formatting elements, such as b, i, and br tags. (In LITE projection.)",
              "type": "string"
            },
            "panelizationSummary": {
              "description": "A top-level summary of the panelization info in this volume.",
              "type": "object",
              "properties": {
                "containsImageBubbles": {
                  "type": "boolean"
                },
                "imageBubbleVersion": {
                  "type": "string"
                },
                "containsEpubBubbles": {
                  "type": "boolean"
                },
                "epubBubbleVersion": {
                  "type": "string"
                }
              }
            },
            "averageRating": {
              "format": "double",
              "type": "number",
              "description": "The mean review rating for this volume. (min = 1.0, max = 5.0)"
            },
            "categories": {
              "description": "A list of subject categories, such as \"Fiction\", \"Suspense\", etc.",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "samplePageCount": {
              "format": "int32",
              "type": "integer",
              "description": "Total number of sample pages as per publisher metadata."
            },
            "subtitle": {
              "description": "Volume subtitle. (In LITE projection.)",
              "type": "string"
            },
            "previewLink": {
              "type": "string",
              "description": "URL to preview this volume on the Google Books site."
            },
            "seriesInfo": {
              "$ref": "Volumeseriesinfo"
            },
            "comicsContent": {
              "description": "Whether the volume has comics content.",
              "type": "boolean"
            },
            "publishedDate": {
              "type": "string",
              "description": "Date of publication. (In LITE projection.)"
            },
            "readingModes": {
              "properties": {
                "text": {
                  "type": "boolean"
                },
                "image": {
                  "type": "boolean"
                }
              },
              "description": "The reading modes available for this volume.",
              "type": "object"
            },
            "dimensions": {
              "properties": {
                "thickness": {
                  "description": "Thickness of this volume (in cm).",
                  "type": "string"
                },
                "width": {
                  "type": "string",
                  "description": "Width of this volume (in cm)."
                },
                "height": {
                  "type": "string",
                  "description": "Height or length of this volume (in cm)."
                }
              },
              "description": "Physical dimensions of this volume.",
              "type": "object"
            }
          }
        },
        "saleInfo": {
          "properties": {
            "saleability": {
              "type": "string",
              "description": "Whether or not this book is available for sale or offered for free in the Google eBookstore for the country listed above. Possible values are FOR_SALE, FOR_RENTAL_ONLY, FOR_SALE_AND_RENTAL, FREE, NOT_FOR_SALE, or FOR_PREORDER."
            },
            "retailPrice": {
              "type": "object",
              "properties": {
                "amount": {
                  "format": "double",
                  "description": "Amount in the currency listed below. (In LITE projection.)",
                  "type": "number"
                },
                "currencyCode": {
                  "description": "An ISO 4217, three-letter currency code. (In LITE projection.)",
                  "type": "string"
                }
              },
              "description": "The actual selling price of the book. This is the same as the suggested retail or list price unless there are offers or discounts on this volume. (In LITE projection.)"
            },
            "offers": {
              "items": {
                "properties": {
                  "giftable": {
                    "description": "Indicates whether the offer is giftable.",
                    "type": "boolean"
                  },
                  "listPrice": {
                    "properties": {
                      "currencyCode": {
                        "type": "string"
                      },
                      "amountInMicros": {
                        "format": "double",
                        "type": "number"
                      }
                    },
                    "description": "Offer list (=undiscounted) price in Micros.",
                    "type": "object"
                  },
                  "retailPrice": {
                    "properties": {
                      "amountInMicros": {
                        "type": "number",
                        "format": "double"
                      },
                      "currencyCode": {
                        "type": "string"
                      }
                    },
                    "description": "Offer retail (=discounted) price in Micros",
                    "type": "object"
                  },
                  "rentalDuration": {
                    "description": "The rental duration (for rental offers only).",
                    "properties": {
                      "count": {
                        "format": "double",
                        "type": "number"
                      },
                      "unit": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "finskyOfferType": {
                    "description": "The finsky offer type (e.g., PURCHASE=0 RENTAL=3)",
                    "format": "int32",
                    "type": "integer"
                  }
                },
                "type": "object"
              },
              "description": "Offers available for this volume (sales and rentals).",
              "type": "array"
            },
            "isEbook": {
              "description": "Whether or not this volume is an eBook (can be added to the My eBooks shelf).",
              "type": "boolean"
            },
            "country": {
              "type": "string",
              "description": "The two-letter ISO_3166-1 country code for which this sale information is valid. (In LITE projection.)"
            },
            "buyLink": {
              "type": "string",
              "description": "URL to purchase this volume on the Google Books site. (In LITE projection)"
            },
            "onSaleDate": {
              "description": "The date on which this book is available for sale.",
              "type": "string"
            },
            "listPrice": {
              "type": "object",
              "properties": {
                "currencyCode": {
                  "type": "string",
                  "description": "An ISO 4217, three-letter currency code. (In LITE projection.)"
                },
                "amount": {
                  "format": "double",
                  "description": "Amount in the currency listed below. (In LITE projection.)",
                  "type": "number"
                }
              },
              "description": "Suggested retail price. (In LITE projection.)"
            }
          },
          "description": "Any information about a volume related to the eBookstore and/or purchaseability. This information can depend on the country where the request originates from (i.e. books may not be for sale in certain countries).",
          "type": "object"
        },
        "recommendedInfo": {
          "type": "object",
          "description": "Recommendation related information for this volume.",
          "properties": {
            "explanation": {
              "type": "string",
              "description": "A text explaining why this volume is recommended."
            }
          }
        },
        "etag": {
          "type": "string",
          "description": "Opaque identifier for a specific version of a volume resource. (In LITE projection)"
        },
        "userInfo": {
          "type": "object",
          "description": "User specific information related to this volume. (e.g. page this user last read or whether they purchased this book)",
          "properties": {
            "rentalState": {
              "type": "string",
              "description": "Whether this book is an active or an expired rental."
            },
            "acquisitionType": {
              "type": "integer",
              "format": "int32",
              "description": "How this volume was acquired."
            },
            "isFamilySharingAllowed": {
              "description": "Deprecated: Replaced by familySharing.",
              "type": "boolean"
            },
            "isFamilySharedToUser": {
              "description": "Whether or not the user received this volume through family sharing.",
              "type": "boolean"
            },
            "updated": {
              "type": "string",
              "description": "Timestamp when this volume was last modified by a user action, such as a reading position update, volume purchase or writing a review. (RFC 3339 UTC date-time format)."
            },
            "isUploaded": {
              "description": "Whether or not this volume was user uploaded.",
              "type": "boolean"
            },
            "readingPosition": {
              "$ref": "ReadingPosition",
              "description": "The user's current reading position in the volume, if one is available. (In LITE projection.)"
            },
            "userUploadedVolumeInfo": {
              "type": "object",
              "properties": {
                "processingState": {
                  "type": "string"
                }
              }
            },
            "entitlementType": {
              "format": "int32",
              "description": "Whether this volume is purchased, sample, pd download etc.",
              "type": "integer"
            },
            "copy": {
              "properties": {
                "updated": {
                  "type": "string"
                },
                "remainingCharacterCount": {
                  "format": "int32",
                  "type": "integer"
                },
                "limitType": {
                  "type": "string"
                },
                "allowedCharacterCount": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "type": "object",
              "description": "Copy/Paste accounting information."
            },
            "isPurchased": {
              "description": "Whether or not this volume was purchased by the authenticated user making the request. (In LITE projection.)",
              "type": "boolean"
            },
            "isFamilySharingDisabledByFop": {
              "description": "Deprecated: Replaced by familySharing.",
              "type": "boolean"
            },
            "acquiredTime": {
              "description": "Timestamp when this volume was acquired by the user. (RFC 3339 UTC date-time format) Acquiring includes purchase, user upload, receiving family sharing, etc.",
              "type": "string"
            },
            "isInMyBooks": {
              "description": "Whether or not this volume is currently in \"my books.\"",
              "type": "boolean"
            },
            "rentalPeriod": {
              "properties": {
                "startUtcSec": {
                  "format": "int64",
                  "type": "string"
                },
                "endUtcSec": {
                  "type": "string",
                  "format": "int64"
                }
              },
              "description": "Period during this book is/was a valid rental.",
              "type": "object"
            },
            "isPreordered": {
              "type": "boolean",
              "description": "Whether or not this volume was pre-ordered by the authenticated user making the request. (In LITE projection.)"
            },
            "review": {
              "$ref": "Review",
              "description": "This user's review of this volume, if one exists."
            },
            "isFamilySharedFromUser": {
              "type": "boolean",
              "description": "Whether or not the user shared this volume with the family."
            },
            "familySharing": {
              "properties": {
                "familyRole": {
                  "description": "The role of the user in the family.",
                  "type": "string"
                },
                "isSharingAllowed": {
                  "description": "Whether or not this volume can be shared with the family by the user. This includes sharing eligibility of both the volume and the user. If the value is true, the user can initiate a family sharing action.",
                  "type": "boolean"
                },
                "isSharingDisabledByFop": {
                  "description": "Whether or not sharing this volume is temporarily disabled due to issues with the Family Wallet.",
                  "type": "boolean"
                }
              },
              "type": "object",
              "description": "Information on the ability to share with the family."
            }
          }
        },
        "kind": {
          "type": "string",
          "description": "Resource type for a volume. (In LITE projection.)"
        },
        "id": {
          "description": "Unique identifier for a volume. (In LITE projection.)",
          "type": "string"
        },
        "selfLink": {
          "type": "string",
          "description": "URL to this resource. (In LITE projection.)"
        }
      }
    },
    "Volume2": {
      "id": "Volume2",
      "properties": {
        "nextPageToken": {
          "type": "string"
        },
        "kind": {
          "description": "Resource type.",
          "type": "string"
        },
        "items": {
          "description": "A list of volumes.",
          "type": "array",
          "items": {
            "$ref": "Volume"
          }
        }
      },
      "type": "object"
    },
    "GeoAnnotationdata": {
      "type": "object",
      "properties": {
        "volumeId": {
          "type": "string",
          "description": "The volume id for this data. *"
        },
        "selfLink": {
          "description": "URL for this resource. *",
          "type": "string"
        },
        "data": {
          "description": "JSON encoded data for this geo annotation data. Emitted with name 'data' in JSON output. Either this or dict_data will be populated.",
          "$ref": "Geolayerdata"
        },
        "id": {
          "description": "Unique id for this annotation data.",
          "type": "string"
        },
        "annotationType": {
          "description": "The type of annotation this data is for.",
          "type": "string"
        },
        "layerId": {
          "description": "The Layer id for this data. *",
          "type": "string"
        },
        "kind": {
          "type": "string",
          "description": "Resource Type"
        },
        "updated": {
          "description": "Timestamp for the last time this data was updated. (RFC 3339 UTC date-time format).",
          "type": "string"
        },
        "encodedData": {
          "description": "Base64 encoded data for this annotation data.",
          "type": "string",
          "format": "byte"
        }
      },
      "id": "GeoAnnotationdata"
    },
    "Dictlayerdata": {
      "properties": {
        "kind": {
          "type": "string"
        },
        "common": {
          "type": "object",
          "properties": {
            "title": {
              "type": "string",
              "description": "The display title and localized canonical name to use when searching for this entity on Google search."
            }
          }
        },
        "dict": {
          "properties": {
            "words": {
              "type": "array",
              "items": {
                "properties": {
                  "senses": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "source": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "type": "string"
                            },
                            "attribution": {
                              "type": "string"
                            }
                          }
                        },
                        "syllabification": {
                          "type": "string"
                        },
                        "definitions": {
                          "items": {
                            "type": "object",
                            "properties": {
                              "definition": {
                                "type": "string"
                              },
                              "examples": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "source": {
                                      "properties": {
                                        "url": {
                                          "type": "string"
                                        },
                                        "attribution": {
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "text": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "type": "array"
                        },
                        "partOfSpeech": {
                          "type": "string"
                        },
                        "pronunciationUrl": {
                          "type": "string"
                        },
                        "conjugations": {
                          "items": {
                            "type": "object",
                            "properties": {
                              "value": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string"
                              }
                            }
                          },
                          "type": "array"
                        },
                        "pronunciation": {
                          "type": "string"
                        },
                        "synonyms": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "text": {
                                "type": "string"
                              },
                              "source": {
                                "type": "object",
                                "properties": {
                                  "url": {
                                    "type": "string"
                                  },
                                  "attribution": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "source": {
                    "properties": {
                      "url": {
                        "type": "string"
                      },
                      "attribution": {
                        "type": "string"
                      }
                    },
                    "description": "The words with different meanings but not related words, e.g. \"go\" (game) and \"go\" (verb).",
                    "type": "object"
                  },
                  "examples": {
                    "items": {
                      "properties": {
                        "source": {
                          "properties": {
                            "url": {
                              "type": "string"
                            },
                            "attribution": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "text": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "derivatives": {
                    "items": {
                      "type": "object",
                      "properties": {
                        "source": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "type": "string"
                            },
                            "attribution": {
                              "type": "string"
                            }
                          }
                        },
                        "text": {
                          "type": "string"
                        }
                      }
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            },
            "source": {
              "properties": {
                "attribution": {
                  "type": "string"
                },
                "url": {
                  "type": "string"
                }
              },
              "description": "The source, url and attribution for this dictionary data.",
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "id": "Dictlayerdata",
      "type": "object"
    },
    "Annotation": {
      "properties": {
        "afterSelectedText": {
          "type": "string",
          "description": "Anchor text after excerpt. For requests, if the user bookmarked a screen that has no flowing text on it, then this field should be empty."
        },
        "data": {
          "description": "User-created data for this annotation.",
          "type": "string"
        },
        "beforeSelectedText": {
          "type": "string",
          "description": "Anchor text before excerpt. For requests, if the user bookmarked a screen that has no flowing text on it, then this field should be empty."
        },
        "clientVersionRanges": {
          "properties": {
            "gbTextRange": {
              "$ref": "BooksAnnotationsRange",
              "description": "Range in GB text format for this annotation sent by client."
            },
            "cfiRange": {
              "description": "Range in CFI format for this annotation sent by client.",
              "$ref": "BooksAnnotationsRange"
            },
            "gbImageRange": {
              "description": "Range in GB image format for this annotation sent by client.",
              "$ref": "BooksAnnotationsRange"
            },
            "contentVersion": {
              "type": "string",
              "description": "Content version the client sent in."
            },
            "imageCfiRange": {
              "description": "Range in image CFI format for this annotation sent by client.",
              "$ref": "BooksAnnotationsRange"
            }
          },
          "type": "object",
          "description": "Selection ranges sent from the client."
        },
        "layerId": {
          "type": "string",
          "description": "The layer this annotation is for."
        },
        "selectedText": {
          "description": "Excerpt from the volume.",
          "type": "string"
        },
        "selfLink": {
          "type": "string",
          "description": "URL to this resource."
        },
        "currentVersionRanges": {
          "type": "object",
          "properties": {
            "gbTextRange": {
              "$ref": "BooksAnnotationsRange",
              "description": "Range in GB text format for this annotation for version above."
            },
            "imageCfiRange": {
              "$ref": "BooksAnnotationsRange",
              "description": "Range in image CFI format for this annotation for version above."
            },
            "gbImageRange": {
              "$ref": "BooksAnnotationsRange",
              "description": "Range in GB image format for this annotation for version above."
            },
            "cfiRange": {
              "$ref": "BooksAnnotationsRange",
              "description": "Range in CFI format for this annotation for version above."
            },
            "contentVersion": {
              "type": "string",
              "description": "Content version applicable to ranges below."
            }
          },
          "description": "Selection ranges for the most recent content version."
        },
        "created": {
          "description": "Timestamp for the created time of this annotation.",
          "type": "string"
        },
        "updated": {
          "type": "string",
          "description": "Timestamp for the last time this annotation was modified."
        },
        "volumeId": {
          "type": "string",
          "description": "The volume that this annotation belongs to."
        },
        "layerSummary": {
          "properties": {
            "allowedCharacterCount": {
              "format": "int32",
              "type": "integer",
              "description": "Maximum allowed characters on this layer, especially for the \"copy\" layer."
            },
            "remainingCharacterCount": {
              "format": "int32",
              "type": "integer",
              "description": "Remaining allowed characters on this layer, especially for the \"copy\" layer."
            },
            "limitType": {
              "description": "Type of limitation on this layer. \"limited\" or \"unlimited\" for the \"copy\" layer.",
              "type": "string"
            }
          },
          "type": "object"
        },
        "deleted": {
          "type": "boolean",
          "description": "Indicates that this annotation is deleted."
        },
        "highlightStyle": {
          "description": "The highlight style for this annotation.",
          "type": "string"
        },
        "id": {
          "type": "string",
          "description": "Id of this annotation, in the form of a GUID."
        },
        "pageIds": {
          "description": "Pages that this annotation spans.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "kind": {
          "type": "string",
          "description": "Resource type."
        }
      },
      "type": "object",
      "id": "Annotation"
    },
    "BooksAnnotationsRange": {
      "type": "object",
      "id": "BooksAnnotationsRange",
      "properties": {
        "startOffset": {
          "description": "The offset from the starting position.",
          "type": "string"
        },
        "endOffset": {
          "type": "string",
          "description": "The offset from the ending position."
        },
        "startPosition": {
          "description": "The starting position for the range.",
          "type": "string"
        },
        "endPosition": {
          "type": "string",
          "description": "The ending position for the range."
        }
      }
    },
    "Annotationsdata": {
      "properties": {
        "kind": {
          "description": "Resource type",
          "type": "string"
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token to pass in for pagination for the next page. This will not be present if this request does not have more results."
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "GeoAnnotationdata"
          },
          "description": "A list of Annotation Data."
        },
        "totalItems": {
          "description": "The total number of volume annotations found.",
          "type": "integer",
          "format": "int32"
        }
      },
      "id": "Annotationsdata",
      "type": "object"
    },
    "BooksCloudloadingResource": {
      "id": "BooksCloudloadingResource",
      "type": "object",
      "properties": {
        "processingState": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "author": {
          "type": "string"
        },
        "volumeId": {
          "type": "string"
        }
      }
    },
    "Volumeannotations": {
      "type": "object",
      "id": "Volumeannotations",
      "properties": {
        "totalItems": {
          "description": "The total number of volume annotations found.",
          "type": "integer",
          "format": "int32"
        },
        "kind": {
          "description": "Resource type",
          "type": "string"
        },
        "items": {
          "items": {
            "$ref": "Volumeannotation"
          },
          "type": "array",
          "description": "A list of volume annotations."
        },
        "nextPageToken": {
          "description": "Token to pass in for pagination for the next page. This will not be present if this request does not have more results.",
          "type": "string"
        },
        "version": {
          "type": "string",
          "description": "The version string for all of the volume annotations in this layer (not just the ones in this response). Note: the version string doesn't apply to the annotation data, just the information in this response (e.g. the location of annotations in the book)."
        }
      }
    },
    "Layersummary": {
      "properties": {
        "selfLink": {
          "description": "URL to this resource.",
          "type": "string"
        },
        "volumeId": {
          "type": "string",
          "description": "The volume id this resource is for."
        },
        "dataCount": {
          "description": "The number of data items for this layer.",
          "type": "integer",
          "format": "int32"
        },
        "annotationTypes": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "The list of annotation types contained for this layer."
        },
        "layerId": {
          "type": "string",
          "description": "The layer id for this summary."
        },
        "updated": {
          "type": "string",
          "description": "Timestamp for the last time an item in this layer was updated. (RFC 3339 UTC date-time format)."
        },
        "volumeAnnotationsVersion": {
          "description": "The current version of this layer's volume annotations. Note that this version applies only to the data in the books.layers.volumeAnnotations.* responses. The actual annotation data is versioned separately.",
          "type": "string"
        },
        "annotationsDataLink": {
          "type": "string",
          "description": "Link to get data for this annotation."
        },
        "kind": {
          "type": "string",
          "description": "Resource Type"
        },
        "annotationsLink": {
          "type": "string",
          "description": "The link to get the annotations for this layer."
        },
        "contentVersion": {
          "description": "The content version this resource is for.",
          "type": "string"
        },
        "annotationCount": {
          "type": "integer",
          "format": "int32",
          "description": "The number of annotations for this layer."
        },
        "id": {
          "type": "string",
          "description": "Unique id of this layer summary."
        }
      },
      "id": "Layersummary",
      "type": "object"
    },
    "Series": {
      "properties": {
        "kind": {
          "description": "Resource type.",
          "type": "string"
        },
        "series": {
          "type": "array",
          "items": {
            "properties": {
              "eligibleForSubscription": {
                "type": "boolean"
              },
              "isComplete": {
                "type": "boolean"
              },
              "seriesId": {
                "type": "string"
              },
              "imageUrl": {
                "type": "string"
              },
              "subscriptionId": {
                "type": "string"
              },
              "bannerImageUrl": {
                "type": "string"
              },
              "seriesSubscriptionReleaseInfo": {
                "properties": {
                  "seriesSubscriptionType": {
                    "type": "string"
                  },
                  "cancelTime": {
                    "type": "string"
                  },
                  "currentReleaseInfo": {
                    "type": "object",
                    "properties": {
                      "releaseNumber": {
                        "type": "string"
                      },
                      "currencyCode": {
                        "type": "string"
                      },
                      "amountInMicros": {
                        "type": "number",
                        "format": "double"
                      },
                      "releaseTime": {
                        "type": "string"
                      }
                    }
                  },
                  "nextReleaseInfo": {
                    "type": "object",
                    "properties": {
                      "releaseNumber": {
                        "type": "string"
                      },
                      "amountInMicros": {
                        "format": "double",
                        "type": "number"
                      },
                      "releaseTime": {
                        "type": "string"
                      },
                      "currencyCode": {
                        "type": "string"
                      }
                    }
                  }
                },
                "type": "object"
              },
              "title": {
                "type": "string"
              },
              "seriesFormatType": {
                "type": "string"
              },
              "seriesType": {
                "type": "string"
              }
            },
            "type": "object"
          }
        }
      },
      "id": "Series",
      "type": "object"
    },
    "Metadata": {
      "properties": {
        "kind": {
          "description": "Resource type.",
          "type": "string"
        },
        "items": {
          "type": "array",
          "description": "A list of offline dictionary metadata.",
          "items": {
            "type": "object",
            "properties": {
              "size": {
                "format": "int64",
                "type": "string"
              },
              "version": {
                "format": "int64",
                "type": "string"
              },
              "encrypted_key": {
                "type": "string"
              },
              "language": {
                "type": "string"
              },
              "download_url": {
                "type": "string"
              }
            }
          }
        }
      },
      "id": "Metadata",
      "type": "object"
    },
    "Discoveryclusters": {
      "properties": {
        "kind": {
          "description": "Resorce type.",
          "type": "string"
        },
        "clusters": {
          "type": "array",
          "items": {
            "properties": {
              "uid": {
                "type": "string"
              },
              "subTitle": {
                "type": "string"
              },
              "totalVolumes": {
                "format": "int32",
                "type": "integer"
              },
              "volumes": {
                "items": {
                  "$ref": "Volume"
                },
                "type": "array"
              },
              "banner_with_content_container": {
                "properties": {
                  "moreButtonUrl": {
                    "type": "string"
                  },
                  "imageUrl": {
                    "type": "string"
                  },
                  "maskColorArgb": {
                    "type": "string"
                  },
                  "moreButtonText": {
                    "type": "string"
                  },
                  "fillColorArgb": {
                    "type": "string"
                  },
                  "textColorArgb": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "title": {
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "totalClusters": {
          "type": "integer",
          "format": "int32"
        }
      },
      "type": "object",
      "id": "Discoveryclusters"
    },
    "ConcurrentAccessRestriction": {
      "properties": {
        "timeWindowSeconds": {
          "description": "Time in seconds for license auto-expiration.",
          "type": "integer",
          "format": "int32"
        },
        "restricted": {
          "type": "boolean",
          "description": "Whether this volume has any concurrent access restrictions."
        },
        "maxConcurrentDevices": {
          "format": "int32",
          "type": "integer",
          "description": "The maximum number of concurrent access licenses for this volume."
        },
        "message": {
          "type": "string",
          "description": "Error/warning message."
        },
        "source": {
          "description": "Client app identifier for verification. Download access and client-validation only.",
          "type": "string"
        },
        "signature": {
          "type": "string",
          "description": "Response signature."
        },
        "nonce": {
          "description": "Client nonce for verification. Download access and client-validation only.",
          "type": "string"
        },
        "deviceAllowed": {
          "description": "Whether access is granted for this (user, device, volume).",
          "type": "boolean"
        },
        "kind": {
          "description": "Resource type.",
          "type": "string"
        },
        "reasonCode": {
          "type": "string",
          "description": "Error/warning reason code."
        },
        "volumeId": {
          "description": "Identifies the volume for which this entry applies.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "ConcurrentAccessRestriction"
    }
  },
  "description": "The Google Books API allows clients to access the Google Books repository.",
  "protocol": "rest",
  "discoveryVersion": "v1",
  "parameters": {
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "location": "query",
      "type": "string"
    },
    "prettyPrint": {
      "description": "Returns response with indentations and line breaks.",
      "location": "query",
      "type": "boolean",
      "default": "true"
    },
    "callback": {
      "location": "query",
      "type": "string",
      "description": "JSONP"
    },
    "key": {
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string"
    },
    "$.xgafv": {
      "description": "V1 error format.",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query",
      "enum": [
        "1",
        "2"
      ],
      "type": "string"
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query",
      "type": "string"
    },
    "fields": {
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string"
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query",
      "type": "string"
    },
    "access_token": {
      "description": "OAuth access token.",
      "location": "query",
      "type": "string"
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "alt": {
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "default": "json",
      "location": "query",
      "description": "Data format for response.",
      "type": "string",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ]
    }
  },
  "revision": "20230221",
  "fullyEncodeReservedExpansion": true,
  "mtlsRootUrl": "https://books.mtls.googleapis.com/",
  "version_module": true,
  "batchPath": "batch",
  "resources": {
    "onboarding": {
      "methods": {
        "listCategoryVolumes": {
          "httpMethod": "GET",
          "parameters": {
            "locale": {
              "description": "ISO-639-1 language and ISO-3166-1 country code. Default is en-US if unset.",
              "type": "string",
              "location": "query"
            },
            "pageSize": {
              "format": "uint32",
              "location": "query",
              "description": "Number of maximum results per page to be included in the response.",
              "type": "integer"
            },
            "maxAllowedMaturityRating": {
              "description": "The maximum allowed maturity rating of returned volumes. Books with a higher maturity rating are filtered out.",
              "enumDescriptions": [
                "",
                "Show books which are rated mature or lower.",
                "Show books which are rated not mature."
              ],
              "enum": [
                "MAX_ALLOWED_MATURITY_RATING_UNDEFINED",
                "MATURE",
                "not-mature"
              ],
              "location": "query",
              "type": "string"
            },
            "categoryId": {
              "type": "string",
              "repeated": true,
              "location": "query",
              "description": "List of category ids requested."
            },
            "pageToken": {
              "type": "string",
              "description": "The value of the nextToken from the previous page.",
              "location": "query"
            }
          },
          "flatPath": "books/v1/onboarding/listCategoryVolumes",
          "id": "books.onboarding.listCategoryVolumes",
          "path": "books/v1/onboarding/listCategoryVolumes",
          "description": "List available volumes under categories for onboarding experience.",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "response": {
            "$ref": "Volume2"
          },
          "parameterOrder": []
        },
        "listCategories": {
          "parameterOrder": [],
          "httpMethod": "GET",
          "response": {
            "$ref": "Category"
          },
          "id": "books.onboarding.listCategories",
          "path": "books/v1/onboarding/listCategories",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "flatPath": "books/v1/onboarding/listCategories",
          "parameters": {
            "locale": {
              "location": "query",
              "type": "string",
              "description": "ISO-639-1 language and ISO-3166-1 country code. Default is en-US if unset."
            }
          },
          "description": "List categories for onboarding experience."
        }
      }
    },
    "layers": {
      "resources": {
        "annotationData": {
          "methods": {
            "list": {
              "httpMethod": "GET",
              "description": "Gets the annotation data for a volume and layer.",
              "path": "books/v1/volumes/{volumeId}/layers/{layerId}/data",
              "parameterOrder": [
                "volumeId",
                "layerId",
                "contentVersion"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "parameters": {
                "volumeId": {
                  "type": "string",
                  "required": true,
                  "location": "path",
                  "description": "The volume to retrieve annotation data for."
                },
                "pageToken": {
                  "description": "The value of the nextToken from the previous page.",
                  "type": "string",
                  "location": "query"
                },
                "contentVersion": {
                  "location": "query",
                  "type": "string",
                  "description": "The content version for the requested volume.",
                  "required": true
                },
                "maxResults": {
                  "type": "integer",
                  "location": "query",
                  "minimum": "0",
                  "maximum": "200",
                  "format": "uint32",
                  "description": "Maximum number of results to return"
                },
                "h": {
                  "location": "query",
                  "format": "int32",
                  "description": "The requested pixel height for any images. If height is provided width must also be provided.",
                  "type": "integer"
                },
                "updatedMax": {
                  "type": "string",
                  "location": "query",
                  "description": "RFC 3339 timestamp to restrict to items updated prior to this timestamp (exclusive)."
                },
                "updatedMin": {
                  "type": "string",
                  "description": "RFC 3339 timestamp to restrict to items updated since this timestamp (inclusive).",
                  "location": "query"
                },
                "scale": {
                  "format": "int32",
                  "description": "The requested scale for the image.",
                  "type": "integer",
                  "location": "query",
                  "minimum": "0"
                },
                "w": {
                  "location": "query",
                  "type": "integer",
                  "description": "The requested pixel width for any images. If width is provided height must also be provided.",
                  "format": "int32"
                },
                "layerId": {
                  "description": "The ID for the layer to get the annotation data.",
                  "type": "string",
                  "required": true,
                  "location": "path"
                },
                "source": {
                  "type": "string",
                  "description": "String to identify the originator of this request.",
                  "location": "query"
                },
                "annotationDataId": {
                  "repeated": true,
                  "description": "The list of Annotation Data Ids to retrieve. Pagination is ignored if this is set.",
                  "location": "query",
                  "type": "string"
                },
                "locale": {
                  "location": "query",
                  "description": "The locale information for the data. ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'.",
                  "type": "string"
                }
              },
              "flatPath": "books/v1/volumes/{volumeId}/layers/{layerId}/data",
              "response": {
                "$ref": "Annotationsdata"
              },
              "id": "books.layers.annotationData.list"
            },
            "get": {
              "flatPath": "books/v1/volumes/{volumeId}/layers/{layerId}/data/{annotationDataId}",
              "description": "Gets the annotation data.",
              "parameters": {
                "source": {
                  "location": "query",
                  "type": "string",
                  "description": "String to identify the originator of this request."
                },
                "locale": {
                  "description": "The locale information for the data. ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'.",
                  "location": "query",
                  "type": "string"
                },
                "scale": {
                  "description": "The requested scale for the image.",
                  "location": "query",
                  "type": "integer",
                  "minimum": "0",
                  "format": "int32"
                },
                "volumeId": {
                  "type": "string",
                  "required": true,
                  "description": "The volume to retrieve annotations for.",
                  "location": "path"
                },
                "allowWebDefinitions": {
                  "description": "For the dictionary layer. Whether or not to allow web definitions.",
                  "location": "query",
                  "type": "boolean"
                },
                "w": {
                  "description": "The requested pixel width for any images. If width is provided height must also be provided.",
                  "location": "query",
                  "type": "integer",
                  "format": "int32"
                },
                "annotationDataId": {
                  "location": "path",
                  "type": "string",
                  "required": true,
                  "description": "The ID of the annotation data to retrieve."
                },
                "contentVersion": {
                  "location": "query",
                  "description": "The content version for the volume you are trying to retrieve.",
                  "type": "string",
                  "required": true
                },
                "h": {
                  "location": "query",
                  "type": "integer",
                  "description": "The requested pixel height for any images. If height is provided width must also be provided.",
                  "format": "int32"
                },
                "layerId": {
                  "type": "string",
                  "description": "The ID for the layer to get the annotations.",
                  "required": true,
                  "location": "path"
                }
              },
              "parameterOrder": [
                "volumeId",
                "layerId",
                "annotationDataId",
                "contentVersion"
              ],
              "id": "books.layers.annotationData.get",
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "path": "books/v1/volumes/{volumeId}/layers/{layerId}/data/{annotationDataId}",
              "response": {
                "$ref": "DictionaryAnnotationdata"
              }
            }
          }
        },
        "volumeAnnotations": {
          "methods": {
            "list": {
              "id": "books.layers.volumeAnnotations.list",
              "response": {
                "$ref": "Volumeannotations"
              },
              "httpMethod": "GET",
              "flatPath": "books/v1/volumes/{volumeId}/layers/{layerId}",
              "description": "Gets the volume annotations for a volume and layer.",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "path": "books/v1/volumes/{volumeId}/layers/{layerId}",
              "parameters": {
                "startOffset": {
                  "location": "query",
                  "description": "The start offset to start retrieving data from.",
                  "type": "string"
                },
                "volumeId": {
                  "required": true,
                  "location": "path",
                  "type": "string",
                  "description": "The volume to retrieve annotations for."
                },
                "endPosition": {
                  "location": "query",
                  "type": "string",
                  "description": "The end position to end retrieving data from."
                },
                "volumeAnnotationsVersion": {
                  "location": "query",
                  "type": "string",
                  "description": "The version of the volume annotations that you are requesting."
                },
                "updatedMax": {
                  "type": "string",
                  "description": "RFC 3339 timestamp to restrict to items updated prior to this timestamp (exclusive).",
                  "location": "query"
                },
                "pageToken": {
                  "type": "string",
                  "description": "The value of the nextToken from the previous page.",
                  "location": "query"
                },
                "contentVersion": {
                  "location": "query",
                  "required": true,
                  "type": "string",
                  "description": "The content version for the requested volume."
                },
                "updatedMin": {
                  "location": "query",
                  "type": "string",
                  "description": "RFC 3339 timestamp to restrict to items updated since this timestamp (inclusive)."
                },
                "endOffset": {
                  "type": "string",
                  "location": "query",
                  "description": "The end offset to end retrieving data from."
                },
                "startPosition": {
                  "location": "query",
                  "description": "The start position to start retrieving data from.",
                  "type": "string"
                },
                "maxResults": {
                  "type": "integer",
                  "location": "query",
                  "minimum": "0",
                  "maximum": "200",
                  "format": "uint32",
                  "description": "Maximum number of results to return"
                },
                "source": {
                  "location": "query",
                  "type": "string",
                  "description": "String to identify the originator of this request."
                },
                "locale": {
                  "type": "string",
                  "location": "query",
                  "description": "The locale information for the data. ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'."
                },
                "layerId": {
                  "required": true,
                  "type": "string",
                  "description": "The ID for the layer to get the annotations.",
                  "location": "path"
                },
                "showDeleted": {
                  "type": "boolean",
                  "description": "Set to true to return deleted annotations. updatedMin must be in the request to use this. Defaults to false.",
                  "location": "query"
                }
              },
              "parameterOrder": [
                "volumeId",
                "layerId",
                "contentVersion"
              ]
            },
            "get": {
              "flatPath": "books/v1/volumes/{volumeId}/layers/{layerId}/annotations/{annotationId}",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "id": "books.layers.volumeAnnotations.get",
              "parameterOrder": [
                "volumeId",
                "layerId",
                "annotationId"
              ],
              "parameters": {
                "layerId": {
                  "location": "path",
                  "description": "The ID for the layer to get the annotations.",
                  "type": "string",
                  "required": true
                },
                "locale": {
                  "description": "The locale information for the data. ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'.",
                  "location": "query",
                  "type": "string"
                },
                "annotationId": {
                  "description": "The ID of the volume annotation to retrieve.",
                  "required": true,
                  "type": "string",
                  "location": "path"
                },
                "volumeId": {
                  "location": "path",
                  "type": "string",
                  "required": true,
                  "description": "The volume to retrieve annotations for."
                },
                "source": {
                  "description": "String to identify the originator of this request.",
                  "location": "query",
                  "type": "string"
                }
              },
              "httpMethod": "GET",
              "response": {
                "$ref": "Volumeannotation"
              },
              "path": "books/v1/volumes/{volumeId}/layers/{layerId}/annotations/{annotationId}",
              "description": "Gets the volume annotation."
            }
          }
        }
      },
      "methods": {
        "get": {
          "response": {
            "$ref": "Layersummary"
          },
          "description": "Gets the layer summary for a volume.",
          "path": "books/v1/volumes/{volumeId}/layersummary/{summaryId}",
          "httpMethod": "GET",
          "parameterOrder": [
            "volumeId",
            "summaryId"
          ],
          "flatPath": "books/v1/volumes/{volumeId}/layersummary/{summaryId}",
          "parameters": {
            "contentVersion": {
              "type": "string",
              "description": "The content version for the requested volume.",
              "location": "query"
            },
            "summaryId": {
              "description": "The ID for the layer to get the summary for.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "volumeId": {
              "location": "path",
              "description": "The volume to retrieve layers for.",
              "type": "string",
              "required": true
            },
            "source": {
              "description": "String to identify the originator of this request.",
              "type": "string",
              "location": "query"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "id": "books.layers.get"
        },
        "list": {
          "httpMethod": "GET",
          "parameterOrder": [
            "volumeId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "id": "books.layers.list",
          "path": "books/v1/volumes/{volumeId}/layersummary",
          "response": {
            "$ref": "Layersummaries"
          },
          "flatPath": "books/v1/volumes/{volumeId}/layersummary",
          "parameters": {
            "maxResults": {
              "format": "uint32",
              "description": "Maximum number of results to return",
              "location": "query",
              "type": "integer",
              "minimum": "0",
              "maximum": "200"
            },
            "source": {
              "description": "String to identify the originator of this request.",
              "type": "string",
              "location": "query"
            },
            "contentVersion": {
              "location": "query",
              "description": "The content version for the requested volume.",
              "type": "string"
            },
            "pageToken": {
              "location": "query",
              "description": "The value of the nextToken from the previous page.",
              "type": "string"
            },
            "volumeId": {
              "location": "path",
              "description": "The volume to retrieve layers for.",
              "required": true,
              "type": "string"
            }
          },
          "description": "List the layer summaries for a volume."
        }
      }
    },
    "bookshelves": {
      "resources": {
        "volumes": {
          "methods": {
            "list": {
              "response": {
                "$ref": "Volumes"
              },
              "httpMethod": "GET",
              "description": "Retrieves volumes in a specific bookshelf for the specified user.",
              "flatPath": "books/v1/users/{userId}/bookshelves/{shelf}/volumes",
              "id": "books.bookshelves.volumes.list",
              "parameterOrder": [
                "userId",
                "shelf"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "path": "books/v1/users/{userId}/bookshelves/{shelf}/volumes",
              "parameters": {
                "startIndex": {
                  "type": "integer",
                  "description": "Index of the first element to return (starts at 0)",
                  "format": "uint32",
                  "location": "query",
                  "minimum": "0"
                },
                "userId": {
                  "type": "string",
                  "description": "ID of user for whom to retrieve bookshelf volumes.",
                  "location": "path",
                  "required": true
                },
                "source": {
                  "type": "string",
                  "location": "query",
                  "description": "String to identify the originator of this request."
                },
                "shelf": {
                  "description": "ID of bookshelf to retrieve volumes.",
                  "type": "string",
                  "location": "path",
                  "required": true
                },
                "showPreorders": {
                  "type": "boolean",
                  "location": "query",
                  "description": "Set to true to show pre-ordered books. Defaults to false."
                },
                "maxResults": {
                  "minimum": "0",
                  "location": "query",
                  "description": "Maximum number of results to return",
                  "format": "uint32",
                  "type": "integer"
                }
              }
            }
          }
        }
      },
      "methods": {
        "list": {
          "flatPath": "books/v1/users/{userId}/bookshelves",
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "id": "books.bookshelves.list",
          "parameters": {
            "userId": {
              "required": true,
              "type": "string",
              "location": "path",
              "description": "ID of user for whom to retrieve bookshelves."
            },
            "source": {
              "type": "string",
              "location": "query",
              "description": "String to identify the originator of this request."
            }
          },
          "parameterOrder": [
            "userId"
          ],
          "path": "books/v1/users/{userId}/bookshelves",
          "description": "Retrieves a list of public bookshelves for the specified user.",
          "response": {
            "$ref": "Bookshelves"
          }
        },
        "get": {
          "parameterOrder": [
            "userId",
            "shelf"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "flatPath": "books/v1/users/{userId}/bookshelves/{shelf}",
          "description": "Retrieves metadata for a specific bookshelf for the specified user.",
          "id": "books.bookshelves.get",
          "parameters": {
            "userId": {
              "description": "ID of user for whom to retrieve bookshelves.",
              "location": "path",
              "type": "string",
              "required": true
            },
            "source": {
              "location": "query",
              "type": "string",
              "description": "String to identify the originator of this request."
            },
            "shelf": {
              "description": "ID of bookshelf to retrieve.",
              "required": true,
              "type": "string",
              "location": "path"
            }
          },
          "httpMethod": "GET",
          "response": {
            "$ref": "Bookshelf"
          },
          "path": "books/v1/users/{userId}/bookshelves/{shelf}"
        }
      }
    },
    "promooffer": {
      "methods": {
        "dismiss": {
          "description": "Marks the promo offer as dismissed.",
          "parameters": {
            "serial": {
              "location": "query",
              "type": "string",
              "description": "device serial"
            },
            "device": {
              "description": "device device",
              "location": "query",
              "type": "string"
            },
            "manufacturer": {
              "type": "string",
              "description": "device manufacturer",
              "location": "query"
            },
            "offerId": {
              "description": "Offer to dimiss",
              "location": "query",
              "type": "string"
            },
            "model": {
              "location": "query",
              "description": "device model",
              "type": "string"
            },
            "product": {
              "description": "device product",
              "type": "string",
              "location": "query"
            },
            "androidId": {
              "description": "device android_id",
              "location": "query",
              "type": "string"
            }
          },
          "response": {
            "$ref": "Empty"
          },
          "path": "books/v1/promooffer/dismiss",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "id": "books.promooffer.dismiss",
          "flatPath": "books/v1/promooffer/dismiss",
          "httpMethod": "POST",
          "parameterOrder": []
        },
        "get": {
          "description": "Returns a list of promo offers available to the user",
          "path": "books/v1/promooffer/get",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "parameterOrder": [],
          "flatPath": "books/v1/promooffer/get",
          "parameters": {
            "model": {
              "description": "device model",
              "location": "query",
              "type": "string"
            },
            "manufacturer": {
              "type": "string",
              "description": "device manufacturer",
              "location": "query"
            },
            "serial": {
              "type": "string",
              "description": "device serial",
              "location": "query"
            },
            "device": {
              "location": "query",
              "description": "device device",
              "type": "string"
            },
            "product": {
              "description": "device product",
              "type": "string",
              "location": "query"
            },
            "androidId": {
              "location": "query",
              "type": "string",
              "description": "device android_id"
            }
          },
          "response": {
            "$ref": "Offers"
          },
          "id": "books.promooffer.get",
          "httpMethod": "GET"
        },
        "accept": {
          "parameters": {
            "serial": {
              "location": "query",
              "description": "device serial",
              "type": "string"
            },
            "manufacturer": {
              "type": "string",
              "location": "query",
              "description": "device manufacturer"
            },
            "product": {
              "location": "query",
              "type": "string",
              "description": "device product"
            },
            "volumeId": {
              "location": "query",
              "description": "Volume id to exercise the offer",
              "type": "string"
            },
            "device": {
              "description": "device device",
              "type": "string",
              "location": "query"
            },
            "androidId": {
              "location": "query",
              "description": "device android_id",
              "type": "string"
            },
            "offerId": {
              "type": "string",
              "location": "query"
            },
            "model": {
              "description": "device model",
              "type": "string",
              "location": "query"
            }
          },
          "httpMethod": "POST",
          "parameterOrder": [],
          "flatPath": "books/v1/promooffer/accept",
          "id": "books.promooffer.accept",
          "path": "books/v1/promooffer/accept",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "description": "Accepts the promo offer.",
          "response": {
            "$ref": "Empty"
          }
        }
      }
    },
    "series": {
      "methods": {
        "get": {
          "id": "books.series.get",
          "parameterOrder": [
            "series_id"
          ],
          "description": "Returns Series metadata for the given series ids.",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "flatPath": "books/v1/series/get",
          "parameters": {
            "series_id": {
              "type": "string",
              "description": "String that identifies the series",
              "repeated": true,
              "location": "query",
              "required": true
            }
          },
          "response": {
            "$ref": "Series"
          },
          "path": "books/v1/series/get",
          "httpMethod": "GET"
        }
      },
      "resources": {
        "membership": {
          "methods": {
            "get": {
              "response": {
                "$ref": "Seriesmembership"
              },
              "parameters": {
                "page_token": {
                  "location": "query",
                  "description": "The value of the nextToken from the previous page.",
                  "type": "string"
                },
                "page_size": {
                  "type": "integer",
                  "location": "query",
                  "format": "uint32",
                  "description": "Number of maximum results per page to be included in the response."
                },
                "series_id": {
                  "required": true,
                  "type": "string",
                  "location": "query",
                  "description": "String that identifies the series"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "flatPath": "books/v1/series/membership/get",
              "httpMethod": "GET",
              "parameterOrder": [
                "series_id"
              ],
              "id": "books.series.membership.get",
              "path": "books/v1/series/membership/get",
              "description": "Returns Series membership data given the series id."
            }
          }
        }
      }
    },
    "cloudloading": {
      "methods": {
        "addBook": {
          "path": "books/v1/cloudloading/addBook",
          "parameters": {
            "drive_document_id": {
              "description": "A drive document id. The upload_client_token must not be set.",
              "location": "query",
              "type": "string"
            },
            "upload_client_token": {
              "description": "Scotty upload token.",
              "location": "query",
              "type": "string"
            },
            "name": {
              "type": "string",
              "description": "The document name. It can be set only if the drive_document_id is set.",
              "location": "query"
            },
            "mime_type": {
              "type": "string",
              "description": "The document MIME type. It can be set only if the drive_document_id is set.",
              "location": "query"
            }
          },
          "description": "Add a user-upload volume and triggers processing.",
          "parameterOrder": [],
          "response": {
            "$ref": "BooksCloudloadingResource"
          },
          "id": "books.cloudloading.addBook",
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "flatPath": "books/v1/cloudloading/addBook"
        },
        "updateBook": {
          "description": "Updates a user-upload volume.",
          "httpMethod": "POST",
          "response": {
            "$ref": "BooksCloudloadingResource"
          },
          "request": {
            "$ref": "BooksCloudloadingResource"
          },
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "id": "books.cloudloading.updateBook",
          "path": "books/v1/cloudloading/updateBook",
          "parameters": {},
          "parameterOrder": [],
          "flatPath": "books/v1/cloudloading/updateBook"
        },
        "deleteBook": {
          "path": "books/v1/cloudloading/deleteBook",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "response": {
            "$ref": "Empty"
          },
          "flatPath": "books/v1/cloudloading/deleteBook",
          "parameterOrder": [
            "volumeId"
          ],
          "description": "Remove the book and its contents",
          "id": "books.cloudloading.deleteBook",
          "parameters": {
            "volumeId": {
              "required": true,
              "location": "query",
              "description": "The id of the book to be removed.",
              "type": "string"
            }
          },
          "httpMethod": "POST"
        }
      }
    },
    "familysharing": {
      "methods": {
        "unshare": {
          "description": "Initiates revoking content that has already been shared with the user's family. Empty response indicates success.",
          "flatPath": "books/v1/familysharing/unshare",
          "path": "books/v1/familysharing/unshare",
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "response": {
            "$ref": "Empty"
          },
          "parameters": {
            "source": {
              "type": "string",
              "location": "query",
              "description": "String to identify the originator of this request."
            },
            "docId": {
              "type": "string",
              "location": "query",
              "description": "The docid to unshare."
            },
            "volumeId": {
              "description": "The volume to unshare.",
              "location": "query",
              "type": "string"
            }
          },
          "id": "books.familysharing.unshare",
          "parameterOrder": []
        },
        "share": {
          "id": "books.familysharing.share",
          "parameterOrder": [],
          "path": "books/v1/familysharing/share",
          "parameters": {
            "source": {
              "type": "string",
              "description": "String to identify the originator of this request.",
              "location": "query"
            },
            "docId": {
              "description": "The docid to share.",
              "location": "query",
              "type": "string"
            },
            "volumeId": {
              "type": "string",
              "location": "query",
              "description": "The volume to share."
            }
          },
          "httpMethod": "POST",
          "response": {
            "$ref": "Empty"
          },
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "description": "Initiates sharing of the content with the user's family. Empty response indicates success.",
          "flatPath": "books/v1/familysharing/share"
        },
        "getFamilyInfo": {
          "parameters": {
            "source": {
              "description": "String to identify the originator of this request.",
              "type": "string",
              "location": "query"
            }
          },
          "description": "Gets information regarding the family that the user is part of.",
          "response": {
            "$ref": "FamilyInfo"
          },
          "httpMethod": "GET",
          "parameterOrder": [],
          "path": "books/v1/familysharing/getFamilyInfo",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "id": "books.familysharing.getFamilyInfo",
          "flatPath": "books/v1/familysharing/getFamilyInfo"
        }
      }
    },
    "dictionary": {
      "methods": {
        "listOfflineMetadata": {
          "response": {
            "$ref": "Metadata"
          },
          "description": "Returns a list of offline dictionary metadata available",
          "httpMethod": "GET",
          "id": "books.dictionary.listOfflineMetadata",
          "parameterOrder": [
            "cpksver"
          ],
          "flatPath": "books/v1/dictionary/listOfflineMetadata",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "path": "books/v1/dictionary/listOfflineMetadata",
          "parameters": {
            "cpksver": {
              "required": true,
              "type": "string",
              "description": "The device/version ID from which to request the data.",
              "location": "query"
            }
          }
        }
      }
    },
    "notification": {
      "methods": {
        "get": {
          "flatPath": "books/v1/notification/get",
          "description": "Returns notification details for a given notification id.",
          "id": "books.notification.get",
          "parameters": {
            "notification_id": {
              "location": "query",
              "description": "String to identify the notification.",
              "required": true,
              "type": "string"
            },
            "source": {
              "type": "string",
              "location": "query",
              "description": "String to identify the originator of this request."
            },
            "locale": {
              "description": "ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'. Used for generating notification title and body.",
              "type": "string",
              "location": "query"
            }
          },
          "parameterOrder": [
            "notification_id"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "httpMethod": "GET",
          "response": {
            "$ref": "Notification"
          },
          "path": "books/v1/notification/get"
        }
      }
    },
    "volumes": {
      "methods": {
        "list": {
          "id": "books.volumes.list",
          "parameters": {
            "download": {
              "type": "string",
              "enumDescriptions": [
                "",
                "All volumes with epub."
              ],
              "location": "query",
              "enum": [
                "DOWNLOAD_UNDEFINED",
                "EPUB"
              ],
              "description": "Restrict to volumes by download availability."
            },
            "startIndex": {
              "description": "Index of the first result to return (starts at 0)",
              "location": "query",
              "format": "uint32",
              "type": "integer",
              "minimum": "0"
            },
            "partner": {
              "type": "string",
              "location": "query",
              "description": "Restrict and brand results for partner ID."
            },
            "filter": {
              "enum": [
                "FILTER_UNDEFINED",
                "ebooks",
                "free-ebooks",
                "full",
                "paid-ebooks",
                "partial"
              ],
              "description": "Filter search results.",
              "location": "query",
              "type": "string",
              "enumDescriptions": [
                "",
                "All Google eBooks.",
                "Google eBook with full volume text viewability.",
                "Public can view entire volume text.",
                "Google eBook with a price.",
                "Public able to see parts of text."
              ]
            },
            "maxAllowedMaturityRating": {
              "location": "query",
              "description": "The maximum allowed maturity rating of returned recommendations. Books with a higher maturity rating are filtered out.",
              "type": "string",
              "enumDescriptions": [
                "",
                "Show books which are rated mature or lower.",
                "Show books which are rated not mature."
              ],
              "enum": [
                "MAX_ALLOWED_MATURITY_RATING_UNDEFINED",
                "MATURE",
                "not-mature"
              ]
            },
            "maxResults": {
              "maximum": "40",
              "description": "Maximum number of results to return.",
              "minimum": "0",
              "type": "integer",
              "location": "query",
              "format": "uint32"
            },
            "q": {
              "location": "query",
              "description": "Full-text search query string.",
              "type": "string",
              "required": true
            },
            "projection": {
              "enumDescriptions": [
                "",
                "Includes all volume data.",
                "Includes a subset of fields in volumeInfo and accessInfo."
              ],
              "location": "query",
              "description": "Restrict information returned to a set of selected fields.",
              "type": "string",
              "enum": [
                "PROJECTION_UNDEFINED",
                "FULL",
                "LITE"
              ]
            },
            "showPreorders": {
              "type": "boolean",
              "location": "query",
              "description": "Set to true to show books available for preorder. Defaults to false."
            },
            "printType": {
              "enum": [
                "PRINT_TYPE_UNDEFINED",
                "ALL",
                "BOOKS",
                "MAGAZINES"
              ],
              "type": "string",
              "enumDescriptions": [
                "",
                "All volume content types.",
                "Just books.",
                "Just magazines."
              ],
              "location": "query",
              "description": "Restrict to books or magazines."
            },
            "orderBy": {
              "description": "Sort search results.",
              "enum": [
                "ORDER_BY_UNDEFINED",
                "newest",
                "relevance"
              ],
              "type": "string",
              "location": "query",
              "enumDescriptions": [
                "",
                "Most recently published.",
                "Relevance to search terms."
              ]
            },
            "libraryRestrict": {
              "description": "Restrict search to this user's library.",
              "enum": [
                "LIBRARY_RESTRICT_UNDEFINED",
                "my-library",
                "no-restrict"
              ],
              "location": "query",
              "enumDescriptions": [
                "",
                "Restrict to the user's library, any shelf.",
                "Do not restrict based on user's library."
              ],
              "type": "string"
            },
            "source": {
              "description": "String to identify the originator of this request.",
              "location": "query",
              "type": "string"
            },
            "langRestrict": {
              "description": "Restrict results to books with this language code.",
              "location": "query",
              "type": "string"
            }
          },
          "path": "books/v1/volumes",
          "response": {
            "$ref": "Volumes"
          },
          "flatPath": "books/v1/volumes",
          "parameterOrder": [
            "q"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "description": "Performs a book search.",
          "httpMethod": "GET"
        },
        "get": {
          "parameterOrder": [
            "volumeId"
          ],
          "id": "books.volumes.get",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "response": {
            "$ref": "Volume"
          },
          "flatPath": "books/v1/volumes/{volumeId}",
          "parameters": {
            "user_library_consistent_read": {
              "type": "boolean",
              "location": "query"
            },
            "projection": {
              "description": "Restrict information returned to a set of selected fields.",
              "type": "string",
              "enum": [
                "PROJECTION_UNDEFINED",
                "FULL",
                "LITE"
              ],
              "enumDescriptions": [
                "",
                "Includes all volume data.",
                "Includes a subset of fields in volumeInfo and accessInfo."
              ],
              "location": "query"
            },
            "partner": {
              "description": "Brand results for partner ID.",
              "type": "string",
              "location": "query"
            },
            "source": {
              "location": "query",
              "type": "string",
              "description": "string to identify the originator of this request."
            },
            "volumeId": {
              "required": true,
              "description": "ID of volume to retrieve.",
              "type": "string",
              "location": "path"
            },
            "includeNonComicsSeries": {
              "type": "boolean",
              "description": "Set to true to include non-comics series. Defaults to false.",
              "location": "query"
            },
            "country": {
              "description": "ISO-3166-1 code to override the IP-based location.",
              "location": "query",
              "type": "string"
            }
          },
          "description": "Gets volume information for a single volume.",
          "httpMethod": "GET",
          "path": "books/v1/volumes/{volumeId}"
        }
      },
      "resources": {
        "associated": {
          "methods": {
            "list": {
              "response": {
                "$ref": "Volumes"
              },
              "httpMethod": "GET",
              "flatPath": "books/v1/volumes/{volumeId}/associated",
              "id": "books.volumes.associated.list",
              "parameters": {
                "locale": {
                  "location": "query",
                  "type": "string",
                  "description": "ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'. Used for generating recommendations."
                },
                "source": {
                  "type": "string",
                  "description": "String to identify the originator of this request.",
                  "location": "query"
                },
                "volumeId": {
                  "type": "string",
                  "location": "path",
                  "description": "ID of the source volume.",
                  "required": true
                },
                "maxAllowedMaturityRating": {
                  "location": "query",
                  "description": "The maximum allowed maturity rating of returned recommendations. Books with a higher maturity rating are filtered out.",
                  "enumDescriptions": [
                    "",
                    "Show books which are rated mature or lower.",
                    "Show books which are rated not mature."
                  ],
                  "type": "string",
                  "enum": [
                    "MAX_ALLOWED_MATURITY_RATING_UNDEFINED",
                    "MATURE",
                    "not-mature"
                  ]
                },
                "association": {
                  "enumDescriptions": [
                    "",
                    "Recommendations for display end-of-sample.",
                    "Recommendations for display end-of-volume.",
                    "Related volumes for Play Store."
                  ],
                  "type": "string",
                  "description": "Association type.",
                  "location": "query",
                  "enum": [
                    "ASSOCIATION_UNDEFINED",
                    "end-of-sample",
                    "end-of-volume",
                    "related-for-play"
                  ]
                }
              },
              "path": "books/v1/volumes/{volumeId}/associated",
              "description": "Return a list of associated books.",
              "parameterOrder": [
                "volumeId"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ]
            }
          }
        },
        "recommended": {
          "methods": {
            "rate": {
              "flatPath": "books/v1/volumes/recommended/rate",
              "parameterOrder": [
                "rating",
                "volumeId"
              ],
              "description": "Rate a recommended book for the current user.",
              "path": "books/v1/volumes/recommended/rate",
              "parameters": {
                "volumeId": {
                  "description": "ID of the source volume.",
                  "type": "string",
                  "required": true,
                  "location": "query"
                },
                "locale": {
                  "type": "string",
                  "location": "query",
                  "description": "ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'. Used for generating recommendations."
                },
                "rating": {
                  "required": true,
                  "type": "string",
                  "enum": [
                    "RATING_UNDEFINED",
                    "HAVE_IT",
                    "NOT_INTERESTED"
                  ],
                  "location": "query",
                  "enumDescriptions": [
                    "",
                    "Rating indicating a dismissal due to ownership.",
                    "Rating indicating a negative dismissal of a volume."
                  ],
                  "description": "Rating to be given to the volume."
                },
                "source": {
                  "type": "string",
                  "location": "query",
                  "description": "String to identify the originator of this request."
                }
              },
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "id": "books.volumes.recommended.rate",
              "response": {
                "$ref": "BooksVolumesRecommendedRateResponse"
              }
            },
            "list": {
              "parameters": {
                "maxAllowedMaturityRating": {
                  "enum": [
                    "MAX_ALLOWED_MATURITY_RATING_UNDEFINED",
                    "MATURE",
                    "not-mature"
                  ],
                  "type": "string",
                  "location": "query",
                  "description": "The maximum allowed maturity rating of returned recommendations. Books with a higher maturity rating are filtered out.",
                  "enumDescriptions": [
                    "",
                    "Show books which are rated mature or lower.",
                    "Show books which are rated not mature."
                  ]
                },
                "source": {
                  "type": "string",
                  "description": "String to identify the originator of this request.",
                  "location": "query"
                },
                "locale": {
                  "location": "query",
                  "description": "ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'. Used for generating recommendations.",
                  "type": "string"
                }
              },
              "parameterOrder": [],
              "description": "Return a list of recommended books for the current user.",
              "flatPath": "books/v1/volumes/recommended",
              "httpMethod": "GET",
              "path": "books/v1/volumes/recommended",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "id": "books.volumes.recommended.list",
              "response": {
                "$ref": "Volumes"
              }
            }
          }
        },
        "mybooks": {
          "methods": {
            "list": {
              "description": "Return a list of books in My Library.",
              "response": {
                "$ref": "Volumes"
              },
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "httpMethod": "GET",
              "parameters": {
                "processingState": {
                  "enumDescriptions": [
                    "",
                    "The volume processing hase failed.",
                    "The volume processing was completed.",
                    "The volume processing is not completed."
                  ],
                  "type": "string",
                  "description": "The processing state of the user uploaded volumes to be returned. Applicable only if the UPLOADED is specified in the acquireMethod.",
                  "repeated": true,
                  "location": "query",
                  "enum": [
                    "PROCESSING_STATE_UNDEFINED",
                    "COMPLETED_FAILED",
                    "COMPLETED_SUCCESS",
                    "RUNNING"
                  ]
                },
                "source": {
                  "description": "String to identify the originator of this request.",
                  "location": "query",
                  "type": "string"
                },
                "startIndex": {
                  "minimum": "0",
                  "description": "Index of the first result to return (starts at 0)",
                  "format": "uint32",
                  "location": "query",
                  "type": "integer"
                },
                "locale": {
                  "description": "ISO-639-1 language and ISO-3166-1 country code. Ex:'en_US'. Used for generating recommendations.",
                  "location": "query",
                  "type": "string"
                },
                "country": {
                  "location": "query",
                  "type": "string",
                  "description": "ISO-3166-1 code to override the IP-based location."
                },
                "acquireMethod": {
                  "type": "string",
                  "description": "How the book was acquired",
                  "repeated": true,
                  "enum": [
                    "ACQUIRE_METHOD_UNDEFINED",
                    "FAMILY_SHARED",
                    "PREORDERED",
                    "PREVIOUSLY_RENTED",
                    "PUBLIC_DOMAIN",
                    "PURCHASED",
                    "RENTED",
                    "SAMPLE",
                    "UPLOADED"
                  ],
                  "location": "query",
                  "enumDescriptions": [
                    "",
                    "Books acquired via Family Sharing",
                    "Preordered books (not yet available)",
                    "User-rented books past their expiration time",
                    "Public domain books",
                    "Purchased books",
                    "User-rented books",
                    "Sample books",
                    "User uploaded books"
                  ]
                },
                "maxResults": {
                  "description": "Maximum number of results to return.",
                  "minimum": "0",
                  "type": "integer",
                  "location": "query",
                  "maximum": "100",
                  "format": "uint32"
                }
              },
              "path": "books/v1/volumes/mybooks",
              "id": "books.volumes.mybooks.list",
              "parameterOrder": [],
              "flatPath": "books/v1/volumes/mybooks"
            }
          }
        },
        "useruploaded": {
          "methods": {
            "list": {
              "response": {
                "$ref": "Volumes"
              },
              "id": "books.volumes.useruploaded.list",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "parameters": {
                "volumeId": {
                  "repeated": true,
                  "description": "The ids of the volumes to be returned. If not specified all that match the processingState are returned.",
                  "type": "string",
                  "location": "query"
                },
                "source": {
                  "description": "String to identify the originator of this request.",
                  "type": "string",
                  "location": "query"
                },
                "maxResults": {
                  "description": "Maximum number of results to return.",
                  "location": "query",
                  "format": "uint32",
                  "minimum": "0",
                  "maximum": "40",
                  "type": "integer"
                },
                "locale": {
                  "description": "ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'. Used for generating recommendations.",
                  "location": "query",
                  "type": "string"
                },
                "startIndex": {
                  "description": "Index of the first result to return (starts at 0)",
                  "minimum": "0",
                  "format": "uint32",
                  "type": "integer",
                  "location": "query"
                },
                "processingState": {
                  "enumDescriptions": [
                    "",
                    "The volume processing hase failed.",
                    "The volume processing was completed.",
                    "The volume processing is not completed."
                  ],
                  "description": "The processing state of the user uploaded volumes to be returned.",
                  "repeated": true,
                  "location": "query",
                  "type": "string",
                  "enum": [
                    "PROCESSING_STATE_UNDEFINED",
                    "COMPLETED_FAILED",
                    "COMPLETED_SUCCESS",
                    "RUNNING"
                  ]
                }
              },
              "httpMethod": "GET",
              "description": "Return a list of books uploaded by the current user.",
              "parameterOrder": [],
              "flatPath": "books/v1/volumes/useruploaded",
              "path": "books/v1/volumes/useruploaded"
            }
          }
        }
      }
    },
    "myconfig": {
      "methods": {
        "syncVolumeLicenses": {
          "response": {
            "$ref": "Volumes"
          },
          "description": "Request downloaded content access for specified volumes on the My eBooks shelf.",
          "flatPath": "books/v1/myconfig/syncVolumeLicenses",
          "path": "books/v1/myconfig/syncVolumeLicenses",
          "parameterOrder": [
            "cpksver",
            "nonce",
            "source"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "id": "books.myconfig.syncVolumeLicenses",
          "httpMethod": "POST",
          "parameters": {
            "volumeIds": {
              "location": "query",
              "repeated": true,
              "type": "string",
              "description": "The volume(s) to request download restrictions for."
            },
            "cpksver": {
              "location": "query",
              "type": "string",
              "required": true,
              "description": "The device/version ID from which to release the restriction."
            },
            "source": {
              "required": true,
              "description": "String to identify the originator of this request.",
              "type": "string",
              "location": "query"
            },
            "showPreorders": {
              "type": "boolean",
              "description": "Set to true to show pre-ordered books. Defaults to false.",
              "location": "query"
            },
            "locale": {
              "location": "query",
              "description": "ISO-639-1, ISO-3166-1 codes for message localization, i.e. en_US.",
              "type": "string"
            },
            "nonce": {
              "location": "query",
              "required": true,
              "description": "The client nonce value.",
              "type": "string"
            },
            "includeNonComicsSeries": {
              "description": "Set to true to include non-comics series. Defaults to false.",
              "type": "boolean",
              "location": "query"
            },
            "features": {
              "location": "query",
              "description": "List of features supported by the client, i.e., 'RENTALS'",
              "enum": [
                "FEATURES_UNDEFINED",
                "RENTALS"
              ],
              "repeated": true,
              "type": "string",
              "enumDescriptions": [
                "",
                "Client supports rentals."
              ]
            }
          }
        },
        "getUserSettings": {
          "path": "books/v1/myconfig/getUserSettings",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "response": {
            "$ref": "Usersettings"
          },
          "description": "Gets the current settings for the user.",
          "httpMethod": "GET",
          "parameters": {
            "country": {
              "type": "string",
              "location": "query",
              "description": "Unused. Added only to workaround TEX mandatory request template requirement"
            }
          },
          "parameterOrder": [],
          "flatPath": "books/v1/myconfig/getUserSettings",
          "id": "books.myconfig.getUserSettings"
        },
        "updateUserSettings": {
          "path": "books/v1/myconfig/updateUserSettings",
          "parameterOrder": [],
          "id": "books.myconfig.updateUserSettings",
          "response": {
            "$ref": "Usersettings"
          },
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "flatPath": "books/v1/myconfig/updateUserSettings",
          "parameters": {},
          "request": {
            "$ref": "Usersettings"
          },
          "description": "Sets the settings for the user. If a sub-object is specified, it will overwrite the existing sub-object stored in the server. Unspecified sub-objects will retain the existing value."
        },
        "requestAccess": {
          "httpMethod": "POST",
          "parameters": {
            "volumeId": {
              "type": "string",
              "description": "The volume to request concurrent/download restrictions for.",
              "required": true,
              "location": "query"
            },
            "locale": {
              "type": "string",
              "description": "ISO-639-1, ISO-3166-1 codes for message localization, i.e. en_US.",
              "location": "query"
            },
            "nonce": {
              "location": "query",
              "type": "string",
              "required": true,
              "description": "The client nonce value."
            },
            "licenseTypes": {
              "enum": [
                "LICENSE_TYPES_UNDEFINED",
                "BOTH",
                "CONCURRENT",
                "DOWNLOAD"
              ],
              "location": "query",
              "enumDescriptions": [
                "",
                "Both concurrent and download licenses.",
                "Concurrent access license.",
                "Offline download access license."
              ],
              "description": "The type of access license to request. If not specified, the default is BOTH.",
              "type": "string"
            },
            "cpksver": {
              "type": "string",
              "location": "query",
              "description": "The device/version ID from which to request the restrictions.",
              "required": true
            },
            "source": {
              "description": "String to identify the originator of this request.",
              "location": "query",
              "type": "string",
              "required": true
            }
          },
          "parameterOrder": [
            "cpksver",
            "nonce",
            "source",
            "volumeId"
          ],
          "flatPath": "books/v1/myconfig/requestAccess",
          "id": "books.myconfig.requestAccess",
          "description": "Request concurrent and download access restrictions.",
          "response": {
            "$ref": "RequestAccessData"
          },
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "path": "books/v1/myconfig/requestAccess"
        },
        "releaseDownloadAccess": {
          "parameterOrder": [
            "cpksver",
            "volumeIds"
          ],
          "path": "books/v1/myconfig/releaseDownloadAccess",
          "id": "books.myconfig.releaseDownloadAccess",
          "response": {
            "$ref": "DownloadAccesses"
          },
          "parameters": {
            "cpksver": {
              "type": "string",
              "location": "query",
              "description": "The device/version ID from which to release the restriction.",
              "required": true
            },
            "volumeIds": {
              "description": "The volume(s) to release restrictions for.",
              "location": "query",
              "required": true,
              "type": "string",
              "repeated": true
            },
            "locale": {
              "type": "string",
              "location": "query",
              "description": "ISO-639-1, ISO-3166-1 codes for message localization, i.e. en_US."
            },
            "source": {
              "location": "query",
              "description": "String to identify the originator of this request.",
              "type": "string"
            }
          },
          "flatPath": "books/v1/myconfig/releaseDownloadAccess",
          "description": "Release downloaded content access restriction.",
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ]
        }
      }
    },
    "mylibrary": {
      "resources": {
        "bookshelves": {
          "methods": {
            "moveVolume": {
              "flatPath": "books/v1/mylibrary/bookshelves/{shelf}/moveVolume",
              "description": "Moves a volume within a bookshelf.",
              "httpMethod": "POST",
              "parameters": {
                "source": {
                  "type": "string",
                  "location": "query",
                  "description": "String to identify the originator of this request."
                },
                "volumePosition": {
                  "required": true,
                  "location": "query",
                  "format": "int32",
                  "description": "Position on shelf to move the item (0 puts the item before the current first item, 1 puts it between the first and the second and so on.)",
                  "type": "integer"
                },
                "volumeId": {
                  "required": true,
                  "location": "query",
                  "description": "ID of volume to move.",
                  "type": "string"
                },
                "shelf": {
                  "required": true,
                  "type": "string",
                  "description": "ID of bookshelf with the volume.",
                  "location": "path"
                }
              },
              "path": "books/v1/mylibrary/bookshelves/{shelf}/moveVolume",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "parameterOrder": [
                "shelf",
                "volumeId",
                "volumePosition"
              ],
              "response": {
                "$ref": "Empty"
              },
              "id": "books.mylibrary.bookshelves.moveVolume"
            },
            "get": {
              "response": {
                "$ref": "Bookshelf"
              },
              "path": "books/v1/mylibrary/bookshelves/{shelf}",
              "parameters": {
                "shelf": {
                  "required": true,
                  "type": "string",
                  "description": "ID of bookshelf to retrieve.",
                  "location": "path"
                },
                "source": {
                  "type": "string",
                  "description": "String to identify the originator of this request.",
                  "location": "query"
                }
              },
              "id": "books.mylibrary.bookshelves.get",
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "parameterOrder": [
                "shelf"
              ],
              "flatPath": "books/v1/mylibrary/bookshelves/{shelf}",
              "description": "Retrieves metadata for a specific bookshelf belonging to the authenticated user."
            },
            "removeVolume": {
              "httpMethod": "POST",
              "parameterOrder": [
                "shelf",
                "volumeId"
              ],
              "path": "books/v1/mylibrary/bookshelves/{shelf}/removeVolume",
              "response": {
                "$ref": "Empty"
              },
              "parameters": {
                "shelf": {
                  "type": "string",
                  "location": "path",
                  "description": "ID of bookshelf from which to remove a volume.",
                  "required": true
                },
                "volumeId": {
                  "location": "query",
                  "type": "string",
                  "required": true,
                  "description": "ID of volume to remove."
                },
                "source": {
                  "type": "string",
                  "description": "String to identify the originator of this request.",
                  "location": "query"
                },
                "reason": {
                  "enumDescriptions": [
                    "",
                    "Samples removed from the Onboarding flow."
                  ],
                  "description": "The reason for which the book is removed from the library.",
                  "enum": [
                    "REASON_UNDEFINED",
                    "ONBOARDING"
                  ],
                  "type": "string",
                  "location": "query"
                }
              },
              "flatPath": "books/v1/mylibrary/bookshelves/{shelf}/removeVolume",
              "description": "Removes a volume from a bookshelf.",
              "id": "books.mylibrary.bookshelves.removeVolume",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ]
            },
            "list": {
              "httpMethod": "GET",
              "path": "books/v1/mylibrary/bookshelves",
              "parameterOrder": [],
              "response": {
                "$ref": "Bookshelves"
              },
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "id": "books.mylibrary.bookshelves.list",
              "description": "Retrieves a list of bookshelves belonging to the authenticated user.",
              "flatPath": "books/v1/mylibrary/bookshelves",
              "parameters": {
                "source": {
                  "type": "string",
                  "location": "query",
                  "description": "String to identify the originator of this request."
                }
              }
            },
            "addVolume": {
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "parameters": {
                "source": {
                  "location": "query",
                  "description": "String to identify the originator of this request.",
                  "type": "string"
                },
                "volumeId": {
                  "location": "query",
                  "type": "string",
                  "description": "ID of volume to add.",
                  "required": true
                },
                "reason": {
                  "enum": [
                    "REASON_UNDEFINED",
                    "IOS_PREX",
                    "IOS_SEARCH",
                    "ONBOARDING"
                  ],
                  "type": "string",
                  "description": "The reason for which the book is added to the library.",
                  "enumDescriptions": [
                    "",
                    "Volumes added from the PREX flow on iOS.",
                    "Volumes added from the Search flow on iOS.",
                    "Volumes added from the Onboarding flow."
                  ],
                  "location": "query"
                },
                "shelf": {
                  "required": true,
                  "type": "string",
                  "description": "ID of bookshelf to which to add a volume.",
                  "location": "path"
                }
              },
              "path": "books/v1/mylibrary/bookshelves/{shelf}/addVolume",
              "parameterOrder": [
                "shelf",
                "volumeId"
              ],
              "id": "books.mylibrary.bookshelves.addVolume",
              "flatPath": "books/v1/mylibrary/bookshelves/{shelf}/addVolume",
              "description": "Adds a volume to a bookshelf.",
              "response": {
                "$ref": "Empty"
              },
              "httpMethod": "POST"
            },
            "clearVolumes": {
              "flatPath": "books/v1/mylibrary/bookshelves/{shelf}/clearVolumes",
              "parameterOrder": [
                "shelf"
              ],
              "description": "Clears all volumes from a bookshelf.",
              "response": {
                "$ref": "Empty"
              },
              "parameters": {
                "shelf": {
                  "description": "ID of bookshelf from which to remove a volume.",
                  "location": "path",
                  "type": "string",
                  "required": true
                },
                "source": {
                  "description": "String to identify the originator of this request.",
                  "type": "string",
                  "location": "query"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "path": "books/v1/mylibrary/bookshelves/{shelf}/clearVolumes",
              "httpMethod": "POST",
              "id": "books.mylibrary.bookshelves.clearVolumes"
            }
          },
          "resources": {
            "volumes": {
              "methods": {
                "list": {
                  "path": "books/v1/mylibrary/bookshelves/{shelf}/volumes",
                  "scopes": [
                    "https://www.googleapis.com/auth/books"
                  ],
                  "flatPath": "books/v1/mylibrary/bookshelves/{shelf}/volumes",
                  "description": "Gets volume information for volumes on a bookshelf.",
                  "parameterOrder": [
                    "shelf"
                  ],
                  "httpMethod": "GET",
                  "id": "books.mylibrary.bookshelves.volumes.list",
                  "response": {
                    "$ref": "Volumes"
                  },
                  "parameters": {
                    "source": {
                      "type": "string",
                      "location": "query",
                      "description": "String to identify the originator of this request."
                    },
                    "shelf": {
                      "type": "string",
                      "location": "path",
                      "description": "The bookshelf ID or name retrieve volumes for.",
                      "required": true
                    },
                    "showPreorders": {
                      "type": "boolean",
                      "description": "Set to true to show pre-ordered books. Defaults to false.",
                      "location": "query"
                    },
                    "startIndex": {
                      "format": "uint32",
                      "description": "Index of the first element to return (starts at 0)",
                      "type": "integer",
                      "minimum": "0",
                      "location": "query"
                    },
                    "q": {
                      "type": "string",
                      "description": "Full-text search query string in this bookshelf.",
                      "location": "query"
                    },
                    "projection": {
                      "location": "query",
                      "enum": [
                        "PROJECTION_UNDEFINED",
                        "FULL",
                        "LITE"
                      ],
                      "type": "string",
                      "description": "Restrict information returned to a set of selected fields.",
                      "enumDescriptions": [
                        "",
                        "Includes all volume data.",
                        "Includes a subset of fields in volumeInfo and accessInfo."
                      ]
                    },
                    "maxResults": {
                      "minimum": "0",
                      "format": "uint32",
                      "description": "Maximum number of results to return",
                      "type": "integer",
                      "location": "query"
                    },
                    "country": {
                      "location": "query",
                      "type": "string",
                      "description": "ISO-3166-1 code to override the IP-based location."
                    }
                  }
                }
              }
            }
          }
        },
        "annotations": {
          "methods": {
            "list": {
              "response": {
                "$ref": "Annotations"
              },
              "id": "books.mylibrary.annotations.list",
              "parameterOrder": [],
              "httpMethod": "GET",
              "path": "books/v1/mylibrary/annotations",
              "description": "Retrieves a list of annotations, possibly filtered.",
              "parameters": {
                "pageToken": {
                  "type": "string",
                  "description": "The value of the nextToken from the previous page.",
                  "location": "query"
                },
                "contentVersion": {
                  "location": "query",
                  "type": "string",
                  "description": "The content version for the requested volume."
                },
                "layerId": {
                  "type": "string",
                  "description": "The layer ID to limit annotation by.",
                  "location": "query"
                },
                "maxResults": {
                  "minimum": "0",
                  "format": "uint32",
                  "location": "query",
                  "maximum": "40",
                  "description": "Maximum number of results to return",
                  "type": "integer"
                },
                "volumeId": {
                  "type": "string",
                  "description": "The volume to restrict annotations to.",
                  "location": "query"
                },
                "source": {
                  "description": "String to identify the originator of this request.",
                  "location": "query",
                  "type": "string"
                },
                "layerIds": {
                  "location": "query",
                  "type": "string",
                  "repeated": true,
                  "description": "The layer ID(s) to limit annotation by."
                },
                "showDeleted": {
                  "description": "Set to true to return deleted annotations. updatedMin must be in the request to use this. Defaults to false.",
                  "location": "query",
                  "type": "boolean"
                },
                "updatedMin": {
                  "location": "query",
                  "description": "RFC 3339 timestamp to restrict to items updated since this timestamp (inclusive).",
                  "type": "string"
                },
                "updatedMax": {
                  "location": "query",
                  "description": "RFC 3339 timestamp to restrict to items updated prior to this timestamp (exclusive).",
                  "type": "string"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "flatPath": "books/v1/mylibrary/annotations"
            },
            "delete": {
              "parameters": {
                "source": {
                  "type": "string",
                  "description": "String to identify the originator of this request.",
                  "location": "query"
                },
                "annotationId": {
                  "type": "string",
                  "description": "The ID for the annotation to delete.",
                  "required": true,
                  "location": "path"
                }
              },
              "response": {
                "$ref": "Empty"
              },
              "id": "books.mylibrary.annotations.delete",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "flatPath": "books/v1/mylibrary/annotations/{annotationId}",
              "path": "books/v1/mylibrary/annotations/{annotationId}",
              "parameterOrder": [
                "annotationId"
              ],
              "httpMethod": "DELETE",
              "description": "Deletes an annotation."
            },
            "update": {
              "description": "Updates an existing annotation.",
              "parameters": {
                "annotationId": {
                  "description": "The ID for the annotation to update.",
                  "required": true,
                  "location": "path",
                  "type": "string"
                },
                "source": {
                  "location": "query",
                  "description": "String to identify the originator of this request.",
                  "type": "string"
                }
              },
              "flatPath": "books/v1/mylibrary/annotations/{annotationId}",
              "httpMethod": "PUT",
              "parameterOrder": [
                "annotationId"
              ],
              "response": {
                "$ref": "Annotation"
              },
              "id": "books.mylibrary.annotations.update",
              "request": {
                "$ref": "Annotation"
              },
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "path": "books/v1/mylibrary/annotations/{annotationId}"
            },
            "summary": {
              "parameters": {
                "volumeId": {
                  "required": true,
                  "description": "Volume id to get the summary for.",
                  "type": "string",
                  "location": "query"
                },
                "layerIds": {
                  "repeated": true,
                  "required": true,
                  "location": "query",
                  "type": "string",
                  "description": "Array of layer IDs to get the summary for."
                }
              },
              "response": {
                "$ref": "AnnotationsSummary"
              },
              "httpMethod": "POST",
              "path": "books/v1/mylibrary/annotations/summary",
              "id": "books.mylibrary.annotations.summary",
              "description": "Gets the summary of specified layers.",
              "flatPath": "books/v1/mylibrary/annotations/summary",
              "parameterOrder": [
                "layerIds",
                "volumeId"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ]
            },
            "insert": {
              "description": "Inserts a new annotation.",
              "flatPath": "books/v1/mylibrary/annotations",
              "request": {
                "$ref": "Annotation"
              },
              "httpMethod": "POST",
              "path": "books/v1/mylibrary/annotations",
              "response": {
                "$ref": "Annotation"
              },
              "parameterOrder": [],
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "id": "books.mylibrary.annotations.insert",
              "parameters": {
                "country": {
                  "location": "query",
                  "type": "string",
                  "description": "ISO-3166-1 code to override the IP-based location."
                },
                "source": {
                  "type": "string",
                  "location": "query",
                  "description": "String to identify the originator of this request."
                },
                "annotationId": {
                  "type": "string",
                  "location": "query",
                  "description": "The ID for the annotation to insert."
                },
                "showOnlySummaryInResponse": {
                  "type": "boolean",
                  "location": "query",
                  "description": "Requests that only the summary of the specified layer be provided in the response."
                }
              }
            }
          }
        },
        "readingpositions": {
          "methods": {
            "get": {
              "id": "books.mylibrary.readingpositions.get",
              "path": "books/v1/mylibrary/readingpositions/{volumeId}",
              "description": "Retrieves my reading position information for a volume.",
              "httpMethod": "GET",
              "parameterOrder": [
                "volumeId"
              ],
              "flatPath": "books/v1/mylibrary/readingpositions/{volumeId}",
              "parameters": {
                "volumeId": {
                  "location": "path",
                  "required": true,
                  "description": "ID of volume for which to retrieve a reading position.",
                  "type": "string"
                },
                "source": {
                  "description": "String to identify the originator of this request.",
                  "location": "query",
                  "type": "string"
                },
                "contentVersion": {
                  "type": "string",
                  "description": "Volume content version for which this reading position is requested.",
                  "location": "query"
                }
              },
              "response": {
                "$ref": "ReadingPosition"
              },
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ]
            },
            "setPosition": {
              "path": "books/v1/mylibrary/readingpositions/{volumeId}/setPosition",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "response": {
                "$ref": "Empty"
              },
              "description": "Sets my reading position information for a volume.",
              "parameterOrder": [
                "volumeId",
                "position",
                "timestamp"
              ],
              "httpMethod": "POST",
              "flatPath": "books/v1/mylibrary/readingpositions/{volumeId}/setPosition",
              "parameters": {
                "position": {
                  "description": "Position string for the new volume reading position.",
                  "type": "string",
                  "location": "query",
                  "required": true
                },
                "deviceCookie": {
                  "location": "query",
                  "type": "string",
                  "description": "Random persistent device cookie optional on set position."
                },
                "contentVersion": {
                  "location": "query",
                  "type": "string",
                  "description": "Volume content version for which this reading position applies."
                },
                "timestamp": {
                  "location": "query",
                  "required": true,
                  "description": "RFC 3339 UTC format timestamp associated with this reading position.",
                  "type": "string"
                },
                "volumeId": {
                  "required": true,
                  "location": "path",
                  "description": "ID of volume for which to update the reading position.",
                  "type": "string"
                },
                "source": {
                  "description": "String to identify the originator of this request.",
                  "type": "string",
                  "location": "query"
                },
                "action": {
                  "description": "Action that caused this reading position to be set.",
                  "location": "query",
                  "enum": [
                    "ACTION_UNDEFINED",
                    "bookmark",
                    "chapter",
                    "next-page",
                    "prev-page",
                    "scroll",
                    "search"
                  ],
                  "enumDescriptions": [
                    "",
                    "User chose bookmark within volume.",
                    "User selected chapter from list.",
                    "Next page event.",
                    "Previous page event.",
                    "User navigated to page.",
                    "User chose search results within volume."
                  ],
                  "type": "string"
                }
              },
              "id": "books.mylibrary.readingpositions.setPosition"
            }
          }
        }
      }
    },
    "personalizedstream": {
      "methods": {
        "get": {
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "description": "Returns a stream of personalized book clusters",
          "path": "books/v1/personalizedstream/get",
          "httpMethod": "GET",
          "response": {
            "$ref": "Discoveryclusters"
          },
          "parameterOrder": [],
          "parameters": {
            "locale": {
              "description": "ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'. Used for generating recommendations.",
              "type": "string",
              "location": "query"
            },
            "maxAllowedMaturityRating": {
              "enumDescriptions": [
                "",
                "Show books which are rated mature or lower.",
                "Show books which are rated not mature."
              ],
              "location": "query",
              "description": "The maximum allowed maturity rating of returned recommendations. Books with a higher maturity rating are filtered out.",
              "enum": [
                "MAX_ALLOWED_MATURITY_RATING_UNDEFINED",
                "MATURE",
                "not-mature"
              ],
              "type": "string"
            },
            "source": {
              "location": "query",
              "description": "String to identify the originator of this request.",
              "type": "string"
            }
          },
          "flatPath": "books/v1/personalizedstream/get",
          "id": "books.personalizedstream.get"
        }
      }
    }
  },
  "rootUrl": "https://books.googleapis.com/",
  "documentationLink": "https://code.google.com/apis/books/docs/v1/getting_started.html",
  "title": "Books API",
  "ownerName": "Google",
  "version": "v1"
}
